System.registerDynamic("npm:react-router@2.6.1/lib/Router.js", ["npm:history@2.1.2/lib/createHashHistory.js", "npm:history@2.1.2/lib/useQueries.js", "npm:invariant@2.2.1.js", "npm:react@15.3.0.js", "npm:react-router@2.6.1/lib/createTransitionManager.js", "npm:react-router@2.6.1/lib/InternalPropTypes.js", "npm:react-router@2.6.1/lib/RouterContext.js", "npm:react-router@2.6.1/lib/RouteUtils.js", "npm:react-router@2.6.1/lib/RouterUtils.js", "npm:react-router@2.6.1/lib/routerWarning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createHashHistory = $__require('npm:history@2.1.2/lib/createHashHistory.js');
    var _createHashHistory2 = _interopRequireDefault(_createHashHistory);
    var _useQueries = $__require('npm:history@2.1.2/lib/useQueries.js');
    var _useQueries2 = _interopRequireDefault(_useQueries);
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    var _react = $__require('npm:react@15.3.0.js');
    var _react2 = _interopRequireDefault(_react);
    var _createTransitionManager = $__require('npm:react-router@2.6.1/lib/createTransitionManager.js');
    var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
    var _InternalPropTypes = $__require('npm:react-router@2.6.1/lib/InternalPropTypes.js');
    var _RouterContext = $__require('npm:react-router@2.6.1/lib/RouterContext.js');
    var _RouterContext2 = _interopRequireDefault(_RouterContext);
    var _RouteUtils = $__require('npm:react-router@2.6.1/lib/RouteUtils.js');
    var _RouterUtils = $__require('npm:react-router@2.6.1/lib/RouterUtils.js');
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function isDeprecatedHistory(history) {
      return !history || !history.__v2_compatible__;
    }
    function isUnsupportedHistory(history) {
      return history && history.getCurrentLocation;
    }
    var _React$PropTypes = _react2.default.PropTypes;
    var func = _React$PropTypes.func;
    var object = _React$PropTypes.object;
    var Router = _react2.default.createClass({
      displayName: 'Router',
      propTypes: {
        history: object,
        children: _InternalPropTypes.routes,
        routes: _InternalPropTypes.routes,
        render: func,
        createElement: func,
        onError: func,
        onUpdate: func,
        parseQueryString: func,
        stringifyQuery: func,
        matchContext: object
      },
      getDefaultProps: function getDefaultProps() {
        return {render: function render(props) {
            return _react2.default.createElement(_RouterContext2.default, props);
          }};
      },
      getInitialState: function getInitialState() {
        return {
          location: null,
          routes: null,
          params: null,
          components: null
        };
      },
      handleError: function handleError(error) {
        if (this.props.onError) {
          this.props.onError.call(this, error);
        } else {
          throw error;
        }
      },
      componentWillMount: function componentWillMount() {
        var _this = this;
        var _props = this.props;
        var parseQueryString = _props.parseQueryString;
        var stringifyQuery = _props.stringifyQuery;
        "production" !== 'production' ? (0, _routerWarning2.default)(!(parseQueryString || stringifyQuery), '`parseQueryString` and `stringifyQuery` are deprecated. Please create a custom history. http://tiny.cc/router-customquerystring') : void 0;
        var _createRouterObjects = this.createRouterObjects();
        var history = _createRouterObjects.history;
        var transitionManager = _createRouterObjects.transitionManager;
        var router = _createRouterObjects.router;
        this._unlisten = transitionManager.listen(function(error, state) {
          if (error) {
            _this.handleError(error);
          } else {
            _this.setState(state, _this.props.onUpdate);
          }
        });
        this.history = history;
        this.router = router;
      },
      createRouterObjects: function createRouterObjects() {
        var matchContext = this.props.matchContext;
        if (matchContext) {
          return matchContext;
        }
        var history = this.props.history;
        var _props2 = this.props;
        var routes = _props2.routes;
        var children = _props2.children;
        !!isUnsupportedHistory(history) ? "production" !== 'production' ? (0, _invariant2.default)(false, 'You have provided a history object created with history v3.x. ' + 'This version of React Router is not compatible with v3 history ' + 'objects. Please use history v2.x instead.') : (0, _invariant2.default)(false) : void 0;
        if (isDeprecatedHistory(history)) {
          history = this.wrapDeprecatedHistory(history);
        }
        var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes || children));
        var router = (0, _RouterUtils.createRouterObject)(history, transitionManager);
        var routingHistory = (0, _RouterUtils.createRoutingHistory)(history, transitionManager);
        return {
          history: routingHistory,
          transitionManager: transitionManager,
          router: router
        };
      },
      wrapDeprecatedHistory: function wrapDeprecatedHistory(history) {
        var _props3 = this.props;
        var parseQueryString = _props3.parseQueryString;
        var stringifyQuery = _props3.stringifyQuery;
        var createHistory = void 0;
        if (history) {
          "production" !== 'production' ? (0, _routerWarning2.default)(false, 'It appears you have provided a deprecated history object to `<Router/>`, please use a history provided by ' + 'React Router with `import { browserHistory } from \'react-router\'` or `import { hashHistory } from \'react-router\'`. ' + 'If you are using a custom history please create it with `useRouterHistory`, see http://tiny.cc/router-usinghistory for details.') : void 0;
          createHistory = function createHistory() {
            return history;
          };
        } else {
          "production" !== 'production' ? (0, _routerWarning2.default)(false, '`Router` no longer defaults the history prop to hash history. Please use the `hashHistory` singleton instead. http://tiny.cc/router-defaulthistory') : void 0;
          createHistory = _createHashHistory2.default;
        }
        return (0, _useQueries2.default)(createHistory)({
          parseQueryString: parseQueryString,
          stringifyQuery: stringifyQuery
        });
      },
      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
        "production" !== 'production' ? (0, _routerWarning2.default)(nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : void 0;
        "production" !== 'production' ? (0, _routerWarning2.default)((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : void 0;
      },
      componentWillUnmount: function componentWillUnmount() {
        if (this._unlisten)
          this._unlisten();
      },
      render: function render() {
        var _state = this.state;
        var location = _state.location;
        var routes = _state.routes;
        var params = _state.params;
        var components = _state.components;
        var _props4 = this.props;
        var createElement = _props4.createElement;
        var render = _props4.render;
        var props = _objectWithoutProperties(_props4, ['createElement', 'render']);
        if (location == null)
          return null;
        Object.keys(Router.propTypes).forEach(function(propType) {
          return delete props[propType];
        });
        return render(_extends({}, props, {
          history: this.history,
          router: this.router,
          location: location,
          routes: routes,
          params: params,
          components: components,
          createElement: createElement
        }));
      }
    });
    exports.default = Router;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/Link.js", ["npm:react@15.3.0.js", "npm:react-router@2.6.1/lib/routerWarning.js", "npm:invariant@2.2.1.js", "npm:react-router@2.6.1/lib/PropTypes.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _react = $__require('npm:react@15.3.0.js');
    var _react2 = _interopRequireDefault(_react);
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    var _PropTypes = $__require('npm:react-router@2.6.1/lib/PropTypes.js');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    var _React$PropTypes = _react2.default.PropTypes;
    var bool = _React$PropTypes.bool;
    var object = _React$PropTypes.object;
    var string = _React$PropTypes.string;
    var func = _React$PropTypes.func;
    var oneOfType = _React$PropTypes.oneOfType;
    function isLeftClickEvent(event) {
      return event.button === 0;
    }
    function isModifiedEvent(event) {
      return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
    }
    function isEmptyObject(object) {
      for (var p in object) {
        if (Object.prototype.hasOwnProperty.call(object, p))
          return false;
      }
      return true;
    }
    function createLocationDescriptor(to, _ref) {
      var query = _ref.query;
      var hash = _ref.hash;
      var state = _ref.state;
      if (query || hash || state) {
        return {
          pathname: to,
          query: query,
          hash: hash,
          state: state
        };
      }
      return to;
    }
    var Link = _react2.default.createClass({
      displayName: 'Link',
      contextTypes: {router: _PropTypes.routerShape},
      propTypes: {
        to: oneOfType([string, object]).isRequired,
        query: object,
        hash: string,
        state: object,
        activeStyle: object,
        activeClassName: string,
        onlyActiveOnIndex: bool.isRequired,
        onClick: func,
        target: string
      },
      getDefaultProps: function getDefaultProps() {
        return {
          onlyActiveOnIndex: false,
          style: {}
        };
      },
      handleClick: function handleClick(event) {
        if (this.props.onClick)
          this.props.onClick(event);
        if (event.defaultPrevented)
          return;
        !this.context.router ? "production" !== 'production' ? (0, _invariant2.default)(false, '<Link>s rendered outside of a router context cannot navigate.') : (0, _invariant2.default)(false) : void 0;
        if (isModifiedEvent(event) || !isLeftClickEvent(event))
          return;
        if (this.props.target)
          return;
        event.preventDefault();
        var _props = this.props;
        var to = _props.to;
        var query = _props.query;
        var hash = _props.hash;
        var state = _props.state;
        var location = createLocationDescriptor(to, {
          query: query,
          hash: hash,
          state: state
        });
        this.context.router.push(location);
      },
      render: function render() {
        var _props2 = this.props;
        var to = _props2.to;
        var query = _props2.query;
        var hash = _props2.hash;
        var state = _props2.state;
        var activeClassName = _props2.activeClassName;
        var activeStyle = _props2.activeStyle;
        var onlyActiveOnIndex = _props2.onlyActiveOnIndex;
        var props = _objectWithoutProperties(_props2, ['to', 'query', 'hash', 'state', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);
        "production" !== 'production' ? (0, _routerWarning2.default)(!(query || hash || state), 'the `query`, `hash`, and `state` props on `<Link>` are deprecated, use `<Link to={{ pathname, query, hash, state }}/>. http://tiny.cc/router-isActivedeprecated') : void 0;
        var router = this.context.router;
        if (router) {
          var location = createLocationDescriptor(to, {
            query: query,
            hash: hash,
            state: state
          });
          props.href = router.createHref(location);
          if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {
            if (router.isActive(location, onlyActiveOnIndex)) {
              if (activeClassName) {
                if (props.className) {
                  props.className += ' ' + activeClassName;
                } else {
                  props.className = activeClassName;
                }
              }
              if (activeStyle)
                props.style = _extends({}, props.style, activeStyle);
            }
          }
        }
        return _react2.default.createElement('a', _extends({}, props, {onClick: this.handleClick}));
      }
    });
    exports.default = Link;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/IndexLink.js", ["npm:react@15.3.0.js", "npm:react-router@2.6.1/lib/Link.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _Link = $__require('npm:react-router@2.6.1/lib/Link.js');
  var _Link2 = _interopRequireDefault(_Link);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var IndexLink = _react2.default.createClass({
    displayName: 'IndexLink',
    render: function render() {
      return _react2.default.createElement(_Link2.default, _extends({}, this.props, {onlyActiveOnIndex: true}));
    }
  });
  exports.default = IndexLink;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:hoist-non-react-statics@1.2.0/index.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    mixins: true,
    propTypes: true,
    type: true
  };
  var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    arguments: true,
    arity: true
  };
  var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';
  module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
    if (typeof sourceComponent !== 'string') {
      var keys = Object.getOwnPropertyNames(sourceComponent);
      if (isGetOwnPropertySymbolsAvailable) {
        keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
      }
      for (var i = 0; i < keys.length; ++i) {
        if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
          try {
            targetComponent[keys[i]] = sourceComponent[keys[i]];
          } catch (error) {}
        }
      }
    }
    return targetComponent;
  };
  return module.exports;
});

System.registerDynamic("npm:hoist-non-react-statics@1.2.0.js", ["npm:hoist-non-react-statics@1.2.0/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:hoist-non-react-statics@1.2.0/index.js');
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/PropTypes.js", ["npm:react@15.3.0.js", "npm:react-router@2.6.1/lib/deprecateObjectProperties.js", "npm:react-router@2.6.1/lib/InternalPropTypes.js", "npm:react-router@2.6.1/lib/routerWarning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    exports.router = exports.routes = exports.route = exports.components = exports.component = exports.location = exports.history = exports.falsy = exports.locationShape = exports.routerShape = undefined;
    var _react = $__require('npm:react@15.3.0.js');
    var _deprecateObjectProperties = $__require('npm:react-router@2.6.1/lib/deprecateObjectProperties.js');
    var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);
    var _InternalPropTypes = $__require('npm:react-router@2.6.1/lib/InternalPropTypes.js');
    var InternalPropTypes = _interopRequireWildcard(_InternalPropTypes);
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key))
              newObj[key] = obj[key];
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    var func = _react.PropTypes.func;
    var object = _react.PropTypes.object;
    var shape = _react.PropTypes.shape;
    var string = _react.PropTypes.string;
    var routerShape = exports.routerShape = shape({
      push: func.isRequired,
      replace: func.isRequired,
      go: func.isRequired,
      goBack: func.isRequired,
      goForward: func.isRequired,
      setRouteLeaveHook: func.isRequired,
      isActive: func.isRequired
    });
    var locationShape = exports.locationShape = shape({
      pathname: string.isRequired,
      search: string.isRequired,
      state: object,
      action: string.isRequired,
      key: string
    });
    var falsy = exports.falsy = InternalPropTypes.falsy;
    var history = exports.history = InternalPropTypes.history;
    var location = exports.location = locationShape;
    var component = exports.component = InternalPropTypes.component;
    var components = exports.components = InternalPropTypes.components;
    var route = exports.route = InternalPropTypes.route;
    var routes = exports.routes = InternalPropTypes.routes;
    var router = exports.router = routerShape;
    if ("production" !== 'production') {
      (function() {
        var deprecatePropType = function deprecatePropType(propType, message) {
          return function() {
            "production" !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
            return propType.apply(undefined, arguments);
          };
        };
        var deprecateInternalPropType = function deprecateInternalPropType(propType) {
          return deprecatePropType(propType, 'This prop type is not intended for external use, and was previously exported by mistake. These internal prop types are deprecated for external use, and will be removed in a later version.');
        };
        var deprecateRenamedPropType = function deprecateRenamedPropType(propType, name) {
          return deprecatePropType(propType, 'The `' + name + '` prop type is now exported as `' + name + 'Shape` to avoid name conflicts. This export is deprecated and will be removed in a later version.');
        };
        exports.falsy = falsy = deprecateInternalPropType(falsy);
        exports.history = history = deprecateInternalPropType(history);
        exports.component = component = deprecateInternalPropType(component);
        exports.components = components = deprecateInternalPropType(components);
        exports.route = route = deprecateInternalPropType(route);
        exports.routes = routes = deprecateInternalPropType(routes);
        exports.location = location = deprecateRenamedPropType(location, 'location');
        exports.router = router = deprecateRenamedPropType(router, 'router');
      })();
    }
    var defaultExport = {
      falsy: falsy,
      history: history,
      location: location,
      component: component,
      components: components,
      route: route,
      router: router
    };
    if ("production" !== 'production') {
      defaultExport = (0, _deprecateObjectProperties2.default)(defaultExport, 'The default export from `react-router/lib/PropTypes` is deprecated. Please use the named exports instead.');
    }
    exports.default = defaultExport;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/withRouter.js", ["npm:react@15.3.0.js", "npm:hoist-non-react-statics@1.2.0.js", "npm:react-router@2.6.1/lib/PropTypes.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  exports.default = withRouter;
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _hoistNonReactStatics = $__require('npm:hoist-non-react-statics@1.2.0.js');
  var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
  var _PropTypes = $__require('npm:react-router@2.6.1/lib/PropTypes.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function getDisplayName(WrappedComponent) {
    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
  }
  function withRouter(WrappedComponent) {
    var WithRouter = _react2.default.createClass({
      displayName: 'WithRouter',
      contextTypes: {router: _PropTypes.routerShape},
      render: function render() {
        return _react2.default.createElement(WrappedComponent, _extends({}, this.props, {router: this.context.router}));
      }
    });
    WithRouter.displayName = 'withRouter(' + getDisplayName(WrappedComponent) + ')';
    WithRouter.WrappedComponent = WrappedComponent;
    return (0, _hoistNonReactStatics2.default)(WithRouter, WrappedComponent);
  }
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/IndexRedirect.js", ["npm:react@15.3.0.js", "npm:react-router@2.6.1/lib/routerWarning.js", "npm:invariant@2.2.1.js", "npm:react-router@2.6.1/lib/Redirect.js", "npm:react-router@2.6.1/lib/InternalPropTypes.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _react = $__require('npm:react@15.3.0.js');
    var _react2 = _interopRequireDefault(_react);
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    var _Redirect = $__require('npm:react-router@2.6.1/lib/Redirect.js');
    var _Redirect2 = _interopRequireDefault(_Redirect);
    var _InternalPropTypes = $__require('npm:react-router@2.6.1/lib/InternalPropTypes.js');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    var _React$PropTypes = _react2.default.PropTypes;
    var string = _React$PropTypes.string;
    var object = _React$PropTypes.object;
    var IndexRedirect = _react2.default.createClass({
      displayName: 'IndexRedirect',
      statics: {createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
          if (parentRoute) {
            parentRoute.indexRoute = _Redirect2.default.createRouteFromReactElement(element);
          } else {
            "production" !== 'production' ? (0, _routerWarning2.default)(false, 'An <IndexRedirect> does not make sense at the root of your route config') : void 0;
          }
        }},
      propTypes: {
        to: string.isRequired,
        query: object,
        state: object,
        onEnter: _InternalPropTypes.falsy,
        children: _InternalPropTypes.falsy
      },
      render: function render() {
        !false ? "production" !== 'production' ? (0, _invariant2.default)(false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
      }
    });
    exports.default = IndexRedirect;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/IndexRoute.js", ["npm:react@15.3.0.js", "npm:react-router@2.6.1/lib/routerWarning.js", "npm:invariant@2.2.1.js", "npm:react-router@2.6.1/lib/RouteUtils.js", "npm:react-router@2.6.1/lib/InternalPropTypes.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _react = $__require('npm:react@15.3.0.js');
    var _react2 = _interopRequireDefault(_react);
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    var _RouteUtils = $__require('npm:react-router@2.6.1/lib/RouteUtils.js');
    var _InternalPropTypes = $__require('npm:react-router@2.6.1/lib/InternalPropTypes.js');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    var func = _react2.default.PropTypes.func;
    var IndexRoute = _react2.default.createClass({
      displayName: 'IndexRoute',
      statics: {createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
          if (parentRoute) {
            parentRoute.indexRoute = (0, _RouteUtils.createRouteFromReactElement)(element);
          } else {
            "production" !== 'production' ? (0, _routerWarning2.default)(false, 'An <IndexRoute> does not make sense at the root of your route config') : void 0;
          }
        }},
      propTypes: {
        path: _InternalPropTypes.falsy,
        component: _InternalPropTypes.component,
        components: _InternalPropTypes.components,
        getComponent: func,
        getComponents: func
      },
      render: function render() {
        !false ? "production" !== 'production' ? (0, _invariant2.default)(false, '<IndexRoute> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
      }
    });
    exports.default = IndexRoute;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/Redirect.js", ["npm:react@15.3.0.js", "npm:invariant@2.2.1.js", "npm:react-router@2.6.1/lib/RouteUtils.js", "npm:react-router@2.6.1/lib/PatternUtils.js", "npm:react-router@2.6.1/lib/InternalPropTypes.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _react = $__require('npm:react@15.3.0.js');
    var _react2 = _interopRequireDefault(_react);
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    var _RouteUtils = $__require('npm:react-router@2.6.1/lib/RouteUtils.js');
    var _PatternUtils = $__require('npm:react-router@2.6.1/lib/PatternUtils.js');
    var _InternalPropTypes = $__require('npm:react-router@2.6.1/lib/InternalPropTypes.js');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    var _React$PropTypes = _react2.default.PropTypes;
    var string = _React$PropTypes.string;
    var object = _React$PropTypes.object;
    var Redirect = _react2.default.createClass({
      displayName: 'Redirect',
      statics: {
        createRouteFromReactElement: function createRouteFromReactElement(element) {
          var route = (0, _RouteUtils.createRouteFromReactElement)(element);
          if (route.from)
            route.path = route.from;
          route.onEnter = function(nextState, replace) {
            var location = nextState.location;
            var params = nextState.params;
            var pathname = void 0;
            if (route.to.charAt(0) === '/') {
              pathname = (0, _PatternUtils.formatPattern)(route.to, params);
            } else if (!route.to) {
              pathname = location.pathname;
            } else {
              var routeIndex = nextState.routes.indexOf(route);
              var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);
              var pattern = parentPattern.replace(/\/*$/, '/') + route.to;
              pathname = (0, _PatternUtils.formatPattern)(pattern, params);
            }
            replace({
              pathname: pathname,
              query: route.query || location.query,
              state: route.state || location.state
            });
          };
          return route;
        },
        getRoutePattern: function getRoutePattern(routes, routeIndex) {
          var parentPattern = '';
          for (var i = routeIndex; i >= 0; i--) {
            var route = routes[i];
            var pattern = route.path || '';
            parentPattern = pattern.replace(/\/*$/, '/') + parentPattern;
            if (pattern.indexOf('/') === 0)
              break;
          }
          return '/' + parentPattern;
        }
      },
      propTypes: {
        path: string,
        from: string,
        to: string.isRequired,
        query: object,
        state: object,
        onEnter: _InternalPropTypes.falsy,
        children: _InternalPropTypes.falsy
      },
      render: function render() {
        !false ? "production" !== 'production' ? (0, _invariant2.default)(false, '<Redirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
      }
    });
    exports.default = Redirect;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/Route.js", ["npm:react@15.3.0.js", "npm:invariant@2.2.1.js", "npm:react-router@2.6.1/lib/RouteUtils.js", "npm:react-router@2.6.1/lib/InternalPropTypes.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _react = $__require('npm:react@15.3.0.js');
    var _react2 = _interopRequireDefault(_react);
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    var _RouteUtils = $__require('npm:react-router@2.6.1/lib/RouteUtils.js');
    var _InternalPropTypes = $__require('npm:react-router@2.6.1/lib/InternalPropTypes.js');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    var _React$PropTypes = _react2.default.PropTypes;
    var string = _React$PropTypes.string;
    var func = _React$PropTypes.func;
    var Route = _react2.default.createClass({
      displayName: 'Route',
      statics: {createRouteFromReactElement: _RouteUtils.createRouteFromReactElement},
      propTypes: {
        path: string,
        component: _InternalPropTypes.component,
        components: _InternalPropTypes.components,
        getComponent: func,
        getComponents: func
      },
      render: function render() {
        !false ? "production" !== 'production' ? (0, _invariant2.default)(false, '<Route> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
      }
    });
    exports.default = Route;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/InternalPropTypes.js", ["npm:react@15.3.0.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.routes = exports.route = exports.components = exports.component = exports.history = undefined;
  exports.falsy = falsy;
  var _react = $__require('npm:react@15.3.0.js');
  var func = _react.PropTypes.func;
  var object = _react.PropTypes.object;
  var arrayOf = _react.PropTypes.arrayOf;
  var oneOfType = _react.PropTypes.oneOfType;
  var element = _react.PropTypes.element;
  var shape = _react.PropTypes.shape;
  var string = _react.PropTypes.string;
  function falsy(props, propName, componentName) {
    if (props[propName])
      return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
  }
  var history = exports.history = shape({
    listen: func.isRequired,
    push: func.isRequired,
    replace: func.isRequired,
    go: func.isRequired,
    goBack: func.isRequired,
    goForward: func.isRequired
  });
  var component = exports.component = oneOfType([func, string]);
  var components = exports.components = oneOfType([component, object]);
  var route = exports.route = oneOfType([object, element]);
  var routes = exports.routes = oneOfType([route, arrayOf(route)]);
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/History.js", ["npm:react-router@2.6.1/lib/routerWarning.js", "npm:react-router@2.6.1/lib/InternalPropTypes.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    var _InternalPropTypes = $__require('npm:react-router@2.6.1/lib/InternalPropTypes.js');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    var History = {
      contextTypes: {history: _InternalPropTypes.history},
      componentWillMount: function componentWillMount() {
        "production" !== 'production' ? (0, _routerWarning2.default)(false, 'the `History` mixin is deprecated, please access `context.router` with your own `contextTypes`. http://tiny.cc/router-historymixin') : void 0;
        this.history = this.context.history;
      }
    };
    exports.default = History;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/Lifecycle.js", ["npm:react-router@2.6.1/lib/routerWarning.js", "npm:react@15.3.0.js", "npm:invariant@2.2.1.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    var _react = $__require('npm:react@15.3.0.js');
    var _react2 = _interopRequireDefault(_react);
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    var object = _react2.default.PropTypes.object;
    var Lifecycle = {
      contextTypes: {
        history: object.isRequired,
        route: object
      },
      propTypes: {route: object},
      componentDidMount: function componentDidMount() {
        "production" !== 'production' ? (0, _routerWarning2.default)(false, 'the `Lifecycle` mixin is deprecated, please use `context.router.setRouteLeaveHook(route, hook)`. http://tiny.cc/router-lifecyclemixin') : void 0;
        !this.routerWillLeave ? "production" !== 'production' ? (0, _invariant2.default)(false, 'The Lifecycle mixin requires you to define a routerWillLeave method') : (0, _invariant2.default)(false) : void 0;
        var route = this.props.route || this.context.route;
        !route ? "production" !== 'production' ? (0, _invariant2.default)(false, 'The Lifecycle mixin must be used on either a) a <Route component> or ' + 'b) a descendant of a <Route component> that uses the RouteContext mixin') : (0, _invariant2.default)(false) : void 0;
        this._unlistenBeforeLeavingRoute = this.context.history.listenBeforeLeavingRoute(route, this.routerWillLeave);
      },
      componentWillUnmount: function componentWillUnmount() {
        if (this._unlistenBeforeLeavingRoute)
          this._unlistenBeforeLeavingRoute();
      }
    };
    exports.default = Lifecycle;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/RouteContext.js", ["npm:react-router@2.6.1/lib/routerWarning.js", "npm:react@15.3.0.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    var _react = $__require('npm:react@15.3.0.js');
    var _react2 = _interopRequireDefault(_react);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    var object = _react2.default.PropTypes.object;
    var RouteContext = {
      propTypes: {route: object.isRequired},
      childContextTypes: {route: object.isRequired},
      getChildContext: function getChildContext() {
        return {route: this.props.route};
      },
      componentWillMount: function componentWillMount() {
        "production" !== 'production' ? (0, _routerWarning2.default)(false, 'The `RouteContext` mixin is deprecated. You can provide `this.props.route` on context with your own `contextTypes`. http://tiny.cc/router-routecontextmixin') : void 0;
      }
    };
    exports.default = RouteContext;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/useRoutes.js", ["npm:history@2.1.2/lib/useQueries.js", "npm:react-router@2.6.1/lib/createTransitionManager.js", "npm:react-router@2.6.1/lib/routerWarning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _useQueries = $__require('npm:history@2.1.2/lib/useQueries.js');
    var _useQueries2 = _interopRequireDefault(_useQueries);
    var _createTransitionManager = $__require('npm:react-router@2.6.1/lib/createTransitionManager.js');
    var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function useRoutes(createHistory) {
      "production" !== 'production' ? (0, _routerWarning2.default)(false, '`useRoutes` is deprecated. Please use `createTransitionManager` instead.') : void 0;
      return function() {
        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
        var routes = _ref.routes;
        var options = _objectWithoutProperties(_ref, ['routes']);
        var history = (0, _useQueries2.default)(createHistory)(options);
        var transitionManager = (0, _createTransitionManager2.default)(history, routes);
        return _extends({}, history, transitionManager);
      };
    }
    exports.default = useRoutes;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/RoutingContext.js", ["npm:react@15.3.0.js", "npm:react-router@2.6.1/lib/RouterContext.js", "npm:react-router@2.6.1/lib/routerWarning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _react = $__require('npm:react@15.3.0.js');
    var _react2 = _interopRequireDefault(_react);
    var _RouterContext = $__require('npm:react-router@2.6.1/lib/RouterContext.js');
    var _RouterContext2 = _interopRequireDefault(_RouterContext);
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    var RoutingContext = _react2.default.createClass({
      displayName: 'RoutingContext',
      componentWillMount: function componentWillMount() {
        "production" !== 'production' ? (0, _routerWarning2.default)(false, '`RoutingContext` has been renamed to `RouterContext`. Please use `import { RouterContext } from \'react-router\'`. http://tiny.cc/router-routercontext') : void 0;
      },
      render: function render() {
        return _react2.default.createElement(_RouterContext2.default, this.props);
      }
    });
    exports.default = RoutingContext;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/computeChangedRoutes.js", ["npm:react-router@2.6.1/lib/PatternUtils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _PatternUtils = $__require('npm:react-router@2.6.1/lib/PatternUtils.js');
  function routeParamsChanged(route, prevState, nextState) {
    if (!route.path)
      return false;
    var paramNames = (0, _PatternUtils.getParamNames)(route.path);
    return paramNames.some(function(paramName) {
      return prevState.params[paramName] !== nextState.params[paramName];
    });
  }
  function computeChangedRoutes(prevState, nextState) {
    var prevRoutes = prevState && prevState.routes;
    var nextRoutes = nextState.routes;
    var leaveRoutes = void 0,
        changeRoutes = void 0,
        enterRoutes = void 0;
    if (prevRoutes) {
      (function() {
        var parentIsLeaving = false;
        leaveRoutes = prevRoutes.filter(function(route) {
          if (parentIsLeaving) {
            return true;
          } else {
            var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);
            if (isLeaving)
              parentIsLeaving = true;
            return isLeaving;
          }
        });
        leaveRoutes.reverse();
        enterRoutes = [];
        changeRoutes = [];
        nextRoutes.forEach(function(route) {
          var isNew = prevRoutes.indexOf(route) === -1;
          var paramsChanged = leaveRoutes.indexOf(route) !== -1;
          if (isNew || paramsChanged)
            enterRoutes.push(route);
          else
            changeRoutes.push(route);
        });
      })();
    } else {
      leaveRoutes = [];
      changeRoutes = [];
      enterRoutes = nextRoutes;
    }
    return {
      leaveRoutes: leaveRoutes,
      changeRoutes: changeRoutes,
      enterRoutes: enterRoutes
    };
  }
  exports.default = computeChangedRoutes;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/TransitionUtils.js", ["npm:react-router@2.6.1/lib/AsyncUtils.js", "npm:react-router@2.6.1/lib/routerWarning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    exports.runEnterHooks = runEnterHooks;
    exports.runChangeHooks = runChangeHooks;
    exports.runLeaveHooks = runLeaveHooks;
    var _AsyncUtils = $__require('npm:react-router@2.6.1/lib/AsyncUtils.js');
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    function createTransitionHook(hook, route, asyncArity) {
      return function() {
        for (var _len = arguments.length,
            args = Array(_len),
            _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        hook.apply(route, args);
        if (hook.length < asyncArity) {
          var callback = args[args.length - 1];
          callback();
        }
      };
    }
    function getEnterHooks(routes) {
      return routes.reduce(function(hooks, route) {
        if (route.onEnter)
          hooks.push(createTransitionHook(route.onEnter, route, 3));
        return hooks;
      }, []);
    }
    function getChangeHooks(routes) {
      return routes.reduce(function(hooks, route) {
        if (route.onChange)
          hooks.push(createTransitionHook(route.onChange, route, 4));
        return hooks;
      }, []);
    }
    function runTransitionHooks(length, iter, callback) {
      if (!length) {
        callback();
        return;
      }
      var redirectInfo = void 0;
      function replace(location, deprecatedPathname, deprecatedQuery) {
        if (deprecatedPathname) {
          "production" !== 'production' ? (0, _routerWarning2.default)(false, '`replaceState(state, pathname, query) is deprecated; use `replace(location)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : void 0;
          redirectInfo = {
            pathname: deprecatedPathname,
            query: deprecatedQuery,
            state: location
          };
          return;
        }
        redirectInfo = location;
      }
      (0, _AsyncUtils.loopAsync)(length, function(index, next, done) {
        iter(index, replace, function(error) {
          if (error || redirectInfo) {
            done(error, redirectInfo);
          } else {
            next();
          }
        });
      }, callback);
    }
    function runEnterHooks(routes, nextState, callback) {
      var hooks = getEnterHooks(routes);
      return runTransitionHooks(hooks.length, function(index, replace, next) {
        hooks[index](nextState, replace, next);
      }, callback);
    }
    function runChangeHooks(routes, state, nextState, callback) {
      var hooks = getChangeHooks(routes);
      return runTransitionHooks(hooks.length, function(index, replace, next) {
        hooks[index](state, nextState, replace, next);
      }, callback);
    }
    function runLeaveHooks(routes, prevState) {
      for (var i = 0,
          len = routes.length; i < len; ++i) {
        if (routes[i].onLeave)
          routes[i].onLeave.call(routes[i], prevState);
      }
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/isActive.js", ["npm:react-router@2.6.1/lib/PatternUtils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
    return typeof obj;
  } : function(obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
  };
  exports.default = isActive;
  var _PatternUtils = $__require('npm:react-router@2.6.1/lib/PatternUtils.js');
  function deepEqual(a, b) {
    if (a == b)
      return true;
    if (a == null || b == null)
      return false;
    if (Array.isArray(a)) {
      return Array.isArray(b) && a.length === b.length && a.every(function(item, index) {
        return deepEqual(item, b[index]);
      });
    }
    if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object') {
      for (var p in a) {
        if (!Object.prototype.hasOwnProperty.call(a, p)) {
          continue;
        }
        if (a[p] === undefined) {
          if (b[p] !== undefined) {
            return false;
          }
        } else if (!Object.prototype.hasOwnProperty.call(b, p)) {
          return false;
        } else if (!deepEqual(a[p], b[p])) {
          return false;
        }
      }
      return true;
    }
    return String(a) === String(b);
  }
  function pathIsActive(pathname, currentPathname) {
    if (currentPathname.charAt(0) !== '/') {
      currentPathname = '/' + currentPathname;
    }
    if (pathname.charAt(pathname.length - 1) !== '/') {
      pathname += '/';
    }
    if (currentPathname.charAt(currentPathname.length - 1) !== '/') {
      currentPathname += '/';
    }
    return currentPathname === pathname;
  }
  function routeIsActive(pathname, routes, params) {
    var remainingPathname = pathname,
        paramNames = [],
        paramValues = [];
    for (var i = 0,
        len = routes.length; i < len; ++i) {
      var route = routes[i];
      var pattern = route.path || '';
      if (pattern.charAt(0) === '/') {
        remainingPathname = pathname;
        paramNames = [];
        paramValues = [];
      }
      if (remainingPathname !== null && pattern) {
        var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
        if (matched) {
          remainingPathname = matched.remainingPathname;
          paramNames = [].concat(paramNames, matched.paramNames);
          paramValues = [].concat(paramValues, matched.paramValues);
        } else {
          remainingPathname = null;
        }
        if (remainingPathname === '') {
          return paramNames.every(function(paramName, index) {
            return String(paramValues[index]) === String(params[paramName]);
          });
        }
      }
    }
    return false;
  }
  function queryIsActive(query, activeQuery) {
    if (activeQuery == null)
      return query == null;
    if (query == null)
      return true;
    return deepEqual(query, activeQuery);
  }
  function isActive(_ref, indexOnly, currentLocation, routes, params) {
    var pathname = _ref.pathname;
    var query = _ref.query;
    if (currentLocation == null)
      return false;
    if (pathname.charAt(0) !== '/') {
      pathname = '/' + pathname;
    }
    if (!pathIsActive(pathname, currentLocation.pathname)) {
      if (indexOnly || !routeIsActive(pathname, routes, params)) {
        return false;
      }
    }
    return queryIsActive(query, currentLocation.query);
  }
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/getComponents.js", ["npm:react-router@2.6.1/lib/AsyncUtils.js", "npm:react-router@2.6.1/lib/makeStateWithLocation.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _AsyncUtils = $__require('npm:react-router@2.6.1/lib/AsyncUtils.js');
  var _makeStateWithLocation = $__require('npm:react-router@2.6.1/lib/makeStateWithLocation.js');
  var _makeStateWithLocation2 = _interopRequireDefault(_makeStateWithLocation);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function getComponentsForRoute(nextState, route, callback) {
    if (route.component || route.components) {
      callback(null, route.component || route.components);
      return;
    }
    var getComponent = route.getComponent || route.getComponents;
    if (!getComponent) {
      callback();
      return;
    }
    var location = nextState.location;
    var nextStateWithLocation = (0, _makeStateWithLocation2.default)(nextState, location);
    getComponent.call(route, nextStateWithLocation, callback);
  }
  function getComponents(nextState, callback) {
    (0, _AsyncUtils.mapAsync)(nextState.routes, function(route, index, callback) {
      getComponentsForRoute(nextState, route, callback);
    }, callback);
  }
  exports.default = getComponents;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/AsyncUtils.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.loopAsync = loopAsync;
  exports.mapAsync = mapAsync;
  function loopAsync(turns, work, callback) {
    var currentTurn = 0,
        isDone = false;
    var sync = false,
        hasNext = false,
        doneArgs = void 0;
    function done() {
      isDone = true;
      if (sync) {
        doneArgs = [].concat(Array.prototype.slice.call(arguments));
        return;
      }
      callback.apply(this, arguments);
    }
    function next() {
      if (isDone) {
        return;
      }
      hasNext = true;
      if (sync) {
        return;
      }
      sync = true;
      while (!isDone && currentTurn < turns && hasNext) {
        hasNext = false;
        work.call(this, currentTurn++, next, done);
      }
      sync = false;
      if (isDone) {
        callback.apply(this, doneArgs);
        return;
      }
      if (currentTurn >= turns && hasNext) {
        isDone = true;
        callback();
      }
    }
    next();
  }
  function mapAsync(array, work, callback) {
    var length = array.length;
    var values = [];
    if (length === 0)
      return callback(null, values);
    var isDone = false,
        doneCount = 0;
    function done(index, error, value) {
      if (isDone)
        return;
      if (error) {
        isDone = true;
        callback(error);
      } else {
        values[index] = value;
        isDone = ++doneCount === length;
        if (isDone)
          callback(null, values);
      }
    }
    array.forEach(function(item, index) {
      work(item, index, function(error, value) {
        done(index, error, value);
      });
    });
  }
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/makeStateWithLocation.js", ["npm:react-router@2.6.1/lib/deprecateObjectProperties.js", "npm:react-router@2.6.1/lib/routerWarning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    exports.default = makeStateWithLocation;
    var _deprecateObjectProperties = $__require('npm:react-router@2.6.1/lib/deprecateObjectProperties.js');
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    function makeStateWithLocation(state, location) {
      if ("production" !== 'production' && _deprecateObjectProperties.canUseMembrane) {
        var stateWithLocation = _extends({}, state);
        var _loop = function _loop(prop) {
          if (!Object.prototype.hasOwnProperty.call(location, prop)) {
            return 'continue';
          }
          Object.defineProperty(stateWithLocation, prop, {get: function get() {
              "production" !== 'production' ? (0, _routerWarning2.default)(false, 'Accessing location properties directly from the first argument to `getComponent`, `getComponents`, `getChildRoutes`, and `getIndexRoute` is deprecated. That argument is now the router state (`nextState` or `partialNextState`) rather than the location. To access the location, use `nextState.location` or `partialNextState.location`.') : void 0;
              return location[prop];
            }});
        };
        for (var prop in location) {
          var _ret = _loop(prop);
          if (_ret === 'continue')
            continue;
        }
        return stateWithLocation;
      }
      return _extends({}, state, location);
    }
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/matchRoutes.js", ["npm:react-router@2.6.1/lib/AsyncUtils.js", "npm:react-router@2.6.1/lib/makeStateWithLocation.js", "npm:react-router@2.6.1/lib/PatternUtils.js", "npm:react-router@2.6.1/lib/routerWarning.js", "npm:react-router@2.6.1/lib/RouteUtils.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
      return typeof obj;
    } : function(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    exports.default = matchRoutes;
    var _AsyncUtils = $__require('npm:react-router@2.6.1/lib/AsyncUtils.js');
    var _makeStateWithLocation = $__require('npm:react-router@2.6.1/lib/makeStateWithLocation.js');
    var _makeStateWithLocation2 = _interopRequireDefault(_makeStateWithLocation);
    var _PatternUtils = $__require('npm:react-router@2.6.1/lib/PatternUtils.js');
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    var _RouteUtils = $__require('npm:react-router@2.6.1/lib/RouteUtils.js');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    function getChildRoutes(route, location, paramNames, paramValues, callback) {
      if (route.childRoutes) {
        return [null, route.childRoutes];
      }
      if (!route.getChildRoutes) {
        return [];
      }
      var sync = true,
          result = void 0;
      var partialNextState = {
        location: location,
        params: createParams(paramNames, paramValues)
      };
      var partialNextStateWithLocation = (0, _makeStateWithLocation2.default)(partialNextState, location);
      route.getChildRoutes(partialNextStateWithLocation, function(error, childRoutes) {
        childRoutes = !error && (0, _RouteUtils.createRoutes)(childRoutes);
        if (sync) {
          result = [error, childRoutes];
          return;
        }
        callback(error, childRoutes);
      });
      sync = false;
      return result;
    }
    function getIndexRoute(route, location, paramNames, paramValues, callback) {
      if (route.indexRoute) {
        callback(null, route.indexRoute);
      } else if (route.getIndexRoute) {
        var partialNextState = {
          location: location,
          params: createParams(paramNames, paramValues)
        };
        var partialNextStateWithLocation = (0, _makeStateWithLocation2.default)(partialNextState, location);
        route.getIndexRoute(partialNextStateWithLocation, function(error, indexRoute) {
          callback(error, !error && (0, _RouteUtils.createRoutes)(indexRoute)[0]);
        });
      } else if (route.childRoutes) {
        (function() {
          var pathless = route.childRoutes.filter(function(childRoute) {
            return !childRoute.path;
          });
          (0, _AsyncUtils.loopAsync)(pathless.length, function(index, next, done) {
            getIndexRoute(pathless[index], location, paramNames, paramValues, function(error, indexRoute) {
              if (error || indexRoute) {
                var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);
                done(error, routes);
              } else {
                next();
              }
            });
          }, function(err, routes) {
            callback(null, routes);
          });
        })();
      } else {
        callback();
      }
    }
    function assignParams(params, paramNames, paramValues) {
      return paramNames.reduce(function(params, paramName, index) {
        var paramValue = paramValues && paramValues[index];
        if (Array.isArray(params[paramName])) {
          params[paramName].push(paramValue);
        } else if (paramName in params) {
          params[paramName] = [params[paramName], paramValue];
        } else {
          params[paramName] = paramValue;
        }
        return params;
      }, params);
    }
    function createParams(paramNames, paramValues) {
      return assignParams({}, paramNames, paramValues);
    }
    function matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {
      var pattern = route.path || '';
      if (pattern.charAt(0) === '/') {
        remainingPathname = location.pathname;
        paramNames = [];
        paramValues = [];
      }
      if (remainingPathname !== null && pattern) {
        try {
          var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
          if (matched) {
            remainingPathname = matched.remainingPathname;
            paramNames = [].concat(paramNames, matched.paramNames);
            paramValues = [].concat(paramValues, matched.paramValues);
          } else {
            remainingPathname = null;
          }
        } catch (error) {
          callback(error);
        }
        if (remainingPathname === '') {
          var _ret2 = function() {
            var match = {
              routes: [route],
              params: createParams(paramNames, paramValues)
            };
            getIndexRoute(route, location, paramNames, paramValues, function(error, indexRoute) {
              if (error) {
                callback(error);
              } else {
                if (Array.isArray(indexRoute)) {
                  var _match$routes;
                  "production" !== 'production' ? (0, _routerWarning2.default)(indexRoute.every(function(route) {
                    return !route.path;
                  }), 'Index routes should not have paths') : void 0;
                  (_match$routes = match.routes).push.apply(_match$routes, indexRoute);
                } else if (indexRoute) {
                  "production" !== 'production' ? (0, _routerWarning2.default)(!indexRoute.path, 'Index routes should not have paths') : void 0;
                  match.routes.push(indexRoute);
                }
                callback(null, match);
              }
            });
            return {v: void 0};
          }();
          if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object")
            return _ret2.v;
        }
      }
      if (remainingPathname != null || route.childRoutes) {
        var onChildRoutes = function onChildRoutes(error, childRoutes) {
          if (error) {
            callback(error);
          } else if (childRoutes) {
            matchRoutes(childRoutes, location, function(error, match) {
              if (error) {
                callback(error);
              } else if (match) {
                match.routes.unshift(route);
                callback(null, match);
              } else {
                callback();
              }
            }, remainingPathname, paramNames, paramValues);
          } else {
            callback();
          }
        };
        var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);
        if (result) {
          onChildRoutes.apply(undefined, result);
        }
      } else {
        callback();
      }
    }
    function matchRoutes(routes, location, callback, remainingPathname) {
      var paramNames = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];
      var paramValues = arguments.length <= 5 || arguments[5] === undefined ? [] : arguments[5];
      if (remainingPathname === undefined) {
        if (location.pathname.charAt(0) !== '/') {
          location = _extends({}, location, {pathname: '/' + location.pathname});
        }
        remainingPathname = location.pathname;
      }
      (0, _AsyncUtils.loopAsync)(routes.length, function(index, next, done) {
        matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function(error, match) {
          if (error || match) {
            done(error, match);
          } else {
            next();
          }
        });
      }, callback);
    }
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/createTransitionManager.js", ["npm:react-router@2.6.1/lib/routerWarning.js", "npm:history@2.1.2/lib/Actions.js", "npm:react-router@2.6.1/lib/computeChangedRoutes.js", "npm:react-router@2.6.1/lib/TransitionUtils.js", "npm:react-router@2.6.1/lib/isActive.js", "npm:react-router@2.6.1/lib/getComponents.js", "npm:react-router@2.6.1/lib/matchRoutes.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    exports.default = createTransitionManager;
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    var _Actions = $__require('npm:history@2.1.2/lib/Actions.js');
    var _computeChangedRoutes2 = $__require('npm:react-router@2.6.1/lib/computeChangedRoutes.js');
    var _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);
    var _TransitionUtils = $__require('npm:react-router@2.6.1/lib/TransitionUtils.js');
    var _isActive2 = $__require('npm:react-router@2.6.1/lib/isActive.js');
    var _isActive3 = _interopRequireDefault(_isActive2);
    var _getComponents = $__require('npm:react-router@2.6.1/lib/getComponents.js');
    var _getComponents2 = _interopRequireDefault(_getComponents);
    var _matchRoutes = $__require('npm:react-router@2.6.1/lib/matchRoutes.js');
    var _matchRoutes2 = _interopRequireDefault(_matchRoutes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    function hasAnyProperties(object) {
      for (var p in object) {
        if (Object.prototype.hasOwnProperty.call(object, p))
          return true;
      }
      return false;
    }
    function createTransitionManager(history, routes) {
      var state = {};
      function isActive(location) {
        var indexOnlyOrDeprecatedQuery = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
        var deprecatedIndexOnly = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
        var indexOnly = void 0;
        if (indexOnlyOrDeprecatedQuery && indexOnlyOrDeprecatedQuery !== true || deprecatedIndexOnly !== null) {
          "production" !== 'production' ? (0, _routerWarning2.default)(false, '`isActive(pathname, query, indexOnly) is deprecated; use `isActive(location, indexOnly)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : void 0;
          location = {
            pathname: location,
            query: indexOnlyOrDeprecatedQuery
          };
          indexOnly = deprecatedIndexOnly || false;
        } else {
          location = history.createLocation(location);
          indexOnly = indexOnlyOrDeprecatedQuery;
        }
        return (0, _isActive3.default)(location, indexOnly, state.location, state.routes, state.params);
      }
      function createLocationFromRedirectInfo(location) {
        return history.createLocation(location, _Actions.REPLACE);
      }
      var partialNextState = void 0;
      function match(location, callback) {
        if (partialNextState && partialNextState.location === location) {
          finishMatch(partialNextState, callback);
        } else {
          (0, _matchRoutes2.default)(routes, location, function(error, nextState) {
            if (error) {
              callback(error);
            } else if (nextState) {
              finishMatch(_extends({}, nextState, {location: location}), callback);
            } else {
              callback();
            }
          });
        }
      }
      function finishMatch(nextState, callback) {
        var _computeChangedRoutes = (0, _computeChangedRoutes3.default)(state, nextState);
        var leaveRoutes = _computeChangedRoutes.leaveRoutes;
        var changeRoutes = _computeChangedRoutes.changeRoutes;
        var enterRoutes = _computeChangedRoutes.enterRoutes;
        (0, _TransitionUtils.runLeaveHooks)(leaveRoutes, state);
        leaveRoutes.filter(function(route) {
          return enterRoutes.indexOf(route) === -1;
        }).forEach(removeListenBeforeHooksForRoute);
        (0, _TransitionUtils.runChangeHooks)(changeRoutes, state, nextState, function(error, redirectInfo) {
          if (error || redirectInfo)
            return handleErrorOrRedirect(error, redirectInfo);
          (0, _TransitionUtils.runEnterHooks)(enterRoutes, nextState, finishEnterHooks);
        });
        function finishEnterHooks(error, redirectInfo) {
          if (error || redirectInfo)
            return handleErrorOrRedirect(error, redirectInfo);
          (0, _getComponents2.default)(nextState, function(error, components) {
            if (error) {
              callback(error);
            } else {
              callback(null, null, state = _extends({}, nextState, {components: components}));
            }
          });
        }
        function handleErrorOrRedirect(error, redirectInfo) {
          if (error)
            callback(error);
          else
            callback(null, createLocationFromRedirectInfo(redirectInfo));
        }
      }
      var RouteGuid = 1;
      function getRouteID(route) {
        var create = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];
        return route.__id__ || create && (route.__id__ = RouteGuid++);
      }
      var RouteHooks = Object.create(null);
      function getRouteHooksForRoutes(routes) {
        return routes.reduce(function(hooks, route) {
          hooks.push.apply(hooks, RouteHooks[getRouteID(route)]);
          return hooks;
        }, []);
      }
      function transitionHook(location, callback) {
        (0, _matchRoutes2.default)(routes, location, function(error, nextState) {
          if (nextState == null) {
            callback();
            return;
          }
          partialNextState = _extends({}, nextState, {location: location});
          var hooks = getRouteHooksForRoutes((0, _computeChangedRoutes3.default)(state, partialNextState).leaveRoutes);
          var result = void 0;
          for (var i = 0,
              len = hooks.length; result == null && i < len; ++i) {
            result = hooks[i](location);
          }
          callback(result);
        });
      }
      function beforeUnloadHook() {
        if (state.routes) {
          var hooks = getRouteHooksForRoutes(state.routes);
          var message = void 0;
          for (var i = 0,
              len = hooks.length; typeof message !== 'string' && i < len; ++i) {
            message = hooks[i]();
          }
          return message;
        }
      }
      var unlistenBefore = void 0,
          unlistenBeforeUnload = void 0;
      function removeListenBeforeHooksForRoute(route) {
        var routeID = getRouteID(route, false);
        if (!routeID) {
          return;
        }
        delete RouteHooks[routeID];
        if (!hasAnyProperties(RouteHooks)) {
          if (unlistenBefore) {
            unlistenBefore();
            unlistenBefore = null;
          }
          if (unlistenBeforeUnload) {
            unlistenBeforeUnload();
            unlistenBeforeUnload = null;
          }
        }
      }
      function listenBeforeLeavingRoute(route, hook) {
        var routeID = getRouteID(route);
        var hooks = RouteHooks[routeID];
        if (!hooks) {
          var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);
          RouteHooks[routeID] = [hook];
          if (thereWereNoRouteHooks) {
            unlistenBefore = history.listenBefore(transitionHook);
            if (history.listenBeforeUnload)
              unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);
          }
        } else {
          if (hooks.indexOf(hook) === -1) {
            "production" !== 'production' ? (0, _routerWarning2.default)(false, 'adding multiple leave hooks for the same route is deprecated; manage multiple confirmations in your own code instead') : void 0;
            hooks.push(hook);
          }
        }
        return function() {
          var hooks = RouteHooks[routeID];
          if (hooks) {
            var newHooks = hooks.filter(function(item) {
              return item !== hook;
            });
            if (newHooks.length === 0) {
              removeListenBeforeHooksForRoute(route);
            } else {
              RouteHooks[routeID] = newHooks;
            }
          }
        };
      }
      function listen(listener) {
        return history.listen(function(location) {
          if (state.location === location) {
            listener(null, state);
          } else {
            match(location, function(error, redirectLocation, nextState) {
              if (error) {
                listener(error);
              } else if (redirectLocation) {
                history.transitionTo(redirectLocation);
              } else if (nextState) {
                listener(null, nextState);
              } else {
                "production" !== 'production' ? (0, _routerWarning2.default)(false, 'Location "%s" did not match any routes', location.pathname + location.search + location.hash) : void 0;
              }
            });
          }
        });
      }
      return {
        isActive: isActive,
        match: match,
        listenBeforeLeavingRoute: listenBeforeLeavingRoute,
        listen: listen
      };
    }
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/RouterUtils.js", ["npm:react-router@2.6.1/lib/deprecateObjectProperties.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    exports.createRouterObject = createRouterObject;
    exports.createRoutingHistory = createRoutingHistory;
    var _deprecateObjectProperties = $__require('npm:react-router@2.6.1/lib/deprecateObjectProperties.js');
    var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    function createRouterObject(history, transitionManager) {
      return _extends({}, history, {
        setRouteLeaveHook: transitionManager.listenBeforeLeavingRoute,
        isActive: transitionManager.isActive
      });
    }
    function createRoutingHistory(history, transitionManager) {
      history = _extends({}, history, transitionManager);
      if ("production" !== 'production') {
        history = (0, _deprecateObjectProperties2.default)(history, '`props.history` and `context.history` are deprecated. Please use `context.router`. http://tiny.cc/router-contextchanges');
      }
      return history;
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/match.js", ["npm:invariant@2.2.1.js", "npm:react-router@2.6.1/lib/createMemoryHistory.js", "npm:react-router@2.6.1/lib/createTransitionManager.js", "npm:react-router@2.6.1/lib/RouteUtils.js", "npm:react-router@2.6.1/lib/RouterUtils.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    var _createMemoryHistory = $__require('npm:react-router@2.6.1/lib/createMemoryHistory.js');
    var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);
    var _createTransitionManager = $__require('npm:react-router@2.6.1/lib/createTransitionManager.js');
    var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
    var _RouteUtils = $__require('npm:react-router@2.6.1/lib/RouteUtils.js');
    var _RouterUtils = $__require('npm:react-router@2.6.1/lib/RouterUtils.js');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function match(_ref, callback) {
      var history = _ref.history;
      var routes = _ref.routes;
      var location = _ref.location;
      var options = _objectWithoutProperties(_ref, ['history', 'routes', 'location']);
      !(history || location) ? "production" !== 'production' ? (0, _invariant2.default)(false, 'match needs a history or a location') : (0, _invariant2.default)(false) : void 0;
      history = history ? history : (0, _createMemoryHistory2.default)(options);
      var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes));
      var unlisten = void 0;
      if (location) {
        location = history.createLocation(location);
      } else {
        unlisten = history.listen(function(historyLocation) {
          location = historyLocation;
        });
      }
      var router = (0, _RouterUtils.createRouterObject)(history, transitionManager);
      history = (0, _RouterUtils.createRoutingHistory)(history, transitionManager);
      transitionManager.match(location, function(error, redirectLocation, nextState) {
        callback(error, redirectLocation, nextState && _extends({}, nextState, {
          history: history,
          router: router,
          matchContext: {
            history: history,
            transitionManager: transitionManager,
            router: router
          }
        }));
        if (unlisten) {
          unlisten();
        }
      });
    }
    exports.default = match;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/deprecateObjectProperties.js", ["npm:react-router@2.6.1/lib/routerWarning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    exports.canUseMembrane = undefined;
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    var canUseMembrane = exports.canUseMembrane = false;
    var deprecateObjectProperties = function deprecateObjectProperties(object) {
      return object;
    };
    if ("production" !== 'production') {
      try {
        if (Object.defineProperty({}, 'x', {get: function get() {
            return true;
          }}).x) {
          exports.canUseMembrane = canUseMembrane = true;
        }
      } catch (e) {}
      if (canUseMembrane) {
        deprecateObjectProperties = function deprecateObjectProperties(object, message) {
          var membrane = {};
          var _loop = function _loop(prop) {
            if (!Object.prototype.hasOwnProperty.call(object, prop)) {
              return 'continue';
            }
            if (typeof object[prop] === 'function') {
              membrane[prop] = function() {
                "production" !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
                return object[prop].apply(object, arguments);
              };
              return 'continue';
            }
            Object.defineProperty(membrane, prop, {get: function get() {
                "production" !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
                return object[prop];
              }});
          };
          for (var prop in object) {
            var _ret = _loop(prop);
            if (_ret === 'continue')
              continue;
          }
          return membrane;
        };
      }
    }
    exports.default = deprecateObjectProperties;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/PatternUtils.js", ["npm:invariant@2.2.1.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    exports.compilePattern = compilePattern;
    exports.matchPattern = matchPattern;
    exports.getParamNames = getParamNames;
    exports.getParams = getParams;
    exports.formatPattern = formatPattern;
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    function escapeRegExp(string) {
      return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
    }
    function _compilePattern(pattern) {
      var regexpSource = '';
      var paramNames = [];
      var tokens = [];
      var match = void 0,
          lastIndex = 0,
          matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)/g;
      while (match = matcher.exec(pattern)) {
        if (match.index !== lastIndex) {
          tokens.push(pattern.slice(lastIndex, match.index));
          regexpSource += escapeRegExp(pattern.slice(lastIndex, match.index));
        }
        if (match[1]) {
          regexpSource += '([^/]+)';
          paramNames.push(match[1]);
        } else if (match[0] === '**') {
          regexpSource += '(.*)';
          paramNames.push('splat');
        } else if (match[0] === '*') {
          regexpSource += '(.*?)';
          paramNames.push('splat');
        } else if (match[0] === '(') {
          regexpSource += '(?:';
        } else if (match[0] === ')') {
          regexpSource += ')?';
        }
        tokens.push(match[0]);
        lastIndex = matcher.lastIndex;
      }
      if (lastIndex !== pattern.length) {
        tokens.push(pattern.slice(lastIndex, pattern.length));
        regexpSource += escapeRegExp(pattern.slice(lastIndex, pattern.length));
      }
      return {
        pattern: pattern,
        regexpSource: regexpSource,
        paramNames: paramNames,
        tokens: tokens
      };
    }
    var CompiledPatternsCache = Object.create(null);
    function compilePattern(pattern) {
      if (!CompiledPatternsCache[pattern])
        CompiledPatternsCache[pattern] = _compilePattern(pattern);
      return CompiledPatternsCache[pattern];
    }
    function matchPattern(pattern, pathname) {
      if (pattern.charAt(0) !== '/') {
        pattern = '/' + pattern;
      }
      var _compilePattern2 = compilePattern(pattern);
      var regexpSource = _compilePattern2.regexpSource;
      var paramNames = _compilePattern2.paramNames;
      var tokens = _compilePattern2.tokens;
      if (pattern.charAt(pattern.length - 1) !== '/') {
        regexpSource += '/?';
      }
      if (tokens[tokens.length - 1] === '*') {
        regexpSource += '$';
      }
      var match = pathname.match(new RegExp('^' + regexpSource, 'i'));
      if (match == null) {
        return null;
      }
      var matchedPath = match[0];
      var remainingPathname = pathname.substr(matchedPath.length);
      if (remainingPathname) {
        if (matchedPath.charAt(matchedPath.length - 1) !== '/') {
          return null;
        }
        remainingPathname = '/' + remainingPathname;
      }
      return {
        remainingPathname: remainingPathname,
        paramNames: paramNames,
        paramValues: match.slice(1).map(function(v) {
          return v && decodeURIComponent(v);
        })
      };
    }
    function getParamNames(pattern) {
      return compilePattern(pattern).paramNames;
    }
    function getParams(pattern, pathname) {
      var match = matchPattern(pattern, pathname);
      if (!match) {
        return null;
      }
      var paramNames = match.paramNames;
      var paramValues = match.paramValues;
      var params = {};
      paramNames.forEach(function(paramName, index) {
        params[paramName] = paramValues[index];
      });
      return params;
    }
    function formatPattern(pattern, params) {
      params = params || {};
      var _compilePattern3 = compilePattern(pattern);
      var tokens = _compilePattern3.tokens;
      var parenCount = 0,
          pathname = '',
          splatIndex = 0;
      var token = void 0,
          paramName = void 0,
          paramValue = void 0;
      for (var i = 0,
          len = tokens.length; i < len; ++i) {
        token = tokens[i];
        if (token === '*' || token === '**') {
          paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;
          !(paramValue != null || parenCount > 0) ? "production" !== 'production' ? (0, _invariant2.default)(false, 'Missing splat #%s for path "%s"', splatIndex, pattern) : (0, _invariant2.default)(false) : void 0;
          if (paramValue != null)
            pathname += encodeURI(paramValue);
        } else if (token === '(') {
          parenCount += 1;
        } else if (token === ')') {
          parenCount -= 1;
        } else if (token.charAt(0) === ':') {
          paramName = token.substring(1);
          paramValue = params[paramName];
          !(paramValue != null || parenCount > 0) ? "production" !== 'production' ? (0, _invariant2.default)(false, 'Missing "%s" parameter for path "%s"', paramName, pattern) : (0, _invariant2.default)(false) : void 0;
          if (paramValue != null)
            pathname += encodeURIComponent(paramValue);
        } else {
          pathname += token;
        }
      }
      return pathname.replace(/\/+/g, '/');
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/getRouteParams.js", ["npm:react-router@2.6.1/lib/PatternUtils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _PatternUtils = $__require('npm:react-router@2.6.1/lib/PatternUtils.js');
  function getRouteParams(route, params) {
    var routeParams = {};
    if (!route.path)
      return routeParams;
    (0, _PatternUtils.getParamNames)(route.path).forEach(function(p) {
      if (Object.prototype.hasOwnProperty.call(params, p)) {
        routeParams[p] = params[p];
      }
    });
    return routeParams;
  }
  exports.default = getRouteParams;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/RouteUtils.js", ["npm:react@15.3.0.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  exports.isReactChildren = isReactChildren;
  exports.createRouteFromReactElement = createRouteFromReactElement;
  exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
  exports.createRoutes = createRoutes;
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function isValidChild(object) {
    return object == null || _react2.default.isValidElement(object);
  }
  function isReactChildren(object) {
    return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
  }
  function createRoute(defaultProps, props) {
    return _extends({}, defaultProps, props);
  }
  function createRouteFromReactElement(element) {
    var type = element.type;
    var route = createRoute(type.defaultProps, element.props);
    if (route.children) {
      var childRoutes = createRoutesFromReactChildren(route.children, route);
      if (childRoutes.length)
        route.childRoutes = childRoutes;
      delete route.children;
    }
    return route;
  }
  function createRoutesFromReactChildren(children, parentRoute) {
    var routes = [];
    _react2.default.Children.forEach(children, function(element) {
      if (_react2.default.isValidElement(element)) {
        if (element.type.createRouteFromReactElement) {
          var route = element.type.createRouteFromReactElement(element, parentRoute);
          if (route)
            routes.push(route);
        } else {
          routes.push(createRouteFromReactElement(element));
        }
      }
    });
    return routes;
  }
  function createRoutes(routes) {
    if (isReactChildren(routes)) {
      routes = createRoutesFromReactChildren(routes);
    } else if (routes && !Array.isArray(routes)) {
      routes = [routes];
    }
    return routes;
  }
  return module.exports;
});

System.registerDynamic("npm:warning@3.0.0/browser.js", ["github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var warning = function() {};
    if ("production" !== 'production') {
      warning = function(condition, format, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (format.length < 10 || (/^[s\W]*$/).test(format)) {
          throw new Error('The warning format should be able to uniquely identify this ' + 'warning. Please, use a more descriptive format than: ' + format);
        }
        if (!condition) {
          var argIndex = 0;
          var message = 'Warning: ' + format.replace(/%s/g, function() {
            return args[argIndex++];
          });
          if (typeof console !== 'undefined') {
            console.error(message);
          }
          try {
            throw new Error(message);
          } catch (x) {}
        }
      };
    }
    module.exports = warning;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:warning@3.0.0.js", ["npm:warning@3.0.0/browser.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:warning@3.0.0/browser.js');
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/routerWarning.js", ["npm:warning@3.0.0.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.default = routerWarning;
  exports._resetWarned = _resetWarned;
  var _warning = $__require('npm:warning@3.0.0.js');
  var _warning2 = _interopRequireDefault(_warning);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var warned = {};
  function routerWarning(falseToWarn, message) {
    if (message.indexOf('deprecated') !== -1) {
      if (warned[message]) {
        return;
      }
      warned[message] = true;
    }
    message = '[react-router] ' + message;
    for (var _len = arguments.length,
        args = Array(_len > 2 ? _len - 2 : 0),
        _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }
    _warning2.default.apply(undefined, [falseToWarn, message].concat(args));
  }
  function _resetWarned() {
    warned = {};
  }
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/RouterContext.js", ["npm:invariant@2.2.1.js", "npm:react@15.3.0.js", "npm:react-router@2.6.1/lib/deprecateObjectProperties.js", "npm:react-router@2.6.1/lib/getRouteParams.js", "npm:react-router@2.6.1/lib/RouteUtils.js", "npm:react-router@2.6.1/lib/routerWarning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
      return typeof obj;
    } : function(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    var _react = $__require('npm:react@15.3.0.js');
    var _react2 = _interopRequireDefault(_react);
    var _deprecateObjectProperties = $__require('npm:react-router@2.6.1/lib/deprecateObjectProperties.js');
    var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);
    var _getRouteParams = $__require('npm:react-router@2.6.1/lib/getRouteParams.js');
    var _getRouteParams2 = _interopRequireDefault(_getRouteParams);
    var _RouteUtils = $__require('npm:react-router@2.6.1/lib/RouteUtils.js');
    var _routerWarning = $__require('npm:react-router@2.6.1/lib/routerWarning.js');
    var _routerWarning2 = _interopRequireDefault(_routerWarning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
    var _React$PropTypes = _react2.default.PropTypes;
    var array = _React$PropTypes.array;
    var func = _React$PropTypes.func;
    var object = _React$PropTypes.object;
    var RouterContext = _react2.default.createClass({
      displayName: 'RouterContext',
      propTypes: {
        history: object,
        router: object.isRequired,
        location: object.isRequired,
        routes: array.isRequired,
        params: object.isRequired,
        components: array.isRequired,
        createElement: func.isRequired
      },
      getDefaultProps: function getDefaultProps() {
        return {createElement: _react2.default.createElement};
      },
      childContextTypes: {
        history: object,
        location: object.isRequired,
        router: object.isRequired
      },
      getChildContext: function getChildContext() {
        var _props = this.props;
        var router = _props.router;
        var history = _props.history;
        var location = _props.location;
        if (!router) {
          "production" !== 'production' ? (0, _routerWarning2.default)(false, '`<RouterContext>` expects a `router` rather than a `history`') : void 0;
          router = _extends({}, history, {setRouteLeaveHook: history.listenBeforeLeavingRoute});
          delete router.listenBeforeLeavingRoute;
        }
        if ("production" !== 'production') {
          location = (0, _deprecateObjectProperties2.default)(location, '`context.location` is deprecated, please use a route component\'s `props.location` instead. http://tiny.cc/router-accessinglocation');
        }
        return {
          history: history,
          location: location,
          router: router
        };
      },
      createElement: function createElement(component, props) {
        return component == null ? null : this.props.createElement(component, props);
      },
      render: function render() {
        var _this = this;
        var _props2 = this.props;
        var history = _props2.history;
        var location = _props2.location;
        var routes = _props2.routes;
        var params = _props2.params;
        var components = _props2.components;
        var element = null;
        if (components) {
          element = components.reduceRight(function(element, components, index) {
            if (components == null)
              return element;
            var route = routes[index];
            var routeParams = (0, _getRouteParams2.default)(route, params);
            var props = {
              history: history,
              location: location,
              params: params,
              route: route,
              routeParams: routeParams,
              routes: routes
            };
            if ((0, _RouteUtils.isReactChildren)(element)) {
              props.children = element;
            } else if (element) {
              for (var prop in element) {
                if (Object.prototype.hasOwnProperty.call(element, prop))
                  props[prop] = element[prop];
              }
            }
            if ((typeof components === 'undefined' ? 'undefined' : _typeof(components)) === 'object') {
              var elements = {};
              for (var key in components) {
                if (Object.prototype.hasOwnProperty.call(components, key)) {
                  elements[key] = _this.createElement(components[key], _extends({key: key}, props));
                }
              }
              return elements;
            }
            return _this.createElement(components, props);
          }, element);
        }
        !(element === null || element === false || _react2.default.isValidElement(element)) ? "production" !== 'production' ? (0, _invariant2.default)(false, 'The root route must render a single element') : (0, _invariant2.default)(false) : void 0;
        return element;
      }
    });
    exports.default = RouterContext;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/applyRouterMiddleware.js", ["npm:react@15.3.0.js", "npm:react-router@2.6.1/lib/RouterContext.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _RouterContext = $__require('npm:react-router@2.6.1/lib/RouterContext.js');
  var _RouterContext2 = _interopRequireDefault(_RouterContext);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  exports.default = function() {
    for (var _len = arguments.length,
        middlewares = Array(_len),
        _key = 0; _key < _len; _key++) {
      middlewares[_key] = arguments[_key];
    }
    var withContext = middlewares.map(function(m) {
      return m.renderRouterContext;
    }).filter(function(f) {
      return f;
    });
    var withComponent = middlewares.map(function(m) {
      return m.renderRouteComponent;
    }).filter(function(f) {
      return f;
    });
    var makeCreateElement = function makeCreateElement() {
      var baseCreateElement = arguments.length <= 0 || arguments[0] === undefined ? _react.createElement : arguments[0];
      return function(Component, props) {
        return withComponent.reduceRight(function(previous, renderRouteComponent) {
          return renderRouteComponent(previous, props);
        }, baseCreateElement(Component, props));
      };
    };
    return function(renderProps) {
      return withContext.reduceRight(function(previous, renderRouterContext) {
        return renderRouterContext(previous, renderProps);
      }, _react2.default.createElement(_RouterContext2.default, _extends({}, renderProps, {createElement: makeCreateElement(renderProps.createElement)})));
    };
  };
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/createBrowserHistory.js", ["npm:invariant@2.2.1.js", "npm:history@2.1.2/lib/Actions.js", "npm:history@2.1.2/lib/PathUtils.js", "npm:history@2.1.2/lib/ExecutionEnvironment.js", "npm:history@2.1.2/lib/DOMUtils.js", "npm:history@2.1.2/lib/DOMStateStorage.js", "npm:history@2.1.2/lib/createDOMHistory.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    var _Actions = $__require('npm:history@2.1.2/lib/Actions.js');
    var _PathUtils = $__require('npm:history@2.1.2/lib/PathUtils.js');
    var _ExecutionEnvironment = $__require('npm:history@2.1.2/lib/ExecutionEnvironment.js');
    var _DOMUtils = $__require('npm:history@2.1.2/lib/DOMUtils.js');
    var _DOMStateStorage = $__require('npm:history@2.1.2/lib/DOMStateStorage.js');
    var _createDOMHistory = $__require('npm:history@2.1.2/lib/createDOMHistory.js');
    var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);
    function createBrowserHistory() {
      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
      !_ExecutionEnvironment.canUseDOM ? "production" !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;
      var forceRefresh = options.forceRefresh;
      var isSupported = _DOMUtils.supportsHistory();
      var useRefresh = !isSupported || forceRefresh;
      function getCurrentLocation(historyState) {
        try {
          historyState = historyState || window.history.state || {};
        } catch (e) {
          historyState = {};
        }
        var path = _DOMUtils.getWindowPath();
        var _historyState = historyState;
        var key = _historyState.key;
        var state = undefined;
        if (key) {
          state = _DOMStateStorage.readState(key);
        } else {
          state = null;
          key = history.createKey();
          if (isSupported)
            window.history.replaceState(_extends({}, historyState, {key: key}), null);
        }
        var location = _PathUtils.parsePath(path);
        return history.createLocation(_extends({}, location, {state: state}), undefined, key);
      }
      function startPopStateListener(_ref) {
        var transitionTo = _ref.transitionTo;
        function popStateListener(event) {
          if (event.state === undefined)
            return;
          transitionTo(getCurrentLocation(event.state));
        }
        _DOMUtils.addEventListener(window, 'popstate', popStateListener);
        return function() {
          _DOMUtils.removeEventListener(window, 'popstate', popStateListener);
        };
      }
      function finishTransition(location) {
        var basename = location.basename;
        var pathname = location.pathname;
        var search = location.search;
        var hash = location.hash;
        var state = location.state;
        var action = location.action;
        var key = location.key;
        if (action === _Actions.POP)
          return;
        _DOMStateStorage.saveState(key, state);
        var path = (basename || '') + pathname + search + hash;
        var historyState = {key: key};
        if (action === _Actions.PUSH) {
          if (useRefresh) {
            window.location.href = path;
            return false;
          } else {
            window.history.pushState(historyState, null, path);
          }
        } else {
          if (useRefresh) {
            window.location.replace(path);
            return false;
          } else {
            window.history.replaceState(historyState, null, path);
          }
        }
      }
      var history = _createDOMHistory2['default'](_extends({}, options, {
        getCurrentLocation: getCurrentLocation,
        finishTransition: finishTransition,
        saveState: _DOMStateStorage.saveState
      }));
      var listenerCount = 0,
          stopPopStateListener = undefined;
      function listenBefore(listener) {
        if (++listenerCount === 1)
          stopPopStateListener = startPopStateListener(history);
        var unlisten = history.listenBefore(listener);
        return function() {
          unlisten();
          if (--listenerCount === 0)
            stopPopStateListener();
        };
      }
      function listen(listener) {
        if (++listenerCount === 1)
          stopPopStateListener = startPopStateListener(history);
        var unlisten = history.listen(listener);
        return function() {
          unlisten();
          if (--listenerCount === 0)
            stopPopStateListener();
        };
      }
      function registerTransitionHook(hook) {
        if (++listenerCount === 1)
          stopPopStateListener = startPopStateListener(history);
        history.registerTransitionHook(hook);
      }
      function unregisterTransitionHook(hook) {
        history.unregisterTransitionHook(hook);
        if (--listenerCount === 0)
          stopPopStateListener();
      }
      return _extends({}, history, {
        listenBefore: listenBefore,
        listen: listen,
        registerTransitionHook: registerTransitionHook,
        unregisterTransitionHook: unregisterTransitionHook
      });
    }
    exports['default'] = createBrowserHistory;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/browserHistory.js", ["npm:history@2.1.2/lib/createBrowserHistory.js", "npm:react-router@2.6.1/lib/createRouterHistory.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _createBrowserHistory = $__require('npm:history@2.1.2/lib/createBrowserHistory.js');
  var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);
  var _createRouterHistory = $__require('npm:react-router@2.6.1/lib/createRouterHistory.js');
  var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  exports.default = (0, _createRouterHistory2.default)(_createBrowserHistory2.default);
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/DOMStateStorage.js", ["npm:warning@2.1.0.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    exports.saveState = saveState;
    exports.readState = readState;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    var _warning = $__require('npm:warning@2.1.0.js');
    var _warning2 = _interopRequireDefault(_warning);
    var KeyPrefix = '@@History/';
    var QuotaExceededErrors = ['QuotaExceededError', 'QUOTA_EXCEEDED_ERR'];
    var SecurityError = 'SecurityError';
    function createKey(key) {
      return KeyPrefix + key;
    }
    function saveState(key, state) {
      try {
        if (state == null) {
          window.sessionStorage.removeItem(createKey(key));
        } else {
          window.sessionStorage.setItem(createKey(key), JSON.stringify(state));
        }
      } catch (error) {
        if (error.name === SecurityError) {
          "production" !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;
          return;
        }
        if (QuotaExceededErrors.indexOf(error.name) >= 0 && window.sessionStorage.length === 0) {
          "production" !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;
          return;
        }
        throw error;
      }
    }
    function readState(key) {
      var json = undefined;
      try {
        json = window.sessionStorage.getItem(createKey(key));
      } catch (error) {
        if (error.name === SecurityError) {
          "production" !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;
          return null;
        }
      }
      if (json) {
        try {
          return JSON.parse(json);
        } catch (error) {}
      }
      return null;
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/DOMUtils.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.addEventListener = addEventListener;
  exports.removeEventListener = removeEventListener;
  exports.getHashPath = getHashPath;
  exports.replaceHashPath = replaceHashPath;
  exports.getWindowPath = getWindowPath;
  exports.go = go;
  exports.getUserConfirmation = getUserConfirmation;
  exports.supportsHistory = supportsHistory;
  exports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;
  function addEventListener(node, event, listener) {
    if (node.addEventListener) {
      node.addEventListener(event, listener, false);
    } else {
      node.attachEvent('on' + event, listener);
    }
  }
  function removeEventListener(node, event, listener) {
    if (node.removeEventListener) {
      node.removeEventListener(event, listener, false);
    } else {
      node.detachEvent('on' + event, listener);
    }
  }
  function getHashPath() {
    return window.location.href.split('#')[1] || '';
  }
  function replaceHashPath(path) {
    window.location.replace(window.location.pathname + window.location.search + '#' + path);
  }
  function getWindowPath() {
    return window.location.pathname + window.location.search + window.location.hash;
  }
  function go(n) {
    if (n)
      window.history.go(n);
  }
  function getUserConfirmation(message, callback) {
    callback(window.confirm(message));
  }
  function supportsHistory() {
    var ua = navigator.userAgent;
    if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {
      return false;
    }
    return window.history && 'pushState' in window.history;
  }
  function supportsGoWithoutReloadUsingHash() {
    var ua = navigator.userAgent;
    return ua.indexOf('Firefox') === -1;
  }
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/createDOMHistory.js", ["npm:invariant@2.2.1.js", "npm:history@2.1.2/lib/ExecutionEnvironment.js", "npm:history@2.1.2/lib/DOMUtils.js", "npm:history@2.1.2/lib/createHistory.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    var _ExecutionEnvironment = $__require('npm:history@2.1.2/lib/ExecutionEnvironment.js');
    var _DOMUtils = $__require('npm:history@2.1.2/lib/DOMUtils.js');
    var _createHistory = $__require('npm:history@2.1.2/lib/createHistory.js');
    var _createHistory2 = _interopRequireDefault(_createHistory);
    function createDOMHistory(options) {
      var history = _createHistory2['default'](_extends({getUserConfirmation: _DOMUtils.getUserConfirmation}, options, {go: _DOMUtils.go}));
      function listen(listener) {
        !_ExecutionEnvironment.canUseDOM ? "production" !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;
        return history.listen(listener);
      }
      return _extends({}, history, {listen: listen});
    }
    exports['default'] = createDOMHistory;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/createHashHistory.js", ["npm:warning@2.1.0.js", "npm:invariant@2.2.1.js", "npm:history@2.1.2/lib/Actions.js", "npm:history@2.1.2/lib/PathUtils.js", "npm:history@2.1.2/lib/ExecutionEnvironment.js", "npm:history@2.1.2/lib/DOMUtils.js", "npm:history@2.1.2/lib/DOMStateStorage.js", "npm:history@2.1.2/lib/createDOMHistory.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    var _warning = $__require('npm:warning@2.1.0.js');
    var _warning2 = _interopRequireDefault(_warning);
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    var _Actions = $__require('npm:history@2.1.2/lib/Actions.js');
    var _PathUtils = $__require('npm:history@2.1.2/lib/PathUtils.js');
    var _ExecutionEnvironment = $__require('npm:history@2.1.2/lib/ExecutionEnvironment.js');
    var _DOMUtils = $__require('npm:history@2.1.2/lib/DOMUtils.js');
    var _DOMStateStorage = $__require('npm:history@2.1.2/lib/DOMStateStorage.js');
    var _createDOMHistory = $__require('npm:history@2.1.2/lib/createDOMHistory.js');
    var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);
    function isAbsolutePath(path) {
      return typeof path === 'string' && path.charAt(0) === '/';
    }
    function ensureSlash() {
      var path = _DOMUtils.getHashPath();
      if (isAbsolutePath(path))
        return true;
      _DOMUtils.replaceHashPath('/' + path);
      return false;
    }
    function addQueryStringValueToPath(path, key, value) {
      return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);
    }
    function stripQueryStringValueFromPath(path, key) {
      return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');
    }
    function getQueryStringValueFromPath(path, key) {
      var match = path.match(new RegExp('\\?.*?\\b' + key + '=(.+?)\\b'));
      return match && match[1];
    }
    var DefaultQueryKey = '_k';
    function createHashHistory() {
      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
      !_ExecutionEnvironment.canUseDOM ? "production" !== 'production' ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;
      var queryKey = options.queryKey;
      if (queryKey === undefined || !!queryKey)
        queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;
      function getCurrentLocation() {
        var path = _DOMUtils.getHashPath();
        var key = undefined,
            state = undefined;
        if (queryKey) {
          key = getQueryStringValueFromPath(path, queryKey);
          path = stripQueryStringValueFromPath(path, queryKey);
          if (key) {
            state = _DOMStateStorage.readState(key);
          } else {
            state = null;
            key = history.createKey();
            _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));
          }
        } else {
          key = state = null;
        }
        var location = _PathUtils.parsePath(path);
        return history.createLocation(_extends({}, location, {state: state}), undefined, key);
      }
      function startHashChangeListener(_ref) {
        var transitionTo = _ref.transitionTo;
        function hashChangeListener() {
          if (!ensureSlash())
            return;
          transitionTo(getCurrentLocation());
        }
        ensureSlash();
        _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);
        return function() {
          _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);
        };
      }
      function finishTransition(location) {
        var basename = location.basename;
        var pathname = location.pathname;
        var search = location.search;
        var state = location.state;
        var action = location.action;
        var key = location.key;
        if (action === _Actions.POP)
          return;
        var path = (basename || '') + pathname + search;
        if (queryKey) {
          path = addQueryStringValueToPath(path, queryKey, key);
          _DOMStateStorage.saveState(key, state);
        } else {
          location.key = location.state = null;
        }
        var currentHash = _DOMUtils.getHashPath();
        if (action === _Actions.PUSH) {
          if (currentHash !== path) {
            window.location.hash = path;
          } else {
            "production" !== 'production' ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;
          }
        } else if (currentHash !== path) {
          _DOMUtils.replaceHashPath(path);
        }
      }
      var history = _createDOMHistory2['default'](_extends({}, options, {
        getCurrentLocation: getCurrentLocation,
        finishTransition: finishTransition,
        saveState: _DOMStateStorage.saveState
      }));
      var listenerCount = 0,
          stopHashChangeListener = undefined;
      function listenBefore(listener) {
        if (++listenerCount === 1)
          stopHashChangeListener = startHashChangeListener(history);
        var unlisten = history.listenBefore(listener);
        return function() {
          unlisten();
          if (--listenerCount === 0)
            stopHashChangeListener();
        };
      }
      function listen(listener) {
        if (++listenerCount === 1)
          stopHashChangeListener = startHashChangeListener(history);
        var unlisten = history.listen(listener);
        return function() {
          unlisten();
          if (--listenerCount === 0)
            stopHashChangeListener();
        };
      }
      function push(location) {
        "production" !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
        history.push(location);
      }
      function replace(location) {
        "production" !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
        history.replace(location);
      }
      var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();
      function go(n) {
        "production" !== 'production' ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;
        history.go(n);
      }
      function createHref(path) {
        return '#' + history.createHref(path);
      }
      function registerTransitionHook(hook) {
        if (++listenerCount === 1)
          stopHashChangeListener = startHashChangeListener(history);
        history.registerTransitionHook(hook);
      }
      function unregisterTransitionHook(hook) {
        history.unregisterTransitionHook(hook);
        if (--listenerCount === 0)
          stopHashChangeListener();
      }
      function pushState(state, path) {
        "production" !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
        history.pushState(state, path);
      }
      function replaceState(state, path) {
        "production" !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
        history.replaceState(state, path);
      }
      return _extends({}, history, {
        listenBefore: listenBefore,
        listen: listen,
        push: push,
        replace: replace,
        go: go,
        createHref: createHref,
        registerTransitionHook: registerTransitionHook,
        unregisterTransitionHook: unregisterTransitionHook,
        pushState: pushState,
        replaceState: replaceState
      });
    }
    exports['default'] = createHashHistory;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/useRouterHistory.js", ["npm:history@2.1.2/lib/useQueries.js", "npm:history@2.1.2/lib/useBasename.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.default = useRouterHistory;
  var _useQueries = $__require('npm:history@2.1.2/lib/useQueries.js');
  var _useQueries2 = _interopRequireDefault(_useQueries);
  var _useBasename = $__require('npm:history@2.1.2/lib/useBasename.js');
  var _useBasename2 = _interopRequireDefault(_useBasename);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function useRouterHistory(createHistory) {
    return function(options) {
      var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
      history.__v2_compatible__ = true;
      return history;
    };
  }
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/createRouterHistory.js", ["npm:react-router@2.6.1/lib/useRouterHistory.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.default = function(createHistory) {
    var history = void 0;
    if (canUseDOM)
      history = (0, _useRouterHistory2.default)(createHistory)();
    return history;
  };
  var _useRouterHistory = $__require('npm:react-router@2.6.1/lib/useRouterHistory.js');
  var _useRouterHistory2 = _interopRequireDefault(_useRouterHistory);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/hashHistory.js", ["npm:history@2.1.2/lib/createHashHistory.js", "npm:react-router@2.6.1/lib/createRouterHistory.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _createHashHistory = $__require('npm:history@2.1.2/lib/createHashHistory.js');
  var _createHashHistory2 = _interopRequireDefault(_createHashHistory);
  var _createRouterHistory = $__require('npm:react-router@2.6.1/lib/createRouterHistory.js');
  var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  exports.default = (0, _createRouterHistory2.default)(_createHashHistory2.default);
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:strict-uri-encode@1.1.0/index.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = function(str) {
    return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {
      return '%' + c.charCodeAt(0).toString(16).toUpperCase();
    });
  };
  return module.exports;
});

System.registerDynamic("npm:strict-uri-encode@1.1.0.js", ["npm:strict-uri-encode@1.1.0/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:strict-uri-encode@1.1.0/index.js');
  return module.exports;
});

System.registerDynamic("npm:query-string@3.0.3/index.js", ["npm:strict-uri-encode@1.1.0.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var strictUriEncode = $__require('npm:strict-uri-encode@1.1.0.js');
  exports.extract = function(str) {
    return str.split('?')[1] || '';
  };
  exports.parse = function(str) {
    if (typeof str !== 'string') {
      return {};
    }
    str = str.trim().replace(/^(\?|#|&)/, '');
    if (!str) {
      return {};
    }
    return str.split('&').reduce(function(ret, param) {
      var parts = param.replace(/\+/g, ' ').split('=');
      var key = parts.shift();
      var val = parts.length > 0 ? parts.join('=') : undefined;
      key = decodeURIComponent(key);
      val = val === undefined ? null : decodeURIComponent(val);
      if (!ret.hasOwnProperty(key)) {
        ret[key] = val;
      } else if (Array.isArray(ret[key])) {
        ret[key].push(val);
      } else {
        ret[key] = [ret[key], val];
      }
      return ret;
    }, {});
  };
  exports.stringify = function(obj) {
    return obj ? Object.keys(obj).sort().map(function(key) {
      var val = obj[key];
      if (val === undefined) {
        return '';
      }
      if (val === null) {
        return key;
      }
      if (Array.isArray(val)) {
        return val.slice().sort().map(function(val2) {
          return strictUriEncode(key) + '=' + strictUriEncode(val2);
        }).join('&');
      }
      return strictUriEncode(key) + '=' + strictUriEncode(val);
    }).filter(function(x) {
      return x.length > 0;
    }).join('&') : '';
  };
  return module.exports;
});

System.registerDynamic("npm:query-string@3.0.3.js", ["npm:query-string@3.0.3/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:query-string@3.0.3/index.js');
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/useQueries.js", ["npm:warning@2.1.0.js", "npm:query-string@3.0.3.js", "npm:history@2.1.2/lib/runTransitionHook.js", "npm:history@2.1.2/lib/PathUtils.js", "npm:history@2.1.2/lib/deprecate.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    var _warning = $__require('npm:warning@2.1.0.js');
    var _warning2 = _interopRequireDefault(_warning);
    var _queryString = $__require('npm:query-string@3.0.3.js');
    var _runTransitionHook = $__require('npm:history@2.1.2/lib/runTransitionHook.js');
    var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
    var _PathUtils = $__require('npm:history@2.1.2/lib/PathUtils.js');
    var _deprecate = $__require('npm:history@2.1.2/lib/deprecate.js');
    var _deprecate2 = _interopRequireDefault(_deprecate);
    var SEARCH_BASE_KEY = '$searchBase';
    function defaultStringifyQuery(query) {
      return _queryString.stringify(query).replace(/%20/g, '+');
    }
    var defaultParseQueryString = _queryString.parse;
    function isNestedObject(object) {
      for (var p in object) {
        if (Object.prototype.hasOwnProperty.call(object, p) && typeof object[p] === 'object' && !Array.isArray(object[p]) && object[p] !== null)
          return true;
      }
      return false;
    }
    function useQueries(createHistory) {
      return function() {
        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
        var history = createHistory(options);
        var stringifyQuery = options.stringifyQuery;
        var parseQueryString = options.parseQueryString;
        if (typeof stringifyQuery !== 'function')
          stringifyQuery = defaultStringifyQuery;
        if (typeof parseQueryString !== 'function')
          parseQueryString = defaultParseQueryString;
        function addQuery(location) {
          if (location.query == null) {
            var search = location.search;
            location.query = parseQueryString(search.substring(1));
            location[SEARCH_BASE_KEY] = {
              search: search,
              searchBase: ''
            };
          }
          return location;
        }
        function appendQuery(location, query) {
          var _extends2;
          var searchBaseSpec = location[SEARCH_BASE_KEY];
          var queryString = query ? stringifyQuery(query) : '';
          if (!searchBaseSpec && !queryString) {
            return location;
          }
          "production" !== 'production' ? _warning2['default'](stringifyQuery !== defaultStringifyQuery || !isNestedObject(query), 'useQueries does not stringify nested query objects by default; ' + 'use a custom stringifyQuery function') : undefined;
          if (typeof location === 'string')
            location = _PathUtils.parsePath(location);
          var searchBase = undefined;
          if (searchBaseSpec && location.search === searchBaseSpec.search) {
            searchBase = searchBaseSpec.searchBase;
          } else {
            searchBase = location.search || '';
          }
          var search = searchBase;
          if (queryString) {
            search += (search ? '&' : '?') + queryString;
          }
          return _extends({}, location, (_extends2 = {search: search}, _extends2[SEARCH_BASE_KEY] = {
            search: search,
            searchBase: searchBase
          }, _extends2));
        }
        function listenBefore(hook) {
          return history.listenBefore(function(location, callback) {
            _runTransitionHook2['default'](hook, addQuery(location), callback);
          });
        }
        function listen(listener) {
          return history.listen(function(location) {
            listener(addQuery(location));
          });
        }
        function push(location) {
          history.push(appendQuery(location, location.query));
        }
        function replace(location) {
          history.replace(appendQuery(location, location.query));
        }
        function createPath(location, query) {
          "production" !== 'production' ? _warning2['default'](!query, 'the query argument to createPath is deprecated; use a location descriptor instead') : undefined;
          return history.createPath(appendQuery(location, query || location.query));
        }
        function createHref(location, query) {
          "production" !== 'production' ? _warning2['default'](!query, 'the query argument to createHref is deprecated; use a location descriptor instead') : undefined;
          return history.createHref(appendQuery(location, query || location.query));
        }
        function createLocation(location) {
          for (var _len = arguments.length,
              args = Array(_len > 1 ? _len - 1 : 0),
              _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }
          var fullLocation = history.createLocation.apply(history, [appendQuery(location, location.query)].concat(args));
          if (location.query) {
            fullLocation.query = location.query;
          }
          return addQuery(fullLocation);
        }
        function pushState(state, path, query) {
          if (typeof path === 'string')
            path = _PathUtils.parsePath(path);
          push(_extends({state: state}, path, {query: query}));
        }
        function replaceState(state, path, query) {
          if (typeof path === 'string')
            path = _PathUtils.parsePath(path);
          replace(_extends({state: state}, path, {query: query}));
        }
        return _extends({}, history, {
          listenBefore: listenBefore,
          listen: listen,
          push: push,
          replace: replace,
          createPath: createPath,
          createHref: createHref,
          createLocation: createLocation,
          pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
          replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
        });
      };
    }
    exports['default'] = useQueries;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/ExecutionEnvironment.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
  exports.canUseDOM = canUseDOM;
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/useBasename.js", ["npm:warning@2.1.0.js", "npm:history@2.1.2/lib/ExecutionEnvironment.js", "npm:history@2.1.2/lib/PathUtils.js", "npm:history@2.1.2/lib/runTransitionHook.js", "npm:history@2.1.2/lib/deprecate.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    var _warning = $__require('npm:warning@2.1.0.js');
    var _warning2 = _interopRequireDefault(_warning);
    var _ExecutionEnvironment = $__require('npm:history@2.1.2/lib/ExecutionEnvironment.js');
    var _PathUtils = $__require('npm:history@2.1.2/lib/PathUtils.js');
    var _runTransitionHook = $__require('npm:history@2.1.2/lib/runTransitionHook.js');
    var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
    var _deprecate = $__require('npm:history@2.1.2/lib/deprecate.js');
    var _deprecate2 = _interopRequireDefault(_deprecate);
    function useBasename(createHistory) {
      return function() {
        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
        var history = createHistory(options);
        var basename = options.basename;
        var checkedBaseHref = false;
        function checkBaseHref() {
          if (checkedBaseHref) {
            return;
          }
          if (basename == null && _ExecutionEnvironment.canUseDOM) {
            var base = document.getElementsByTagName('base')[0];
            var baseHref = base && base.getAttribute('href');
            if (baseHref != null) {
              basename = baseHref;
              "production" !== 'production' ? _warning2['default'](false, 'Automatically setting basename using <base href> is deprecated and will ' + 'be removed in the next major release. The semantics of <base href> are ' + 'subtly different from basename. Please pass the basename explicitly in ' + 'the options to createHistory') : undefined;
            }
          }
          checkedBaseHref = true;
        }
        function addBasename(location) {
          checkBaseHref();
          if (basename && location.basename == null) {
            if (location.pathname.indexOf(basename) === 0) {
              location.pathname = location.pathname.substring(basename.length);
              location.basename = basename;
              if (location.pathname === '')
                location.pathname = '/';
            } else {
              location.basename = '';
            }
          }
          return location;
        }
        function prependBasename(location) {
          checkBaseHref();
          if (!basename)
            return location;
          if (typeof location === 'string')
            location = _PathUtils.parsePath(location);
          var pname = location.pathname;
          var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';
          var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;
          var pathname = normalizedBasename + normalizedPathname;
          return _extends({}, location, {pathname: pathname});
        }
        function listenBefore(hook) {
          return history.listenBefore(function(location, callback) {
            _runTransitionHook2['default'](hook, addBasename(location), callback);
          });
        }
        function listen(listener) {
          return history.listen(function(location) {
            listener(addBasename(location));
          });
        }
        function push(location) {
          history.push(prependBasename(location));
        }
        function replace(location) {
          history.replace(prependBasename(location));
        }
        function createPath(location) {
          return history.createPath(prependBasename(location));
        }
        function createHref(location) {
          return history.createHref(prependBasename(location));
        }
        function createLocation(location) {
          for (var _len = arguments.length,
              args = Array(_len > 1 ? _len - 1 : 0),
              _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }
          return addBasename(history.createLocation.apply(history, [prependBasename(location)].concat(args)));
        }
        function pushState(state, path) {
          if (typeof path === 'string')
            path = _PathUtils.parsePath(path);
          push(_extends({state: state}, path));
        }
        function replaceState(state, path) {
          if (typeof path === 'string')
            path = _PathUtils.parsePath(path);
          replace(_extends({state: state}, path));
        }
        return _extends({}, history, {
          listenBefore: listenBefore,
          listen: listen,
          push: push,
          replace: replace,
          createPath: createPath,
          createHref: createHref,
          createLocation: createLocation,
          pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
          replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
        });
      };
    }
    exports['default'] = useBasename;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:invariant@2.2.1/browser.js", ["github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var invariant = function(condition, format, a, b, c, d, e, f) {
      if ("production" !== 'production') {
        if (format === undefined) {
          throw new Error('invariant requires an error message argument');
        }
      }
      if (!condition) {
        var error;
        if (format === undefined) {
          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format.replace(/%s/g, function() {
            return args[argIndex++];
          }));
          error.name = 'Invariant Violation';
        }
        error.framesToPop = 1;
        throw error;
      }
    };
    module.exports = invariant;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:invariant@2.2.1.js", ["npm:invariant@2.2.1/browser.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:invariant@2.2.1/browser.js');
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/AsyncUtils.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _slice = Array.prototype.slice;
  exports.loopAsync = loopAsync;
  function loopAsync(turns, work, callback) {
    var currentTurn = 0,
        isDone = false;
    var sync = false,
        hasNext = false,
        doneArgs = undefined;
    function done() {
      isDone = true;
      if (sync) {
        doneArgs = [].concat(_slice.call(arguments));
        return;
      }
      callback.apply(this, arguments);
    }
    function next() {
      if (isDone) {
        return;
      }
      hasNext = true;
      if (sync) {
        return;
      }
      sync = true;
      while (!isDone && currentTurn < turns && hasNext) {
        hasNext = false;
        work.call(this, currentTurn++, next, done);
      }
      sync = false;
      if (isDone) {
        callback.apply(this, doneArgs);
        return;
      }
      if (currentTurn >= turns && hasNext) {
        isDone = true;
        callback();
      }
    }
    next();
  }
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/Actions.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var PUSH = 'PUSH';
  exports.PUSH = PUSH;
  var REPLACE = 'REPLACE';
  exports.REPLACE = REPLACE;
  var POP = 'POP';
  exports.POP = POP;
  exports['default'] = {
    PUSH: PUSH,
    REPLACE: REPLACE,
    POP: POP
  };
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/PathUtils.js", ["npm:warning@2.1.0.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    exports.extractPath = extractPath;
    exports.parsePath = parsePath;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    var _warning = $__require('npm:warning@2.1.0.js');
    var _warning2 = _interopRequireDefault(_warning);
    function extractPath(string) {
      var match = string.match(/^https?:\/\/[^\/]*/);
      if (match == null)
        return string;
      return string.substring(match[0].length);
    }
    function parsePath(path) {
      var pathname = extractPath(path);
      var search = '';
      var hash = '';
      "production" !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like "%s"', path) : undefined;
      var hashIndex = pathname.indexOf('#');
      if (hashIndex !== -1) {
        hash = pathname.substring(hashIndex);
        pathname = pathname.substring(0, hashIndex);
      }
      var searchIndex = pathname.indexOf('?');
      if (searchIndex !== -1) {
        search = pathname.substring(searchIndex);
        pathname = pathname.substring(0, searchIndex);
      }
      if (pathname === '')
        pathname = '/';
      return {
        pathname: pathname,
        search: search,
        hash: hash
      };
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/createLocation.js", ["npm:warning@2.1.0.js", "npm:history@2.1.2/lib/Actions.js", "npm:history@2.1.2/lib/PathUtils.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    var _warning = $__require('npm:warning@2.1.0.js');
    var _warning2 = _interopRequireDefault(_warning);
    var _Actions = $__require('npm:history@2.1.2/lib/Actions.js');
    var _PathUtils = $__require('npm:history@2.1.2/lib/PathUtils.js');
    function createLocation() {
      var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];
      var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];
      var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
      var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];
      if (typeof location === 'string')
        location = _PathUtils.parsePath(location);
      if (typeof action === 'object') {
        "production" !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;
        location = _extends({}, location, {state: action});
        action = key || _Actions.POP;
        key = _fourthArg;
      }
      var pathname = location.pathname || '/';
      var search = location.search || '';
      var hash = location.hash || '';
      var state = location.state || null;
      return {
        pathname: pathname,
        search: search,
        hash: hash,
        state: state,
        action: action,
        key: key
      };
    }
    exports['default'] = createLocation;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/runTransitionHook.js", ["npm:warning@2.1.0.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    var _warning = $__require('npm:warning@2.1.0.js');
    var _warning2 = _interopRequireDefault(_warning);
    function runTransitionHook(hook, location, callback) {
      var result = hook(location, callback);
      if (hook.length < 2) {
        callback(result);
      } else {
        "production" !== 'production' ? _warning2['default'](result === undefined, 'You should not "return" in a transition hook with a callback argument; call the callback instead') : undefined;
      }
    }
    exports['default'] = runTransitionHook;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/deprecate.js", ["npm:warning@2.1.0.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    var _warning = $__require('npm:warning@2.1.0.js');
    var _warning2 = _interopRequireDefault(_warning);
    function deprecate(fn, message) {
      return function() {
        "production" !== 'production' ? _warning2['default'](false, '[history] ' + message) : undefined;
        return fn.apply(this, arguments);
      };
    }
    exports['default'] = deprecate;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/createHistory.js", ["npm:warning@2.1.0.js", "npm:deep-equal@1.0.1.js", "npm:history@2.1.2/lib/PathUtils.js", "npm:history@2.1.2/lib/AsyncUtils.js", "npm:history@2.1.2/lib/Actions.js", "npm:history@2.1.2/lib/createLocation.js", "npm:history@2.1.2/lib/runTransitionHook.js", "npm:history@2.1.2/lib/deprecate.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    var _warning = $__require('npm:warning@2.1.0.js');
    var _warning2 = _interopRequireDefault(_warning);
    var _deepEqual = $__require('npm:deep-equal@1.0.1.js');
    var _deepEqual2 = _interopRequireDefault(_deepEqual);
    var _PathUtils = $__require('npm:history@2.1.2/lib/PathUtils.js');
    var _AsyncUtils = $__require('npm:history@2.1.2/lib/AsyncUtils.js');
    var _Actions = $__require('npm:history@2.1.2/lib/Actions.js');
    var _createLocation2 = $__require('npm:history@2.1.2/lib/createLocation.js');
    var _createLocation3 = _interopRequireDefault(_createLocation2);
    var _runTransitionHook = $__require('npm:history@2.1.2/lib/runTransitionHook.js');
    var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
    var _deprecate = $__require('npm:history@2.1.2/lib/deprecate.js');
    var _deprecate2 = _interopRequireDefault(_deprecate);
    function createRandomKey(length) {
      return Math.random().toString(36).substr(2, length);
    }
    function locationsAreEqual(a, b) {
      return a.pathname === b.pathname && a.search === b.search && a.key === b.key && _deepEqual2['default'](a.state, b.state);
    }
    var DefaultKeyLength = 6;
    function createHistory() {
      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
      var getCurrentLocation = options.getCurrentLocation;
      var finishTransition = options.finishTransition;
      var saveState = options.saveState;
      var go = options.go;
      var getUserConfirmation = options.getUserConfirmation;
      var keyLength = options.keyLength;
      if (typeof keyLength !== 'number')
        keyLength = DefaultKeyLength;
      var transitionHooks = [];
      function listenBefore(hook) {
        transitionHooks.push(hook);
        return function() {
          transitionHooks = transitionHooks.filter(function(item) {
            return item !== hook;
          });
        };
      }
      var allKeys = [];
      var changeListeners = [];
      var location = undefined;
      function getCurrent() {
        if (pendingLocation && pendingLocation.action === _Actions.POP) {
          return allKeys.indexOf(pendingLocation.key);
        } else if (location) {
          return allKeys.indexOf(location.key);
        } else {
          return -1;
        }
      }
      function updateLocation(newLocation) {
        var current = getCurrent();
        location = newLocation;
        if (location.action === _Actions.PUSH) {
          allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);
        } else if (location.action === _Actions.REPLACE) {
          allKeys[current] = location.key;
        }
        changeListeners.forEach(function(listener) {
          listener(location);
        });
      }
      function listen(listener) {
        changeListeners.push(listener);
        if (location) {
          listener(location);
        } else {
          var _location = getCurrentLocation();
          allKeys = [_location.key];
          updateLocation(_location);
        }
        return function() {
          changeListeners = changeListeners.filter(function(item) {
            return item !== listener;
          });
        };
      }
      function confirmTransitionTo(location, callback) {
        _AsyncUtils.loopAsync(transitionHooks.length, function(index, next, done) {
          _runTransitionHook2['default'](transitionHooks[index], location, function(result) {
            if (result != null) {
              done(result);
            } else {
              next();
            }
          });
        }, function(message) {
          if (getUserConfirmation && typeof message === 'string') {
            getUserConfirmation(message, function(ok) {
              callback(ok !== false);
            });
          } else {
            callback(message !== false);
          }
        });
      }
      var pendingLocation = undefined;
      function transitionTo(nextLocation) {
        if (location && locationsAreEqual(location, nextLocation))
          return;
        pendingLocation = nextLocation;
        confirmTransitionTo(nextLocation, function(ok) {
          if (pendingLocation !== nextLocation)
            return;
          if (ok) {
            if (nextLocation.action === _Actions.PUSH) {
              var prevPath = createPath(location);
              var nextPath = createPath(nextLocation);
              if (nextPath === prevPath && _deepEqual2['default'](location.state, nextLocation.state))
                nextLocation.action = _Actions.REPLACE;
            }
            if (finishTransition(nextLocation) !== false)
              updateLocation(nextLocation);
          } else if (location && nextLocation.action === _Actions.POP) {
            var prevIndex = allKeys.indexOf(location.key);
            var nextIndex = allKeys.indexOf(nextLocation.key);
            if (prevIndex !== -1 && nextIndex !== -1)
              go(prevIndex - nextIndex);
          }
        });
      }
      function push(location) {
        transitionTo(createLocation(location, _Actions.PUSH, createKey()));
      }
      function replace(location) {
        transitionTo(createLocation(location, _Actions.REPLACE, createKey()));
      }
      function goBack() {
        go(-1);
      }
      function goForward() {
        go(1);
      }
      function createKey() {
        return createRandomKey(keyLength);
      }
      function createPath(location) {
        if (location == null || typeof location === 'string')
          return location;
        var pathname = location.pathname;
        var search = location.search;
        var hash = location.hash;
        var result = pathname;
        if (search)
          result += search;
        if (hash)
          result += hash;
        return result;
      }
      function createHref(location) {
        return createPath(location);
      }
      function createLocation(location, action) {
        var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];
        if (typeof action === 'object') {
          "production" !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to history.createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;
          if (typeof location === 'string')
            location = _PathUtils.parsePath(location);
          location = _extends({}, location, {state: action});
          action = key;
          key = arguments[3] || createKey();
        }
        return _createLocation3['default'](location, action, key);
      }
      function setState(state) {
        if (location) {
          updateLocationState(location, state);
          updateLocation(location);
        } else {
          updateLocationState(getCurrentLocation(), state);
        }
      }
      function updateLocationState(location, state) {
        location.state = _extends({}, location.state, state);
        saveState(location.key, location.state);
      }
      function registerTransitionHook(hook) {
        if (transitionHooks.indexOf(hook) === -1)
          transitionHooks.push(hook);
      }
      function unregisterTransitionHook(hook) {
        transitionHooks = transitionHooks.filter(function(item) {
          return item !== hook;
        });
      }
      function pushState(state, path) {
        if (typeof path === 'string')
          path = _PathUtils.parsePath(path);
        push(_extends({state: state}, path));
      }
      function replaceState(state, path) {
        if (typeof path === 'string')
          path = _PathUtils.parsePath(path);
        replace(_extends({state: state}, path));
      }
      return {
        listenBefore: listenBefore,
        listen: listen,
        transitionTo: transitionTo,
        push: push,
        replace: replace,
        go: go,
        goBack: goBack,
        goForward: goForward,
        createKey: createKey,
        createPath: createPath,
        createHref: createHref,
        createLocation: createLocation,
        setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),
        registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),
        unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),
        pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
        replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
      };
    }
    exports['default'] = createHistory;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:history@2.1.2/lib/createMemoryHistory.js", ["npm:warning@2.1.0.js", "npm:invariant@2.2.1.js", "npm:history@2.1.2/lib/PathUtils.js", "npm:history@2.1.2/lib/Actions.js", "npm:history@2.1.2/lib/createHistory.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    var _warning = $__require('npm:warning@2.1.0.js');
    var _warning2 = _interopRequireDefault(_warning);
    var _invariant = $__require('npm:invariant@2.2.1.js');
    var _invariant2 = _interopRequireDefault(_invariant);
    var _PathUtils = $__require('npm:history@2.1.2/lib/PathUtils.js');
    var _Actions = $__require('npm:history@2.1.2/lib/Actions.js');
    var _createHistory = $__require('npm:history@2.1.2/lib/createHistory.js');
    var _createHistory2 = _interopRequireDefault(_createHistory);
    function createStateStorage(entries) {
      return entries.filter(function(entry) {
        return entry.state;
      }).reduce(function(memo, entry) {
        memo[entry.key] = entry.state;
        return memo;
      }, {});
    }
    function createMemoryHistory() {
      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
      if (Array.isArray(options)) {
        options = {entries: options};
      } else if (typeof options === 'string') {
        options = {entries: [options]};
      }
      var history = _createHistory2['default'](_extends({}, options, {
        getCurrentLocation: getCurrentLocation,
        finishTransition: finishTransition,
        saveState: saveState,
        go: go
      }));
      var _options = options;
      var entries = _options.entries;
      var current = _options.current;
      if (typeof entries === 'string') {
        entries = [entries];
      } else if (!Array.isArray(entries)) {
        entries = ['/'];
      }
      entries = entries.map(function(entry) {
        var key = history.createKey();
        if (typeof entry === 'string')
          return {
            pathname: entry,
            key: key
          };
        if (typeof entry === 'object' && entry)
          return _extends({}, entry, {key: key});
        !false ? "production" !== 'production' ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;
      });
      if (current == null) {
        current = entries.length - 1;
      } else {
        !(current >= 0 && current < entries.length) ? "production" !== 'production' ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;
      }
      var storage = createStateStorage(entries);
      function saveState(key, state) {
        storage[key] = state;
      }
      function readState(key) {
        return storage[key];
      }
      function getCurrentLocation() {
        var entry = entries[current];
        var basename = entry.basename;
        var pathname = entry.pathname;
        var search = entry.search;
        var path = (basename || '') + pathname + (search || '');
        var key = undefined,
            state = undefined;
        if (entry.key) {
          key = entry.key;
          state = readState(key);
        } else {
          key = history.createKey();
          state = null;
          entry.key = key;
        }
        var location = _PathUtils.parsePath(path);
        return history.createLocation(_extends({}, location, {state: state}), undefined, key);
      }
      function canGo(n) {
        var index = current + n;
        return index >= 0 && index < entries.length;
      }
      function go(n) {
        if (n) {
          if (!canGo(n)) {
            "production" !== 'production' ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;
            return;
          }
          current += n;
          var currentLocation = getCurrentLocation();
          history.transitionTo(_extends({}, currentLocation, {action: _Actions.POP}));
        }
      }
      function finishTransition(location) {
        switch (location.action) {
          case _Actions.PUSH:
            current += 1;
            if (current < entries.length)
              entries.splice(current);
            entries.push(location);
            saveState(location.key, location.state);
            break;
          case _Actions.REPLACE:
            entries[current] = location;
            saveState(location.key, location.state);
            break;
        }
      }
      return history;
    }
    exports['default'] = createMemoryHistory;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/createMemoryHistory.js", ["npm:history@2.1.2/lib/useQueries.js", "npm:history@2.1.2/lib/useBasename.js", "npm:history@2.1.2/lib/createMemoryHistory.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.default = createMemoryHistory;
  var _useQueries = $__require('npm:history@2.1.2/lib/useQueries.js');
  var _useQueries2 = _interopRequireDefault(_useQueries);
  var _useBasename = $__require('npm:history@2.1.2/lib/useBasename.js');
  var _useBasename2 = _interopRequireDefault(_useBasename);
  var _createMemoryHistory = $__require('npm:history@2.1.2/lib/createMemoryHistory.js');
  var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function createMemoryHistory(options) {
    var memoryHistory = (0, _createMemoryHistory2.default)(options);
    var createHistory = function createHistory() {
      return memoryHistory;
    };
    var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
    history.__v2_compatible__ = true;
    return history;
  }
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1/lib/index.js", ["npm:react-router@2.6.1/lib/RouteUtils.js", "npm:react-router@2.6.1/lib/PropTypes.js", "npm:react-router@2.6.1/lib/PatternUtils.js", "npm:react-router@2.6.1/lib/Router.js", "npm:react-router@2.6.1/lib/Link.js", "npm:react-router@2.6.1/lib/IndexLink.js", "npm:react-router@2.6.1/lib/withRouter.js", "npm:react-router@2.6.1/lib/IndexRedirect.js", "npm:react-router@2.6.1/lib/IndexRoute.js", "npm:react-router@2.6.1/lib/Redirect.js", "npm:react-router@2.6.1/lib/Route.js", "npm:react-router@2.6.1/lib/History.js", "npm:react-router@2.6.1/lib/Lifecycle.js", "npm:react-router@2.6.1/lib/RouteContext.js", "npm:react-router@2.6.1/lib/useRoutes.js", "npm:react-router@2.6.1/lib/RouterContext.js", "npm:react-router@2.6.1/lib/RoutingContext.js", "npm:react-router@2.6.1/lib/match.js", "npm:react-router@2.6.1/lib/useRouterHistory.js", "npm:react-router@2.6.1/lib/applyRouterMiddleware.js", "npm:react-router@2.6.1/lib/browserHistory.js", "npm:react-router@2.6.1/lib/hashHistory.js", "npm:react-router@2.6.1/lib/createMemoryHistory.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.createMemoryHistory = exports.hashHistory = exports.browserHistory = exports.applyRouterMiddleware = exports.formatPattern = exports.useRouterHistory = exports.match = exports.routerShape = exports.locationShape = exports.PropTypes = exports.RoutingContext = exports.RouterContext = exports.createRoutes = exports.useRoutes = exports.RouteContext = exports.Lifecycle = exports.History = exports.Route = exports.Redirect = exports.IndexRoute = exports.IndexRedirect = exports.withRouter = exports.IndexLink = exports.Link = exports.Router = undefined;
  var _RouteUtils = $__require('npm:react-router@2.6.1/lib/RouteUtils.js');
  Object.defineProperty(exports, 'createRoutes', {
    enumerable: true,
    get: function get() {
      return _RouteUtils.createRoutes;
    }
  });
  var _PropTypes2 = $__require('npm:react-router@2.6.1/lib/PropTypes.js');
  Object.defineProperty(exports, 'locationShape', {
    enumerable: true,
    get: function get() {
      return _PropTypes2.locationShape;
    }
  });
  Object.defineProperty(exports, 'routerShape', {
    enumerable: true,
    get: function get() {
      return _PropTypes2.routerShape;
    }
  });
  var _PatternUtils = $__require('npm:react-router@2.6.1/lib/PatternUtils.js');
  Object.defineProperty(exports, 'formatPattern', {
    enumerable: true,
    get: function get() {
      return _PatternUtils.formatPattern;
    }
  });
  var _Router2 = $__require('npm:react-router@2.6.1/lib/Router.js');
  var _Router3 = _interopRequireDefault(_Router2);
  var _Link2 = $__require('npm:react-router@2.6.1/lib/Link.js');
  var _Link3 = _interopRequireDefault(_Link2);
  var _IndexLink2 = $__require('npm:react-router@2.6.1/lib/IndexLink.js');
  var _IndexLink3 = _interopRequireDefault(_IndexLink2);
  var _withRouter2 = $__require('npm:react-router@2.6.1/lib/withRouter.js');
  var _withRouter3 = _interopRequireDefault(_withRouter2);
  var _IndexRedirect2 = $__require('npm:react-router@2.6.1/lib/IndexRedirect.js');
  var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);
  var _IndexRoute2 = $__require('npm:react-router@2.6.1/lib/IndexRoute.js');
  var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);
  var _Redirect2 = $__require('npm:react-router@2.6.1/lib/Redirect.js');
  var _Redirect3 = _interopRequireDefault(_Redirect2);
  var _Route2 = $__require('npm:react-router@2.6.1/lib/Route.js');
  var _Route3 = _interopRequireDefault(_Route2);
  var _History2 = $__require('npm:react-router@2.6.1/lib/History.js');
  var _History3 = _interopRequireDefault(_History2);
  var _Lifecycle2 = $__require('npm:react-router@2.6.1/lib/Lifecycle.js');
  var _Lifecycle3 = _interopRequireDefault(_Lifecycle2);
  var _RouteContext2 = $__require('npm:react-router@2.6.1/lib/RouteContext.js');
  var _RouteContext3 = _interopRequireDefault(_RouteContext2);
  var _useRoutes2 = $__require('npm:react-router@2.6.1/lib/useRoutes.js');
  var _useRoutes3 = _interopRequireDefault(_useRoutes2);
  var _RouterContext2 = $__require('npm:react-router@2.6.1/lib/RouterContext.js');
  var _RouterContext3 = _interopRequireDefault(_RouterContext2);
  var _RoutingContext2 = $__require('npm:react-router@2.6.1/lib/RoutingContext.js');
  var _RoutingContext3 = _interopRequireDefault(_RoutingContext2);
  var _PropTypes3 = _interopRequireDefault(_PropTypes2);
  var _match2 = $__require('npm:react-router@2.6.1/lib/match.js');
  var _match3 = _interopRequireDefault(_match2);
  var _useRouterHistory2 = $__require('npm:react-router@2.6.1/lib/useRouterHistory.js');
  var _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);
  var _applyRouterMiddleware2 = $__require('npm:react-router@2.6.1/lib/applyRouterMiddleware.js');
  var _applyRouterMiddleware3 = _interopRequireDefault(_applyRouterMiddleware2);
  var _browserHistory2 = $__require('npm:react-router@2.6.1/lib/browserHistory.js');
  var _browserHistory3 = _interopRequireDefault(_browserHistory2);
  var _hashHistory2 = $__require('npm:react-router@2.6.1/lib/hashHistory.js');
  var _hashHistory3 = _interopRequireDefault(_hashHistory2);
  var _createMemoryHistory2 = $__require('npm:react-router@2.6.1/lib/createMemoryHistory.js');
  var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  exports.Router = _Router3.default;
  exports.Link = _Link3.default;
  exports.IndexLink = _IndexLink3.default;
  exports.withRouter = _withRouter3.default;
  exports.IndexRedirect = _IndexRedirect3.default;
  exports.IndexRoute = _IndexRoute3.default;
  exports.Redirect = _Redirect3.default;
  exports.Route = _Route3.default;
  exports.History = _History3.default;
  exports.Lifecycle = _Lifecycle3.default;
  exports.RouteContext = _RouteContext3.default;
  exports.useRoutes = _useRoutes3.default;
  exports.RouterContext = _RouterContext3.default;
  exports.RoutingContext = _RoutingContext3.default;
  exports.PropTypes = _PropTypes3.default;
  exports.match = _match3.default;
  exports.useRouterHistory = _useRouterHistory3.default;
  exports.applyRouterMiddleware = _applyRouterMiddleware3.default;
  exports.browserHistory = _browserHistory3.default;
  exports.hashHistory = _hashHistory3.default;
  exports.createMemoryHistory = _createMemoryHistory3.default;
  return module.exports;
});

System.registerDynamic("npm:react-router@2.6.1.js", ["npm:react-router@2.6.1/lib/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react-router@2.6.1/lib/index.js');
  return module.exports;
});

System.register('app/list.js', ['npm:babel-runtime@5.8.38/helpers/get.js', 'npm:babel-runtime@5.8.38/helpers/inherits.js', 'npm:babel-runtime@5.8.38/helpers/create-class.js', 'npm:babel-runtime@5.8.38/helpers/class-call-check.js', 'npm:react@15.3.0.js', 'app/api.js'], function (_export) {
  var _get, _inherits, _createClass, _classCallCheck, React, get, List;

  return {
    setters: [function (_npmBabelRuntime5838HelpersGetJs) {
      _get = _npmBabelRuntime5838HelpersGetJs['default'];
    }, function (_npmBabelRuntime5838HelpersInheritsJs) {
      _inherits = _npmBabelRuntime5838HelpersInheritsJs['default'];
    }, function (_npmBabelRuntime5838HelpersCreateClassJs) {
      _createClass = _npmBabelRuntime5838HelpersCreateClassJs['default'];
    }, function (_npmBabelRuntime5838HelpersClassCallCheckJs) {
      _classCallCheck = _npmBabelRuntime5838HelpersClassCallCheckJs['default'];
    }, function (_npmReact1530Js) {
      React = _npmReact1530Js['default'];
    }, function (_appApiJs) {
      get = _appApiJs.get;
    }],
    execute: function () {
      'use strict';

      List = (function (_React$Component) {
        _inherits(List, _React$Component);

        function List(props) {
          _classCallCheck(this, List);

          _get(Object.getPrototypeOf(List.prototype), 'constructor', this).call(this, props);
          this.state = { data: [] };
        }

        _createClass(List, [{
          key: 'componentDidMount',
          value: function componentDidMount() {
            var _this = this;

            get(this.props.which).then(function (data) {
              _this.setState({ data: data });
            });
          }
        }, {
          key: 'render',
          value: function render() {
            var items = this.state.data.map(function (item) {
              return React.createElement(
                'li',
                { key: item.id },
                item.name
              );
            });
            return React.createElement(
              'div',
              { className: 'container' },
              React.createElement(
                'h2',
                null,
                this.props.which
              ),
              React.createElement(
                'ul',
                null,
                items
              )
            );
          }
        }]);

        return List;
      })(React.Component);

      _export('default', List);
    }
  };
});
System.register('app/team.js', ['npm:babel-runtime@5.8.38/helpers/get.js', 'npm:babel-runtime@5.8.38/helpers/inherits.js', 'npm:babel-runtime@5.8.38/helpers/create-class.js', 'npm:babel-runtime@5.8.38/helpers/class-call-check.js', 'npm:react@15.3.0.js', 'app/list.js'], function (_export) {
  var _get, _inherits, _createClass, _classCallCheck, React, List, Team;

  return {
    setters: [function (_npmBabelRuntime5838HelpersGetJs) {
      _get = _npmBabelRuntime5838HelpersGetJs['default'];
    }, function (_npmBabelRuntime5838HelpersInheritsJs) {
      _inherits = _npmBabelRuntime5838HelpersInheritsJs['default'];
    }, function (_npmBabelRuntime5838HelpersCreateClassJs) {
      _createClass = _npmBabelRuntime5838HelpersCreateClassJs['default'];
    }, function (_npmBabelRuntime5838HelpersClassCallCheckJs) {
      _classCallCheck = _npmBabelRuntime5838HelpersClassCallCheckJs['default'];
    }, function (_npmReact1530Js) {
      React = _npmReact1530Js['default'];
    }, function (_appListJs) {
      List = _appListJs['default'];
    }],
    execute: function () {
      'use strict';

      Team = (function (_React$Component) {
        _inherits(Team, _React$Component);

        function Team() {
          _classCallCheck(this, Team);

          _get(Object.getPrototypeOf(Team.prototype), 'constructor', this).apply(this, arguments);
        }

        _createClass(Team, [{
          key: 'render',
          value: function render() {
            return React.createElement(
              'div',
              { className: 'container' },
              React.createElement(List, { which: 'players' })
            );
          }
        }]);

        return Team;
      })(React.Component);

      _export('default', Team);
    }
  };
});
System.register('app/home.js', ['npm:babel-runtime@5.8.38/helpers/get.js', 'npm:babel-runtime@5.8.38/helpers/inherits.js', 'npm:babel-runtime@5.8.38/helpers/create-class.js', 'npm:babel-runtime@5.8.38/helpers/class-call-check.js', 'npm:react@15.3.0.js'], function (_export) {
  var _get, _inherits, _createClass, _classCallCheck, React, Home;

  return {
    setters: [function (_npmBabelRuntime5838HelpersGetJs) {
      _get = _npmBabelRuntime5838HelpersGetJs['default'];
    }, function (_npmBabelRuntime5838HelpersInheritsJs) {
      _inherits = _npmBabelRuntime5838HelpersInheritsJs['default'];
    }, function (_npmBabelRuntime5838HelpersCreateClassJs) {
      _createClass = _npmBabelRuntime5838HelpersCreateClassJs['default'];
    }, function (_npmBabelRuntime5838HelpersClassCallCheckJs) {
      _classCallCheck = _npmBabelRuntime5838HelpersClassCallCheckJs['default'];
    }, function (_npmReact1530Js) {
      React = _npmReact1530Js['default'];
    }],
    execute: function () {
      'use strict';

      Home = (function (_React$Component) {
        _inherits(Home, _React$Component);

        function Home() {
          _classCallCheck(this, Home);

          _get(Object.getPrototypeOf(Home.prototype), 'constructor', this).apply(this, arguments);
        }

        _createClass(Home, [{
          key: 'render',
          value: function render() {
            return React.createElement(
              'div',
              { className: 'container' },
              React.createElement(
                'div',
                { className: 'jumbotron' },
                React.createElement(
                  'h1',
                  null,
                  'Blijdorp JO11-1'
                ),
                React.createElement(
                  'p',
                  null,
                  'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent at dui vitae odio varius sagittis. Curabitur est risus, porta sit amet arcu ut, aliquam auctor velit.'
                )
              )
            );
          }
        }]);

        return Home;
      })(React.Component);

      _export('default', Home);
    }
  };
});
System.register('app/goals.js', ['npm:babel-runtime@5.8.38/helpers/get.js', 'npm:babel-runtime@5.8.38/helpers/inherits.js', 'npm:babel-runtime@5.8.38/helpers/create-class.js', 'npm:babel-runtime@5.8.38/helpers/class-call-check.js', 'npm:react@15.3.0.js', 'app/players.js'], function (_export) {
  var _get, _inherits, _createClass, _classCallCheck, React, Players, Goals;

  return {
    setters: [function (_npmBabelRuntime5838HelpersGetJs) {
      _get = _npmBabelRuntime5838HelpersGetJs['default'];
    }, function (_npmBabelRuntime5838HelpersInheritsJs) {
      _inherits = _npmBabelRuntime5838HelpersInheritsJs['default'];
    }, function (_npmBabelRuntime5838HelpersCreateClassJs) {
      _createClass = _npmBabelRuntime5838HelpersCreateClassJs['default'];
    }, function (_npmBabelRuntime5838HelpersClassCallCheckJs) {
      _classCallCheck = _npmBabelRuntime5838HelpersClassCallCheckJs['default'];
    }, function (_npmReact1530Js) {
      React = _npmReact1530Js['default'];
    }, function (_appPlayersJs) {
      Players = _appPlayersJs['default'];
    }],
    execute: function () {
      'use strict';

      Goals = (function (_React$Component) {
        _inherits(Goals, _React$Component);

        function Goals() {
          _classCallCheck(this, Goals);

          _get(Object.getPrototypeOf(Goals.prototype), 'constructor', this).apply(this, arguments);
        }

        _createClass(Goals, [{
          key: 'render',
          value: function render() {
            return React.createElement(Players, {
              metric: 'goals',
              colorRange: ['white', 'red']
            });
          }
        }]);

        return Goals;
      })(React.Component);

      _export('default', Goals);
    }
  };
});
System.registerDynamic("npm:core-js@1.2.7/library/modules/$.cof.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var toString = {}.toString;
  module.exports = function(it) {
    return toString.call(it).slice(8, -1);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.iobject.js", ["npm:core-js@1.2.7/library/modules/$.cof.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var cof = $__require('npm:core-js@1.2.7/library/modules/$.cof.js');
  module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it) {
    return cof(it) == 'String' ? it.split('') : Object(it);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.defined.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = function(it) {
    if (it == undefined)
      throw TypeError("Can't call method on  " + it);
    return it;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.to-iobject.js", ["npm:core-js@1.2.7/library/modules/$.iobject.js", "npm:core-js@1.2.7/library/modules/$.defined.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var IObject = $__require('npm:core-js@1.2.7/library/modules/$.iobject.js'),
      defined = $__require('npm:core-js@1.2.7/library/modules/$.defined.js');
  module.exports = function(it) {
    return IObject(defined(it));
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.fails.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = function(exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.object-sap.js", ["npm:core-js@1.2.7/library/modules/$.export.js", "npm:core-js@1.2.7/library/modules/$.core.js", "npm:core-js@1.2.7/library/modules/$.fails.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('npm:core-js@1.2.7/library/modules/$.export.js'),
      core = $__require('npm:core-js@1.2.7/library/modules/$.core.js'),
      fails = $__require('npm:core-js@1.2.7/library/modules/$.fails.js');
  module.exports = function(KEY, exec) {
    var fn = (core.Object || {})[KEY] || Object[KEY],
        exp = {};
    exp[KEY] = exec(fn);
    $export($export.S + $export.F * fails(function() {
      fn(1);
    }), 'Object', exp);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/es6.object.get-own-property-descriptor.js", ["npm:core-js@1.2.7/library/modules/$.to-iobject.js", "npm:core-js@1.2.7/library/modules/$.object-sap.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var toIObject = $__require('npm:core-js@1.2.7/library/modules/$.to-iobject.js');
  $__require('npm:core-js@1.2.7/library/modules/$.object-sap.js')('getOwnPropertyDescriptor', function($getOwnPropertyDescriptor) {
    return function getOwnPropertyDescriptor(it, key) {
      return $getOwnPropertyDescriptor(toIObject(it), key);
    };
  });
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/fn/object/get-own-property-descriptor.js", ["npm:core-js@1.2.7/library/modules/$.js", "npm:core-js@1.2.7/library/modules/es6.object.get-own-property-descriptor.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var $ = $__require('npm:core-js@1.2.7/library/modules/$.js');
  $__require('npm:core-js@1.2.7/library/modules/es6.object.get-own-property-descriptor.js');
  module.exports = function getOwnPropertyDescriptor(it, key) {
    return $.getDesc(it, key);
  };
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@5.8.38/core-js/object/get-own-property-descriptor.js", ["npm:core-js@1.2.7/library/fn/object/get-own-property-descriptor.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = {
    "default": $__require('npm:core-js@1.2.7/library/fn/object/get-own-property-descriptor.js'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@5.8.38/helpers/get.js", ["npm:babel-runtime@5.8.38/core-js/object/get-own-property-descriptor.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var _Object$getOwnPropertyDescriptor = $__require('npm:babel-runtime@5.8.38/core-js/object/get-own-property-descriptor.js')["default"];
  exports["default"] = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = _Object$getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  exports.__esModule = true;
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/fn/object/create.js", ["npm:core-js@1.2.7/library/modules/$.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var $ = $__require('npm:core-js@1.2.7/library/modules/$.js');
  module.exports = function create(P, D) {
    return $.create(P, D);
  };
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@5.8.38/core-js/object/create.js", ["npm:core-js@1.2.7/library/fn/object/create.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = {
    "default": $__require('npm:core-js@1.2.7/library/fn/object/create.js'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.global.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
  if (typeof __g == 'number')
    __g = global;
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.export.js", ["npm:core-js@1.2.7/library/modules/$.global.js", "npm:core-js@1.2.7/library/modules/$.core.js", "npm:core-js@1.2.7/library/modules/$.ctx.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var global = $__require('npm:core-js@1.2.7/library/modules/$.global.js'),
      core = $__require('npm:core-js@1.2.7/library/modules/$.core.js'),
      ctx = $__require('npm:core-js@1.2.7/library/modules/$.ctx.js'),
      PROTOTYPE = 'prototype';
  var $export = function(type, name, source) {
    var IS_FORCED = type & $export.F,
        IS_GLOBAL = type & $export.G,
        IS_STATIC = type & $export.S,
        IS_PROTO = type & $export.P,
        IS_BIND = type & $export.B,
        IS_WRAP = type & $export.W,
        exports = IS_GLOBAL ? core : core[name] || (core[name] = {}),
        target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE],
        key,
        own,
        out;
    if (IS_GLOBAL)
      source = name;
    for (key in source) {
      own = !IS_FORCED && target && key in target;
      if (own && key in exports)
        continue;
      out = own ? target[key] : source[key];
      exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key] : IS_BIND && own ? ctx(out, global) : IS_WRAP && target[key] == out ? (function(C) {
        var F = function(param) {
          return this instanceof C ? new C(param) : C(param);
        };
        F[PROTOTYPE] = C[PROTOTYPE];
        return F;
      })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
      if (IS_PROTO)
        (exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;
    }
  };
  $export.F = 1;
  $export.G = 2;
  $export.S = 4;
  $export.P = 8;
  $export.B = 16;
  $export.W = 32;
  module.exports = $export;
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.is-object.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = function(it) {
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.an-object.js", ["npm:core-js@1.2.7/library/modules/$.is-object.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var isObject = $__require('npm:core-js@1.2.7/library/modules/$.is-object.js');
  module.exports = function(it) {
    if (!isObject(it))
      throw TypeError(it + ' is not an object!');
    return it;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.a-function.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = function(it) {
    if (typeof it != 'function')
      throw TypeError(it + ' is not a function!');
    return it;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.ctx.js", ["npm:core-js@1.2.7/library/modules/$.a-function.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var aFunction = $__require('npm:core-js@1.2.7/library/modules/$.a-function.js');
  module.exports = function(fn, that, length) {
    aFunction(fn);
    if (that === undefined)
      return fn;
    switch (length) {
      case 1:
        return function(a) {
          return fn.call(that, a);
        };
      case 2:
        return function(a, b) {
          return fn.call(that, a, b);
        };
      case 3:
        return function(a, b, c) {
          return fn.call(that, a, b, c);
        };
    }
    return function() {
      return fn.apply(that, arguments);
    };
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.set-proto.js", ["npm:core-js@1.2.7/library/modules/$.js", "npm:core-js@1.2.7/library/modules/$.is-object.js", "npm:core-js@1.2.7/library/modules/$.an-object.js", "npm:core-js@1.2.7/library/modules/$.ctx.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var getDesc = $__require('npm:core-js@1.2.7/library/modules/$.js').getDesc,
      isObject = $__require('npm:core-js@1.2.7/library/modules/$.is-object.js'),
      anObject = $__require('npm:core-js@1.2.7/library/modules/$.an-object.js');
  var check = function(O, proto) {
    anObject(O);
    if (!isObject(proto) && proto !== null)
      throw TypeError(proto + ": can't set as prototype!");
  };
  module.exports = {
    set: Object.setPrototypeOf || ('__proto__' in {} ? function(test, buggy, set) {
      try {
        set = $__require('npm:core-js@1.2.7/library/modules/$.ctx.js')(Function.call, getDesc(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) {
        buggy = true;
      }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy)
          O.__proto__ = proto;
        else
          set(O, proto);
        return O;
      };
    }({}, false) : undefined),
    check: check
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/es6.object.set-prototype-of.js", ["npm:core-js@1.2.7/library/modules/$.export.js", "npm:core-js@1.2.7/library/modules/$.set-proto.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('npm:core-js@1.2.7/library/modules/$.export.js');
  $export($export.S, 'Object', {setPrototypeOf: $__require('npm:core-js@1.2.7/library/modules/$.set-proto.js').set});
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.core.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var core = module.exports = {version: '1.2.6'};
  if (typeof __e == 'number')
    __e = core;
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/fn/object/set-prototype-of.js", ["npm:core-js@1.2.7/library/modules/es6.object.set-prototype-of.js", "npm:core-js@1.2.7/library/modules/$.core.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('npm:core-js@1.2.7/library/modules/es6.object.set-prototype-of.js');
  module.exports = $__require('npm:core-js@1.2.7/library/modules/$.core.js').Object.setPrototypeOf;
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@5.8.38/core-js/object/set-prototype-of.js", ["npm:core-js@1.2.7/library/fn/object/set-prototype-of.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = {
    "default": $__require('npm:core-js@1.2.7/library/fn/object/set-prototype-of.js'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@5.8.38/helpers/inherits.js", ["npm:babel-runtime@5.8.38/core-js/object/create.js", "npm:babel-runtime@5.8.38/core-js/object/set-prototype-of.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var _Object$create = $__require('npm:babel-runtime@5.8.38/core-js/object/create.js')["default"];
  var _Object$setPrototypeOf = $__require('npm:babel-runtime@5.8.38/core-js/object/set-prototype-of.js')["default"];
  exports["default"] = function(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = _Object$create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      _Object$setPrototypeOf ? _Object$setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  };
  exports.__esModule = true;
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/modules/$.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var $Object = Object;
  module.exports = {
    create: $Object.create,
    getProto: $Object.getPrototypeOf,
    isEnum: {}.propertyIsEnumerable,
    getDesc: $Object.getOwnPropertyDescriptor,
    setDesc: $Object.defineProperty,
    setDescs: $Object.defineProperties,
    getKeys: $Object.keys,
    getNames: $Object.getOwnPropertyNames,
    getSymbols: $Object.getOwnPropertySymbols,
    each: [].forEach
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@1.2.7/library/fn/object/define-property.js", ["npm:core-js@1.2.7/library/modules/$.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var $ = $__require('npm:core-js@1.2.7/library/modules/$.js');
  module.exports = function defineProperty(it, key, desc) {
    return $.setDesc(it, key, desc);
  };
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@5.8.38/core-js/object/define-property.js", ["npm:core-js@1.2.7/library/fn/object/define-property.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = {
    "default": $__require('npm:core-js@1.2.7/library/fn/object/define-property.js'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@5.8.38/helpers/create-class.js", ["npm:babel-runtime@5.8.38/core-js/object/define-property.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var _Object$defineProperty = $__require('npm:babel-runtime@5.8.38/core-js/object/define-property.js')["default"];
  exports["default"] = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        _Object$defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  exports.__esModule = true;
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@5.8.38/helpers/class-call-check.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports["default"] = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  exports.__esModule = true;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/table/table.js", ["npm:react@15.3.0.js", "npm:react-vis@0.4.2/dist/lib/utils/react-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _reactUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/react-utils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var HEADER_REF = 'headerRef';
  var DATA_REF = 'dataRef';
  var Table = function(_React$Component) {
    _inherits(Table, _React$Component);
    _createClass(Table, null, [{
      key: 'propTypes',
      get: function get() {
        return {
          header: _react2.default.PropTypes.array.isRequired,
          data: _react2.default.PropTypes.array.isRequired,
          width: _react2.default.PropTypes.number.isRequired,
          height: _react2.default.PropTypes.number.isRequired,
          cellHeight: _react2.default.PropTypes.number,
          cellWidth: _react2.default.PropTypes.number
        };
      }
    }, {
      key: 'defaultProps',
      get: function get() {
        return {
          cellHeight: 32,
          cellWidth: 100
        };
      }
    }]);
    function Table(props) {
      _classCallCheck(this, Table);
      var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Table).call(this, props));
      _this._updateHeaderPosition = _this._updateHeaderPosition.bind(_this);
      _this._renderHeaderCell = _this._renderHeaderCell.bind(_this);
      _this._renderDataRow = _this._renderDataRow.bind(_this);
      return _this;
    }
    _createClass(Table, [{
      key: '_getDataBlockWidth',
      value: function _getDataBlockWidth() {
        var _props = this.props;
        var header = _props.header;
        var cellWidth = _props.cellWidth;
        return header.length * cellWidth;
      }
    }, {
      key: '_getDataBlockHeight',
      value: function _getDataBlockHeight() {
        var _props2 = this.props;
        var data = _props2.data;
        var cellHeight = _props2.cellHeight;
        return data.length * cellHeight;
      }
    }, {
      key: '_renderHeaderCell',
      value: function _renderHeaderCell(cell, index) {
        var _props3 = this.props;
        var cellWidth = _props3.cellWidth;
        var cellHeight = _props3.cellHeight;
        var cellContent = undefined;
        if (cell instanceof Object) {
          cellContent = cell;
        } else {
          cellContent = _react2.default.createElement('div', {className: 'rv-table__header__cell__content'}, cell);
        }
        return _react2.default.createElement('div', {
          className: 'rv-table__header__cell',
          key: index,
          style: {
            top: 0,
            left: index * cellWidth + 'px',
            width: cellWidth + 'px',
            height: cellHeight + 'px',
            lineHeight: cellHeight + 'px'
          }
        }, cellContent);
      }
    }, {
      key: '_renderHeader',
      value: function _renderHeader() {
        var header = this.props.header;
        if (!header) {
          return null;
        }
        return _react2.default.createElement('div', {
          className: 'rv-table__header',
          ref: HEADER_REF,
          style: {width: this._getDataBlockWidth() + 'px'}
        }, header.map(this._renderHeaderCell));
      }
    }, {
      key: '_updateHeaderPosition',
      value: function _updateHeaderPosition() {
        var headerElement = (0, _reactUtils.getDOMNode)(this.refs[HEADER_REF]);
        var dataElement = (0, _reactUtils.getDOMNode)(this.refs[DATA_REF]);
        headerElement.style.left = -dataElement.scrollLeft + 'px';
      }
    }, {
      key: '_renderDataRow',
      value: function _renderDataRow(row, rowIndex) {
        var _props4 = this.props;
        var cellHeight = _props4.cellHeight;
        var cellWidth = _props4.cellWidth;
        var cellIndex = 0;
        return row.map(function(cell, columnIndex) {
          var isHtml = cell instanceof Object;
          return _react2.default.createElement('div', {
            className: 'rv-table__data__cell',
            key: cellIndex++,
            style: {
              top: rowIndex * cellHeight + 'px',
              left: columnIndex * cellWidth + 'px',
              width: cellWidth + 'px',
              height: cellHeight + 'px',
              lineHeight: cellHeight + 'px'
            }
          }, isHtml ? cell : _react2.default.createElement('div', {className: 'rv-table__data__cell__content'}, cell));
        });
      }
    }, {
      key: '_renderData',
      value: function _renderData() {
        var _props5 = this.props;
        var data = _props5.data;
        var cellHeight = _props5.cellHeight;
        var outerHeight = this.props.height - cellHeight;
        var outerWidth = this.props.width;
        var innerWidth = this._getDataBlockWidth();
        var innerHeight = this._getDataBlockHeight();
        return _react2.default.createElement('div', {
          className: 'rv-table__data',
          style: {
            height: outerHeight + 'px',
            width: outerWidth + 'px',
            marginTop: cellHeight + 'px'
          },
          ref: DATA_REF,
          onScroll: this._updateHeaderPosition
        }, _react2.default.createElement('div', {
          className: 'rv-table__data-inner',
          style: {
            height: innerHeight + 'px',
            width: innerWidth + 'px'
          }
        }, data.map(this._renderDataRow)));
      }
    }, {
      key: 'render',
      value: function render() {
        var _props6 = this.props;
        var height = _props6.height;
        var width = _props6.width;
        return _react2.default.createElement('div', {
          className: 'rv-table',
          style: {
            height: height + 'px',
            width: width + 'px'
          }
        }, this._renderHeader(), this._renderData());
      }
    }]);
    return Table;
  }(_react2.default.Component);
  Table.displayName = 'Table';
  exports.default = Table;
  return module.exports;
});

System.registerDynamic("npm:d3-hierarchy@0.2.4/build/d3-hierarchy.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (factory((global.d3_hierarchy = global.d3_hierarchy || {})));
  }(this, function(exports) {
    'use strict';
    var version = "0.2.4";
    function defaultSeparation(a, b) {
      return a.parent === b.parent ? 1 : 2;
    }
    function meanX(children) {
      return children.reduce(meanXReduce, 0) / children.length;
    }
    function meanXReduce(x, c) {
      return x + c.x;
    }
    function maxY(children) {
      return 1 + children.reduce(maxYReduce, 0);
    }
    function maxYReduce(y, c) {
      return Math.max(y, c.y);
    }
    function leafLeft(node) {
      var children;
      while (children = node.children)
        node = children[0];
      return node;
    }
    function leafRight(node) {
      var children;
      while (children = node.children)
        node = children[children.length - 1];
      return node;
    }
    function cluster() {
      var separation = defaultSeparation,
          dx = 1,
          dy = 1,
          nodeSize = false;
      function cluster(root) {
        var previousNode,
            x = 0;
        root.eachAfter(function(node) {
          var children = node.children;
          if (children) {
            node.x = meanX(children);
            node.y = maxY(children);
          } else {
            node.x = previousNode ? x += separation(node, previousNode) : 0;
            node.y = 0;
            previousNode = node;
          }
        });
        var left = leafLeft(root),
            right = leafRight(root),
            x0 = left.x - separation(left, right) / 2,
            x1 = right.x + separation(right, left) / 2;
        return root.eachAfter(nodeSize ? function(node) {
          node.x = (node.x - root.x) * dx;
          node.y = (root.y - node.y) * dy;
        } : function(node) {
          node.x = (node.x - x0) / (x1 - x0) * dx;
          node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
        });
      }
      cluster.separation = function(x) {
        return arguments.length ? (separation = x, cluster) : separation;
      };
      cluster.size = function(x) {
        return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);
      };
      cluster.nodeSize = function(x) {
        return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);
      };
      return cluster;
    }
    function node_each(callback) {
      var node = this,
          current,
          next = [node],
          children,
          i,
          n;
      do {
        current = next.reverse(), next = [];
        while (node = current.pop()) {
          callback(node), children = node.children;
          if (children)
            for (i = 0, n = children.length; i < n; ++i) {
              next.push(children[i]);
            }
        }
      } while (next.length);
      return this;
    }
    function node_eachBefore(callback) {
      var node = this,
          nodes = [node],
          children,
          i;
      while (node = nodes.pop()) {
        callback(node), children = node.children;
        if (children)
          for (i = children.length - 1; i >= 0; --i) {
            nodes.push(children[i]);
          }
      }
      return this;
    }
    function node_eachAfter(callback) {
      var node = this,
          nodes = [node],
          next = [],
          children,
          i,
          n;
      while (node = nodes.pop()) {
        next.push(node), children = node.children;
        if (children)
          for (i = 0, n = children.length; i < n; ++i) {
            nodes.push(children[i]);
          }
      }
      while (node = next.pop()) {
        callback(node);
      }
      return this;
    }
    function node_sum(value) {
      return this.eachAfter(function(node) {
        var sum = +value(node.data) || 0,
            children = node.children,
            i = children && children.length;
        while (--i >= 0)
          sum += children[i].value;
        node.value = sum;
      });
    }
    function node_sort(compare) {
      return this.eachBefore(function(node) {
        if (node.children) {
          node.children.sort(compare);
        }
      });
    }
    function node_path(end) {
      var start = this,
          ancestor = leastCommonAncestor(start, end),
          nodes = [start];
      while (start !== ancestor) {
        start = start.parent;
        nodes.push(start);
      }
      var k = nodes.length;
      while (end !== ancestor) {
        nodes.splice(k, 0, end);
        end = end.parent;
      }
      return nodes;
    }
    function leastCommonAncestor(a, b) {
      if (a === b)
        return a;
      var aNodes = a.ancestors(),
          bNodes = b.ancestors(),
          c = null;
      a = aNodes.pop();
      b = bNodes.pop();
      while (a === b) {
        c = a;
        a = aNodes.pop();
        b = bNodes.pop();
      }
      return c;
    }
    function node_ancestors() {
      var node = this,
          nodes = [node];
      while (node = node.parent) {
        nodes.push(node);
      }
      return nodes;
    }
    function node_descendants() {
      var nodes = [];
      this.each(function(node) {
        nodes.push(node);
      });
      return nodes;
    }
    function node_leaves() {
      var leaves = [];
      this.eachBefore(function(node) {
        if (!node.children) {
          leaves.push(node);
        }
      });
      return leaves;
    }
    function node_links() {
      var root = this,
          links = [];
      root.each(function(node) {
        if (node !== root) {
          links.push({
            source: node.parent,
            target: node
          });
        }
      });
      return links;
    }
    function hierarchy(data, children) {
      var root = new Node(data),
          valued = +data.value && (root.value = data.value),
          node,
          nodes = [root],
          child,
          childs,
          i,
          n;
      if (children == null)
        children = defaultChildren;
      while (node = nodes.pop()) {
        if (valued)
          node.value = +node.data.value;
        if ((childs = children(node.data)) && (n = childs.length)) {
          node.children = new Array(n);
          for (i = n - 1; i >= 0; --i) {
            nodes.push(child = node.children[i] = new Node(childs[i]));
            child.parent = node;
            child.depth = node.depth + 1;
          }
        }
      }
      return root.eachBefore(computeHeight);
    }
    function node_copy() {
      return hierarchy(this).eachBefore(copyData);
    }
    function defaultChildren(d) {
      return d.children;
    }
    function copyData(node) {
      node.data = node.data.data;
    }
    function computeHeight(node) {
      var height = 0;
      do
        node.height = height;
 while ((node = node.parent) && (node.height < ++height));
    }
    function Node(data) {
      this.data = data;
      this.depth = this.height = 0;
      this.parent = null;
    }
    Node.prototype = hierarchy.prototype = {
      constructor: Node,
      each: node_each,
      eachAfter: node_eachAfter,
      eachBefore: node_eachBefore,
      sum: node_sum,
      sort: node_sort,
      path: node_path,
      ancestors: node_ancestors,
      descendants: node_descendants,
      leaves: node_leaves,
      links: node_links,
      copy: node_copy
    };
    function Node$2(value) {
      this._ = value;
      this.next = null;
    }
    function shuffle(array) {
      var i,
          n = (array = array.slice()).length,
          head = null,
          node = head;
      while (n) {
        var next = new Node$2(array[n - 1]);
        if (node)
          node = node.next = next;
        else
          node = head = next;
        array[i] = array[--n];
      }
      return {
        head: head,
        tail: node
      };
    }
    function enclose(circles) {
      return encloseN(shuffle(circles), []);
    }
    function encloses(a, b) {
      var dx = b.x - a.x,
          dy = b.y - a.y,
          dr = a.r - b.r;
      return dr * dr + 1e-6 > dx * dx + dy * dy;
    }
    function encloseN(L, B) {
      var circle,
          l0 = null,
          l1 = L.head,
          l2,
          p1;
      switch (B.length) {
        case 1:
          circle = enclose1(B[0]);
          break;
        case 2:
          circle = enclose2(B[0], B[1]);
          break;
        case 3:
          circle = enclose3(B[0], B[1], B[2]);
          break;
      }
      while (l1) {
        p1 = l1._, l2 = l1.next;
        if (!circle || !encloses(circle, p1)) {
          if (l0)
            L.tail = l0, l0.next = null;
          else
            L.head = L.tail = null;
          B.push(p1);
          circle = encloseN(L, B);
          B.pop();
          if (L.head)
            l1.next = L.head, L.head = l1;
          else
            l1.next = null, L.head = L.tail = l1;
          l0 = L.tail, l0.next = l2;
        } else {
          l0 = l1;
        }
        l1 = l2;
      }
      L.tail = l0;
      return circle;
    }
    function enclose1(a) {
      return {
        x: a.x,
        y: a.y,
        r: a.r
      };
    }
    function enclose2(a, b) {
      var x1 = a.x,
          y1 = a.y,
          r1 = a.r,
          x2 = b.x,
          y2 = b.y,
          r2 = b.r,
          x21 = x2 - x1,
          y21 = y2 - y1,
          r21 = r2 - r1,
          l = Math.sqrt(x21 * x21 + y21 * y21);
      return {
        x: (x1 + x2 + x21 / l * r21) / 2,
        y: (y1 + y2 + y21 / l * r21) / 2,
        r: (l + r1 + r2) / 2
      };
    }
    function enclose3(a, b, c) {
      var x1 = a.x,
          y1 = a.y,
          r1 = a.r,
          x2 = b.x,
          y2 = b.y,
          r2 = b.r,
          x3 = c.x,
          y3 = c.y,
          r3 = c.r,
          a2 = 2 * (x1 - x2),
          b2 = 2 * (y1 - y2),
          c2 = 2 * (r2 - r1),
          d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,
          a3 = 2 * (x1 - x3),
          b3 = 2 * (y1 - y3),
          c3 = 2 * (r3 - r1),
          d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,
          ab = a3 * b2 - a2 * b3,
          xa = (b2 * d3 - b3 * d2) / ab - x1,
          xb = (b3 * c2 - b2 * c3) / ab,
          ya = (a3 * d2 - a2 * d3) / ab - y1,
          yb = (a2 * c3 - a3 * c2) / ab,
          A = xb * xb + yb * yb - 1,
          B = 2 * (xa * xb + ya * yb + r1),
          C = xa * xa + ya * ya - r1 * r1,
          r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);
      return {
        x: xa + xb * r + x1,
        y: ya + yb * r + y1,
        r: r
      };
    }
    function place(a, b, c) {
      var ax = a.x,
          ay = a.y,
          da = b.r + c.r,
          db = a.r + c.r,
          dx = b.x - ax,
          dy = b.y - ay,
          dc = dx * dx + dy * dy;
      if (dc) {
        var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),
            y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
        c.x = ax + x * dx + y * dy;
        c.y = ay + x * dy - y * dx;
      } else {
        c.x = ax + db;
        c.y = ay;
      }
    }
    function intersects(a, b) {
      var dx = b.x - a.x,
          dy = b.y - a.y,
          dr = a.r + b.r;
      return dr * dr > dx * dx + dy * dy;
    }
    function distance2(circle, x, y) {
      var dx = circle.x - x,
          dy = circle.y - y;
      return dx * dx + dy * dy;
    }
    function Node$1(circle) {
      this._ = circle;
      this.next = null;
      this.previous = null;
    }
    function packEnclose(circles) {
      if (!(n = circles.length))
        return 0;
      var a,
          b,
          c,
          n;
      a = circles[0], a.x = 0, a.y = 0;
      if (!(n > 1))
        return a.r;
      b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
      if (!(n > 2))
        return a.r + b.r;
      place(b, a, c = circles[2]);
      var aa = a.r * a.r,
          ba = b.r * b.r,
          ca = c.r * c.r,
          oa = aa + ba + ca,
          ox = aa * a.x + ba * b.x + ca * c.x,
          oy = aa * a.y + ba * b.y + ca * c.y,
          cx,
          cy,
          i,
          j,
          k,
          sj,
          sk;
      a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);
      a.next = c.previous = b;
      b.next = a.previous = c;
      c.next = b.previous = a;
      pack: for (i = 3; i < n; ++i) {
        place(a._, b._, c = circles[i]), c = new Node$1(c);
        if ((k = a.previous) === (j = b.next)) {
          if (intersects(j._, c._)) {
            a = b, b = j, --i;
            continue pack;
          }
        } else {
          sj = j._.r, sk = k._.r;
          do {
            if (sj <= sk) {
              if (intersects(j._, c._)) {
                b = j, a.next = b, b.previous = a, --i;
                continue pack;
              }
              j = j.next, sj += j._.r;
            } else {
              if (intersects(k._, c._)) {
                a = k, a.next = b, b.previous = a, --i;
                continue pack;
              }
              k = k.previous, sk += k._.r;
            }
          } while (j !== k.next);
        }
        c.previous = a, c.next = b, a.next = b.previous = b = c;
        oa += ca = c._.r * c._.r;
        ox += ca * c._.x;
        oy += ca * c._.y;
        aa = distance2(a._, cx = ox / oa, cy = oy / oa);
        while ((c = c.next) !== b) {
          if ((ca = distance2(c._, cx, cy)) < aa) {
            a = c, aa = ca;
          }
        }
        b = a.next;
      }
      a = [b._], c = b;
      while ((c = c.next) !== b)
        a.push(c._);
      c = enclose(a);
      for (i = 0; i < n; ++i)
        a = circles[i], a.x -= c.x, a.y -= c.y;
      return c.r;
    }
    function siblings(circles) {
      packEnclose(circles);
      return circles;
    }
    function optional(f) {
      return f == null ? null : required(f);
    }
    function required(f) {
      if (typeof f !== "function")
        throw new Error;
      return f;
    }
    function constantZero() {
      return 0;
    }
    function constant(x) {
      return function() {
        return x;
      };
    }
    function defaultRadius(d) {
      return Math.sqrt(d.value);
    }
    function index() {
      var radius = null,
          dx = 1,
          dy = 1,
          padding = constantZero;
      function pack(root) {
        root.x = dx / 2, root.y = dy / 2;
        if (radius) {
          root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));
        } else {
          root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
        }
        return root;
      }
      pack.radius = function(x) {
        return arguments.length ? (radius = optional(x), pack) : radius;
      };
      pack.size = function(x) {
        return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
      };
      pack.padding = function(x) {
        return arguments.length ? (padding = typeof x === "function" ? x : constant(+x), pack) : padding;
      };
      return pack;
    }
    function radiusLeaf(radius) {
      return function(node) {
        if (!node.children) {
          node.r = Math.max(0, +radius(node) || 0);
        }
      };
    }
    function packChildren(padding, k) {
      return function(node) {
        if (children = node.children) {
          var children,
              i,
              n = children.length,
              r = padding(node) * k || 0,
              e;
          if (r)
            for (i = 0; i < n; ++i)
              children[i].r += r;
          e = packEnclose(children);
          if (r)
            for (i = 0; i < n; ++i)
              children[i].r -= r;
          node.r = e + r;
        }
      };
    }
    function translateChild(k) {
      return function(node) {
        var parent = node.parent;
        node.r *= k;
        if (parent) {
          node.x = parent.x + k * node.x;
          node.y = parent.y + k * node.y;
        }
      };
    }
    function roundNode(node) {
      node.x0 = Math.round(node.x0);
      node.y0 = Math.round(node.y0);
      node.x1 = Math.round(node.x1);
      node.y1 = Math.round(node.y1);
    }
    function treemapDice(parent, x0, y0, x1, y1) {
      var nodes = parent.children,
          node,
          i = -1,
          n = nodes.length,
          k = parent.value && (x1 - x0) / parent.value;
      while (++i < n) {
        node = nodes[i], node.y0 = y0, node.y1 = y1;
        node.x0 = x0, node.x1 = x0 += node.value * k;
      }
    }
    function partition() {
      var dx = 1,
          dy = 1,
          padding = 0,
          round = false;
      function partition(root) {
        var n = root.height + 1;
        root.x0 = root.y0 = padding;
        root.x1 = dx;
        root.y1 = dy / n;
        root.eachBefore(positionNode(dy, n));
        if (round)
          root.eachBefore(roundNode);
        return root;
      }
      function positionNode(dy, n) {
        return function(node) {
          if (node.children) {
            treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
          }
          var x0 = node.x0,
              y0 = node.y0,
              x1 = node.x1 - padding,
              y1 = node.y1 - padding;
          if (x1 < x0)
            x0 = x1 = (x0 + x1) / 2;
          if (y1 < y0)
            y0 = y1 = (y0 + y1) / 2;
          node.x0 = x0;
          node.y0 = y0;
          node.x1 = x1;
          node.y1 = y1;
        };
      }
      partition.round = function(x) {
        return arguments.length ? (round = !!x, partition) : round;
      };
      partition.size = function(x) {
        return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
      };
      partition.padding = function(x) {
        return arguments.length ? (padding = +x, partition) : padding;
      };
      return partition;
    }
    var keyPrefix = "$";
    var preroot = {depth: -1};
    var ambiguous = {};
    function defaultId(d) {
      return d.id;
    }
    function defaultParentId(d) {
      return d.parentId;
    }
    function stratify() {
      var id = defaultId,
          parentId = defaultParentId;
      function stratify(data) {
        var d,
            i,
            n = data.length,
            root,
            parent,
            node,
            nodes = new Array(n),
            nodeId,
            nodeKey,
            nodeByKey = {};
        for (i = 0; i < n; ++i) {
          d = data[i], node = nodes[i] = new Node(d);
          if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
            nodeKey = keyPrefix + (node.id = nodeId);
            nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;
          }
        }
        for (i = 0; i < n; ++i) {
          node = nodes[i], nodeId = parentId(data[i], i, data);
          if (nodeId == null || !(nodeId += "")) {
            if (root)
              throw new Error("multiple roots");
            root = node;
          } else {
            parent = nodeByKey[keyPrefix + nodeId];
            if (!parent)
              throw new Error("missing: " + nodeId);
            if (parent === ambiguous)
              throw new Error("ambiguous: " + nodeId);
            if (parent.children)
              parent.children.push(node);
            else
              parent.children = [node];
            node.parent = parent;
          }
        }
        if (!root)
          throw new Error("no root");
        root.parent = preroot;
        root.eachBefore(function(node) {
          node.depth = node.parent.depth + 1;
          --n;
        }).eachBefore(computeHeight);
        root.parent = null;
        if (n > 0)
          throw new Error("cycle");
        return root;
      }
      stratify.id = function(x) {
        return arguments.length ? (id = required(x), stratify) : id;
      };
      stratify.parentId = function(x) {
        return arguments.length ? (parentId = required(x), stratify) : parentId;
      };
      return stratify;
    }
    function defaultSeparation$1(a, b) {
      return a.parent === b.parent ? 1 : 2;
    }
    function nextLeft(v) {
      var children = v.children;
      return children ? children[0] : v.t;
    }
    function nextRight(v) {
      var children = v.children;
      return children ? children[children.length - 1] : v.t;
    }
    function moveSubtree(wm, wp, shift) {
      var change = shift / (wp.i - wm.i);
      wp.c -= change;
      wp.s += shift;
      wm.c += change;
      wp.z += shift;
      wp.m += shift;
    }
    function executeShifts(v) {
      var shift = 0,
          change = 0,
          children = v.children,
          i = children.length,
          w;
      while (--i >= 0) {
        w = children[i];
        w.z += shift;
        w.m += shift;
        shift += w.s + (change += w.c);
      }
    }
    function nextAncestor(vim, v, ancestor) {
      return vim.a.parent === v.parent ? vim.a : ancestor;
    }
    function TreeNode(node, i) {
      this._ = node;
      this.parent = null;
      this.children = null;
      this.A = null;
      this.a = this;
      this.z = 0;
      this.m = 0;
      this.c = 0;
      this.s = 0;
      this.t = null;
      this.i = i;
    }
    TreeNode.prototype = Object.create(Node.prototype);
    function treeRoot(root) {
      var tree = new TreeNode(root, 0),
          node,
          nodes = [tree],
          child,
          children,
          i,
          n;
      while (node = nodes.pop()) {
        if (children = node._.children) {
          node.children = new Array(n = children.length);
          for (i = n - 1; i >= 0; --i) {
            nodes.push(child = node.children[i] = new TreeNode(children[i], i));
            child.parent = node;
          }
        }
      }
      (tree.parent = new TreeNode(null, 0)).children = [tree];
      return tree;
    }
    function tree() {
      var separation = defaultSeparation$1,
          dx = 1,
          dy = 1,
          nodeSize = null;
      function tree(root) {
        var t = treeRoot(root);
        t.eachAfter(firstWalk), t.parent.m = -t.z;
        t.eachBefore(secondWalk);
        if (nodeSize)
          root.eachBefore(sizeNode);
        else {
          var left = root,
              right = root,
              bottom = root;
          root.eachBefore(function(node) {
            if (node.x < left.x)
              left = node;
            if (node.x > right.x)
              right = node;
            if (node.depth > bottom.depth)
              bottom = node;
          });
          var s = left === right ? 1 : separation(left, right) / 2,
              tx = s - left.x,
              kx = dx / (right.x + s + tx),
              ky = dy / (bottom.depth || 1);
          root.eachBefore(function(node) {
            node.x = (node.x + tx) * kx;
            node.y = node.depth * ky;
          });
        }
        return root;
      }
      function firstWalk(v) {
        var children = v.children,
            siblings = v.parent.children,
            w = v.i ? siblings[v.i - 1] : null;
        if (children) {
          executeShifts(v);
          var midpoint = (children[0].z + children[children.length - 1].z) / 2;
          if (w) {
            v.z = w.z + separation(v._, w._);
            v.m = v.z - midpoint;
          } else {
            v.z = midpoint;
          }
        } else if (w) {
          v.z = w.z + separation(v._, w._);
        }
        v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
      }
      function secondWalk(v) {
        v._.x = v.z + v.parent.m;
        v.m += v.parent.m;
      }
      function apportion(v, w, ancestor) {
        if (w) {
          var vip = v,
              vop = v,
              vim = w,
              vom = vip.parent.children[0],
              sip = vip.m,
              sop = vop.m,
              sim = vim.m,
              som = vom.m,
              shift;
          while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
            vom = nextLeft(vom);
            vop = nextRight(vop);
            vop.a = v;
            shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
            if (shift > 0) {
              moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
              sip += shift;
              sop += shift;
            }
            sim += vim.m;
            sip += vip.m;
            som += vom.m;
            sop += vop.m;
          }
          if (vim && !nextRight(vop)) {
            vop.t = vim;
            vop.m += sim - sop;
          }
          if (vip && !nextLeft(vom)) {
            vom.t = vip;
            vom.m += sip - som;
            ancestor = v;
          }
        }
        return ancestor;
      }
      function sizeNode(node) {
        node.x *= dx;
        node.y = node.depth * dy;
      }
      tree.separation = function(x) {
        return arguments.length ? (separation = x, tree) : separation;
      };
      tree.size = function(x) {
        return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);
      };
      tree.nodeSize = function(x) {
        return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);
      };
      return tree;
    }
    function treemapSlice(parent, x0, y0, x1, y1) {
      var nodes = parent.children,
          node,
          i = -1,
          n = nodes.length,
          k = parent.value && (y1 - y0) / parent.value;
      while (++i < n) {
        node = nodes[i], node.x0 = x0, node.x1 = x1;
        node.y0 = y0, node.y1 = y0 += node.value * k;
      }
    }
    var phi = (1 + Math.sqrt(5)) / 2;
    function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
      var rows = [],
          nodes = parent.children,
          row,
          nodeValue,
          i0 = 0,
          i1,
          n = nodes.length,
          dx,
          dy,
          value = parent.value,
          sumValue,
          minValue,
          maxValue,
          newRatio,
          minRatio,
          alpha,
          beta;
      while (i0 < n) {
        dx = x1 - x0, dy = y1 - y0;
        minValue = maxValue = sumValue = nodes[i0].value;
        alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
        beta = sumValue * sumValue * alpha;
        minRatio = Math.max(maxValue / beta, beta / minValue);
        for (i1 = i0 + 1; i1 < n; ++i1) {
          sumValue += nodeValue = nodes[i1].value;
          if (nodeValue < minValue)
            minValue = nodeValue;
          if (nodeValue > maxValue)
            maxValue = nodeValue;
          beta = sumValue * sumValue * alpha;
          newRatio = Math.max(maxValue / beta, beta / minValue);
          if (newRatio > minRatio) {
            sumValue -= nodeValue;
            break;
          }
          minRatio = newRatio;
        }
        rows.push(row = {
          value: sumValue,
          dice: dx < dy,
          children: nodes.slice(i0, i1)
        });
        if (row.dice)
          treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);
        else
          treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
        value -= sumValue, i0 = i1;
      }
      return rows;
    }
    var squarify = (function custom(ratio) {
      function squarify(parent, x0, y0, x1, y1) {
        squarifyRatio(ratio, parent, x0, y0, x1, y1);
      }
      squarify.ratio = function(x) {
        return custom((x = +x) > 1 ? x : 1);
      };
      return squarify;
    })(phi);
    function index$1() {
      var tile = squarify,
          round = false,
          dx = 1,
          dy = 1,
          paddingStack = [0],
          paddingInner = constantZero,
          paddingTop = constantZero,
          paddingRight = constantZero,
          paddingBottom = constantZero,
          paddingLeft = constantZero;
      function treemap(root) {
        root.x0 = root.y0 = 0;
        root.x1 = dx;
        root.y1 = dy;
        root.eachBefore(positionNode);
        paddingStack = [0];
        if (round)
          root.eachBefore(roundNode);
        return root;
      }
      function positionNode(node) {
        var p = paddingStack[node.depth],
            x0 = node.x0 + p,
            y0 = node.y0 + p,
            x1 = node.x1 - p,
            y1 = node.y1 - p;
        if (x1 < x0)
          x0 = x1 = (x0 + x1) / 2;
        if (y1 < y0)
          y0 = y1 = (y0 + y1) / 2;
        node.x0 = x0;
        node.y0 = y0;
        node.x1 = x1;
        node.y1 = y1;
        if (node.children) {
          p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
          x0 += paddingLeft(node) - p;
          y0 += paddingTop(node) - p;
          x1 -= paddingRight(node) - p;
          y1 -= paddingBottom(node) - p;
          if (x1 < x0)
            x0 = x1 = (x0 + x1) / 2;
          if (y1 < y0)
            y0 = y1 = (y0 + y1) / 2;
          tile(node, x0, y0, x1, y1);
        }
      }
      treemap.round = function(x) {
        return arguments.length ? (round = !!x, treemap) : round;
      };
      treemap.size = function(x) {
        return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
      };
      treemap.tile = function(x) {
        return arguments.length ? (tile = required(x), treemap) : tile;
      };
      treemap.padding = function(x) {
        return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
      };
      treemap.paddingInner = function(x) {
        return arguments.length ? (paddingInner = typeof x === "function" ? x : constant(+x), treemap) : paddingInner;
      };
      treemap.paddingOuter = function(x) {
        return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
      };
      treemap.paddingTop = function(x) {
        return arguments.length ? (paddingTop = typeof x === "function" ? x : constant(+x), treemap) : paddingTop;
      };
      treemap.paddingRight = function(x) {
        return arguments.length ? (paddingRight = typeof x === "function" ? x : constant(+x), treemap) : paddingRight;
      };
      treemap.paddingBottom = function(x) {
        return arguments.length ? (paddingBottom = typeof x === "function" ? x : constant(+x), treemap) : paddingBottom;
      };
      treemap.paddingLeft = function(x) {
        return arguments.length ? (paddingLeft = typeof x === "function" ? x : constant(+x), treemap) : paddingLeft;
      };
      return treemap;
    }
    function binary(parent, x0, y0, x1, y1) {
      var nodes = parent.children;
      partition$1(nodes, 0, nodes.length, parent.value, x0, y0, x1, y1);
    }
    function partition$1(nodes, i, j, value, x0, y0, x1, y1) {
      if (i >= j - 1) {
        nodes = nodes[i];
        nodes.x0 = x0, nodes.y0 = y0;
        nodes.x1 = x1, nodes.y1 = y1;
        return;
      }
      var k = i,
          valueHalf = value / 2,
          valueLeft = 0;
      do
        valueLeft += nodes[k].value;
 while (++k < j - 1 && valueLeft < valueHalf);
      var valueRight = value - valueLeft;
      if ((y1 - y0) > (x1 - x0)) {
        var yk = (y0 * valueRight + y1 * valueLeft) / value;
        partition$1(nodes, i, k, valueLeft, x0, y0, x1, yk);
        partition$1(nodes, k, j, valueRight, x0, yk, x1, y1);
      } else {
        var xk = (x0 * valueRight + x1 * valueLeft) / value;
        partition$1(nodes, i, k, valueLeft, x0, y0, xk, y1);
        partition$1(nodes, k, j, valueRight, xk, y0, x1, y1);
      }
    }
    function sliceDice(parent, x0, y0, x1, y1) {
      (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);
    }
    var resquarify = (function custom(ratio) {
      function resquarify(parent, x0, y0, x1, y1) {
        if ((rows = parent._squarify) && (rows.ratio === ratio)) {
          var rows,
              row,
              nodes,
              i,
              j = -1,
              n,
              m = rows.length,
              value = parent.value;
          while (++j < m) {
            row = rows[j], nodes = row.children;
            for (i = row.value = 0, n = nodes.length; i < n; ++i)
              row.value += nodes[i].value;
            if (row.dice)
              treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);
            else
              treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
            value -= row.value;
          }
        } else {
          parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);
          rows.ratio = ratio;
        }
      }
      resquarify.ratio = function(x) {
        return custom((x = +x) > 1 ? x : 1);
      };
      return resquarify;
    })(phi);
    exports.version = version;
    exports.cluster = cluster;
    exports.hierarchy = hierarchy;
    exports.pack = index;
    exports.packSiblings = siblings;
    exports.packEnclose = enclose;
    exports.partition = partition;
    exports.stratify = stratify;
    exports.tree = tree;
    exports.treemap = index$1;
    exports.treemapBinary = binary;
    exports.treemapDice = treemapDice;
    exports.treemapSlice = treemapSlice;
    exports.treemapSliceDice = sliceDice;
    exports.treemapSquarify = squarify;
    exports.treemapResquarify = resquarify;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-hierarchy@0.2.4.js", ["npm:d3-hierarchy@0.2.4/build/d3-hierarchy.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-hierarchy@0.2.4/build/d3-hierarchy.js');
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/treemap/treemap.js", ["npm:react@15.3.0.js", "npm:d3-hierarchy@0.2.4.js", "npm:d3-color@0.4.2.js", "npm:react-vis@0.4.2/dist/lib/utils/animation-utils.js", "npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js", "npm:react-vis@0.4.2/dist/lib/theme.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _d3Hierarchy = $__require('npm:d3-hierarchy@0.2.4.js');
  var _d3Hierarchy2 = _interopRequireDefault(_d3Hierarchy);
  var _d3Color = $__require('npm:d3-color@0.4.2.js');
  var _d3Color2 = _interopRequireDefault(_d3Color);
  var _animationUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/animation-utils.js');
  var _scalesUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js');
  var _theme = $__require('npm:react-vis@0.4.2/dist/lib/theme.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var TREEMAP_TILE_MODES = {
    squarify: _d3Hierarchy2.default.treemapSquarify,
    slice: _d3Hierarchy2.default.treemapSlice,
    dice: _d3Hierarchy2.default.treemapDice,
    slicedice: _d3Hierarchy2.default.treemapSliceDice
  };
  function getFontColorFromBackground(background) {
    if (background) {
      return _d3Color2.default.hsl(background).l > 0.57 ? '#222' : '#fff';
    }
    return null;
  }
  var Treemap = function(_React$Component) {
    _inherits(Treemap, _React$Component);
    _createClass(Treemap, null, [{
      key: 'propTypes',
      get: function get() {
        return {
          width: _react2.default.PropTypes.number.isRequired,
          height: _react2.default.PropTypes.number.isRequired,
          data: _react2.default.PropTypes.object.isRequired,
          mode: _react2.default.PropTypes.oneOf(Object.keys(TREEMAP_TILE_MODES)),
          padding: _react2.default.PropTypes.number.isRequired,
          animation: _animationUtils.AnimationPropType
        };
      }
    }, {
      key: 'defaultProps',
      get: function get() {
        return {
          mode: 'squarify',
          padding: 1,
          data: {children: []},
          colorRange: _theme.CONTINUOUS_COLOR_RANGE,
          _colorValue: _theme.DEFAULT_COLOR,
          opacityRange: _theme.OPACITY_RANGE,
          _opacityValue: 1
        };
      }
    }]);
    function Treemap(props) {
      _classCallCheck(this, Treemap);
      var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Treemap).call(this, props));
      _this._renderLeaf = _this._renderLeaf.bind(_this);
      _this.state = {scales: _this._getScaleFns(props)};
      return _this;
    }
    _createClass(Treemap, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(props) {
        this.setState({scales: this._getScaleFns(props)});
      }
    }, {
      key: '_getScaleFns',
      value: function _getScaleFns(props) {
        var data = props.data;
        var compatibleProps = _extends({}, props, {_allData: data.children || []});
        return {
          opacity: (0, _scalesUtils.getAttributeFunctor)(compatibleProps, 'opacity'),
          color: (0, _scalesUtils.getAttributeFunctor)(compatibleProps, 'color')
        };
      }
    }, {
      key: '_getNodesToRender',
      value: function _getNodesToRender() {
        var _props = this.props;
        var data = _props.data;
        var height = _props.height;
        var width = _props.width;
        var mode = _props.mode;
        var padding = _props.padding;
        if (data) {
          var tileFn = TREEMAP_TILE_MODES[mode];
          return _d3Hierarchy2.default.treemap(tileFn).tile(_d3Hierarchy2.default.treemapSquarify).size([width, height]).padding(padding)(_d3Hierarchy2.default.hierarchy(data).sort(function(a, b) {
            return a.size - b.size;
          }).sum(function(d) {
            return d.size;
          })).descendants();
        }
        return [];
      }
    }, {
      key: '_renderLeaf',
      value: function _renderLeaf(node, i) {
        if (!i) {
          return null;
        }
        var scales = this.state.scales;
        var background = scales.color(node);
        var opacity = scales.opacity(node);
        var color = getFontColorFromBackground(background);
        var x0 = node.x0;
        var x1 = node.x1;
        var y0 = node.y0;
        var y1 = node.y1;
        var title = node.data.title;
        var style = (0, _animationUtils.getCSSAnimation)(this.props, {
          top: y0 + 'px',
          left: x0 + 'px',
          width: x1 - x0 + 'px',
          height: y1 - y0 + 'px',
          background: background,
          opacity: opacity,
          color: color
        });
        return _react2.default.createElement('div', {
          key: i,
          className: 'rv-treemap__leaf',
          style: style
        }, _react2.default.createElement('div', {className: 'rv-treemap__leaf__content'}, title));
      }
    }, {
      key: 'render',
      value: function render() {
        var _props2 = this.props;
        var width = _props2.width;
        var height = _props2.height;
        var nodes = this._getNodesToRender();
        return _react2.default.createElement('div', {
          className: 'rv-treemap',
          style: {
            width: width + 'px',
            height: height + 'px'
          }
        }, nodes.map(this._renderLeaf));
      }
    }]);
    return Treemap;
  }(_react2.default.Component);
  Treemap.displayName = 'Treemap';
  exports.default = Treemap;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/xy-plot.js", ["npm:react@15.3.0.js", "npm:deep-equal@1.0.1.js", "npm:react-vis@0.4.2/dist/lib/utils/series-utils.js", "npm:react-vis@0.4.2/dist/lib/utils/chart-utils.js", "npm:react-vis@0.4.2/dist/lib/theme.js", "npm:react-vis@0.4.2/dist/lib/utils/animation-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _deepEqual = $__require('npm:deep-equal@1.0.1.js');
  var _deepEqual2 = _interopRequireDefault(_deepEqual);
  var _seriesUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/series-utils.js');
  var _chartUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/chart-utils.js');
  var _theme = $__require('npm:react-vis@0.4.2/dist/lib/theme.js');
  var _animationUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/animation-utils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var ATTRIBUTES = ['x', 'y', 'color', 'fill', 'stroke', 'opacity', 'size'];
  var XYPlot = function(_React$Component) {
    _inherits(XYPlot, _React$Component);
    _createClass(XYPlot, null, [{
      key: 'propTypes',
      get: function get() {
        return {
          width: _react2.default.PropTypes.number.isRequired,
          height: _react2.default.PropTypes.number.isRequired,
          margin: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.shape({
            left: _react2.default.PropTypes.number,
            top: _react2.default.PropTypes.number,
            right: _react2.default.PropTypes.number,
            bottom: _react2.default.PropTypes.number
          }), _react2.default.PropTypes.number]),
          onMouseLeave: _react2.default.PropTypes.func,
          onMouseMove: _react2.default.PropTypes.func,
          onMouseEnter: _react2.default.PropTypes.func,
          animation: _animationUtils.AnimationPropType,
          stackBy: _react2.default.PropTypes.oneOf(ATTRIBUTES)
        };
      }
    }, {
      key: 'defaultProps',
      get: function get() {
        return {margin: {
            left: 40,
            right: 10,
            top: 10,
            bottom: 40
          }};
      }
    }]);
    function XYPlot(props) {
      _classCallCheck(this, XYPlot);
      var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(XYPlot).call(this, props));
      _this._mouseLeaveHandler = _this._mouseLeaveHandler.bind(_this);
      _this._mouseEnterHandler = _this._mouseEnterHandler.bind(_this);
      _this._mouseMoveHandler = _this._mouseMoveHandler.bind(_this);
      var stackBy = props.stackBy;
      var children = (0, _seriesUtils.getSeriesChildren)(props.children);
      var data = (0, _seriesUtils.getStackedData)(children, stackBy);
      _this.state = {
        scaleMixins: _this._getScaleMixins(data, props),
        data: data
      };
      return _this;
    }
    _createClass(XYPlot, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var children = (0, _seriesUtils.getSeriesChildren)(nextProps.children);
        var nextData = (0, _seriesUtils.getStackedData)(children, nextProps.stackBy);
        var scaleMixins = this.state.scaleMixins;
        var nextScaleMixins = this._getScaleMixins(nextData, nextProps);
        if (!(0, _deepEqual2.default)(nextScaleMixins, scaleMixins)) {
          this.setState({
            scaleMixins: nextScaleMixins,
            data: nextData
          });
        }
      }
    }, {
      key: '_mouseMoveHandler',
      value: function _mouseMoveHandler(event) {
        var _this2 = this;
        var _props = this.props;
        var onMouseMove = _props.onMouseMove;
        var children = _props.children;
        if (onMouseMove) {
          onMouseMove(event);
        }
        var seriesChildren = (0, _seriesUtils.getSeriesChildren)(children);
        seriesChildren.forEach(function(child, index) {
          var component = _this2.refs['series' + index];
          if (component && component.onParentMouseMove) {
            component.onParentMouseMove(event);
          }
        });
      }
    }, {
      key: '_mouseLeaveHandler',
      value: function _mouseLeaveHandler(event) {
        var onMouseLeave = this.props.onMouseLeave;
        if (onMouseLeave) {
          onMouseLeave({event: event});
        }
      }
    }, {
      key: '_mouseEnterHandler',
      value: function _mouseEnterHandler(event) {
        var onMouseEnter = this.props.onMouseEnter;
        if (onMouseEnter) {
          onMouseEnter({event: event});
        }
      }
    }, {
      key: '_getScaleDefaults',
      value: function _getScaleDefaults(props) {
        var _getInnerDimensions = (0, _chartUtils.getInnerDimensions)(props);
        var innerWidth = _getInnerDimensions.innerWidth;
        var innerHeight = _getInnerDimensions.innerHeight;
        return {
          xRange: [0, innerWidth],
          yRange: [innerHeight, 0],
          colorRange: _theme.CONTINUOUS_COLOR_RANGE,
          opacityRange: _theme.OPACITY_RANGE,
          sizeRange: _theme.SIZE_RANGE
        };
      }
    }, {
      key: '_getScaleMixins',
      value: function _getScaleMixins(data, props) {
        var attrProps = {};
        var defaults = this._getScaleDefaults(props);
        var children = (0, _seriesUtils.getSeriesChildren)(props.children);
        Object.keys(props).forEach(function(key) {
          var attr = ATTRIBUTES.find(function(a) {
            return key.indexOf(a) === 0 || key.indexOf('_' + a) === 0;
          });
          if (!attr) {
            return;
          }
          attrProps[key] = props[key];
        });
        var zeroBaseProps = {};
        var adjustBy = new Set();
        var adjustWhat = new Set();
        children.forEach(function(child, index) {
          if (!child || !data[index]) {
            return;
          }
          ATTRIBUTES.forEach(function(attr) {
            var _child$type$getParent = child.type.getParentConfig(attr, child.props);
            var isDomainAdjustmentNeeded = _child$type$getParent.isDomainAdjustmentNeeded;
            var zeroBaseValue = _child$type$getParent.zeroBaseValue;
            if (isDomainAdjustmentNeeded) {
              adjustBy.add(attr);
              adjustWhat.add(index);
            }
            if (zeroBaseValue) {
              zeroBaseProps[attr + 'BaseValue'] = 0;
            }
          });
        });
        return _extends({}, defaults, zeroBaseProps, attrProps, {
          _allData: data,
          _adjustBy: Array.from(adjustBy),
          _adjustWhat: Array.from(adjustWhat),
          _stackBy: props.stackBy
        });
      }
    }, {
      key: '_isPlotEmpty',
      value: function _isPlotEmpty() {
        var data = this.state.data;
        return !data || !data.length || !data.some(function(series) {
          return series && series.some(function(d) {
            return d;
          });
        });
      }
    }, {
      key: '_getClonedChildComponents',
      value: function _getClonedChildComponents() {
        var animation = this.props.animation;
        var _state = this.state;
        var scaleMixins = _state.scaleMixins;
        var data = _state.data;
        var dimensions = (0, _chartUtils.getInnerDimensions)(this.props);
        var children = _react2.default.Children.toArray(this.props.children);
        var seriesProps = (0, _seriesUtils.getSeriesPropsFromChildren)(children);
        return children.map(function(child, index) {
          var dataProps = null;
          if (seriesProps[index]) {
            var seriesIndex = seriesProps[index].seriesIndex;
            dataProps = {data: data[seriesIndex]};
          }
          return _react2.default.cloneElement(child, _extends({}, dimensions, {animation: animation}, seriesProps[index], scaleMixins, child.props, dataProps));
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var _props2 = this.props;
        var width = _props2.width;
        var height = _props2.height;
        if (this._isPlotEmpty()) {
          return _react2.default.createElement('div', {
            className: 'rv-xy-plot',
            style: {
              width: width + 'px',
              height: height + 'px'
            }
          });
        }
        var components = this._getClonedChildComponents();
        return _react2.default.createElement('div', {
          style: {
            width: width + 'px',
            height: height + 'px'
          },
          className: 'rv-xy-plot'
        }, _react2.default.createElement('svg', {
          className: 'rv-xy-plot__inner',
          width: width,
          height: height,
          onMouseMove: this._mouseMoveHandler,
          onMouseLeave: this._mouseLeaveHandler,
          onMouseEnter: this._mouseEnterHandler
        }, components.filter(function(c) {
          return c && c.type.requiresSVG;
        })), components.filter(function(c) {
          return c && !c.type.requiresSVG;
        }));
      }
    }]);
    return XYPlot;
  }(_react2.default.Component);
  XYPlot.displayName = 'XYPlot';
  exports.default = XYPlot;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/series/vertical-bar-series.js", ["npm:react@15.3.0.js", "npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js", "npm:react-vis@0.4.2/dist/lib/plot/series/bar-series.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _abstractSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js');
  var _abstractSeries2 = _interopRequireDefault(_abstractSeries);
  var _barSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/bar-series.js');
  var _barSeries2 = _interopRequireDefault(_barSeries);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var VerticalBarSeries = function(_AbstractSeries) {
    _inherits(VerticalBarSeries, _AbstractSeries);
    function VerticalBarSeries() {
      _classCallCheck(this, VerticalBarSeries);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(VerticalBarSeries).apply(this, arguments));
    }
    _createClass(VerticalBarSeries, [{
      key: 'render',
      value: function render() {
        return _react2.default.createElement(_barSeries2.default, _extends({}, this.props, {
          linePosAttr: 'x',
          valuePosAttr: 'y',
          lineSizeAttr: 'width',
          valueSizeAttr: 'height'
        }));
      }
    }], [{
      key: 'getParentConfig',
      value: function getParentConfig(attr) {
        var isDomainAdjustmentNeeded = attr === 'x';
        var zeroBaseValue = attr === 'y';
        return {
          isDomainAdjustmentNeeded: isDomainAdjustmentNeeded,
          zeroBaseValue: zeroBaseValue
        };
      }
    }]);
    return VerticalBarSeries;
  }(_abstractSeries2.default);
  VerticalBarSeries.displayName = 'VerticalBarSeries';
  exports.default = VerticalBarSeries;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/series/bar-series.js", ["npm:react@15.3.0.js", "npm:d3-selection@0.7.3.js", "npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js", "npm:react-vis@0.4.2/dist/lib/utils/react-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _d3Selection = $__require('npm:d3-selection@0.7.3.js');
  var _d3Selection2 = _interopRequireDefault(_d3Selection);
  var _abstractSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js');
  var _abstractSeries2 = _interopRequireDefault(_abstractSeries);
  var _reactUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/react-utils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var BarSeries = function(_AbstractSeries) {
    _inherits(BarSeries, _AbstractSeries);
    function BarSeries() {
      _classCallCheck(this, BarSeries);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(BarSeries).apply(this, arguments));
    }
    _createClass(BarSeries, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._updateSeries();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this._updateSeries();
      }
    }, {
      key: '_updateSeries',
      value: function _updateSeries() {
        var container = (0, _reactUtils.getDOMNode)(this.refs.container);
        var _props = this.props;
        var _stackBy = _props._stackBy;
        var data = _props.data;
        var lineSizeAttr = _props.lineSizeAttr;
        var valuePosAttr = _props.valuePosAttr;
        var linePosAttr = _props.linePosAttr;
        var valueSizeAttr = _props.valueSizeAttr;
        var _props2 = this.props;
        var _props2$sameTypeTotal = _props2.sameTypeTotal;
        var sameTypeTotal = _props2$sameTypeTotal === undefined ? 1 : _props2$sameTypeTotal;
        var _props2$sameTypeIndex = _props2.sameTypeIndex;
        var sameTypeIndex = _props2$sameTypeIndex === undefined ? 0 : _props2$sameTypeIndex;
        if (!data || !data.length) {
          return;
        }
        var distance = this._getScaleDistance(linePosAttr);
        var lineFunctor = this._getAttributeFunctor(linePosAttr);
        var valueFunctor = this._getAttributeFunctor(valuePosAttr);
        var value0Functor = this._getAttr0Functor(valuePosAttr);
        if (_stackBy === valuePosAttr) {
          sameTypeTotal = 1;
          sameTypeIndex = 0;
        }
        var rects = _d3Selection2.default.select(container).selectAll('rect').data(data).on('mouseover', this._mouseOverWithValue).on('mouseout', this._mouseOutWithValue).on('click', this._clickWithValue);
        var itemSize = distance / 2 * 0.85;
        this._applyTransition(rects).style('opacity', this._getAttributeFunctor('opacity')).style('fill', this._getAttributeFunctor('fill') || this._getAttributeFunctor('color')).style('stroke', this._getAttributeFunctor('stroke') || this._getAttributeFunctor('color')).attr(linePosAttr, function(d) {
          return lineFunctor(d) - itemSize + itemSize * 2 / sameTypeTotal * sameTypeIndex;
        }).attr(lineSizeAttr, itemSize * 2 / sameTypeTotal).attr(valuePosAttr, function(d) {
          return Math.min(value0Functor(d), valueFunctor(d));
        }).attr(valueSizeAttr, function(d) {
          return Math.abs(-value0Functor(d) + valueFunctor(d));
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var _props3 = this.props;
        var data = _props3.data;
        var marginLeft = _props3.marginLeft;
        var marginTop = _props3.marginTop;
        if (!data) {
          return null;
        }
        return _react2.default.createElement('g', {
          className: 'rv-xy-plot__series rv-xy-plot__series--bar',
          ref: 'container',
          transform: 'translate(' + marginLeft + ',' + marginTop + ')'
        }, data.map(function(d, i) {
          return _react2.default.createElement('rect', {
            style: {opacity: 0},
            key: i
          });
        }));
      }
    }], [{
      key: 'propTypes',
      get: function get() {
        return _extends({}, _abstractSeries2.default.propTypes, {
          linePosAttr: _react2.default.PropTypes.string,
          valuePosAttr: _react2.default.PropTypes.string,
          lineSizeAttr: _react2.default.PropTypes.string,
          valueSizeAttr: _react2.default.PropTypes.string
        });
      }
    }]);
    return BarSeries;
  }(_abstractSeries2.default);
  BarSeries.displayName = 'BarSeries';
  exports.default = BarSeries;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/series/horizontal-bar-series.js", ["npm:react@15.3.0.js", "npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js", "npm:react-vis@0.4.2/dist/lib/plot/series/bar-series.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _abstractSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js');
  var _abstractSeries2 = _interopRequireDefault(_abstractSeries);
  var _barSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/bar-series.js');
  var _barSeries2 = _interopRequireDefault(_barSeries);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var HorizontalBarSeries = function(_AbstractSeries) {
    _inherits(HorizontalBarSeries, _AbstractSeries);
    function HorizontalBarSeries() {
      _classCallCheck(this, HorizontalBarSeries);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(HorizontalBarSeries).apply(this, arguments));
    }
    _createClass(HorizontalBarSeries, [{
      key: 'render',
      value: function render() {
        return _react2.default.createElement(_barSeries2.default, _extends({}, this.props, {
          linePosAttr: 'y',
          valuePosAttr: 'x',
          lineSizeAttr: 'height',
          valueSizeAttr: 'width'
        }));
      }
    }], [{
      key: 'getParentConfig',
      value: function getParentConfig(attr) {
        var isDomainAdjustmentNeeded = attr === 'y';
        var zeroBaseValue = attr === 'x';
        return {
          isDomainAdjustmentNeeded: isDomainAdjustmentNeeded,
          zeroBaseValue: zeroBaseValue
        };
      }
    }]);
    return HorizontalBarSeries;
  }(_abstractSeries2.default);
  HorizontalBarSeries.displayName = 'HorizontalBarSeries';
  exports.default = HorizontalBarSeries;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/series/heatmap-series.js", ["npm:react@15.3.0.js", "npm:d3-selection@0.7.3.js", "npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js", "npm:react-vis@0.4.2/dist/lib/utils/react-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _d3Selection = $__require('npm:d3-selection@0.7.3.js');
  var _d3Selection2 = _interopRequireDefault(_d3Selection);
  var _abstractSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js');
  var _abstractSeries2 = _interopRequireDefault(_abstractSeries);
  var _reactUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/react-utils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var HeatmapSeries = function(_AbstractSeries) {
    _inherits(HeatmapSeries, _AbstractSeries);
    function HeatmapSeries() {
      _classCallCheck(this, HeatmapSeries);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(HeatmapSeries).apply(this, arguments));
    }
    _createClass(HeatmapSeries, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._updateSeries();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this._updateSeries();
      }
    }, {
      key: '_updateSeries',
      value: function _updateSeries() {
        var container = (0, _reactUtils.getDOMNode)(this.refs.container);
        var data = this.props.data;
        var xDistance = this._getScaleDistance('x');
        var yDistance = this._getScaleDistance('y');
        if (!data) {
          return;
        }
        var x = this._getAttributeFunctor('x');
        var y = this._getAttributeFunctor('y');
        var rects = _d3Selection2.default.select(container).selectAll('rect').data(data).on('mouseover', this._mouseOverWithValue).on('mouseout', this._mouseOutWithValue).on('click', this._clickWithValue);
        this._applyTransition(rects).style('opacity', this._getAttributeFunctor('opacity')).style('fill', this._getAttributeFunctor('fill') || this._getAttributeFunctor('color')).style('stroke', this._getAttributeFunctor('stroke') || this._getAttributeFunctor('color')).attr('x', function getX(d) {
          return x(d) - xDistance / 2;
        }).attr('y', function getY(d) {
          return y(d) - yDistance / 2;
        }).attr('width', xDistance).attr('height', yDistance);
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props;
        var data = _props.data;
        var marginLeft = _props.marginLeft;
        var marginTop = _props.marginTop;
        if (!data) {
          return null;
        }
        return _react2.default.createElement('g', {
          className: 'rv-xy-plot__series rv-xy-plot__series--heatmap',
          ref: 'container',
          transform: 'translate(' + marginLeft + ',' + marginTop + ')'
        }, data.map(function(d, i) {
          return _react2.default.createElement('rect', {
            style: {opacity: 0},
            key: i
          });
        }));
      }
    }], [{
      key: 'getParentConfig',
      value: function getParentConfig(attr) {
        var isDomainAdjustmentNeeded = attr === 'x' || attr === 'y';
        return {isDomainAdjustmentNeeded: isDomainAdjustmentNeeded};
      }
    }]);
    return HeatmapSeries;
  }(_abstractSeries2.default);
  HeatmapSeries.displayName = 'HeatmapSeries';
  exports.default = HeatmapSeries;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/series/area-series.js", ["npm:react@15.3.0.js", "npm:d3-selection@0.7.3.js", "npm:d3-shape@0.6.1.js", "npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js", "npm:react-vis@0.4.2/dist/lib/utils/react-utils.js", "npm:react-vis@0.4.2/dist/lib/theme.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _d3Selection = $__require('npm:d3-selection@0.7.3.js');
  var _d3Selection2 = _interopRequireDefault(_d3Selection);
  var _d3Shape = $__require('npm:d3-shape@0.6.1.js');
  var _d3Shape2 = _interopRequireDefault(_d3Shape);
  var _abstractSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js');
  var _abstractSeries2 = _interopRequireDefault(_abstractSeries);
  var _reactUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/react-utils.js');
  var _theme = $__require('npm:react-vis@0.4.2/dist/lib/theme.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var AreaSeries = function(_AbstractSeries) {
    _inherits(AreaSeries, _AbstractSeries);
    function AreaSeries() {
      _classCallCheck(this, AreaSeries);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(AreaSeries).apply(this, arguments));
    }
    _createClass(AreaSeries, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._updateSeries();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this._updateSeries();
      }
    }, {
      key: '_updateSeries',
      value: function _updateSeries() {
        var lineElement = (0, _reactUtils.getDOMNode)(this.refs.line);
        var data = this.props.data;
        if (!data) {
          return;
        }
        var x = this._getAttributeFunctor('x');
        var y = this._getAttributeFunctor('y');
        var y0 = this._getAttr0Functor('y');
        var fill = this._getAttributeValue('fill') || this._getAttributeValue('color');
        var stroke = this._getAttributeValue('stroke') || this._getAttributeValue('color');
        var line = _d3Shape2.default.area().x(x).y0(y0).y1(y);
        var opacity = this._getAttributeValue('opacity') || _theme.DEFAULT_OPACITY;
        var d = line(data);
        var path = _d3Selection2.default.select(lineElement).on('mouseover', this._mouseOver).on('mouseout', this._mouseOut).on('click', this._click);
        this._applyTransition(path).attr('d', d).style('stroke', stroke).style('fill', fill).style('opacity', opacity);
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props;
        var data = _props.data;
        var marginLeft = _props.marginLeft;
        var marginTop = _props.marginTop;
        if (!data) {
          return null;
        }
        return _react2.default.createElement('path', {
          ref: 'line',
          style: {opacity: 0},
          className: 'rv-xy-plot__series rv-xy-plot__series--area',
          transform: 'translate(' + marginLeft + ',' + marginTop + ')'
        });
      }
    }]);
    return AreaSeries;
  }(_abstractSeries2.default);
  AreaSeries.displayName = 'AreaSeries';
  exports.default = AreaSeries;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/series/line-series.js", ["npm:react@15.3.0.js", "npm:d3-selection@0.7.3.js", "npm:d3-shape@0.6.1.js", "npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js", "npm:react-vis@0.4.2/dist/lib/utils/react-utils.js", "npm:react-vis@0.4.2/dist/lib/theme.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _d3Selection = $__require('npm:d3-selection@0.7.3.js');
  var _d3Selection2 = _interopRequireDefault(_d3Selection);
  var _d3Shape = $__require('npm:d3-shape@0.6.1.js');
  var _d3Shape2 = _interopRequireDefault(_d3Shape);
  var _abstractSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js');
  var _abstractSeries2 = _interopRequireDefault(_abstractSeries);
  var _reactUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/react-utils.js');
  var _theme = $__require('npm:react-vis@0.4.2/dist/lib/theme.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var STROKE_STYLES = {
    dashed: '6, 2',
    solid: null
  };
  var LineSeries = function(_AbstractSeries) {
    _inherits(LineSeries, _AbstractSeries);
    function LineSeries() {
      _classCallCheck(this, LineSeries);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(LineSeries).apply(this, arguments));
    }
    _createClass(LineSeries, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._updateSeries();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this._updateSeries();
      }
    }, {
      key: '_updateSeries',
      value: function _updateSeries() {
        var lineElement = (0, _reactUtils.getDOMNode)(this.refs.line);
        var data = this.props.data;
        if (!data) {
          return;
        }
        var x = this._getAttributeFunctor('x');
        var y = this._getAttributeFunctor('y');
        var stroke = this._getAttributeValue('stroke') || this._getAttributeValue('color');
        var opacity = this._getAttributeValue('opacity') || _theme.DEFAULT_OPACITY;
        var line = _d3Shape2.default.line().x(x).y(y);
        var d = line(data);
        var path = _d3Selection2.default.select(lineElement).on('mouseover', this._mouseOver).on('mouseout', this._mouseOut).on('click', this._click);
        this._applyTransition(path).attr('d', d).style('stroke', stroke).style('opacity', opacity);
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props;
        var data = _props.data;
        var strokeStyle = _props.strokeStyle;
        var strokeWidth = _props.strokeWidth;
        var marginLeft = _props.marginLeft;
        var marginTop = _props.marginTop;
        if (!data) {
          return null;
        }
        return _react2.default.createElement('path', {
          ref: 'line',
          className: 'rv-xy-plot__series rv-xy-plot__series--line',
          transform: 'translate(' + marginLeft + ',' + marginTop + ')',
          style: {
            opacity: 0,
            strokeDasharray: STROKE_STYLES[strokeStyle],
            strokeWidth: strokeWidth
          }
        });
      }
    }], [{
      key: 'defaultProps',
      get: function get() {
        return {
          strokeStyle: 'solid',
          opacity: 1
        };
      }
    }]);
    return LineSeries;
  }(_abstractSeries2.default);
  LineSeries.displayName = 'LineSeries';
  exports.default = LineSeries;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/series/mark-series.js", ["npm:react@15.3.0.js", "npm:d3-selection@0.7.3.js", "npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js", "npm:react-vis@0.4.2/dist/lib/utils/react-utils.js", "npm:react-vis@0.4.2/dist/lib/theme.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _d3Selection = $__require('npm:d3-selection@0.7.3.js');
  var _d3Selection2 = _interopRequireDefault(_d3Selection);
  var _abstractSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js');
  var _abstractSeries2 = _interopRequireDefault(_abstractSeries);
  var _reactUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/react-utils.js');
  var _theme = $__require('npm:react-vis@0.4.2/dist/lib/theme.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var MarkSeries = function(_AbstractSeries) {
    _inherits(MarkSeries, _AbstractSeries);
    function MarkSeries() {
      _classCallCheck(this, MarkSeries);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(MarkSeries).apply(this, arguments));
    }
    _createClass(MarkSeries, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._updateSeries();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this._updateSeries();
      }
    }, {
      key: '_updateSeries',
      value: function _updateSeries() {
        var container = (0, _reactUtils.getDOMNode)(this.refs.container);
        var data = this.props.data;
        if (!data) {
          return;
        }
        var circles = _d3Selection2.default.select(container).selectAll('circle').data(data).on('mouseover', this._mouseOverWithValue).on('mouseout', this._mouseOutWithValue).on('click', this._clickWithValue);
        this._applyTransition(circles).attr('r', this._getAttributeFunctor('size') || _theme.DEFAULT_SIZE).style('opacity', this._getAttributeFunctor('opacity') || _theme.DEFAULT_OPACITY).style('fill', this._getAttributeFunctor('fill') || this._getAttributeFunctor('color')).style('stroke', this._getAttributeFunctor('stroke') || this._getAttributeFunctor('color')).attr('cx', this._getAttributeFunctor('x')).attr('cy', this._getAttributeFunctor('y'));
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props;
        var data = _props.data;
        var marginLeft = _props.marginLeft;
        var marginTop = _props.marginTop;
        if (!data) {
          return null;
        }
        return _react2.default.createElement('g', {
          className: 'rv-xy-plot__series rv-xy-plot__series--mark',
          ref: 'container',
          transform: 'translate(' + marginLeft + ',' + marginTop + ')'
        }, data.map(function(d, i) {
          return _react2.default.createElement('circle', {
            style: {opacity: 0},
            key: i
          });
        }));
      }
    }]);
    return MarkSeries;
  }(_abstractSeries2.default);
  MarkSeries.displayName = 'MarkSeries';
  exports.default = MarkSeries;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/series/line-mark-series.js", ["npm:react@15.3.0.js", "npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js", "npm:react-vis@0.4.2/dist/lib/plot/series/line-series.js", "npm:react-vis@0.4.2/dist/lib/plot/series/mark-series.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _abstractSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js');
  var _abstractSeries2 = _interopRequireDefault(_abstractSeries);
  var _lineSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/line-series.js');
  var _lineSeries2 = _interopRequireDefault(_lineSeries);
  var _markSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/mark-series.js');
  var _markSeries2 = _interopRequireDefault(_markSeries);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var LineMarkSeries = function(_AbstractSeries) {
    _inherits(LineMarkSeries, _AbstractSeries);
    function LineMarkSeries() {
      _classCallCheck(this, LineMarkSeries);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(LineMarkSeries).apply(this, arguments));
    }
    _createClass(LineMarkSeries, [{
      key: 'render',
      value: function render() {
        return _react2.default.createElement('g', {className: 'rv-xy-plot__series rv-xy-plot__series--linemark'}, _react2.default.createElement(_lineSeries2.default, this.props), _react2.default.createElement(_markSeries2.default, this.props));
      }
    }], [{
      key: 'defaultProps',
      get: function get() {
        return _lineSeries2.default.defaultProps;
      }
    }]);
    return LineMarkSeries;
  }(_abstractSeries2.default);
  LineMarkSeries.displayName = 'LineMarkSeries';
  exports.default = LineMarkSeries;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/hint.js", ["npm:react@15.3.0.js", "npm:react-vis@0.4.2/dist/lib/pure-render-component.js", "npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _pureRenderComponent = $__require('npm:react-vis@0.4.2/dist/lib/pure-render-component.js');
  var _pureRenderComponent2 = _interopRequireDefault(_pureRenderComponent);
  var _scalesUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var ORIENTATION_AUTO = 'auto';
  var ORIENTATION_TOPLEFT = 'topleft';
  var ORIENTATION_BOTTOMLEFT = 'bottomleft';
  var ORIENTATION_TOPRIGHT = 'topright';
  var ORIENTATION_BOTTOMRIGHT = 'bottomright';
  function defaultFormat(value) {
    return Object.keys(value).map(function getProp(key) {
      return {
        title: key,
        value: value[key]
      };
    });
  }
  var Hint = function(_PureRenderComponent) {
    _inherits(Hint, _PureRenderComponent);
    function Hint() {
      _classCallCheck(this, Hint);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(Hint).apply(this, arguments));
    }
    _createClass(Hint, [{
      key: '_getCSSRight',
      value: function _getCSSRight(x) {
        var _props = this.props;
        var innerWidth = _props.innerWidth;
        var marginRight = _props.marginRight;
        return {right: marginRight + innerWidth - x + 'px'};
      }
    }, {
      key: '_getCSSLeft',
      value: function _getCSSLeft(x) {
        var marginLeft = this.props.marginLeft;
        return {left: marginLeft + x + 'px'};
      }
    }, {
      key: '_getCSSBottom',
      value: function _getCSSBottom(y) {
        var _props2 = this.props;
        var innerHeight = _props2.innerHeight;
        var marginBottom = _props2.marginBottom;
        return {bottom: marginBottom + innerHeight - y + 'px'};
      }
    }, {
      key: '_getCSSTop',
      value: function _getCSSTop(y) {
        var marginTop = this.props.marginTop;
        return {top: marginTop + y + 'px'};
      }
    }, {
      key: '_getOrientationFromAuto',
      value: function _getOrientationFromAuto(x, y) {
        var _props3 = this.props;
        var innerWidth = _props3.innerWidth;
        var innerHeight = _props3.innerHeight;
        if (x > innerWidth / 2) {
          if (y > innerHeight / 2) {
            return ORIENTATION_TOPLEFT;
          }
          return ORIENTATION_BOTTOMLEFT;
        }
        if (y > innerHeight / 2) {
          return ORIENTATION_TOPRIGHT;
        }
        return ORIENTATION_BOTTOMRIGHT;
      }
    }, {
      key: '_getOrientationStyle',
      value: function _getOrientationStyle(orientation, x, y) {
        var xCSS = undefined;
        var yCSS = undefined;
        if (orientation === ORIENTATION_BOTTOMLEFT || orientation === ORIENTATION_BOTTOMRIGHT) {
          yCSS = this._getCSSTop(y);
        } else {
          yCSS = this._getCSSBottom(y);
        }
        if (orientation === ORIENTATION_TOPLEFT || orientation === ORIENTATION_BOTTOMLEFT) {
          xCSS = this._getCSSRight(x);
        } else {
          xCSS = this._getCSSLeft(x);
        }
        return _extends({}, xCSS, yCSS);
      }
    }, {
      key: '_getOrientationClassName',
      value: function _getOrientationClassName(orientation) {
        return 'rv-hint--orientation-' + orientation;
      }
    }, {
      key: '_getPositionInfo',
      value: function _getPositionInfo() {
        var _props4 = this.props;
        var value = _props4.value;
        var initialOrientation = _props4.orientation;
        var x = (0, _scalesUtils.getAttributeFunctor)(this.props, 'x')(value);
        var y = (0, _scalesUtils.getAttributeFunctor)(this.props, 'y')(value);
        var orientation = initialOrientation === ORIENTATION_AUTO ? this._getOrientationFromAuto(x, y) : initialOrientation;
        return {
          style: this._getOrientationStyle(orientation, x, y),
          className: this._getOrientationClassName(orientation)
        };
      }
    }, {
      key: 'render',
      value: function render() {
        var _props5 = this.props;
        var value = _props5.value;
        var format = _props5.format;
        var children = _props5.children;
        var _getPositionInfo2 = this._getPositionInfo();
        var style = _getPositionInfo2.style;
        var className = _getPositionInfo2.className;
        return _react2.default.createElement('div', {
          className: 'rv-hint ' + className,
          style: _extends({}, style, {position: 'absolute'})
        }, children ? children : _react2.default.createElement('div', {className: 'rv-hint__content'}, format(value).map(function(formattedProp, i) {
          return _react2.default.createElement('div', {key: 'rv-hint' + i}, _react2.default.createElement('span', {className: 'rv-hint__title'}, formattedProp.title), ': ', _react2.default.createElement('span', {className: 'rv-hint__value'}, formattedProp.value));
        })));
      }
    }], [{
      key: 'propTypes',
      get: function get() {
        return {
          marginTop: _react2.default.PropTypes.number,
          marginLeft: _react2.default.PropTypes.number,
          innerWidth: _react2.default.PropTypes.number,
          innerHeight: _react2.default.PropTypes.number,
          scales: _react2.default.PropTypes.object,
          value: _react2.default.PropTypes.object,
          format: _react2.default.PropTypes.func,
          orientation: _react2.default.PropTypes.oneOf([ORIENTATION_AUTO, ORIENTATION_BOTTOMLEFT, ORIENTATION_BOTTOMRIGHT, ORIENTATION_TOPLEFT, ORIENTATION_TOPRIGHT])
        };
      }
    }, {
      key: 'defaultProps',
      get: function get() {
        return {
          format: defaultFormat,
          orientation: ORIENTATION_AUTO
        };
      }
    }]);
    return Hint;
  }(_pureRenderComponent2.default);
  Hint.displayName = 'Hint';
  exports.default = Hint;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/crosshair.js", ["npm:react@15.3.0.js", "npm:react-vis@0.4.2/dist/lib/pure-render-component.js", "npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _pureRenderComponent = $__require('npm:react-vis@0.4.2/dist/lib/pure-render-component.js');
  var _pureRenderComponent2 = _interopRequireDefault(_pureRenderComponent);
  var _scalesUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function defaultTitleFormat(values) {
    var value = getFirstNonEmptyValue(values);
    if (value) {
      return {
        title: 'x',
        value: value.x
      };
    }
  }
  function defaultItemsFormat(values) {
    return values.map(function(v, i) {
      if (v) {
        return {
          value: v.y,
          title: i
        };
      }
    });
  }
  function getFirstNonEmptyValue(values) {
    return (values || []).find(function(v) {
      return Boolean(v);
    });
  }
  var Crosshair = function(_PureRenderComponent) {
    _inherits(Crosshair, _PureRenderComponent);
    function Crosshair() {
      _classCallCheck(this, Crosshair);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(Crosshair).apply(this, arguments));
    }
    _createClass(Crosshair, [{
      key: '_renderCrosshairTitle',
      value: function _renderCrosshairTitle() {
        var _props = this.props;
        var values = _props.values;
        var titleFormat = _props.titleFormat;
        var titleItem = titleFormat(values);
        if (!titleItem) {
          return null;
        }
        return _react2.default.createElement('div', {
          className: 'rv-crosshair__title',
          key: 'title'
        }, _react2.default.createElement('span', {className: 'rv-crosshair__title__title'}, titleItem.title), ': ', _react2.default.createElement('span', {className: 'rv-crosshair__title__value'}, titleItem.value));
      }
    }, {
      key: '_renderCrosshairItems',
      value: function _renderCrosshairItems() {
        var _props2 = this.props;
        var values = _props2.values;
        var itemsFormat = _props2.itemsFormat;
        var items = itemsFormat(values);
        if (!items) {
          return null;
        }
        return items.filter(function(i) {
          return i;
        }).map(function renderValue(item, i) {
          return _react2.default.createElement('div', {
            className: 'rv-crosshair__item',
            key: 'item' + i
          }, _react2.default.createElement('span', {className: 'rv-crosshair__item__title'}, item.title), ': ', _react2.default.createElement('span', {className: 'rv-crosshair__item__value'}, item.value));
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var _props3 = this.props;
        var children = _props3.children;
        var values = _props3.values;
        var marginTop = _props3.marginTop;
        var marginLeft = _props3.marginLeft;
        var innerWidth = _props3.innerWidth;
        var innerHeight = _props3.innerHeight;
        var value = getFirstNonEmptyValue(values);
        if (!value) {
          return null;
        }
        var x = (0, _scalesUtils.getAttributeFunctor)(this.props, 'x');
        var innerLeft = x(value);
        var orientation = innerLeft > innerWidth / 2 ? 'left' : 'right';
        var left = marginLeft + innerLeft;
        var top = marginTop;
        var innerClassName = 'rv-crosshair__inner rv-crosshair__inner--' + orientation;
        return _react2.default.createElement('div', {
          className: 'rv-crosshair',
          style: {
            left: left + 'px',
            top: top + 'px'
          }
        }, _react2.default.createElement('div', {
          className: 'rv-crosshair__line',
          style: {height: innerHeight + 'px'}
        }), _react2.default.createElement('div', {className: innerClassName}, children ? children : _react2.default.createElement('div', {className: 'rv-crosshair__inner__content'}, _react2.default.createElement('div', null, this._renderCrosshairTitle(), this._renderCrosshairItems()))));
      }
    }], [{
      key: 'propTypes',
      get: function get() {
        return {
          values: _react2.default.PropTypes.array,
          series: _react2.default.PropTypes.object,
          innerWidth: _react2.default.PropTypes.number,
          innerHeight: _react2.default.PropTypes.number,
          marginLeft: _react2.default.PropTypes.number,
          marginTop: _react2.default.PropTypes.number,
          itemsFormat: _react2.default.PropTypes.func,
          titleFormat: _react2.default.PropTypes.func
        };
      }
    }, {
      key: 'defaultProps',
      get: function get() {
        return {
          titleFormat: defaultTitleFormat,
          itemsFormat: defaultItemsFormat
        };
      }
    }]);
    return Crosshair;
  }(_pureRenderComponent2.default);
  Crosshair.displayName = 'Crosshair';
  exports.default = Crosshair;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/x-axis.js", ["npm:react@15.3.0.js", "npm:react-vis@0.4.2/dist/lib/pure-render-component.js", "npm:react-vis@0.4.2/dist/lib/plot/axis.js", "npm:react-vis@0.4.2/dist/lib/utils/axis-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _pureRenderComponent = $__require('npm:react-vis@0.4.2/dist/lib/pure-render-component.js');
  var _pureRenderComponent2 = _interopRequireDefault(_pureRenderComponent);
  var _axis = $__require('npm:react-vis@0.4.2/dist/lib/plot/axis.js');
  var _axis2 = _interopRequireDefault(_axis);
  var _axisUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/axis-utils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var XAxis = function(_PureRenderComponent) {
    _inherits(XAxis, _PureRenderComponent);
    function XAxis() {
      _classCallCheck(this, XAxis);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(XAxis).apply(this, arguments));
    }
    _createClass(XAxis, [{
      key: 'render',
      value: function render() {
        var _props = this.props;
        var innerWidth = _props.innerWidth;
        var innerHeight = _props.innerHeight;
        var marginTop = _props.marginTop;
        var marginLeft = _props.marginLeft;
        return _react2.default.createElement(_axis2.default, _extends({}, this.props, {
          className: 'rv-xy-plot__axis--x',
          orientation: 'bottom',
          titleStyle: {
            transform: 'translate(' + innerWidth + 'px, -5px)',
            textAnchor: 'end'
          },
          ticksTotal: (0, _axisUtils.getTicksTotalFromSize)(innerWidth),
          top: innerHeight + marginTop,
          left: marginLeft,
          attr: 'x'
        }));
      }
    }], [{
      key: 'requiresSVG',
      get: function get() {
        return true;
      }
    }]);
    return XAxis;
  }(_pureRenderComponent2.default);
  XAxis.displayName = 'XAxis';
  exports.default = XAxis;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/axis.js", ["npm:react@15.3.0.js", "npm:d3-selection@0.7.3.js", "npm:react-vis@0.4.2/dist/lib/pure-render-component.js", "npm:react-vis@0.4.2/dist/lib/utils/react-utils.js", "npm:react-vis@0.4.2/dist/lib/utils/axis-utils.js", "npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js", "npm:react-vis@0.4.2/dist/lib/utils/animation-utils.js", "npm:react-vis@0.4.2/dist/lib/theme.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _d3Selection = $__require('npm:d3-selection@0.7.3.js');
  var _d3Selection2 = _interopRequireDefault(_d3Selection);
  var _pureRenderComponent = $__require('npm:react-vis@0.4.2/dist/lib/pure-render-component.js');
  var _pureRenderComponent2 = _interopRequireDefault(_pureRenderComponent);
  var _reactUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/react-utils.js');
  var _axisUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/axis-utils.js');
  var _scalesUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js');
  var _animationUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/animation-utils.js');
  var _theme = $__require('npm:react-vis@0.4.2/dist/lib/theme.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var Axis = function(_PureRenderComponent) {
    _inherits(Axis, _PureRenderComponent);
    function Axis() {
      _classCallCheck(this, Axis);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(Axis).apply(this, arguments));
    }
    _createClass(Axis, [{
      key: '_setAxisLabels',
      value: function _setAxisLabels(axis) {
        var _props = this.props;
        var labelFormat = _props.labelFormat;
        var labelValues = _props.labelValues;
        var ticksTotal = _props.ticksTotal;
        if (!labelValues) {
          axis.ticks(ticksTotal);
        } else {
          axis.tickValues(labelValues);
        }
        if (labelFormat) {
          axis.tickFormat(labelFormat);
        }
        axis.tickSize(0, 0);
        axis.tickSizeOuter(0);
        axis.tickPadding(14);
        return axis;
      }
    }, {
      key: '_setAxisTicks',
      value: function _setAxisTicks(axis) {
        var _props2 = this.props;
        var tickValues = _props2.tickValues;
        var ticksTotal = _props2.ticksTotal;
        var tickSize = _props2.tickSize;
        if (!tickValues) {
          axis.ticks(ticksTotal);
        } else {
          axis.tickValues(tickValues);
        }
        axis.tickFormat('');
        axis.tickSize(tickSize);
        axis.tickSizeOuter(0);
        return axis;
      }
    }, {
      key: '_render',
      value: function _render() {
        var _props3 = this.props;
        var orientation = _props3.orientation;
        var attr = _props3.attr;
        var scale = (0, _scalesUtils.getAttributeScale)(this.props, attr);
        if (!scale) {
          return;
        }
        var _refs = this.refs;
        var labels = _refs.labels;
        var ticks = _refs.ticks;
        var selectedLabels = _d3Selection2.default.select((0, _reactUtils.getDOMNode)(labels));
        var selectedTicks = _d3Selection2.default.select((0, _reactUtils.getDOMNode)(ticks));
        var axisFn = (0, _axisUtils.getAxisFnByOrientation)(orientation);
        var axis = this._setAxisLabels(axisFn(scale));
        (0, _animationUtils.applyTransition)(this.props, selectedLabels).call(this._setAxisLabels(axis));
        (0, _animationUtils.applyTransition)(this.props, selectedTicks).call(this._setAxisTicks(axis));
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._render();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this._render();
      }
    }, {
      key: 'render',
      value: function render() {
        var _props4 = this.props;
        var title = _props4.title;
        var left = _props4.left;
        var top = _props4.top;
        var className = _props4.className;
        var hasTitle = title && title !== '';
        return _react2.default.createElement('g', {
          className: 'rv-xy-plot__axis ' + className,
          transform: 'translate(' + left + ',' + top + ')',
          ref: 'container'
        }, _react2.default.createElement('g', {
          ref: 'labels',
          className: 'rv-xy-plot__axis__labels'
        }), _react2.default.createElement('g', {
          ref: 'ticks',
          className: 'rv-xy-plot__axis__ticks'
        }), hasTitle ? _react2.default.createElement('g', {
          className: 'rv-xy-plot__axis__title',
          style: this.props.titleStyle
        }, _react2.default.createElement('text', null, title)) : null);
      }
    }], [{
      key: 'propTypes',
      get: function get() {
        return {
          title: _react2.default.PropTypes.string,
          classSet: _react2.default.PropTypes.object,
          attr: _react2.default.PropTypes.string.isRequired,
          orientation: _react2.default.PropTypes.oneOf(_axisUtils.AXIS_ORIENTATIONS),
          labelFormat: _react2.default.PropTypes.func,
          labelValues: _react2.default.PropTypes.array,
          tickValues: _react2.default.PropTypes.array,
          ticksTotal: _react2.default.PropTypes.number,
          tickSize: _react2.default.PropTypes.number,
          animation: _animationUtils.AnimationPropType
        };
      }
    }, {
      key: 'defaultProps',
      get: function get() {
        return {tickSize: _theme.DEFAULT_TICK_SIZE};
      }
    }, {
      key: 'requiresSVG',
      get: function get() {
        return true;
      }
    }]);
    return Axis;
  }(_pureRenderComponent2.default);
  Axis.displayName = 'Axis';
  exports.default = Axis;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/y-axis.js", ["npm:react@15.3.0.js", "npm:react-vis@0.4.2/dist/lib/pure-render-component.js", "npm:react-vis@0.4.2/dist/lib/plot/axis.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _pureRenderComponent = $__require('npm:react-vis@0.4.2/dist/lib/pure-render-component.js');
  var _pureRenderComponent2 = _interopRequireDefault(_pureRenderComponent);
  var _axis = $__require('npm:react-vis@0.4.2/dist/lib/plot/axis.js');
  var _axis2 = _interopRequireDefault(_axis);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var YAxis = function(_PureRenderComponent) {
    _inherits(YAxis, _PureRenderComponent);
    function YAxis() {
      _classCallCheck(this, YAxis);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(YAxis).apply(this, arguments));
    }
    _createClass(YAxis, [{
      key: 'render',
      value: function render() {
        var _props = this.props;
        var innerHeight = _props.innerHeight;
        var marginTop = _props.marginTop;
        var marginLeft = _props.marginLeft;
        var ticksTotal = undefined;
        if (innerHeight < 700) {
          if (innerHeight > 300) {
            ticksTotal = 10;
          } else {
            ticksTotal = 5;
          }
        } else {
          ticksTotal = 20;
        }
        return _react2.default.createElement(_axis2.default, _extends({}, this.props, {
          className: 'rv-xy-plot__axis--y',
          titleStyle: {
            transform: 'translate(16px, 0) rotate(-90deg)',
            textAnchor: 'end'
          },
          orientation: 'left',
          ticksTotal: ticksTotal,
          attr: 'y',
          left: marginLeft,
          top: marginTop
        }));
      }
    }], [{
      key: 'requiresSVG',
      get: function get() {
        return true;
      }
    }]);
    return YAxis;
  }(_pureRenderComponent2.default);
  YAxis.displayName = 'YAxis';
  exports.default = YAxis;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/vertical-grid-lines.js", ["npm:react@15.3.0.js", "npm:react-vis@0.4.2/dist/lib/pure-render-component.js", "npm:react-vis@0.4.2/dist/lib/plot/grid-lines.js", "npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js", "npm:react-vis@0.4.2/dist/lib/utils/axis-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _pureRenderComponent = $__require('npm:react-vis@0.4.2/dist/lib/pure-render-component.js');
  var _pureRenderComponent2 = _interopRequireDefault(_pureRenderComponent);
  var _gridLines = $__require('npm:react-vis@0.4.2/dist/lib/plot/grid-lines.js');
  var _gridLines2 = _interopRequireDefault(_gridLines);
  var _scalesUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js');
  var _axisUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/axis-utils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var VerticalGridLines = function(_PureRenderComponent) {
    _inherits(VerticalGridLines, _PureRenderComponent);
    function VerticalGridLines() {
      _classCallCheck(this, VerticalGridLines);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(VerticalGridLines).apply(this, arguments));
    }
    _createClass(VerticalGridLines, [{
      key: 'render',
      value: function render() {
        var _props = this.props;
        var innerHeight = _props.innerHeight;
        var innerWidth = _props.innerWidth;
        return _react2.default.createElement(_gridLines2.default, _extends({}, this.props, {
          attr: 'x',
          orientation: 'bottom',
          top: innerHeight,
          ticksTotal: (0, _axisUtils.getTicksTotalFromSize)(innerWidth),
          tickSize: -innerHeight
        }));
      }
    }], [{
      key: 'propTypes',
      get: function get() {
        return _extends({
          values: _react2.default.PropTypes.array,
          marginTop: _react2.default.PropTypes.number,
          marginLeft: _react2.default.PropTypes.number,
          innerWidth: _react2.default.PropTypes.number,
          innerHeight: _react2.default.PropTypes.number
        }, (0, _scalesUtils.getScalePropTypesByAttribute)('x'));
      }
    }, {
      key: 'requiresSVG',
      get: function get() {
        return true;
      }
    }]);
    return VerticalGridLines;
  }(_pureRenderComponent2.default);
  VerticalGridLines.displayName = 'VerticalGridLines';
  exports.default = VerticalGridLines;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/grid-lines.js", ["npm:react@15.3.0.js", "npm:d3-selection@0.7.3.js", "npm:react-vis@0.4.2/dist/lib/pure-render-component.js", "npm:react-vis@0.4.2/dist/lib/utils/react-utils.js", "npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js", "npm:react-vis@0.4.2/dist/lib/utils/axis-utils.js", "npm:react-vis@0.4.2/dist/lib/utils/animation-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _d3Selection = $__require('npm:d3-selection@0.7.3.js');
  var _d3Selection2 = _interopRequireDefault(_d3Selection);
  var _pureRenderComponent = $__require('npm:react-vis@0.4.2/dist/lib/pure-render-component.js');
  var _pureRenderComponent2 = _interopRequireDefault(_pureRenderComponent);
  var _reactUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/react-utils.js');
  var _scalesUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js');
  var _axisUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/axis-utils.js');
  var _animationUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/animation-utils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var GridLines = function(_PureRenderComponent) {
    _inherits(GridLines, _PureRenderComponent);
    function GridLines() {
      _classCallCheck(this, GridLines);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(GridLines).apply(this, arguments));
    }
    _createClass(GridLines, [{
      key: '_render',
      value: function _render() {
        var _props = this.props;
        var attr = _props.attr;
        var tickSize = _props.tickSize;
        var orientation = _props.orientation;
        var ticksTotal = _props.ticksTotal;
        var values = _props.values;
        var scale = (0, _scalesUtils.getAttributeScale)(this.props, attr);
        if (!scale) {
          return;
        }
        var container = _d3Selection2.default.select((0, _reactUtils.getDOMNode)(this.refs.container));
        var axisFn = (0, _axisUtils.getAxisFnByOrientation)(orientation);
        var axis = axisFn(scale).tickFormat('').tickSize(tickSize, 0, 0);
        if (!values) {
          axis.ticks(ticksTotal);
        } else {
          axis.tickValues(values);
        }
        (0, _animationUtils.applyTransition)(this.props, container).call(axis);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._render();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this._render();
      }
    }, {
      key: 'render',
      value: function render() {
        var _props2 = this.props;
        var top = _props2.top;
        var left = _props2.left;
        var marginTop = _props2.marginTop;
        var marginLeft = _props2.marginLeft;
        return _react2.default.createElement('g', {
          transform: 'translate(' + marginLeft + ', ' + marginTop + ')',
          className: 'rv-xy-plot__grid-lines'
        }, _react2.default.createElement('g', {
          ref: 'container',
          transform: 'translate(' + left + ', ' + top + ')'
        }));
      }
    }], [{
      key: 'propTypes',
      get: function get() {
        return {
          tickSize: _react2.default.PropTypes.number,
          ticksTotal: _react2.default.PropTypes.number,
          values: _react2.default.PropTypes.array,
          attr: _react2.default.PropTypes.string.isRequired,
          orientation: _react2.default.PropTypes.oneOf(_axisUtils.AXIS_ORIENTATIONS),
          top: _react2.default.PropTypes.number,
          left: _react2.default.PropTypes.number,
          marginTop: _react2.default.PropTypes.number,
          marginLeft: _react2.default.PropTypes.number,
          animation: _animationUtils.AnimationPropType
        };
      }
    }, {
      key: 'defaultProps',
      get: function get() {
        return {
          top: 0,
          left: 0
        };
      }
    }, {
      key: 'requiresSVG',
      get: function get() {
        return true;
      }
    }]);
    return GridLines;
  }(_pureRenderComponent2.default);
  GridLines.displayName = 'GridLines';
  exports.default = GridLines;
  return module.exports;
});

System.registerDynamic("npm:d3-axis@0.3.2/build/d3-axis.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (factory((global.d3_axis = global.d3_axis || {})));
  }(this, function(exports) {
    'use strict';
    var version = "0.3.2";
    var slice = Array.prototype.slice;
    function identity(x) {
      return x;
    }
    var top = 1;
    var right = 2;
    var bottom = 3;
    var left = 4;
    var epsilon = 1e-6;
    function translateX(scale0, scale1, d) {
      var x = scale0(d);
      return "translate(" + (isFinite(x) ? x : scale1(d)) + ",0)";
    }
    function translateY(scale0, scale1, d) {
      var y = scale0(d);
      return "translate(0," + (isFinite(y) ? y : scale1(d)) + ")";
    }
    function center(scale) {
      var width = scale.bandwidth() / 2;
      return function(d) {
        return scale(d) + width;
      };
    }
    function axis(orient, scale) {
      var tickArguments = [],
          tickValues = null,
          tickFormat = null,
          tickSizeInner = 6,
          tickSizeOuter = 6,
          tickPadding = 3;
      function axis(context) {
        var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,
            format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,
            spacing = Math.max(tickSizeInner, 0) + tickPadding,
            transform = orient === top || orient === bottom ? translateX : translateY,
            range = scale.range(),
            range0 = range[0] + 0.5,
            range1 = range[range.length - 1] + 0.5,
            position = (scale.bandwidth ? center : identity)(scale.copy()),
            selection = context.selection ? context.selection() : context,
            path = selection.selectAll(".domain").data([null]),
            tick = selection.selectAll(".tick").data(values, scale).order(),
            tickExit = tick.exit(),
            tickEnter = tick.enter().append("g", ".domain").attr("class", "tick"),
            line = tick.select("line"),
            text = tick.select("text"),
            k = orient === top || orient === left ? -1 : 1,
            x,
            y = orient === left || orient === right ? (x = "x", "y") : (x = "y", "x");
        path = path.merge(path.enter().append("path").attr("class", "domain").attr("stroke", "#000"));
        tick = tick.merge(tickEnter);
        line = line.merge(tickEnter.append("line").attr("stroke", "#000").attr(x + "2", k * tickSizeInner));
        text = text.merge(tickEnter.append("text").attr("fill", "#000").attr(x, k * spacing));
        if (context !== selection) {
          path = path.transition(context);
          tick = tick.transition(context);
          line = line.transition(context);
          text = text.transition(context);
          tickExit = tickExit.transition(context).attr("opacity", epsilon).attr("transform", function(d) {
            return transform(position, this.parentNode.__axis || position, d);
          });
          tickEnter.attr("opacity", epsilon).attr("transform", function(d) {
            return transform(this.parentNode.__axis || position, position, d);
          });
        }
        tickExit.remove();
        path.attr("d", orient === left || orient == right ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter : "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter);
        tick.attr("opacity", 1).attr("transform", function(d) {
          return transform(position, position, d);
        });
        line.attr(x + "2", k * tickSizeInner).attr(y + "1", 0.5).attr(y + "2", 0.5);
        text.attr(x, k * spacing).attr(y, 0.5).attr("dy", orient === top ? "0em" : orient === bottom ? ".71em" : ".32em").text(format);
        selection.attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle").each(function() {
          this.__axis = position;
        });
      }
      axis.scale = function(_) {
        return arguments.length ? (scale = _, axis) : scale;
      };
      axis.ticks = function() {
        return tickArguments = slice.call(arguments), axis;
      };
      axis.tickArguments = function(_) {
        return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();
      };
      axis.tickValues = function(_) {
        return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();
      };
      axis.tickFormat = function(_) {
        return arguments.length ? (tickFormat = _, axis) : tickFormat;
      };
      axis.tickSize = function(_) {
        return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
      };
      axis.tickSizeInner = function(_) {
        return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
      };
      axis.tickSizeOuter = function(_) {
        return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
      };
      axis.tickPadding = function(_) {
        return arguments.length ? (tickPadding = +_, axis) : tickPadding;
      };
      return axis;
    }
    function axisTop(scale) {
      return axis(top, scale);
    }
    function axisRight(scale) {
      return axis(right, scale);
    }
    function axisBottom(scale) {
      return axis(bottom, scale);
    }
    function axisLeft(scale) {
      return axis(left, scale);
    }
    exports.version = version;
    exports.axisTop = axisTop;
    exports.axisRight = axisRight;
    exports.axisBottom = axisBottom;
    exports.axisLeft = axisLeft;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-axis@0.3.2.js", ["npm:d3-axis@0.3.2/build/d3-axis.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-axis@0.3.2/build/d3-axis.js');
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/utils/axis-utils.js", ["npm:d3-axis@0.3.2.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.AXIS_ORIENTATIONS = undefined;
  exports.getAxisFnByOrientation = getAxisFnByOrientation;
  exports.getTicksTotalFromSize = getTicksTotalFromSize;
  var _d3Axis = $__require('npm:d3-axis@0.3.2.js');
  var _d3Axis2 = _interopRequireDefault(_d3Axis);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var AXIS_FNS = {
    left: _d3Axis2.default.axisLeft,
    right: _d3Axis2.default.axisRight,
    top: _d3Axis2.default.axisTop,
    bottom: _d3Axis2.default.axisBottom
  };
  var AXIS_ORIENTATIONS = exports.AXIS_ORIENTATIONS = Object.keys(AXIS_FNS);
  function getAxisFnByOrientation(orientation) {
    return AXIS_FNS[orientation];
  }
  function getTicksTotalFromSize(size) {
    if (size < 700) {
      if (size > 300) {
        return 10;
      }
      return 5;
    }
    return 20;
  }
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/horizontal-grid-lines.js", ["npm:react@15.3.0.js", "npm:react-vis@0.4.2/dist/lib/pure-render-component.js", "npm:react-vis@0.4.2/dist/lib/plot/grid-lines.js", "npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js", "npm:react-vis@0.4.2/dist/lib/utils/axis-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _pureRenderComponent = $__require('npm:react-vis@0.4.2/dist/lib/pure-render-component.js');
  var _pureRenderComponent2 = _interopRequireDefault(_pureRenderComponent);
  var _gridLines = $__require('npm:react-vis@0.4.2/dist/lib/plot/grid-lines.js');
  var _gridLines2 = _interopRequireDefault(_gridLines);
  var _scalesUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js');
  var _axisUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/axis-utils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var HorizontalGridLines = function(_PureRenderComponent) {
    _inherits(HorizontalGridLines, _PureRenderComponent);
    function HorizontalGridLines() {
      _classCallCheck(this, HorizontalGridLines);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(HorizontalGridLines).apply(this, arguments));
    }
    _createClass(HorizontalGridLines, [{
      key: 'render',
      value: function render() {
        var _props = this.props;
        var innerHeight = _props.innerHeight;
        var innerWidth = _props.innerWidth;
        return _react2.default.createElement(_gridLines2.default, _extends({}, this.props, {
          attr: 'y',
          orientation: 'left',
          ticksTotal: (0, _axisUtils.getTicksTotalFromSize)(innerHeight),
          tickSize: -innerWidth
        }));
      }
    }], [{
      key: 'propTypes',
      get: function get() {
        return _extends({
          values: _react2.default.PropTypes.array,
          marginTop: _react2.default.PropTypes.number,
          marginLeft: _react2.default.PropTypes.number,
          innerWidth: _react2.default.PropTypes.number,
          innerHeight: _react2.default.PropTypes.number
        }, (0, _scalesUtils.getScalePropTypesByAttribute)('y'));
      }
    }, {
      key: 'requiresSVG',
      get: function get() {
        return true;
      }
    }]);
    return HorizontalGridLines;
  }(_pureRenderComponent2.default);
  HorizontalGridLines.displayName = 'HorizontalGridLines';
  exports.default = HorizontalGridLines;
  return module.exports;
});

System.registerDynamic("npm:deep-equal@1.0.1/lib/keys.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  exports = module.exports = typeof Object.keys === 'function' ? Object.keys : shim;
  exports.shim = shim;
  function shim(obj) {
    var keys = [];
    for (var key in obj)
      keys.push(key);
    return keys;
  }
  return module.exports;
});

System.registerDynamic("npm:deep-equal@1.0.1/lib/is_arguments.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var supportsArgumentsClass = (function() {
    return Object.prototype.toString.call(arguments);
  })() == '[object Arguments]';
  exports = module.exports = supportsArgumentsClass ? supported : unsupported;
  exports.supported = supported;
  function supported(object) {
    return Object.prototype.toString.call(object) == '[object Arguments]';
  }
  ;
  exports.unsupported = unsupported;
  function unsupported(object) {
    return object && typeof object == 'object' && typeof object.length == 'number' && Object.prototype.hasOwnProperty.call(object, 'callee') && !Object.prototype.propertyIsEnumerable.call(object, 'callee') || false;
  }
  ;
  return module.exports;
});

System.registerDynamic("npm:deep-equal@1.0.1/index.js", ["npm:deep-equal@1.0.1/lib/keys.js", "npm:deep-equal@1.0.1/lib/is_arguments.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var pSlice = Array.prototype.slice;
  var objectKeys = $__require('npm:deep-equal@1.0.1/lib/keys.js');
  var isArguments = $__require('npm:deep-equal@1.0.1/lib/is_arguments.js');
  var deepEqual = module.exports = function(actual, expected, opts) {
    if (!opts)
      opts = {};
    if (actual === expected) {
      return true;
    } else if (actual instanceof Date && expected instanceof Date) {
      return actual.getTime() === expected.getTime();
    } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
      return opts.strict ? actual === expected : actual == expected;
    } else {
      return objEquiv(actual, expected, opts);
    }
  };
  function isUndefinedOrNull(value) {
    return value === null || value === undefined;
  }
  function isBuffer(x) {
    if (!x || typeof x !== 'object' || typeof x.length !== 'number')
      return false;
    if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
      return false;
    }
    if (x.length > 0 && typeof x[0] !== 'number')
      return false;
    return true;
  }
  function objEquiv(a, b, opts) {
    var i,
        key;
    if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
      return false;
    if (a.prototype !== b.prototype)
      return false;
    if (isArguments(a)) {
      if (!isArguments(b)) {
        return false;
      }
      a = pSlice.call(a);
      b = pSlice.call(b);
      return deepEqual(a, b, opts);
    }
    if (isBuffer(a)) {
      if (!isBuffer(b)) {
        return false;
      }
      if (a.length !== b.length)
        return false;
      for (i = 0; i < a.length; i++) {
        if (a[i] !== b[i])
          return false;
      }
      return true;
    }
    try {
      var ka = objectKeys(a),
          kb = objectKeys(b);
    } catch (e) {
      return false;
    }
    if (ka.length != kb.length)
      return false;
    ka.sort();
    kb.sort();
    for (i = ka.length - 1; i >= 0; i--) {
      if (ka[i] != kb[i])
        return false;
    }
    for (i = ka.length - 1; i >= 0; i--) {
      key = ka[i];
      if (!deepEqual(a[key], b[key], opts))
        return false;
    }
    return typeof a === typeof b;
  }
  return module.exports;
});

System.registerDynamic("npm:deep-equal@1.0.1.js", ["npm:deep-equal@1.0.1/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:deep-equal@1.0.1/index.js');
  return module.exports;
});

System.registerDynamic("npm:d3-path@0.1.5/build/d3-path.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (factory((global.d3_path = global.d3_path || {})));
  }(this, function(exports) {
    'use strict';
    var pi = Math.PI;
    var tau = 2 * pi;
    var epsilon = 1e-6;
    var tauEpsilon = tau - epsilon;
    function Path() {
      this._x0 = this._y0 = this._x1 = this._y1 = null;
      this._ = [];
    }
    function path() {
      return new Path;
    }
    Path.prototype = path.prototype = {
      constructor: Path,
      moveTo: function(x, y) {
        this._.push("M", this._x0 = this._x1 = +x, ",", this._y0 = this._y1 = +y);
      },
      closePath: function() {
        if (this._x1 !== null) {
          this._x1 = this._x0, this._y1 = this._y0;
          this._.push("Z");
        }
      },
      lineTo: function(x, y) {
        this._.push("L", this._x1 = +x, ",", this._y1 = +y);
      },
      quadraticCurveTo: function(x1, y1, x, y) {
        this._.push("Q", +x1, ",", +y1, ",", this._x1 = +x, ",", this._y1 = +y);
      },
      bezierCurveTo: function(x1, y1, x2, y2, x, y) {
        this._.push("C", +x1, ",", +y1, ",", +x2, ",", +y2, ",", this._x1 = +x, ",", this._y1 = +y);
      },
      arcTo: function(x1, y1, x2, y2, r) {
        x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
        var x0 = this._x1,
            y0 = this._y1,
            x21 = x2 - x1,
            y21 = y2 - y1,
            x01 = x0 - x1,
            y01 = y0 - y1,
            l01_2 = x01 * x01 + y01 * y01;
        if (r < 0)
          throw new Error("negative radius: " + r);
        if (this._x1 === null) {
          this._.push("M", this._x1 = x1, ",", this._y1 = y1);
        } else if (!(l01_2 > epsilon))
          ;
        else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
          this._.push("L", this._x1 = x1, ",", this._y1 = y1);
        } else {
          var x20 = x2 - x0,
              y20 = y2 - y0,
              l21_2 = x21 * x21 + y21 * y21,
              l20_2 = x20 * x20 + y20 * y20,
              l21 = Math.sqrt(l21_2),
              l01 = Math.sqrt(l01_2),
              l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
              t01 = l / l01,
              t21 = l / l21;
          if (Math.abs(t01 - 1) > epsilon) {
            this._.push("L", x1 + t01 * x01, ",", y1 + t01 * y01);
          }
          this._.push("A", r, ",", r, ",0,0,", +(y01 * x20 > x01 * y20), ",", this._x1 = x1 + t21 * x21, ",", this._y1 = y1 + t21 * y21);
        }
      },
      arc: function(x, y, r, a0, a1, ccw) {
        x = +x, y = +y, r = +r;
        var dx = r * Math.cos(a0),
            dy = r * Math.sin(a0),
            x0 = x + dx,
            y0 = y + dy,
            cw = 1 ^ ccw,
            da = ccw ? a0 - a1 : a1 - a0;
        if (r < 0)
          throw new Error("negative radius: " + r);
        if (this._x1 === null) {
          this._.push("M", x0, ",", y0);
        } else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
          this._.push("L", x0, ",", y0);
        }
        if (!r)
          return;
        if (da > tauEpsilon) {
          this._.push("A", r, ",", r, ",0,1,", cw, ",", x - dx, ",", y - dy, "A", r, ",", r, ",0,1,", cw, ",", this._x1 = x0, ",", this._y1 = y0);
        } else {
          if (da < 0)
            da = da % tau + tau;
          this._.push("A", r, ",", r, ",0,", +(da >= pi), ",", cw, ",", this._x1 = x + r * Math.cos(a1), ",", this._y1 = y + r * Math.sin(a1));
        }
      },
      rect: function(x, y, w, h) {
        this._.push("M", this._x0 = this._x1 = +x, ",", this._y0 = this._y1 = +y, "h", +w, "v", +h, "h", -w, "Z");
      },
      toString: function() {
        return this._.join("");
      }
    };
    var version = "0.1.5";
    exports.version = version;
    exports.path = path;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-path@0.1.5.js", ["npm:d3-path@0.1.5/build/d3-path.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-path@0.1.5/build/d3-path.js');
  return module.exports;
});

System.registerDynamic("npm:d3-shape@0.6.1/build/d3-shape.js", ["npm:d3-path@0.1.5.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, $__require('npm:d3-path@0.1.5.js')) : typeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) : (factory((global.d3_shape = global.d3_shape || {}), global.d3_path));
  }(this, function(exports, d3Path) {
    'use strict';
    var version = "0.6.1";
    function constant(x) {
      return function constant() {
        return x;
      };
    }
    var epsilon = 1e-12;
    var pi = Math.PI;
    var halfPi = pi / 2;
    var tau = 2 * pi;
    function arcInnerRadius(d) {
      return d.innerRadius;
    }
    function arcOuterRadius(d) {
      return d.outerRadius;
    }
    function arcStartAngle(d) {
      return d.startAngle;
    }
    function arcEndAngle(d) {
      return d.endAngle;
    }
    function arcPadAngle(d) {
      return d && d.padAngle;
    }
    function asin(x) {
      return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
    }
    function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
      var x10 = x1 - x0,
          y10 = y1 - y0,
          x32 = x3 - x2,
          y32 = y3 - y2,
          t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);
      return [x0 + t * x10, y0 + t * y10];
    }
    function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
      var x01 = x0 - x1,
          y01 = y0 - y1,
          lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),
          ox = lo * y01,
          oy = -lo * x01,
          x11 = x0 + ox,
          y11 = y0 + oy,
          x10 = x1 + ox,
          y10 = y1 + oy,
          x00 = (x11 + x10) / 2,
          y00 = (y11 + y10) / 2,
          dx = x10 - x11,
          dy = y10 - y11,
          d2 = dx * dx + dy * dy,
          r = r1 - rc,
          D = x11 * y10 - x10 * y11,
          d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),
          cx0 = (D * dy - dx * d) / d2,
          cy0 = (-D * dx - dy * d) / d2,
          cx1 = (D * dy + dx * d) / d2,
          cy1 = (-D * dx + dy * d) / d2,
          dx0 = cx0 - x00,
          dy0 = cy0 - y00,
          dx1 = cx1 - x00,
          dy1 = cy1 - y00;
      if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1)
        cx0 = cx1, cy0 = cy1;
      return {
        cx: cx0,
        cy: cy0,
        x01: -ox,
        y01: -oy,
        x11: cx0 * (r1 / r - 1),
        y11: cy0 * (r1 / r - 1)
      };
    }
    function arc() {
      var innerRadius = arcInnerRadius,
          outerRadius = arcOuterRadius,
          cornerRadius = constant(0),
          padRadius = null,
          startAngle = arcStartAngle,
          endAngle = arcEndAngle,
          padAngle = arcPadAngle,
          context = null;
      function arc() {
        var buffer,
            r,
            r0 = +innerRadius.apply(this, arguments),
            r1 = +outerRadius.apply(this, arguments),
            a0 = startAngle.apply(this, arguments) - halfPi,
            a1 = endAngle.apply(this, arguments) - halfPi,
            da = Math.abs(a1 - a0),
            cw = a1 > a0;
        if (!context)
          context = buffer = d3Path.path();
        if (r1 < r0)
          r = r1, r1 = r0, r0 = r;
        if (!(r1 > epsilon))
          context.moveTo(0, 0);
        else if (da > tau - epsilon) {
          context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));
          context.arc(0, 0, r1, a0, a1, !cw);
          if (r0 > epsilon) {
            context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));
            context.arc(0, 0, r0, a1, a0, cw);
          }
        } else {
          var a01 = a0,
              a11 = a1,
              a00 = a0,
              a10 = a1,
              da0 = da,
              da1 = da,
              ap = padAngle.apply(this, arguments) / 2,
              rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),
              rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
              rc0 = rc,
              rc1 = rc,
              t0,
              t1;
          if (rp > epsilon) {
            var p0 = asin(rp / r0 * Math.sin(ap)),
                p1 = asin(rp / r1 * Math.sin(ap));
            if ((da0 -= p0 * 2) > epsilon)
              p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;
            else
              da0 = 0, a00 = a10 = (a0 + a1) / 2;
            if ((da1 -= p1 * 2) > epsilon)
              p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;
            else
              da1 = 0, a01 = a11 = (a0 + a1) / 2;
          }
          var x01 = r1 * Math.cos(a01),
              y01 = r1 * Math.sin(a01),
              x10 = r0 * Math.cos(a10),
              y10 = r0 * Math.sin(a10);
          if (rc > epsilon) {
            var x11 = r1 * Math.cos(a11),
                y11 = r1 * Math.sin(a11),
                x00 = r0 * Math.cos(a00),
                y00 = r0 * Math.sin(a00);
            if (da < pi) {
              var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],
                  ax = x01 - oc[0],
                  ay = y01 - oc[1],
                  bx = x11 - oc[0],
                  by = y11 - oc[1],
                  kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),
                  lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = Math.min(rc, (r0 - lc) / (kc - 1));
              rc1 = Math.min(rc, (r1 - lc) / (kc + 1));
            }
          }
          if (!(da1 > epsilon))
            context.moveTo(x01, y01);
          else if (rc1 > epsilon) {
            t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
            t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
            context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);
            if (rc1 < rc)
              context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);
            else {
              context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);
              context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
              context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);
            }
          } else
            context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
          if (!(r0 > epsilon) || !(da0 > epsilon))
            context.lineTo(x10, y10);
          else if (rc0 > epsilon) {
            t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
            t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
            context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);
            if (rc0 < rc)
              context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);
            else {
              context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);
              context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);
              context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);
            }
          } else
            context.arc(0, 0, r0, a10, a00, cw);
        }
        context.closePath();
        if (buffer)
          return context = null, buffer + "" || null;
      }
      arc.centroid = function() {
        var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
            a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;
        return [Math.cos(a) * r, Math.sin(a) * r];
      };
      arc.innerRadius = function(_) {
        return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant(+_), arc) : innerRadius;
      };
      arc.outerRadius = function(_) {
        return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant(+_), arc) : outerRadius;
      };
      arc.cornerRadius = function(_) {
        return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant(+_), arc) : cornerRadius;
      };
      arc.padRadius = function(_) {
        return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant(+_), arc) : padRadius;
      };
      arc.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant(+_), arc) : startAngle;
      };
      arc.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant(+_), arc) : endAngle;
      };
      arc.padAngle = function(_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant(+_), arc) : padAngle;
      };
      arc.context = function(_) {
        return arguments.length ? ((context = _ == null ? null : _), arc) : context;
      };
      return arc;
    }
    function Linear(context) {
      this._context = context;
    }
    Linear.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || (this._line !== 0 && this._point === 1))
          this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
            break;
          case 1:
            this._point = 2;
          default:
            this._context.lineTo(x, y);
            break;
        }
      }
    };
    function curveLinear(context) {
      return new Linear(context);
    }
    function pointX(p) {
      return p[0];
    }
    function pointY(p) {
      return p[1];
    }
    function area() {
      var x0 = pointX,
          x1 = null,
          y0 = constant(0),
          y1 = pointY,
          defined = constant(true),
          context = null,
          curve = curveLinear,
          output = null;
      function area(data) {
        var i,
            j,
            k,
            n = data.length,
            d,
            defined0 = false,
            buffer,
            x0z = new Array(n),
            y0z = new Array(n);
        if (context == null)
          output = curve(buffer = d3Path.path());
        for (i = 0; i <= n; ++i) {
          if (!(i < n && defined(d = data[i], i, data)) === defined0) {
            if (defined0 = !defined0) {
              j = i;
              output.areaStart();
              output.lineStart();
            } else {
              output.lineEnd();
              output.lineStart();
              for (k = i - 1; k >= j; --k) {
                output.point(x0z[k], y0z[k]);
              }
              output.lineEnd();
              output.areaEnd();
            }
          }
          if (defined0) {
            x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
            output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
          }
        }
        if (buffer)
          return output = null, buffer + "" || null;
      }
      area.x = function(_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : constant(+_), x1 = null, area) : x0;
      };
      area.x0 = function(_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : constant(+_), area) : x0;
      };
      area.x1 = function(_) {
        return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant(+_), area) : x1;
      };
      area.y = function(_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : constant(+_), y1 = null, area) : y0;
      };
      area.y0 = function(_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : constant(+_), area) : y0;
      };
      area.y1 = function(_) {
        return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant(+_), area) : y1;
      };
      area.defined = function(_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : constant(!!_), area) : defined;
      };
      area.curve = function(_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
      };
      area.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
      };
      return area;
    }
    function line() {
      var x = pointX,
          y = pointY,
          defined = constant(true),
          context = null,
          curve = curveLinear,
          output = null;
      function line(data) {
        var i,
            n = data.length,
            d,
            defined0 = false,
            buffer;
        if (context == null)
          output = curve(buffer = d3Path.path());
        for (i = 0; i <= n; ++i) {
          if (!(i < n && defined(d = data[i], i, data)) === defined0) {
            if (defined0 = !defined0)
              output.lineStart();
            else
              output.lineEnd();
          }
          if (defined0)
            output.point(+x(d, i, data), +y(d, i, data));
        }
        if (buffer)
          return output = null, buffer + "" || null;
      }
      line.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : constant(+_), line) : x;
      };
      line.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : constant(+_), line) : y;
      };
      line.defined = function(_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : constant(!!_), line) : defined;
      };
      line.curve = function(_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
      };
      line.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
      };
      return line;
    }
    function descending(a, b) {
      return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
    }
    function identity(d) {
      return d;
    }
    function pie() {
      var value = identity,
          sortValues = descending,
          sort = null,
          startAngle = constant(0),
          endAngle = constant(tau),
          padAngle = constant(0);
      function pie(data) {
        var i,
            n = data.length,
            j,
            k,
            sum = 0,
            index = new Array(n),
            arcs = new Array(n),
            a0 = +startAngle.apply(this, arguments),
            da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),
            a1,
            p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
            pa = p * (da < 0 ? -1 : 1),
            v;
        for (i = 0; i < n; ++i) {
          if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
            sum += v;
          }
        }
        if (sortValues != null)
          index.sort(function(i, j) {
            return sortValues(arcs[i], arcs[j]);
          });
        else if (sort != null)
          index.sort(function(i, j) {
            return sort(data[i], data[j]);
          });
        for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
          j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
            data: data[j],
            index: i,
            value: v,
            startAngle: a0,
            endAngle: a1,
            padAngle: p
          };
        }
        return arcs;
      }
      pie.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : constant(+_), pie) : value;
      };
      pie.sortValues = function(_) {
        return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
      };
      pie.sort = function(_) {
        return arguments.length ? (sort = _, sortValues = null, pie) : sort;
      };
      pie.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant(+_), pie) : startAngle;
      };
      pie.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant(+_), pie) : endAngle;
      };
      pie.padAngle = function(_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant(+_), pie) : padAngle;
      };
      return pie;
    }
    function Radial(curve) {
      this._curve = curve;
    }
    Radial.prototype = {
      areaStart: function() {
        this._curve.areaStart();
      },
      areaEnd: function() {
        this._curve.areaEnd();
      },
      lineStart: function() {
        this._curve.lineStart();
      },
      lineEnd: function() {
        this._curve.lineEnd();
      },
      point: function(a, r) {
        this._curve.point(r * Math.sin(a), r * -Math.cos(a));
      }
    };
    function curveRadial(curve) {
      function radial(context) {
        return new Radial(curve(context));
      }
      radial._curve = curve;
      return radial;
    }
    function radialArea() {
      var a = area(),
          c = a.curve;
      a.angle = a.x, delete a.x;
      a.startAngle = a.x0, delete a.x0;
      a.endAngle = a.x1, delete a.x1;
      a.radius = a.y, delete a.y;
      a.innerRadius = a.y0, delete a.y0;
      a.outerRadius = a.y1, delete a.y1;
      a.curve = function(_) {
        return arguments.length ? c(curveRadial(_)) : c()._curve;
      };
      return a.curve(curveLinear);
    }
    function radialLine() {
      var l = line(),
          c = l.curve;
      l.angle = l.x, delete l.x;
      l.radius = l.y, delete l.y;
      l.curve = function(_) {
        return arguments.length ? c(curveRadial(_)) : c()._curve;
      };
      return l.curve(curveLinear);
    }
    var circle = {draw: function(context, size) {
        var r = Math.sqrt(size / pi);
        context.moveTo(r, 0);
        context.arc(0, 0, r, 0, tau);
      }};
    var cross = {draw: function(context, size) {
        var r = Math.sqrt(size / 5) / 2;
        context.moveTo(-3 * r, -r);
        context.lineTo(-r, -r);
        context.lineTo(-r, -3 * r);
        context.lineTo(r, -3 * r);
        context.lineTo(r, -r);
        context.lineTo(3 * r, -r);
        context.lineTo(3 * r, r);
        context.lineTo(r, r);
        context.lineTo(r, 3 * r);
        context.lineTo(-r, 3 * r);
        context.lineTo(-r, r);
        context.lineTo(-3 * r, r);
        context.closePath();
      }};
    var tan30 = Math.sqrt(1 / 3);
    var tan30_2 = tan30 * 2;
    var diamond = {draw: function(context, size) {
        var y = Math.sqrt(size / tan30_2),
            x = y * tan30;
        context.moveTo(0, -y);
        context.lineTo(x, 0);
        context.lineTo(0, y);
        context.lineTo(-x, 0);
        context.closePath();
      }};
    var ka = 0.89081309152928522810;
    var kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);
    var kx = Math.sin(tau / 10) * kr;
    var ky = -Math.cos(tau / 10) * kr;
    var star = {draw: function(context, size) {
        var r = Math.sqrt(size * ka),
            x = kx * r,
            y = ky * r;
        context.moveTo(0, -r);
        context.lineTo(x, y);
        for (var i = 1; i < 5; ++i) {
          var a = tau * i / 5,
              c = Math.cos(a),
              s = Math.sin(a);
          context.lineTo(s * r, -c * r);
          context.lineTo(c * x - s * y, s * x + c * y);
        }
        context.closePath();
      }};
    var square = {draw: function(context, size) {
        var w = Math.sqrt(size),
            x = -w / 2;
        context.rect(x, x, w, w);
      }};
    var sqrt3 = Math.sqrt(3);
    var triangle = {draw: function(context, size) {
        var y = -Math.sqrt(size / (sqrt3 * 3));
        context.moveTo(0, y * 2);
        context.lineTo(-sqrt3 * y, -y);
        context.lineTo(sqrt3 * y, -y);
        context.closePath();
      }};
    var c = -0.5;
    var s = Math.sqrt(3) / 2;
    var k = 1 / Math.sqrt(12);
    var a = (k / 2 + 1) * 3;
    var wye = {draw: function(context, size) {
        var r = Math.sqrt(size / a),
            x0 = r / 2,
            y0 = r * k,
            x1 = x0,
            y1 = r * k + r,
            x2 = -x1,
            y2 = y1;
        context.moveTo(x0, y0);
        context.lineTo(x1, y1);
        context.lineTo(x2, y2);
        context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
        context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
        context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
        context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
        context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
        context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
        context.closePath();
      }};
    var symbols = [circle, cross, diamond, square, star, triangle, wye];
    function symbol() {
      var type = constant(circle),
          size = constant(64),
          context = null;
      function symbol() {
        var buffer;
        if (!context)
          context = buffer = d3Path.path();
        type.apply(this, arguments).draw(context, +size.apply(this, arguments));
        if (buffer)
          return context = null, buffer + "" || null;
      }
      symbol.type = function(_) {
        return arguments.length ? (type = typeof _ === "function" ? _ : constant(_), symbol) : type;
      };
      symbol.size = function(_) {
        return arguments.length ? (size = typeof _ === "function" ? _ : constant(+_), symbol) : size;
      };
      symbol.context = function(_) {
        return arguments.length ? (context = _ == null ? null : _, symbol) : context;
      };
      return symbol;
    }
    function noop() {}
    function point(that, x, y) {
      that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
    }
    function Basis(context) {
      this._context = context;
    }
    Basis.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._y0 = this._y1 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 3:
            point(this, this._x1, this._y1);
          case 2:
            this._context.lineTo(this._x1, this._y1);
            break;
        }
        if (this._line || (this._line !== 0 && this._point === 1))
          this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
            break;
          case 1:
            this._point = 2;
            break;
          case 2:
            this._point = 3;
            this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
          default:
            point(this, x, y);
            break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };
    function basis(context) {
      return new Basis(context);
    }
    function BasisClosed(context) {
      this._context = context;
    }
    BasisClosed.prototype = {
      areaStart: noop,
      areaEnd: noop,
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 1:
            {
              this._context.moveTo(this._x2, this._y2);
              this._context.closePath();
              break;
            }
          case 2:
            {
              this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
              this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
              this._context.closePath();
              break;
            }
          case 3:
            {
              this.point(this._x2, this._y2);
              this.point(this._x3, this._y3);
              this.point(this._x4, this._y4);
              break;
            }
        }
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._x2 = x, this._y2 = y;
            break;
          case 1:
            this._point = 2;
            this._x3 = x, this._y3 = y;
            break;
          case 2:
            this._point = 3;
            this._x4 = x, this._y4 = y;
            this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);
            break;
          default:
            point(this, x, y);
            break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };
    function basisClosed(context) {
      return new BasisClosed(context);
    }
    function BasisOpen(context) {
      this._context = context;
    }
    BasisOpen.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._y0 = this._y1 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || (this._line !== 0 && this._point === 3))
          this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            break;
          case 1:
            this._point = 2;
            break;
          case 2:
            this._point = 3;
            var x0 = (this._x0 + 4 * this._x1 + x) / 6,
                y0 = (this._y0 + 4 * this._y1 + y) / 6;
            this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
            break;
          case 3:
            this._point = 4;
          default:
            point(this, x, y);
            break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };
    function basisOpen(context) {
      return new BasisOpen(context);
    }
    function Bundle(context, beta) {
      this._basis = new Basis(context);
      this._beta = beta;
    }
    Bundle.prototype = {
      lineStart: function() {
        this._x = [];
        this._y = [];
        this._basis.lineStart();
      },
      lineEnd: function() {
        var x = this._x,
            y = this._y,
            j = x.length - 1;
        if (j > 0) {
          var x0 = x[0],
              y0 = y[0],
              dx = x[j] - x0,
              dy = y[j] - y0,
              i = -1,
              t;
          while (++i <= j) {
            t = i / j;
            this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
          }
        }
        this._x = this._y = null;
        this._basis.lineEnd();
      },
      point: function(x, y) {
        this._x.push(+x);
        this._y.push(+y);
      }
    };
    var bundle = (function custom(beta) {
      function bundle(context) {
        return beta === 1 ? new Basis(context) : new Bundle(context, beta);
      }
      bundle.beta = function(beta) {
        return custom(+beta);
      };
      return bundle;
    })(0.85);
    function point$1(that, x, y) {
      that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
    }
    function Cardinal(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }
    Cardinal.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 2:
            this._context.lineTo(this._x2, this._y2);
            break;
          case 3:
            point$1(this, this._x1, this._y1);
            break;
        }
        if (this._line || (this._line !== 0 && this._point === 1))
          this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
            break;
          case 1:
            this._point = 2;
            this._x1 = x, this._y1 = y;
            break;
          case 2:
            this._point = 3;
          default:
            point$1(this, x, y);
            break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };
    var cardinal = (function custom(tension) {
      function cardinal(context) {
        return new Cardinal(context, tension);
      }
      cardinal.tension = function(tension) {
        return custom(+tension);
      };
      return cardinal;
    })(0);
    function CardinalClosed(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }
    CardinalClosed.prototype = {
      areaStart: noop,
      areaEnd: noop,
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 1:
            {
              this._context.moveTo(this._x3, this._y3);
              this._context.closePath();
              break;
            }
          case 2:
            {
              this._context.lineTo(this._x3, this._y3);
              this._context.closePath();
              break;
            }
          case 3:
            {
              this.point(this._x3, this._y3);
              this.point(this._x4, this._y4);
              this.point(this._x5, this._y5);
              break;
            }
        }
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._x3 = x, this._y3 = y;
            break;
          case 1:
            this._point = 2;
            this._context.moveTo(this._x4 = x, this._y4 = y);
            break;
          case 2:
            this._point = 3;
            this._x5 = x, this._y5 = y;
            break;
          default:
            point$1(this, x, y);
            break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };
    var cardinalClosed = (function custom(tension) {
      function cardinal(context) {
        return new CardinalClosed(context, tension);
      }
      cardinal.tension = function(tension) {
        return custom(+tension);
      };
      return cardinal;
    })(0);
    function CardinalOpen(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }
    CardinalOpen.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || (this._line !== 0 && this._point === 3))
          this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            break;
          case 1:
            this._point = 2;
            break;
          case 2:
            this._point = 3;
            this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
            break;
          case 3:
            this._point = 4;
          default:
            point$1(this, x, y);
            break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };
    var cardinalOpen = (function custom(tension) {
      function cardinal(context) {
        return new CardinalOpen(context, tension);
      }
      cardinal.tension = function(tension) {
        return custom(+tension);
      };
      return cardinal;
    })(0);
    function point$2(that, x, y) {
      var x1 = that._x1,
          y1 = that._y1,
          x2 = that._x2,
          y2 = that._y2;
      if (that._l01_a > epsilon) {
        var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
            n = 3 * that._l01_a * (that._l01_a + that._l12_a);
        x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
        y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
      }
      if (that._l23_a > epsilon) {
        var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
            m = 3 * that._l23_a * (that._l23_a + that._l12_a);
        x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
        y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
      }
      that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
    }
    function CatmullRom(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }
    CatmullRom.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 2:
            this._context.lineTo(this._x2, this._y2);
            break;
          case 3:
            this.point(this, this._x2, this._y2);
            break;
        }
        if (this._line || (this._line !== 0 && this._point === 1))
          this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        if (this._point) {
          var x23 = this._x2 - x,
              y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }
        switch (this._point) {
          case 0:
            this._point = 1;
            this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
            break;
          case 1:
            this._point = 2;
            break;
          case 2:
            this._point = 3;
          default:
            point$2(this, x, y);
            break;
        }
        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };
    var catmullRom = (function custom(alpha) {
      function catmullRom(context) {
        return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
      }
      catmullRom.alpha = function(alpha) {
        return custom(+alpha);
      };
      return catmullRom;
    })(0.5);
    function CatmullRomClosed(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }
    CatmullRomClosed.prototype = {
      areaStart: noop,
      areaEnd: noop,
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 1:
            {
              this._context.moveTo(this._x3, this._y3);
              this._context.closePath();
              break;
            }
          case 2:
            {
              this._context.lineTo(this._x3, this._y3);
              this._context.closePath();
              break;
            }
          case 3:
            {
              this.point(this._x3, this._y3);
              this.point(this._x4, this._y4);
              this.point(this._x5, this._y5);
              break;
            }
        }
      },
      point: function(x, y) {
        x = +x, y = +y;
        if (this._point) {
          var x23 = this._x2 - x,
              y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }
        switch (this._point) {
          case 0:
            this._point = 1;
            this._x3 = x, this._y3 = y;
            break;
          case 1:
            this._point = 2;
            this._context.moveTo(this._x4 = x, this._y4 = y);
            break;
          case 2:
            this._point = 3;
            this._x5 = x, this._y5 = y;
            break;
          default:
            point$2(this, x, y);
            break;
        }
        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };
    var catmullRomClosed = (function custom(alpha) {
      function catmullRom(context) {
        return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
      }
      catmullRom.alpha = function(alpha) {
        return custom(+alpha);
      };
      return catmullRom;
    })(0.5);
    function CatmullRomOpen(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }
    CatmullRomOpen.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
      },
      lineEnd: function() {
        if (this._line || (this._line !== 0 && this._point === 3))
          this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        if (this._point) {
          var x23 = this._x2 - x,
              y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }
        switch (this._point) {
          case 0:
            this._point = 1;
            break;
          case 1:
            this._point = 2;
            break;
          case 2:
            this._point = 3;
            this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
            break;
          case 3:
            this._point = 4;
          default:
            point$2(this, x, y);
            break;
        }
        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };
    var catmullRomOpen = (function custom(alpha) {
      function catmullRom(context) {
        return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
      }
      catmullRom.alpha = function(alpha) {
        return custom(+alpha);
      };
      return catmullRom;
    })(0.5);
    function LinearClosed(context) {
      this._context = context;
    }
    LinearClosed.prototype = {
      areaStart: noop,
      areaEnd: noop,
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._point)
          this._context.closePath();
      },
      point: function(x, y) {
        x = +x, y = +y;
        if (this._point)
          this._context.lineTo(x, y);
        else
          this._point = 1, this._context.moveTo(x, y);
      }
    };
    function linearClosed(context) {
      return new LinearClosed(context);
    }
    function sign(x) {
      return x < 0 ? -1 : 1;
    }
    function slope3(that, x2, y2) {
      var h0 = that._x1 - that._x0,
          h1 = x2 - that._x1,
          s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
          s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
          p = (s0 * h1 + s1 * h0) / (h0 + h1);
      return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
    }
    function slope2(that, t) {
      var h = that._x1 - that._x0;
      return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
    }
    function point$3(that, t0, t1) {
      var x0 = that._x0,
          y0 = that._y0,
          x1 = that._x1,
          y1 = that._y1,
          dx = (x1 - x0) / 3;
      that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
    }
    function MonotoneX(context) {
      this._context = context;
    }
    MonotoneX.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 2:
            this._context.lineTo(this._x1, this._y1);
            break;
          case 3:
            point$3(this, this._t0, slope2(this, this._t0));
            break;
        }
        if (this._line || (this._line !== 0 && this._point === 1))
          this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        var t1 = NaN;
        x = +x, y = +y;
        if (x === this._x1 && y === this._y1)
          return;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
            break;
          case 1:
            this._point = 2;
            break;
          case 2:
            this._point = 3;
            point$3(this, slope2(this, t1 = slope3(this, x, y)), t1);
            break;
          default:
            point$3(this, this._t0, t1 = slope3(this, x, y));
            break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
        this._t0 = t1;
      }
    };
    function MonotoneY(context) {
      this._context = new ReflectContext(context);
    }
    (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
      MonotoneX.prototype.point.call(this, y, x);
    };
    function ReflectContext(context) {
      this._context = context;
    }
    ReflectContext.prototype = {
      moveTo: function(x, y) {
        this._context.moveTo(y, x);
      },
      closePath: function() {
        this._context.closePath();
      },
      lineTo: function(x, y) {
        this._context.lineTo(y, x);
      },
      bezierCurveTo: function(x1, y1, x2, y2, x, y) {
        this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
      }
    };
    function monotoneX(context) {
      return new MonotoneX(context);
    }
    function monotoneY(context) {
      return new MonotoneY(context);
    }
    function Natural(context) {
      this._context = context;
    }
    Natural.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x = [];
        this._y = [];
      },
      lineEnd: function() {
        var x = this._x,
            y = this._y,
            n = x.length;
        if (n) {
          this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
          if (n === 2) {
            this._context.lineTo(x[1], y[1]);
          } else {
            var px = controlPoints(x),
                py = controlPoints(y);
            for (var i0 = 0,
                i1 = 1; i1 < n; ++i0, ++i1) {
              this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
            }
          }
        }
        if (this._line || (this._line !== 0 && n === 1))
          this._context.closePath();
        this._line = 1 - this._line;
        this._x = this._y = null;
      },
      point: function(x, y) {
        this._x.push(+x);
        this._y.push(+y);
      }
    };
    function controlPoints(x) {
      var i,
          n = x.length - 1,
          m,
          a = new Array(n),
          b = new Array(n),
          r = new Array(n);
      a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
      for (i = 1; i < n - 1; ++i)
        a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
      a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
      for (i = 1; i < n; ++i)
        m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
      a[n - 1] = r[n - 1] / b[n - 1];
      for (i = n - 2; i >= 0; --i)
        a[i] = (r[i] - a[i + 1]) / b[i];
      b[n - 1] = (x[n] + a[n - 1]) / 2;
      for (i = 0; i < n - 1; ++i)
        b[i] = 2 * x[i + 1] - a[i + 1];
      return [a, b];
    }
    function natural(context) {
      return new Natural(context);
    }
    function Step(context, t) {
      this._context = context;
      this._t = t;
    }
    Step.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x = this._y = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        if (0 < this._t && this._t < 1 && this._point === 2)
          this._context.lineTo(this._x, this._y);
        if (this._line || (this._line !== 0 && this._point === 1))
          this._context.closePath();
        if (this._line >= 0)
          this._t = 1 - this._t, this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
            break;
          case 1:
            this._point = 2;
          default:
            {
              if (this._t <= 0) {
                this._context.lineTo(this._x, y);
                this._context.lineTo(x, y);
              } else {
                var x1 = this._x * (1 - this._t) + x * this._t;
                this._context.lineTo(x1, this._y);
                this._context.lineTo(x1, y);
              }
              break;
            }
        }
        this._x = x, this._y = y;
      }
    };
    function step(context) {
      return new Step(context, 0.5);
    }
    function stepBefore(context) {
      return new Step(context, 0);
    }
    function stepAfter(context) {
      return new Step(context, 1);
    }
    var slice = Array.prototype.slice;
    function none(series, order) {
      if (!((n = series.length) > 1))
        return;
      for (var i = 1,
          s0,
          s1 = series[order[0]],
          n,
          m = s1.length; i < n; ++i) {
        s0 = s1, s1 = series[order[i]];
        for (var j = 0; j < m; ++j) {
          s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
        }
      }
    }
    function none$1(series) {
      var n = series.length,
          o = new Array(n);
      while (--n >= 0)
        o[n] = n;
      return o;
    }
    function stackValue(d, key) {
      return d[key];
    }
    function stack() {
      var keys = constant([]),
          order = none$1,
          offset = none,
          value = stackValue;
      function stack(data) {
        var kz = keys.apply(this, arguments),
            i,
            m = data.length,
            n = kz.length,
            sz = new Array(n),
            oz;
        for (i = 0; i < n; ++i) {
          for (var ki = kz[i],
              si = sz[i] = new Array(m),
              j = 0,
              sij; j < m; ++j) {
            si[j] = sij = [0, +value(data[j], ki, j, data)];
            sij.data = data[j];
          }
          si.key = ki;
        }
        for (i = 0, oz = order(sz); i < n; ++i) {
          sz[oz[i]].index = i;
        }
        offset(sz, oz);
        return sz;
      }
      stack.keys = function(_) {
        return arguments.length ? (keys = typeof _ === "function" ? _ : constant(slice.call(_)), stack) : keys;
      };
      stack.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : constant(+_), stack) : value;
      };
      stack.order = function(_) {
        return arguments.length ? (order = _ == null ? none$1 : typeof _ === "function" ? _ : constant(slice.call(_)), stack) : order;
      };
      stack.offset = function(_) {
        return arguments.length ? (offset = _ == null ? none : _, stack) : offset;
      };
      return stack;
    }
    function expand(series, order) {
      if (!((n = series.length) > 0))
        return;
      for (var i,
          n,
          j = 0,
          m = series[0].length,
          y; j < m; ++j) {
        for (y = i = 0; i < n; ++i)
          y += series[i][j][1] || 0;
        if (y)
          for (i = 0; i < n; ++i)
            series[i][j][1] /= y;
      }
      none(series, order);
    }
    function silhouette(series, order) {
      if (!((n = series.length) > 0))
        return;
      for (var j = 0,
          s0 = series[order[0]],
          n,
          m = s0.length; j < m; ++j) {
        for (var i = 0,
            y = 0; i < n; ++i)
          y += series[i][j][1] || 0;
        s0[j][1] += s0[j][0] = -y / 2;
      }
      none(series, order);
    }
    function wiggle(series, order) {
      if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0))
        return;
      for (var y = 0,
          j = 1,
          s0,
          m,
          n; j < m; ++j) {
        for (var i = 0,
            s1 = 0,
            s2 = 0; i < n; ++i) {
          var si = series[order[i]],
              sij0 = si[j][1] || 0,
              sij1 = si[j - 1][1] || 0,
              s3 = (sij0 - sij1) / 2;
          for (var k = 0; k < i; ++k) {
            var sk = series[order[k]],
                skj0 = sk[j][1] || 0,
                skj1 = sk[j - 1][1] || 0;
            s3 += skj0 - skj1;
          }
          s1 += sij0, s2 += s3 * sij0;
        }
        s0[j - 1][1] += s0[j - 1][0] = y;
        if (s1)
          y -= s2 / s1;
      }
      s0[j - 1][1] += s0[j - 1][0] = y;
      none(series, order);
    }
    function ascending(series) {
      var sums = series.map(sum);
      return none$1(series).sort(function(a, b) {
        return sums[a] - sums[b];
      });
    }
    function sum(series) {
      var s = 0,
          i = -1,
          n = series.length,
          v;
      while (++i < n)
        if (v = +series[i][1])
          s += v;
      return s;
    }
    function descending$1(series) {
      return ascending(series).reverse();
    }
    function insideOut(series) {
      var n = series.length,
          i,
          j,
          sums = series.map(sum),
          order = none$1(series).sort(function(a, b) {
            return sums[b] - sums[a];
          }),
          top = 0,
          bottom = 0,
          tops = [],
          bottoms = [];
      for (i = 0; i < n; ++i) {
        j = order[i];
        if (top < bottom) {
          top += sums[j];
          tops.push(j);
        } else {
          bottom += sums[j];
          bottoms.push(j);
        }
      }
      return bottoms.reverse().concat(tops);
    }
    function reverse(series) {
      return none$1(series).reverse();
    }
    exports.version = version;
    exports.arc = arc;
    exports.area = area;
    exports.line = line;
    exports.pie = pie;
    exports.radialArea = radialArea;
    exports.radialLine = radialLine;
    exports.symbol = symbol;
    exports.symbols = symbols;
    exports.symbolCircle = circle;
    exports.symbolCross = cross;
    exports.symbolDiamond = diamond;
    exports.symbolSquare = square;
    exports.symbolStar = star;
    exports.symbolTriangle = triangle;
    exports.symbolWye = wye;
    exports.curveBasisClosed = basisClosed;
    exports.curveBasisOpen = basisOpen;
    exports.curveBasis = basis;
    exports.curveBundle = bundle;
    exports.curveCardinalClosed = cardinalClosed;
    exports.curveCardinalOpen = cardinalOpen;
    exports.curveCardinal = cardinal;
    exports.curveCatmullRomClosed = catmullRomClosed;
    exports.curveCatmullRomOpen = catmullRomOpen;
    exports.curveCatmullRom = catmullRom;
    exports.curveLinearClosed = linearClosed;
    exports.curveLinear = curveLinear;
    exports.curveMonotoneX = monotoneX;
    exports.curveMonotoneY = monotoneY;
    exports.curveNatural = natural;
    exports.curveStep = step;
    exports.curveStepAfter = stepAfter;
    exports.curveStepBefore = stepBefore;
    exports.stack = stack;
    exports.stackOffsetExpand = expand;
    exports.stackOffsetNone = none;
    exports.stackOffsetSilhouette = silhouette;
    exports.stackOffsetWiggle = wiggle;
    exports.stackOrderAscending = ascending;
    exports.stackOrderDescending = descending$1;
    exports.stackOrderInsideOut = insideOut;
    exports.stackOrderNone = none$1;
    exports.stackOrderReverse = reverse;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-shape@0.6.1.js", ["npm:d3-shape@0.6.1/build/d3-shape.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-shape@0.6.1/build/d3-shape.js');
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/shallowCompare.js", ["npm:fbjs@0.8.3/lib/shallowEqual.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var shallowEqual = $__require('npm:fbjs@0.8.3/lib/shallowEqual.js');
  function shallowCompare(instance, nextProps, nextState) {
    return !shallowEqual(instance.props, nextProps) || !shallowEqual(instance.state, nextState);
  }
  module.exports = shallowCompare;
  return module.exports;
});

System.registerDynamic("npm:react-addons-shallow-compare@15.3.0/index.js", ["npm:react@15.3.0/lib/shallowCompare.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react@15.3.0/lib/shallowCompare.js');
  return module.exports;
});

System.registerDynamic("npm:react-addons-shallow-compare@15.3.0.js", ["npm:react-addons-shallow-compare@15.3.0/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react-addons-shallow-compare@15.3.0/index.js');
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/pure-render-component.js", ["npm:react@15.3.0.js", "npm:react-addons-shallow-compare@15.3.0.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _reactAddonsShallowCompare = $__require('npm:react-addons-shallow-compare@15.3.0.js');
  var _reactAddonsShallowCompare2 = _interopRequireDefault(_reactAddonsShallowCompare);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var PureRenderComponent = function(_React$Component) {
    _inherits(PureRenderComponent, _React$Component);
    function PureRenderComponent(props) {
      _classCallCheck(this, PureRenderComponent);
      return _possibleConstructorReturn(this, Object.getPrototypeOf(PureRenderComponent).call(this, props));
    }
    _createClass(PureRenderComponent, [{
      key: 'shouldComponentUpdate',
      value: function shouldComponentUpdate(nextProps, nextState) {
        return (0, _reactAddonsShallowCompare2.default)(this, nextProps, nextState);
      }
    }]);
    return PureRenderComponent;
  }(_react2.default.Component);
  exports.default = PureRenderComponent;
  return module.exports;
});

System.registerDynamic("npm:d3-collection@0.2.0/build/d3-collection.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (factory((global.d3_collection = global.d3_collection || {})));
  }(this, function(exports) {
    'use strict';
    var version = "0.2.0";
    var prefix = "$";
    function Map() {}
    Map.prototype = map.prototype = {
      constructor: Map,
      has: function(key) {
        return (prefix + key) in this;
      },
      get: function(key) {
        return this[prefix + key];
      },
      set: function(key, value) {
        this[prefix + key] = value;
        return this;
      },
      remove: function(key) {
        var property = prefix + key;
        return property in this && delete this[property];
      },
      clear: function() {
        for (var property in this)
          if (property[0] === prefix)
            delete this[property];
      },
      keys: function() {
        var keys = [];
        for (var property in this)
          if (property[0] === prefix)
            keys.push(property.slice(1));
        return keys;
      },
      values: function() {
        var values = [];
        for (var property in this)
          if (property[0] === prefix)
            values.push(this[property]);
        return values;
      },
      entries: function() {
        var entries = [];
        for (var property in this)
          if (property[0] === prefix)
            entries.push({
              key: property.slice(1),
              value: this[property]
            });
        return entries;
      },
      size: function() {
        var size = 0;
        for (var property in this)
          if (property[0] === prefix)
            ++size;
        return size;
      },
      empty: function() {
        for (var property in this)
          if (property[0] === prefix)
            return false;
        return true;
      },
      each: function(f) {
        for (var property in this)
          if (property[0] === prefix)
            f(this[property], property.slice(1), this);
      }
    };
    function map(object, f) {
      var map = new Map;
      if (object instanceof Map)
        object.each(function(value, key) {
          map.set(key, value);
        });
      else if (Array.isArray(object)) {
        var i = -1,
            n = object.length,
            o;
        if (f == null)
          while (++i < n)
            map.set(i, object[i]);
        else
          while (++i < n)
            map.set(f(o = object[i], i, object), o);
      } else if (object)
        for (var key in object)
          map.set(key, object[key]);
      return map;
    }
    function nest() {
      var keys = [],
          sortKeys = [],
          sortValues,
          rollup,
          nest;
      function apply(array, depth, createResult, setResult) {
        if (depth >= keys.length)
          return rollup != null ? rollup(array) : (sortValues != null ? array.sort(sortValues) : array);
        var i = -1,
            n = array.length,
            key = keys[depth++],
            keyValue,
            value,
            valuesByKey = map(),
            values,
            result = createResult();
        while (++i < n) {
          if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
            values.push(value);
          } else {
            valuesByKey.set(keyValue, [value]);
          }
        }
        valuesByKey.each(function(values, key) {
          setResult(result, key, apply(values, depth, createResult, setResult));
        });
        return result;
      }
      function entries(map, depth) {
        if (++depth > keys.length)
          return map;
        var array,
            sortKey = sortKeys[depth - 1];
        if (rollup != null && depth >= keys.length)
          array = map.entries();
        else
          array = [], map.each(function(v, k) {
            array.push({
              key: k,
              values: entries(v, depth)
            });
          });
        return sortKey != null ? array.sort(function(a, b) {
          return sortKey(a.key, b.key);
        }) : array;
      }
      return nest = {
        object: function(array) {
          return apply(array, 0, createObject, setObject);
        },
        map: function(array) {
          return apply(array, 0, createMap, setMap);
        },
        entries: function(array) {
          return entries(apply(array, 0, createMap, setMap), 0);
        },
        key: function(d) {
          keys.push(d);
          return nest;
        },
        sortKeys: function(order) {
          sortKeys[keys.length - 1] = order;
          return nest;
        },
        sortValues: function(order) {
          sortValues = order;
          return nest;
        },
        rollup: function(f) {
          rollup = f;
          return nest;
        }
      };
    }
    function createObject() {
      return {};
    }
    function setObject(object, key, value) {
      object[key] = value;
    }
    function createMap() {
      return map();
    }
    function setMap(map, key, value) {
      map.set(key, value);
    }
    function Set() {}
    var proto = map.prototype;
    Set.prototype = set.prototype = {
      constructor: Set,
      has: proto.has,
      add: function(value) {
        value += "";
        this[prefix + value] = value;
        return this;
      },
      remove: proto.remove,
      clear: proto.clear,
      values: proto.keys,
      size: proto.size,
      empty: proto.empty,
      each: proto.each
    };
    function set(object, f) {
      var set = new Set;
      if (object instanceof Set)
        object.each(function(value) {
          set.add(value);
        });
      else if (object) {
        var i = -1,
            n = object.length;
        if (f == null)
          while (++i < n)
            set.add(object[i]);
        else
          while (++i < n)
            set.add(f(object[i], i, object));
      }
      return set;
    }
    function keys(map) {
      var keys = [];
      for (var key in map)
        keys.push(key);
      return keys;
    }
    function values(map) {
      var values = [];
      for (var key in map)
        values.push(map[key]);
      return values;
    }
    function entries(map) {
      var entries = [];
      for (var key in map)
        entries.push({
          key: key,
          value: map[key]
        });
      return entries;
    }
    exports.version = version;
    exports.nest = nest;
    exports.set = set;
    exports.map = map;
    exports.keys = keys;
    exports.values = values;
    exports.entries = entries;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-collection@0.2.0.js", ["npm:d3-collection@0.2.0/build/d3-collection.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-collection@0.2.0/build/d3-collection.js');
  return module.exports;
});

System.registerDynamic("npm:d3-format@0.5.1/build/d3-format.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (factory((global.d3_format = {})));
  }(this, function(exports) {
    'use strict';
    function formatDecimal(x, p) {
      if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0)
        return null;
      var i,
          coefficient = x.slice(0, i);
      return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
    }
    function exponent(x) {
      return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;
    }
    function formatGroup(grouping, thousands) {
      return function(value, width) {
        var i = value.length,
            t = [],
            j = 0,
            g = grouping[0],
            length = 0;
        while (i > 0 && g > 0) {
          if (length + g + 1 > width)
            g = Math.max(1, width - length);
          t.push(value.substring(i -= g, i + g));
          if ((length += g + 1) > width)
            break;
          g = grouping[j = (j + 1) % grouping.length];
        }
        return t.reverse().join(thousands);
      };
    }
    function formatDefault(x, p) {
      x = x.toPrecision(p);
      out: for (var n = x.length,
          i = 1,
          i0 = -1,
          i1; i < n; ++i) {
        switch (x[i]) {
          case ".":
            i0 = i1 = i;
            break;
          case "0":
            if (i0 === 0)
              i0 = i;
            i1 = i;
            break;
          case "e":
            break out;
          default:
            if (i0 > 0)
              i0 = 0;
            break;
        }
      }
      return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;
    }
    var prefixExponent;
    function formatPrefixAuto(x, p) {
      var d = formatDecimal(x, p);
      if (!d)
        return x + "";
      var coefficient = d[0],
          exponent = d[1],
          i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
          n = coefficient.length;
      return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimal(x, Math.max(0, p + i - 1))[0];
    }
    function formatRounded(x, p) {
      var d = formatDecimal(x, p);
      if (!d)
        return x + "";
      var coefficient = d[0],
          exponent = d[1];
      return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
    }
    var formatTypes = {
      "": formatDefault,
      "%": function(x, p) {
        return (x * 100).toFixed(p);
      },
      "b": function(x) {
        return Math.round(x).toString(2);
      },
      "c": function(x) {
        return x + "";
      },
      "d": function(x) {
        return Math.round(x).toString(10);
      },
      "e": function(x, p) {
        return x.toExponential(p);
      },
      "f": function(x, p) {
        return x.toFixed(p);
      },
      "g": function(x, p) {
        return x.toPrecision(p);
      },
      "o": function(x) {
        return Math.round(x).toString(8);
      },
      "p": function(x, p) {
        return formatRounded(x * 100, p);
      },
      "r": formatRounded,
      "s": formatPrefixAuto,
      "X": function(x) {
        return Math.round(x).toString(16).toUpperCase();
      },
      "x": function(x) {
        return Math.round(x).toString(16);
      }
    };
    var re = /^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;
    function formatSpecifier(specifier) {
      return new FormatSpecifier(specifier);
    }
    function FormatSpecifier(specifier) {
      if (!(match = re.exec(specifier)))
        throw new Error("invalid format: " + specifier);
      var match,
          fill = match[1] || " ",
          align = match[2] || ">",
          sign = match[3] || "-",
          symbol = match[4] || "",
          zero = !!match[5],
          width = match[6] && +match[6],
          comma = !!match[7],
          precision = match[8] && +match[8].slice(1),
          type = match[9] || "";
      if (type === "n")
        comma = true, type = "g";
      else if (!formatTypes[type])
        type = "";
      if (zero || (fill === "0" && align === "="))
        zero = true, fill = "0", align = "=";
      this.fill = fill;
      this.align = align;
      this.sign = sign;
      this.symbol = symbol;
      this.zero = zero;
      this.width = width;
      this.comma = comma;
      this.precision = precision;
      this.type = type;
    }
    FormatSpecifier.prototype.toString = function() {
      return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width == null ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision == null ? "" : "." + Math.max(0, this.precision | 0)) + this.type;
    };
    var prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
    function identity(x) {
      return x;
    }
    function locale(locale) {
      var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,
          currency = locale.currency,
          decimal = locale.decimal;
      function newFormat(specifier) {
        specifier = formatSpecifier(specifier);
        var fill = specifier.fill,
            align = specifier.align,
            sign = specifier.sign,
            symbol = specifier.symbol,
            zero = specifier.zero,
            width = specifier.width,
            comma = specifier.comma,
            precision = specifier.precision,
            type = specifier.type;
        var prefix = symbol === "$" ? currency[0] : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
            suffix = symbol === "$" ? currency[1] : /[%p]/.test(type) ? "%" : "";
        var formatType = formatTypes[type],
            maybeSuffix = !type || /[defgprs%]/.test(type);
        precision = precision == null ? (type ? 6 : 12) : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
        function format(value) {
          var valuePrefix = prefix,
              valueSuffix = suffix,
              i,
              n,
              c;
          if (type === "c") {
            valueSuffix = formatType(value) + valueSuffix;
            value = "";
          } else {
            value = +value;
            var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);
            value = formatType(value, precision);
            if (valueNegative) {
              i = -1, n = value.length;
              valueNegative = false;
              while (++i < n) {
                if (c = value.charCodeAt(i), (48 < c && c < 58) || (type === "x" && 96 < c && c < 103) || (type === "X" && 64 < c && c < 71)) {
                  valueNegative = true;
                  break;
                }
              }
            }
            valuePrefix = (valueNegative ? (sign === "(" ? sign : "-") : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
            valueSuffix = valueSuffix + (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + (valueNegative && sign === "(" ? ")" : "");
            if (maybeSuffix) {
              i = -1, n = value.length;
              while (++i < n) {
                if (c = value.charCodeAt(i), 48 > c || c > 57) {
                  valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
                  value = value.slice(0, i);
                  break;
                }
              }
            }
          }
          if (comma && !zero)
            value = group(value, Infinity);
          var length = valuePrefix.length + value.length + valueSuffix.length,
              padding = length < width ? new Array(width - length + 1).join(fill) : "";
          if (comma && zero)
            value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
          switch (align) {
            case "<":
              return valuePrefix + value + valueSuffix + padding;
            case "=":
              return valuePrefix + padding + value + valueSuffix;
            case "^":
              return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          }
          return padding + valuePrefix + value + valueSuffix;
        }
        format.toString = function() {
          return specifier + "";
        };
        return format;
      }
      function formatPrefix(specifier, value) {
        var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
            e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,
            k = Math.pow(10, -e),
            prefix = prefixes[8 + e / 3];
        return function(value) {
          return f(k * value) + prefix;
        };
      }
      return {
        format: newFormat,
        formatPrefix: formatPrefix
      };
    }
    var defaultLocale = locale({
      decimal: ".",
      thousands: ",",
      grouping: [3],
      currency: ["$", ""]
    });
    var caES = locale({
      decimal: ",",
      thousands: ".",
      grouping: [3],
      currency: ["", "\xa0€"]
    });
    var csCZ = locale({
      decimal: ",",
      thousands: "\xa0",
      grouping: [3],
      currency: ["", "\xa0Kč"]
    });
    var deCH = locale({
      decimal: ",",
      thousands: "'",
      grouping: [3],
      currency: ["", "\xa0CHF"]
    });
    var deDE = locale({
      decimal: ",",
      thousands: ".",
      grouping: [3],
      currency: ["", "\xa0€"]
    });
    var enCA = locale({
      decimal: ".",
      thousands: ",",
      grouping: [3],
      currency: ["$", ""]
    });
    var enGB = locale({
      decimal: ".",
      thousands: ",",
      grouping: [3],
      currency: ["£", ""]
    });
    var esES = locale({
      decimal: ",",
      thousands: ".",
      grouping: [3],
      currency: ["", "\xa0€"]
    });
    var fiFI = locale({
      decimal: ",",
      thousands: "\xa0",
      grouping: [3],
      currency: ["", "\xa0€"]
    });
    var frCA = locale({
      decimal: ",",
      thousands: "\xa0",
      grouping: [3],
      currency: ["", "$"]
    });
    var frFR = locale({
      decimal: ",",
      thousands: ".",
      grouping: [3],
      currency: ["", "\xa0€"]
    });
    var heIL = locale({
      decimal: ".",
      thousands: ",",
      grouping: [3],
      currency: ["₪", ""]
    });
    var huHU = locale({
      decimal: ",",
      thousands: "\xa0",
      grouping: [3],
      currency: ["", "\xa0Ft"]
    });
    var itIT = locale({
      decimal: ",",
      thousands: ".",
      grouping: [3],
      currency: ["€", ""]
    });
    var jaJP = locale({
      decimal: ".",
      thousands: ",",
      grouping: [3],
      currency: ["", "円"]
    });
    var koKR = locale({
      decimal: ".",
      thousands: ",",
      grouping: [3],
      currency: ["₩", ""]
    });
    var mkMK = locale({
      decimal: ",",
      thousands: ".",
      grouping: [3],
      currency: ["", "\xa0ден."]
    });
    var nlNL = locale({
      decimal: ",",
      thousands: ".",
      grouping: [3],
      currency: ["€\xa0", ""]
    });
    var plPL = locale({
      decimal: ",",
      thousands: ".",
      grouping: [3],
      currency: ["", "zł"]
    });
    var ptBR = locale({
      decimal: ",",
      thousands: ".",
      grouping: [3],
      currency: ["R$", ""]
    });
    var ruRU = locale({
      decimal: ",",
      thousands: "\xa0",
      grouping: [3],
      currency: ["", "\xa0руб."]
    });
    var svSE = locale({
      decimal: ",",
      thousands: "\xa0",
      grouping: [3],
      currency: ["", "SEK"]
    });
    var zhCN = locale({
      decimal: ".",
      thousands: ",",
      grouping: [3],
      currency: ["¥", ""]
    });
    function precisionFixed(step) {
      return Math.max(0, -exponent(Math.abs(step)));
    }
    function precisionPrefix(step, value) {
      return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));
    }
    function precisionRound(step, max) {
      step = Math.abs(step), max = Math.abs(max) - step;
      return Math.max(0, exponent(max) - exponent(step)) + 1;
    }
    var format = defaultLocale.format;
    var formatPrefix = defaultLocale.formatPrefix;
    var version = "0.5.1";
    exports.version = version;
    exports.format = format;
    exports.formatPrefix = formatPrefix;
    exports.formatLocale = locale;
    exports.formatCaEs = caES;
    exports.formatCsCz = csCZ;
    exports.formatDeCh = deCH;
    exports.formatDeDe = deDE;
    exports.formatEnCa = enCA;
    exports.formatEnGb = enGB;
    exports.formatEnUs = defaultLocale;
    exports.formatEsEs = esES;
    exports.formatFiFi = fiFI;
    exports.formatFrCa = frCA;
    exports.formatFrFr = frFR;
    exports.formatHeIl = heIL;
    exports.formatHuHu = huHU;
    exports.formatItIt = itIT;
    exports.formatJaJp = jaJP;
    exports.formatKoKr = koKR;
    exports.formatMkMk = mkMK;
    exports.formatNlNl = nlNL;
    exports.formatPlPl = plPL;
    exports.formatPtBr = ptBR;
    exports.formatRuRu = ruRU;
    exports.formatSvSe = svSE;
    exports.formatZhCn = zhCN;
    exports.formatSpecifier = formatSpecifier;
    exports.precisionFixed = precisionFixed;
    exports.precisionPrefix = precisionPrefix;
    exports.precisionRound = precisionRound;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-format@0.5.1.js", ["npm:d3-format@0.5.1/build/d3-format.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-format@0.5.1/build/d3-format.js');
  return module.exports;
});

System.registerDynamic("npm:d3-time@0.2.6/build/d3-time.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (factory((global.d3_time = global.d3_time || {})));
  }(this, function(exports) {
    'use strict';
    var version = "0.2.6";
    var t0 = new Date;
    var t1 = new Date;
    function newInterval(floori, offseti, count, field) {
      function interval(date) {
        return floori(date = new Date(+date)), date;
      }
      interval.floor = interval;
      interval.ceil = function(date) {
        return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
      };
      interval.round = function(date) {
        var d0 = interval(date),
            d1 = interval.ceil(date);
        return date - d0 < d1 - date ? d0 : d1;
      };
      interval.offset = function(date, step) {
        return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
      };
      interval.range = function(start, stop, step) {
        var range = [];
        start = interval.ceil(start);
        step = step == null ? 1 : Math.floor(step);
        if (!(start < stop) || !(step > 0))
          return range;
        do
          range.push(new Date(+start));
 while (offseti(start, step), floori(start), start < stop);
        return range;
      };
      interval.filter = function(test) {
        return newInterval(function(date) {
          while (floori(date), !test(date))
            date.setTime(date - 1);
        }, function(date, step) {
          while (--step >= 0)
            while (offseti(date, 1), !test(date))
              ;
        });
      };
      if (count) {
        interval.count = function(start, end) {
          t0.setTime(+start), t1.setTime(+end);
          floori(t0), floori(t1);
          return Math.floor(count(t0, t1));
        };
        interval.every = function(step) {
          step = Math.floor(step);
          return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function(d) {
            return field(d) % step === 0;
          } : function(d) {
            return interval.count(0, d) % step === 0;
          });
        };
      }
      return interval;
    }
    var millisecond = newInterval(function() {}, function(date, step) {
      date.setTime(+date + step);
    }, function(start, end) {
      return end - start;
    });
    millisecond.every = function(k) {
      k = Math.floor(k);
      if (!isFinite(k) || !(k > 0))
        return null;
      if (!(k > 1))
        return millisecond;
      return newInterval(function(date) {
        date.setTime(Math.floor(date / k) * k);
      }, function(date, step) {
        date.setTime(+date + step * k);
      }, function(start, end) {
        return (end - start) / k;
      });
    };
    var second$1 = 1e3;
    var minute = 6e4;
    var hour = 36e5;
    var day = 864e5;
    var week = 6048e5;
    var second = newInterval(function(date) {
      date.setTime(Math.floor(date / second$1) * second$1);
    }, function(date, step) {
      date.setTime(+date + step * second$1);
    }, function(start, end) {
      return (end - start) / second$1;
    }, function(date) {
      return date.getUTCSeconds();
    });
    var minute$1 = newInterval(function(date) {
      date.setTime(Math.floor(date / minute) * minute);
    }, function(date, step) {
      date.setTime(+date + step * minute);
    }, function(start, end) {
      return (end - start) / minute;
    }, function(date) {
      return date.getMinutes();
    });
    var hour$1 = newInterval(function(date) {
      var offset = date.getTimezoneOffset() * minute % hour;
      if (offset < 0)
        offset += hour;
      date.setTime(Math.floor((+date - offset) / hour) * hour + offset);
    }, function(date, step) {
      date.setTime(+date + step * hour);
    }, function(start, end) {
      return (end - start) / hour;
    }, function(date) {
      return date.getHours();
    });
    var day$1 = newInterval(function(date) {
      date.setHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setDate(date.getDate() + step);
    }, function(start, end) {
      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * minute) / day;
    }, function(date) {
      return date.getDate() - 1;
    });
    function weekday(i) {
      return newInterval(function(date) {
        date.setHours(0, 0, 0, 0);
        date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
      }, function(date, step) {
        date.setDate(date.getDate() + step * 7);
      }, function(start, end) {
        return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * minute) / week;
      });
    }
    var sunday = weekday(0);
    var monday = weekday(1);
    var tuesday = weekday(2);
    var wednesday = weekday(3);
    var thursday = weekday(4);
    var friday = weekday(5);
    var saturday = weekday(6);
    var month = newInterval(function(date) {
      date.setHours(0, 0, 0, 0);
      date.setDate(1);
    }, function(date, step) {
      date.setMonth(date.getMonth() + step);
    }, function(start, end) {
      return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
    }, function(date) {
      return date.getMonth();
    });
    var year = newInterval(function(date) {
      date.setHours(0, 0, 0, 0);
      date.setMonth(0, 1);
    }, function(date, step) {
      date.setFullYear(date.getFullYear() + step);
    }, function(start, end) {
      return end.getFullYear() - start.getFullYear();
    }, function(date) {
      return date.getFullYear();
    });
    var utcMinute = newInterval(function(date) {
      date.setUTCSeconds(0, 0);
    }, function(date, step) {
      date.setTime(+date + step * minute);
    }, function(start, end) {
      return (end - start) / minute;
    }, function(date) {
      return date.getUTCMinutes();
    });
    var utcHour = newInterval(function(date) {
      date.setUTCMinutes(0, 0, 0);
    }, function(date, step) {
      date.setTime(+date + step * hour);
    }, function(start, end) {
      return (end - start) / hour;
    }, function(date) {
      return date.getUTCHours();
    });
    var utcDay = newInterval(function(date) {
      date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setUTCDate(date.getUTCDate() + step);
    }, function(start, end) {
      return (end - start) / day;
    }, function(date) {
      return date.getUTCDate() - 1;
    });
    function utcWeekday(i) {
      return newInterval(function(date) {
        date.setUTCHours(0, 0, 0, 0);
        date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
      }, function(date, step) {
        date.setUTCDate(date.getUTCDate() + step * 7);
      }, function(start, end) {
        return (end - start) / week;
      });
    }
    var utcSunday = utcWeekday(0);
    var utcMonday = utcWeekday(1);
    var utcTuesday = utcWeekday(2);
    var utcWednesday = utcWeekday(3);
    var utcThursday = utcWeekday(4);
    var utcFriday = utcWeekday(5);
    var utcSaturday = utcWeekday(6);
    var utcMonth = newInterval(function(date) {
      date.setUTCHours(0, 0, 0, 0);
      date.setUTCDate(1);
    }, function(date, step) {
      date.setUTCMonth(date.getUTCMonth() + step);
    }, function(start, end) {
      return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
    }, function(date) {
      return date.getUTCMonth();
    });
    var utcYear = newInterval(function(date) {
      date.setUTCHours(0, 0, 0, 0);
      date.setUTCMonth(0, 1);
    }, function(date, step) {
      date.setUTCFullYear(date.getUTCFullYear() + step);
    }, function(start, end) {
      return end.getUTCFullYear() - start.getUTCFullYear();
    }, function(date) {
      return date.getUTCFullYear();
    });
    var timeMilliseconds = millisecond.range;
    var timeSeconds = second.range;
    var timeMinutes = minute$1.range;
    var timeHours = hour$1.range;
    var timeDays = day$1.range;
    var timeSundays = sunday.range;
    var timeMondays = monday.range;
    var timeTuesdays = tuesday.range;
    var timeWednesdays = wednesday.range;
    var timeThursdays = thursday.range;
    var timeFridays = friday.range;
    var timeSaturdays = saturday.range;
    var timeWeeks = sunday.range;
    var timeMonths = month.range;
    var timeYears = year.range;
    var utcMilliseconds = timeMilliseconds;
    var utcSeconds = timeSeconds;
    var utcMinutes = utcMinute.range;
    var utcHours = utcHour.range;
    var utcDays = utcDay.range;
    var utcSundays = utcSunday.range;
    var utcMondays = utcMonday.range;
    var utcTuesdays = utcTuesday.range;
    var utcWednesdays = utcWednesday.range;
    var utcThursdays = utcThursday.range;
    var utcFridays = utcFriday.range;
    var utcSaturdays = utcSaturday.range;
    var utcWeeks = utcSunday.range;
    var utcMonths = utcMonth.range;
    var utcYears = utcYear.range;
    exports.timeMilliseconds = timeMilliseconds;
    exports.timeSeconds = timeSeconds;
    exports.timeMinutes = timeMinutes;
    exports.timeHours = timeHours;
    exports.timeDays = timeDays;
    exports.timeSundays = timeSundays;
    exports.timeMondays = timeMondays;
    exports.timeTuesdays = timeTuesdays;
    exports.timeWednesdays = timeWednesdays;
    exports.timeThursdays = timeThursdays;
    exports.timeFridays = timeFridays;
    exports.timeSaturdays = timeSaturdays;
    exports.timeWeeks = timeWeeks;
    exports.timeMonths = timeMonths;
    exports.timeYears = timeYears;
    exports.utcMilliseconds = utcMilliseconds;
    exports.utcSeconds = utcSeconds;
    exports.utcMinutes = utcMinutes;
    exports.utcHours = utcHours;
    exports.utcDays = utcDays;
    exports.utcSundays = utcSundays;
    exports.utcMondays = utcMondays;
    exports.utcTuesdays = utcTuesdays;
    exports.utcWednesdays = utcWednesdays;
    exports.utcThursdays = utcThursdays;
    exports.utcFridays = utcFridays;
    exports.utcSaturdays = utcSaturdays;
    exports.utcWeeks = utcWeeks;
    exports.utcMonths = utcMonths;
    exports.utcYears = utcYears;
    exports.timeMillisecond = millisecond;
    exports.timeSecond = second;
    exports.timeMinute = minute$1;
    exports.timeHour = hour$1;
    exports.timeDay = day$1;
    exports.timeSunday = sunday;
    exports.timeMonday = monday;
    exports.timeTuesday = tuesday;
    exports.timeWednesday = wednesday;
    exports.timeThursday = thursday;
    exports.timeFriday = friday;
    exports.timeSaturday = saturday;
    exports.timeWeek = sunday;
    exports.timeMonth = month;
    exports.timeYear = year;
    exports.utcMillisecond = millisecond;
    exports.utcSecond = second;
    exports.utcMinute = utcMinute;
    exports.utcHour = utcHour;
    exports.utcDay = utcDay;
    exports.utcSunday = utcSunday;
    exports.utcMonday = utcMonday;
    exports.utcTuesday = utcTuesday;
    exports.utcWednesday = utcWednesday;
    exports.utcThursday = utcThursday;
    exports.utcFriday = utcFriday;
    exports.utcSaturday = utcSaturday;
    exports.utcWeek = utcSunday;
    exports.utcMonth = utcMonth;
    exports.utcYear = utcYear;
    exports.version = version;
    exports.timeInterval = newInterval;
    Object.defineProperty(exports, '__esModule', {value: true});
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-time@0.2.6.js", ["npm:d3-time@0.2.6/build/d3-time.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-time@0.2.6/build/d3-time.js');
  return module.exports;
});

System.registerDynamic("npm:d3-time-format@0.3.2/build/d3-time-format.js", ["npm:d3-time@0.2.6.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, $__require('npm:d3-time@0.2.6.js')) : typeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) : (factory((global.d3_time_format = global.d3_time_format || {}), global.d3_time));
  }(this, function(exports, d3Time) {
    'use strict';
    var version = "0.3.2";
    function localDate(d) {
      if (0 <= d.y && d.y < 100) {
        var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
        date.setFullYear(d.y);
        return date;
      }
      return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
    }
    function utcDate(d) {
      if (0 <= d.y && d.y < 100) {
        var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
        date.setUTCFullYear(d.y);
        return date;
      }
      return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
    }
    function newYear(y) {
      return {
        y: y,
        m: 0,
        d: 1,
        H: 0,
        M: 0,
        S: 0,
        L: 0
      };
    }
    function locale$1(locale) {
      var locale_dateTime = locale.dateTime,
          locale_date = locale.date,
          locale_time = locale.time,
          locale_periods = locale.periods,
          locale_weekdays = locale.days,
          locale_shortWeekdays = locale.shortDays,
          locale_months = locale.months,
          locale_shortMonths = locale.shortMonths;
      var periodRe = formatRe(locale_periods),
          periodLookup = formatLookup(locale_periods),
          weekdayRe = formatRe(locale_weekdays),
          weekdayLookup = formatLookup(locale_weekdays),
          shortWeekdayRe = formatRe(locale_shortWeekdays),
          shortWeekdayLookup = formatLookup(locale_shortWeekdays),
          monthRe = formatRe(locale_months),
          monthLookup = formatLookup(locale_months),
          shortMonthRe = formatRe(locale_shortMonths),
          shortMonthLookup = formatLookup(locale_shortMonths);
      var formats = {
        "a": formatShortWeekday,
        "A": formatWeekday,
        "b": formatShortMonth,
        "B": formatMonth,
        "c": null,
        "d": formatDayOfMonth,
        "e": formatDayOfMonth,
        "H": formatHour24,
        "I": formatHour12,
        "j": formatDayOfYear,
        "L": formatMilliseconds,
        "m": formatMonthNumber,
        "M": formatMinutes,
        "p": formatPeriod,
        "S": formatSeconds,
        "U": formatWeekNumberSunday,
        "w": formatWeekdayNumber,
        "W": formatWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatYear,
        "Y": formatFullYear,
        "Z": formatZone,
        "%": formatLiteralPercent
      };
      var utcFormats = {
        "a": formatUTCShortWeekday,
        "A": formatUTCWeekday,
        "b": formatUTCShortMonth,
        "B": formatUTCMonth,
        "c": null,
        "d": formatUTCDayOfMonth,
        "e": formatUTCDayOfMonth,
        "H": formatUTCHour24,
        "I": formatUTCHour12,
        "j": formatUTCDayOfYear,
        "L": formatUTCMilliseconds,
        "m": formatUTCMonthNumber,
        "M": formatUTCMinutes,
        "p": formatUTCPeriod,
        "S": formatUTCSeconds,
        "U": formatUTCWeekNumberSunday,
        "w": formatUTCWeekdayNumber,
        "W": formatUTCWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatUTCYear,
        "Y": formatUTCFullYear,
        "Z": formatUTCZone,
        "%": formatLiteralPercent
      };
      var parses = {
        "a": parseShortWeekday,
        "A": parseWeekday,
        "b": parseShortMonth,
        "B": parseMonth,
        "c": parseLocaleDateTime,
        "d": parseDayOfMonth,
        "e": parseDayOfMonth,
        "H": parseHour24,
        "I": parseHour24,
        "j": parseDayOfYear,
        "L": parseMilliseconds,
        "m": parseMonthNumber,
        "M": parseMinutes,
        "p": parsePeriod,
        "S": parseSeconds,
        "U": parseWeekNumberSunday,
        "w": parseWeekdayNumber,
        "W": parseWeekNumberMonday,
        "x": parseLocaleDate,
        "X": parseLocaleTime,
        "y": parseYear,
        "Y": parseFullYear,
        "Z": parseZone,
        "%": parseLiteralPercent
      };
      formats.x = newFormat(locale_date, formats);
      formats.X = newFormat(locale_time, formats);
      formats.c = newFormat(locale_dateTime, formats);
      utcFormats.x = newFormat(locale_date, utcFormats);
      utcFormats.X = newFormat(locale_time, utcFormats);
      utcFormats.c = newFormat(locale_dateTime, utcFormats);
      function newFormat(specifier, formats) {
        return function(date) {
          var string = [],
              i = -1,
              j = 0,
              n = specifier.length,
              c,
              pad,
              format;
          if (!(date instanceof Date))
            date = new Date(+date);
          while (++i < n) {
            if (specifier.charCodeAt(i) === 37) {
              string.push(specifier.slice(j, i));
              if ((pad = pads[c = specifier.charAt(++i)]) != null)
                c = specifier.charAt(++i);
              else
                pad = c === "e" ? " " : "0";
              if (format = formats[c])
                c = format(date, pad);
              string.push(c);
              j = i + 1;
            }
          }
          string.push(specifier.slice(j, i));
          return string.join("");
        };
      }
      function newParse(specifier, newDate) {
        return function(string) {
          var d = newYear(1900),
              i = parseSpecifier(d, specifier, string += "", 0);
          if (i != string.length)
            return null;
          if ("p" in d)
            d.H = d.H % 12 + d.p * 12;
          if ("W" in d || "U" in d) {
            if (!("w" in d))
              d.w = "W" in d ? 1 : 0;
            var day = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();
            d.m = 0;
            d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
          }
          if ("Z" in d) {
            d.H += d.Z / 100 | 0;
            d.M += d.Z % 100;
            return utcDate(d);
          }
          return newDate(d);
        };
      }
      function parseSpecifier(d, specifier, string, j) {
        var i = 0,
            n = specifier.length,
            m = string.length,
            c,
            parse;
        while (i < n) {
          if (j >= m)
            return -1;
          c = specifier.charCodeAt(i++);
          if (c === 37) {
            c = specifier.charAt(i++);
            parse = parses[c in pads ? specifier.charAt(i++) : c];
            if (!parse || ((j = parse(d, string, j)) < 0))
              return -1;
          } else if (c != string.charCodeAt(j++)) {
            return -1;
          }
        }
        return j;
      }
      function parsePeriod(d, string, i) {
        var n = periodRe.exec(string.slice(i));
        return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }
      function parseShortWeekday(d, string, i) {
        var n = shortWeekdayRe.exec(string.slice(i));
        return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }
      function parseWeekday(d, string, i) {
        var n = weekdayRe.exec(string.slice(i));
        return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }
      function parseShortMonth(d, string, i) {
        var n = shortMonthRe.exec(string.slice(i));
        return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }
      function parseMonth(d, string, i) {
        var n = monthRe.exec(string.slice(i));
        return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }
      function parseLocaleDateTime(d, string, i) {
        return parseSpecifier(d, locale_dateTime, string, i);
      }
      function parseLocaleDate(d, string, i) {
        return parseSpecifier(d, locale_date, string, i);
      }
      function parseLocaleTime(d, string, i) {
        return parseSpecifier(d, locale_time, string, i);
      }
      function formatShortWeekday(d) {
        return locale_shortWeekdays[d.getDay()];
      }
      function formatWeekday(d) {
        return locale_weekdays[d.getDay()];
      }
      function formatShortMonth(d) {
        return locale_shortMonths[d.getMonth()];
      }
      function formatMonth(d) {
        return locale_months[d.getMonth()];
      }
      function formatPeriod(d) {
        return locale_periods[+(d.getHours() >= 12)];
      }
      function formatUTCShortWeekday(d) {
        return locale_shortWeekdays[d.getUTCDay()];
      }
      function formatUTCWeekday(d) {
        return locale_weekdays[d.getUTCDay()];
      }
      function formatUTCShortMonth(d) {
        return locale_shortMonths[d.getUTCMonth()];
      }
      function formatUTCMonth(d) {
        return locale_months[d.getUTCMonth()];
      }
      function formatUTCPeriod(d) {
        return locale_periods[+(d.getUTCHours() >= 12)];
      }
      return {
        format: function(specifier) {
          var f = newFormat(specifier += "", formats);
          f.toString = function() {
            return specifier;
          };
          return f;
        },
        parse: function(specifier) {
          var p = newParse(specifier += "", localDate);
          p.toString = function() {
            return specifier;
          };
          return p;
        },
        utcFormat: function(specifier) {
          var f = newFormat(specifier += "", utcFormats);
          f.toString = function() {
            return specifier;
          };
          return f;
        },
        utcParse: function(specifier) {
          var p = newParse(specifier, utcDate);
          p.toString = function() {
            return specifier;
          };
          return p;
        }
      };
    }
    var pads = {
      "-": "",
      "_": " ",
      "0": "0"
    };
    var numberRe = /^\s*\d+/;
    var percentRe = /^%/;
    var requoteRe = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
    function pad(value, fill, width) {
      var sign = value < 0 ? "-" : "",
          string = (sign ? -value : value) + "",
          length = string.length;
      return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
    }
    function requote(s) {
      return s.replace(requoteRe, "\\$&");
    }
    function formatRe(names) {
      return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
    }
    function formatLookup(names) {
      var map = {},
          i = -1,
          n = names.length;
      while (++i < n)
        map[names[i].toLowerCase()] = i;
      return map;
    }
    function parseWeekdayNumber(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 1));
      return n ? (d.w = +n[0], i + n[0].length) : -1;
    }
    function parseWeekNumberSunday(d, string, i) {
      var n = numberRe.exec(string.slice(i));
      return n ? (d.U = +n[0], i + n[0].length) : -1;
    }
    function parseWeekNumberMonday(d, string, i) {
      var n = numberRe.exec(string.slice(i));
      return n ? (d.W = +n[0], i + n[0].length) : -1;
    }
    function parseFullYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 4));
      return n ? (d.y = +n[0], i + n[0].length) : -1;
    }
    function parseYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
    }
    function parseZone(d, string, i) {
      var n = /^(Z)|([+-]\d\d)(?:\:?(\d\d))?/.exec(string.slice(i, i + 6));
      return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
    }
    function parseMonthNumber(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
    }
    function parseDayOfMonth(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.d = +n[0], i + n[0].length) : -1;
    }
    function parseDayOfYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 3));
      return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
    }
    function parseHour24(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.H = +n[0], i + n[0].length) : -1;
    }
    function parseMinutes(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.M = +n[0], i + n[0].length) : -1;
    }
    function parseSeconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.S = +n[0], i + n[0].length) : -1;
    }
    function parseMilliseconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 3));
      return n ? (d.L = +n[0], i + n[0].length) : -1;
    }
    function parseLiteralPercent(d, string, i) {
      var n = percentRe.exec(string.slice(i, i + 1));
      return n ? i + n[0].length : -1;
    }
    function formatDayOfMonth(d, p) {
      return pad(d.getDate(), p, 2);
    }
    function formatHour24(d, p) {
      return pad(d.getHours(), p, 2);
    }
    function formatHour12(d, p) {
      return pad(d.getHours() % 12 || 12, p, 2);
    }
    function formatDayOfYear(d, p) {
      return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);
    }
    function formatMilliseconds(d, p) {
      return pad(d.getMilliseconds(), p, 3);
    }
    function formatMonthNumber(d, p) {
      return pad(d.getMonth() + 1, p, 2);
    }
    function formatMinutes(d, p) {
      return pad(d.getMinutes(), p, 2);
    }
    function formatSeconds(d, p) {
      return pad(d.getSeconds(), p, 2);
    }
    function formatWeekNumberSunday(d, p) {
      return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);
    }
    function formatWeekdayNumber(d) {
      return d.getDay();
    }
    function formatWeekNumberMonday(d, p) {
      return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);
    }
    function formatYear(d, p) {
      return pad(d.getFullYear() % 100, p, 2);
    }
    function formatFullYear(d, p) {
      return pad(d.getFullYear() % 10000, p, 4);
    }
    function formatZone(d) {
      var z = d.getTimezoneOffset();
      return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
    }
    function formatUTCDayOfMonth(d, p) {
      return pad(d.getUTCDate(), p, 2);
    }
    function formatUTCHour24(d, p) {
      return pad(d.getUTCHours(), p, 2);
    }
    function formatUTCHour12(d, p) {
      return pad(d.getUTCHours() % 12 || 12, p, 2);
    }
    function formatUTCDayOfYear(d, p) {
      return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);
    }
    function formatUTCMilliseconds(d, p) {
      return pad(d.getUTCMilliseconds(), p, 3);
    }
    function formatUTCMonthNumber(d, p) {
      return pad(d.getUTCMonth() + 1, p, 2);
    }
    function formatUTCMinutes(d, p) {
      return pad(d.getUTCMinutes(), p, 2);
    }
    function formatUTCSeconds(d, p) {
      return pad(d.getUTCSeconds(), p, 2);
    }
    function formatUTCWeekNumberSunday(d, p) {
      return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);
    }
    function formatUTCWeekdayNumber(d) {
      return d.getUTCDay();
    }
    function formatUTCWeekNumberMonday(d, p) {
      return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);
    }
    function formatUTCYear(d, p) {
      return pad(d.getUTCFullYear() % 100, p, 2);
    }
    function formatUTCFullYear(d, p) {
      return pad(d.getUTCFullYear() % 10000, p, 4);
    }
    function formatUTCZone() {
      return "+0000";
    }
    function formatLiteralPercent() {
      return "%";
    }
    var locale = locale$1({
      dateTime: "%a %b %e %X %Y",
      date: "%m/%d/%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    });
    var caES = locale$1({
      dateTime: "%A, %e de %B de %Y, %X",
      date: "%d/%m/%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"],
      shortDays: ["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."],
      months: ["gener", "febrer", "març", "abril", "maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"],
      shortMonths: ["gen.", "febr.", "març", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."]
    });
    var deCH = locale$1({
      dateTime: "%A, der %e. %B %Y, %X",
      date: "%d.%m.%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"],
      shortDays: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
      months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
      shortMonths: ["Jan", "Feb", "Mrz", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"]
    });
    var deDE = locale$1({
      dateTime: "%A, der %e. %B %Y, %X",
      date: "%d.%m.%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"],
      shortDays: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
      months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
      shortMonths: ["Jan", "Feb", "Mrz", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"]
    });
    var enCA = locale$1({
      dateTime: "%a %b %e %X %Y",
      date: "%Y-%m-%d",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    });
    var enGB = locale$1({
      dateTime: "%a %e %b %X %Y",
      date: "%d/%m/%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    });
    var esES = locale$1({
      dateTime: "%A, %e de %B de %Y, %X",
      date: "%d/%m/%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"],
      shortDays: ["dom", "lun", "mar", "mié", "jue", "vie", "sáb"],
      months: ["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"],
      shortMonths: ["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"]
    });
    var fiFI = locale$1({
      dateTime: "%A, %-d. %Bta %Y klo %X",
      date: "%-d.%-m.%Y",
      time: "%H:%M:%S",
      periods: ["a.m.", "p.m."],
      days: ["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"],
      shortDays: ["Su", "Ma", "Ti", "Ke", "To", "Pe", "La"],
      months: ["tammikuu", "helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kesäkuu", "heinäkuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"],
      shortMonths: ["Tammi", "Helmi", "Maalis", "Huhti", "Touko", "Kesä", "Heinä", "Elo", "Syys", "Loka", "Marras", "Joulu"]
    });
    var frCA = locale$1({
      dateTime: "%a %e %b %Y %X",
      date: "%Y-%m-%d",
      time: "%H:%M:%S",
      periods: ["", ""],
      days: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"],
      shortDays: ["dim", "lun", "mar", "mer", "jeu", "ven", "sam"],
      months: ["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre"],
      shortMonths: ["jan", "fév", "mar", "avr", "mai", "jui", "jul", "aoû", "sep", "oct", "nov", "déc"]
    });
    var frFR = locale$1({
      dateTime: "%A, le %e %B %Y, %X",
      date: "%d/%m/%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"],
      shortDays: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."],
      months: ["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre"],
      shortMonths: ["janv.", "févr.", "mars", "avr.", "mai", "juin", "juil.", "août", "sept.", "oct.", "nov.", "déc."]
    });
    var heIL = locale$1({
      dateTime: "%A, %e ב%B %Y %X",
      date: "%d.%m.%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["ראשון", "שני", "שלישי", "רביעי", "חמישי", "שישי", "שבת"],
      shortDays: ["א׳", "ב׳", "ג׳", "ד׳", "ה׳", "ו׳", "ש׳"],
      months: ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"],
      shortMonths: ["ינו׳", "פבר׳", "מרץ", "אפר׳", "מאי", "יוני", "יולי", "אוג׳", "ספט׳", "אוק׳", "נוב׳", "דצמ׳"]
    });
    var huHU = locale$1({
      dateTime: "%Y. %B %-e., %A %X",
      date: "%Y. %m. %d.",
      time: "%H:%M:%S",
      periods: ["de.", "du."],
      days: ["vasárnap", "hétfő", "kedd", "szerda", "csütörtök", "péntek", "szombat"],
      shortDays: ["V", "H", "K", "Sze", "Cs", "P", "Szo"],
      months: ["január", "február", "március", "április", "május", "június", "július", "augusztus", "szeptember", "október", "november", "december"],
      shortMonths: ["jan.", "feb.", "már.", "ápr.", "máj.", "jún.", "júl.", "aug.", "szept.", "okt.", "nov.", "dec."]
    });
    var itIT = locale$1({
      dateTime: "%A %e %B %Y, %X",
      date: "%d/%m/%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["Domenica", "Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato"],
      shortDays: ["Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"],
      months: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"],
      shortMonths: ["Gen", "Feb", "Mar", "Apr", "Mag", "Giu", "Lug", "Ago", "Set", "Ott", "Nov", "Dic"]
    });
    var jaJP = locale$1({
      dateTime: "%Y %b %e %a %X",
      date: "%Y/%m/%d",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日"],
      shortDays: ["日", "月", "火", "水", "木", "金", "土"],
      months: ["睦月", "如月", "弥生", "卯月", "皐月", "水無月", "文月", "葉月", "長月", "神無月", "霜月", "師走"],
      shortMonths: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"]
    });
    var koKR = locale$1({
      dateTime: "%Y/%m/%d %a %X",
      date: "%Y/%m/%d",
      time: "%H:%M:%S",
      periods: ["오전", "오후"],
      days: ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"],
      shortDays: ["일", "월", "화", "수", "목", "금", "토"],
      months: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
      shortMonths: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"]
    });
    var mkMK = locale$1({
      dateTime: "%A, %e %B %Y г. %X",
      date: "%d.%m.%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["недела", "понеделник", "вторник", "среда", "четврток", "петок", "сабота"],
      shortDays: ["нед", "пон", "вто", "сре", "чет", "пет", "саб"],
      months: ["јануари", "февруари", "март", "април", "мај", "јуни", "јули", "август", "септември", "октомври", "ноември", "декември"],
      shortMonths: ["јан", "фев", "мар", "апр", "мај", "јун", "јул", "авг", "сеп", "окт", "ное", "дек"]
    });
    var nlNL = locale$1({
      dateTime: "%a %e %B %Y %T",
      date: "%d-%m-%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"],
      shortDays: ["zo", "ma", "di", "wo", "do", "vr", "za"],
      months: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"],
      shortMonths: ["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"]
    });
    var plPL = locale$1({
      dateTime: "%A, %e %B %Y, %X",
      date: "%d/%m/%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["Niedziela", "Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek", "Sobota"],
      shortDays: ["Niedz.", "Pon.", "Wt.", "Śr.", "Czw.", "Pt.", "Sob."],
      months: ["Styczeń", "Luty", "Marzec", "Kwiecień", "Maj", "Czerwiec", "Lipiec", "Sierpień", "Wrzesień", "Październik", "Listopad", "Grudzień"],
      shortMonths: ["Stycz.", "Luty", "Marz.", "Kwie.", "Maj", "Czerw.", "Lipc.", "Sierp.", "Wrz.", "Paźdz.", "Listop.", "Grudz."]
    });
    var ptBR = locale$1({
      dateTime: "%A, %e de %B de %Y. %X",
      date: "%d/%m/%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"],
      shortDays: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"],
      months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
      shortMonths: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"]
    });
    var ruRU = locale$1({
      dateTime: "%A, %e %B %Y г. %X",
      date: "%d.%m.%Y",
      time: "%H:%M:%S",
      periods: ["AM", "PM"],
      days: ["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"],
      shortDays: ["вс", "пн", "вт", "ср", "чт", "пт", "сб"],
      months: ["января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"],
      shortMonths: ["янв", "фев", "мар", "апр", "май", "июн", "июл", "авг", "сен", "окт", "ноя", "дек"]
    });
    var svSE = locale$1({
      dateTime: "%A den %d %B %Y %X",
      date: "%Y-%m-%d",
      time: "%H:%M:%S",
      periods: ["fm", "em"],
      days: ["Söndag", "Måndag", "Tisdag", "Onsdag", "Torsdag", "Fredag", "Lördag"],
      shortDays: ["Sön", "Mån", "Tis", "Ons", "Tor", "Fre", "Lör"],
      months: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"],
      shortMonths: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"]
    });
    var zhCN = locale$1({
      dateTime: "%x %A %X",
      date: "%Y年%-m月%-d日",
      time: "%H:%M:%S",
      periods: ["上午", "下午"],
      days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
      shortDays: ["周日", "周一", "周二", "周三", "周四", "周五", "周六"],
      months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
      shortMonths: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"]
    });
    var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
    function formatIsoNative(date) {
      return date.toISOString();
    }
    var formatIso = Date.prototype.toISOString ? formatIsoNative : locale.utcFormat(isoSpecifier);
    function parseIsoNative(string) {
      var date = new Date(string);
      return isNaN(date) ? null : date;
    }
    var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : locale.utcParse(isoSpecifier);
    var timeFormat = locale.format;
    var timeParse = locale.parse;
    var utcFormat = locale.utcFormat;
    var utcParse = locale.utcParse;
    exports.timeFormat = timeFormat;
    exports.timeParse = timeParse;
    exports.utcFormat = utcFormat;
    exports.utcParse = utcParse;
    exports.version = version;
    exports.timeFormatLocale = locale$1;
    exports.timeFormatCaEs = caES;
    exports.timeFormatDeCh = deCH;
    exports.timeFormatDeDe = deDE;
    exports.timeFormatEnCa = enCA;
    exports.timeFormatEnGb = enGB;
    exports.timeFormatEnUs = locale;
    exports.timeFormatEsEs = esES;
    exports.timeFormatFiFi = fiFI;
    exports.timeFormatFrCa = frCA;
    exports.timeFormatFrFr = frFR;
    exports.timeFormatHeIl = heIL;
    exports.timeFormatHuHu = huHU;
    exports.timeFormatItIt = itIT;
    exports.timeFormatJaJp = jaJP;
    exports.timeFormatKoKr = koKR;
    exports.timeFormatMkMk = mkMK;
    exports.timeFormatNlNl = nlNL;
    exports.timeFormatPlPl = plPL;
    exports.timeFormatPtBr = ptBR;
    exports.timeFormatRuRu = ruRU;
    exports.timeFormatSvSe = svSE;
    exports.timeFormatZhCn = zhCN;
    exports.isoFormat = formatIso;
    exports.isoParse = parseIso;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-time-format@0.3.2.js", ["npm:d3-time-format@0.3.2/build/d3-time-format.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-time-format@0.3.2/build/d3-time-format.js');
  return module.exports;
});

System.registerDynamic("npm:d3-scale@0.7.2/build/d3-scale.js", ["npm:d3-array@0.7.1.js", "npm:d3-collection@0.2.0.js", "npm:d3-interpolate@0.8.3.js", "npm:d3-format@0.5.1.js", "npm:d3-time@0.2.6.js", "npm:d3-time-format@0.3.2.js", "npm:d3-color@0.4.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, $__require('npm:d3-array@0.7.1.js'), $__require('npm:d3-collection@0.2.0.js'), $__require('npm:d3-interpolate@0.8.3.js'), $__require('npm:d3-format@0.5.1.js'), $__require('npm:d3-time@0.2.6.js'), $__require('npm:d3-time-format@0.3.2.js'), $__require('npm:d3-color@0.4.2.js')) : typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) : (factory((global.d3_scale = global.d3_scale || {}), global.d3_array, global.d3_collection, global.d3_interpolate, global.d3_format, global.d3_time, global.d3_time_format, global.d3_color));
  }(this, function(exports, d3Array, d3Collection, d3Interpolate, d3Format, d3Time, d3TimeFormat, d3Color) {
    'use strict';
    var version = "0.7.2";
    var array = Array.prototype;
    var map$1 = array.map;
    var slice = array.slice;
    var implicit = {name: "implicit"};
    function ordinal() {
      var index = d3Collection.map(),
          domain = [],
          range = [],
          unknown = implicit;
      function scale(d) {
        var key = d + "",
            i = index.get(key);
        if (!i) {
          if (unknown !== implicit)
            return unknown;
          index.set(key, i = domain.push(d));
        }
        return range[(i - 1) % range.length];
      }
      scale.domain = function(_) {
        if (!arguments.length)
          return domain.slice();
        domain = [], index = d3Collection.map();
        var i = -1,
            n = _.length,
            d,
            key;
        while (++i < n)
          if (!index.has(key = (d = _[i]) + ""))
            index.set(key, domain.push(d));
        return scale;
      };
      scale.range = function(_) {
        return arguments.length ? (range = slice.call(_), scale) : range.slice();
      };
      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };
      scale.copy = function() {
        return ordinal().domain(domain).range(range).unknown(unknown);
      };
      return scale;
    }
    function band() {
      var scale = ordinal().unknown(undefined),
          domain = scale.domain,
          ordinalRange = scale.range,
          range = [0, 1],
          step,
          bandwidth,
          round = false,
          paddingInner = 0,
          paddingOuter = 0,
          align = 0.5;
      delete scale.unknown;
      function rescale() {
        var n = domain().length,
            reverse = range[1] < range[0],
            start = range[reverse - 0],
            stop = range[1 - reverse];
        step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
        if (round)
          step = Math.floor(step);
        start += (stop - start - step * (n - paddingInner)) * align;
        bandwidth = step * (1 - paddingInner);
        if (round)
          start = Math.round(start), bandwidth = Math.round(bandwidth);
        var values = d3Array.range(n).map(function(i) {
          return start + step * i;
        });
        return ordinalRange(reverse ? values.reverse() : values);
      }
      scale.domain = function(_) {
        return arguments.length ? (domain(_), rescale()) : domain();
      };
      scale.range = function(_) {
        return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();
      };
      scale.rangeRound = function(_) {
        return range = [+_[0], +_[1]], round = true, rescale();
      };
      scale.bandwidth = function() {
        return bandwidth;
      };
      scale.step = function() {
        return step;
      };
      scale.round = function(_) {
        return arguments.length ? (round = !!_, rescale()) : round;
      };
      scale.padding = function(_) {
        return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
      };
      scale.paddingInner = function(_) {
        return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
      };
      scale.paddingOuter = function(_) {
        return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;
      };
      scale.align = function(_) {
        return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
      };
      scale.copy = function() {
        return band().domain(domain()).range(range).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
      };
      return rescale();
    }
    function pointish(scale) {
      var copy = scale.copy;
      scale.padding = scale.paddingOuter;
      delete scale.paddingInner;
      delete scale.paddingOuter;
      scale.copy = function() {
        return pointish(copy());
      };
      return scale;
    }
    function point() {
      return pointish(band().paddingInner(1));
    }
    function constant(x) {
      return function() {
        return x;
      };
    }
    function number(x) {
      return +x;
    }
    var unit = [0, 1];
    function deinterpolate(a, b) {
      return (b -= (a = +a)) ? function(x) {
        return (x - a) / b;
      } : constant(b);
    }
    function deinterpolateClamp(deinterpolate) {
      return function(a, b) {
        var d = deinterpolate(a = +a, b = +b);
        return function(x) {
          return x <= a ? 0 : x >= b ? 1 : d(x);
        };
      };
    }
    function reinterpolateClamp(reinterpolate) {
      return function(a, b) {
        var r = reinterpolate(a = +a, b = +b);
        return function(t) {
          return t <= 0 ? a : t >= 1 ? b : r(t);
        };
      };
    }
    function bimap(domain, range, deinterpolate, reinterpolate) {
      var d0 = domain[0],
          d1 = domain[1],
          r0 = range[0],
          r1 = range[1];
      if (d1 < d0)
        d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);
      else
        d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);
      return function(x) {
        return r0(d0(x));
      };
    }
    function polymap(domain, range, deinterpolate, reinterpolate) {
      var j = Math.min(domain.length, range.length) - 1,
          d = new Array(j),
          r = new Array(j),
          i = -1;
      if (domain[j] < domain[0]) {
        domain = domain.slice().reverse();
        range = range.slice().reverse();
      }
      while (++i < j) {
        d[i] = deinterpolate(domain[i], domain[i + 1]);
        r[i] = reinterpolate(range[i], range[i + 1]);
      }
      return function(x) {
        var i = d3Array.bisect(domain, x, 1, j) - 1;
        return r[i](d[i](x));
      };
    }
    function copy(source, target) {
      return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp());
    }
    function continuous(deinterpolate$$, reinterpolate) {
      var domain = unit,
          range = unit,
          interpolate = d3Interpolate.interpolate,
          clamp = false,
          piecewise,
          output,
          input;
      function rescale() {
        piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;
        output = input = null;
        return scale;
      }
      function scale(x) {
        return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate)))(+x);
      }
      scale.invert = function(y) {
        return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);
      };
      scale.domain = function(_) {
        return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();
      };
      scale.range = function(_) {
        return arguments.length ? (range = slice.call(_), rescale()) : range.slice();
      };
      scale.rangeRound = function(_) {
        return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();
      };
      scale.clamp = function(_) {
        return arguments.length ? (clamp = !!_, rescale()) : clamp;
      };
      scale.interpolate = function(_) {
        return arguments.length ? (interpolate = _, rescale()) : interpolate;
      };
      return rescale();
    }
    function tickFormat(domain, count, specifier) {
      var start = domain[0],
          stop = domain[domain.length - 1],
          step = d3Array.tickStep(start, stop, count == null ? 10 : count),
          precision;
      specifier = d3Format.formatSpecifier(specifier == null ? ",f" : specifier);
      switch (specifier.type) {
        case "s":
          {
            var value = Math.max(Math.abs(start), Math.abs(stop));
            if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value)))
              specifier.precision = precision;
            return d3Format.formatPrefix(specifier, value);
          }
        case "":
        case "e":
        case "g":
        case "p":
        case "r":
          {
            if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop)))))
              specifier.precision = precision - (specifier.type === "e");
            break;
          }
        case "f":
        case "%":
          {
            if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step)))
              specifier.precision = precision - (specifier.type === "%") * 2;
            break;
          }
      }
      return d3Format.format(specifier);
    }
    function linearish(scale) {
      var domain = scale.domain;
      scale.ticks = function(count) {
        var d = domain();
        return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);
      };
      scale.tickFormat = function(count, specifier) {
        return tickFormat(domain(), count, specifier);
      };
      scale.nice = function(count) {
        var d = domain(),
            i = d.length - 1,
            n = count == null ? 10 : count,
            start = d[0],
            stop = d[i],
            step = d3Array.tickStep(start, stop, n);
        if (step) {
          step = d3Array.tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);
          d[0] = Math.floor(start / step) * step;
          d[i] = Math.ceil(stop / step) * step;
          domain(d);
        }
        return scale;
      };
      return scale;
    }
    function linear() {
      var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber);
      scale.copy = function() {
        return copy(scale, linear());
      };
      return linearish(scale);
    }
    function identity() {
      var domain = [0, 1];
      function scale(x) {
        return +x;
      }
      scale.invert = scale;
      scale.domain = scale.range = function(_) {
        return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();
      };
      scale.copy = function() {
        return identity().domain(domain);
      };
      return linearish(scale);
    }
    function nice(domain, interval) {
      domain = domain.slice();
      var i0 = 0,
          i1 = domain.length - 1,
          x0 = domain[i0],
          x1 = domain[i1],
          t;
      if (x1 < x0) {
        t = i0, i0 = i1, i1 = t;
        t = x0, x0 = x1, x1 = t;
      }
      domain[i0] = interval.floor(x0);
      domain[i1] = interval.ceil(x1);
      return domain;
    }
    function deinterpolate$1(a, b) {
      return (b = Math.log(b / a)) ? function(x) {
        return Math.log(x / a) / b;
      } : constant(b);
    }
    function reinterpolate(a, b) {
      return a < 0 ? function(t) {
        return -Math.pow(-b, t) * Math.pow(-a, 1 - t);
      } : function(t) {
        return Math.pow(b, t) * Math.pow(a, 1 - t);
      };
    }
    function pow10(x) {
      return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
    }
    function powp(base) {
      return base === 10 ? pow10 : base === Math.E ? Math.exp : function(x) {
        return Math.pow(base, x);
      };
    }
    function logp(base) {
      return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function(x) {
        return Math.log(x) / base;
      });
    }
    function reflect(f) {
      return function(x) {
        return -f(-x);
      };
    }
    function log() {
      var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),
          domain = scale.domain,
          base = 10,
          logs = logp(10),
          pows = powp(10);
      function rescale() {
        logs = logp(base), pows = powp(base);
        if (domain()[0] < 0)
          logs = reflect(logs), pows = reflect(pows);
        return scale;
      }
      scale.base = function(_) {
        return arguments.length ? (base = +_, rescale()) : base;
      };
      scale.domain = function(_) {
        return arguments.length ? (domain(_), rescale()) : domain();
      };
      scale.ticks = function(count) {
        var d = domain(),
            u = d[0],
            v = d[d.length - 1],
            r;
        if (r = v < u)
          i = u, u = v, v = i;
        var i = logs(u),
            j = logs(v),
            p,
            k,
            t,
            n = count == null ? 10 : +count,
            z = [];
        if (!(base % 1) && j - i < n) {
          i = Math.round(i) - 1, j = Math.round(j) + 1;
          if (u > 0)
            for (; i < j; ++i) {
              for (k = 1, p = pows(i); k < base; ++k) {
                t = p * k;
                if (t < u)
                  continue;
                if (t > v)
                  break;
                z.push(t);
              }
            }
          else
            for (; i < j; ++i) {
              for (k = base - 1, p = pows(i); k >= 1; --k) {
                t = p * k;
                if (t < u)
                  continue;
                if (t > v)
                  break;
                z.push(t);
              }
            }
          if (r)
            z.reverse();
        } else {
          z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);
        }
        return z;
      };
      scale.tickFormat = function(count, specifier) {
        if (specifier == null)
          specifier = base === 10 ? ".0e" : ",";
        if (typeof specifier !== "function")
          specifier = d3Format.format(specifier);
        if (count === Infinity)
          return specifier;
        if (count == null)
          count = 10;
        var k = Math.max(1, base * count / scale.ticks().length);
        return function(d) {
          var i = d / pows(Math.round(logs(d)));
          if (i * base < base - 0.5)
            i *= base;
          return i <= k ? specifier(d) : "";
        };
      };
      scale.nice = function() {
        return domain(nice(domain(), {
          floor: function(x) {
            return pows(Math.floor(logs(x)));
          },
          ceil: function(x) {
            return pows(Math.ceil(logs(x)));
          }
        }));
      };
      scale.copy = function() {
        return copy(scale, log().base(base));
      };
      return scale;
    }
    function raise(x, exponent) {
      return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
    }
    function pow() {
      var exponent = 1,
          scale = continuous(deinterpolate, reinterpolate),
          domain = scale.domain;
      function deinterpolate(a, b) {
        return (b = raise(b, exponent) - (a = raise(a, exponent))) ? function(x) {
          return (raise(x, exponent) - a) / b;
        } : constant(b);
      }
      function reinterpolate(a, b) {
        b = raise(b, exponent) - (a = raise(a, exponent));
        return function(t) {
          return raise(a + b * t, 1 / exponent);
        };
      }
      scale.exponent = function(_) {
        return arguments.length ? (exponent = +_, domain(domain())) : exponent;
      };
      scale.copy = function() {
        return copy(scale, pow().exponent(exponent));
      };
      return linearish(scale);
    }
    function sqrt() {
      return pow().exponent(0.5);
    }
    function quantile$1() {
      var domain = [],
          range = [],
          thresholds = [];
      function rescale() {
        var i = 0,
            n = Math.max(1, range.length);
        thresholds = new Array(n - 1);
        while (++i < n)
          thresholds[i - 1] = d3Array.quantile(domain, i / n);
        return scale;
      }
      function scale(x) {
        if (!isNaN(x = +x))
          return range[d3Array.bisect(thresholds, x)];
      }
      scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];
      };
      scale.domain = function(_) {
        if (!arguments.length)
          return domain.slice();
        domain = [];
        for (var i = 0,
            n = _.length,
            d; i < n; ++i)
          if (d = _[i], d != null && !isNaN(d = +d))
            domain.push(d);
        domain.sort(d3Array.ascending);
        return rescale();
      };
      scale.range = function(_) {
        return arguments.length ? (range = slice.call(_), rescale()) : range.slice();
      };
      scale.quantiles = function() {
        return thresholds.slice();
      };
      scale.copy = function() {
        return quantile$1().domain(domain).range(range);
      };
      return scale;
    }
    function quantize() {
      var x0 = 0,
          x1 = 1,
          n = 1,
          domain = [0.5],
          range = [0, 1];
      function scale(x) {
        if (x <= x)
          return range[d3Array.bisect(domain, x, 0, n)];
      }
      function rescale() {
        var i = -1;
        domain = new Array(n);
        while (++i < n)
          domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
        return scale;
      }
      scale.domain = function(_) {
        return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
      };
      scale.range = function(_) {
        return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();
      };
      scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];
      };
      scale.copy = function() {
        return quantize().domain([x0, x1]).range(range);
      };
      return linearish(scale);
    }
    function threshold() {
      var domain = [0.5],
          range = [0, 1],
          n = 1;
      function scale(x) {
        if (x <= x)
          return range[d3Array.bisect(domain, x, 0, n)];
      }
      scale.domain = function(_) {
        return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
      };
      scale.range = function(_) {
        return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
      };
      scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return [domain[i - 1], domain[i]];
      };
      scale.copy = function() {
        return threshold().domain(domain).range(range);
      };
      return scale;
    }
    var durationSecond = 1000;
    var durationMinute = durationSecond * 60;
    var durationHour = durationMinute * 60;
    var durationDay = durationHour * 24;
    var durationWeek = durationDay * 7;
    var durationMonth = durationDay * 30;
    var durationYear = durationDay * 365;
    function newDate(t) {
      return new Date(t);
    }
    function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
      var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber),
          invert = scale.invert,
          domain = scale.domain;
      var formatMillisecond = format(".%L"),
          formatSecond = format(":%S"),
          formatMinute = format("%I:%M"),
          formatHour = format("%I %p"),
          formatDay = format("%a %d"),
          formatWeek = format("%b %d"),
          formatMonth = format("%B"),
          formatYear = format("%Y");
      var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];
      function tickFormat(date) {
        return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? (week(date) < date ? formatDay : formatWeek) : year(date) < date ? formatMonth : formatYear)(date);
      }
      function tickInterval(interval, start, stop, step) {
        if (interval == null)
          interval = 10;
        if (typeof interval === "number") {
          var target = Math.abs(stop - start) / interval,
              i = d3Array.bisector(function(i) {
                return i[2];
              }).right(tickIntervals, target);
          if (i === tickIntervals.length) {
            step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);
            interval = year;
          } else if (i) {
            i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
            step = i[1];
            interval = i[0];
          } else {
            step = d3Array.tickStep(start, stop, interval);
            interval = millisecond;
          }
        }
        return step == null ? interval : interval.every(step);
      }
      scale.invert = function(y) {
        return new Date(invert(y));
      };
      scale.domain = function(_) {
        return arguments.length ? domain(_) : domain().map(newDate);
      };
      scale.ticks = function(interval, step) {
        var d = domain(),
            t0 = d[0],
            t1 = d[d.length - 1],
            r = t1 < t0,
            t;
        if (r)
          t = t0, t0 = t1, t1 = t;
        t = tickInterval(interval, t0, t1, step);
        t = t ? t.range(t0, t1 + 1) : [];
        return r ? t.reverse() : t;
      };
      scale.tickFormat = function(count, specifier) {
        return specifier == null ? tickFormat : format(specifier);
      };
      scale.nice = function(interval, step) {
        var d = domain();
        return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain(nice(d, interval)) : scale;
      };
      scale.copy = function() {
        return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
      };
      return scale;
    }
    function time() {
      return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);
    }
    function utcTime() {
      return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);
    }
    function colors(s) {
      return s.match(/.{6}/g).map(function(x) {
        return "#" + x;
      });
    }
    var colors10 = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");
    function category10() {
      return ordinal().range(colors10);
    }
    var colors20b = colors("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6");
    function category20b() {
      return ordinal().range(colors20b);
    }
    var colors20c = colors("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9");
    function category20c() {
      return ordinal().range(colors20c);
    }
    var colors20 = colors("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5");
    function category20() {
      return ordinal().range(colors20);
    }
    function cubehelix$1() {
      return linear().interpolate(d3Interpolate.interpolateCubehelixLong).range([d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0)]);
    }
    function sequential(interpolate) {
      var x0 = 0,
          x1 = 1,
          clamp = false;
      function scale(x) {
        var t = (x - x0) / (x1 - x0);
        return interpolate(clamp ? Math.max(0, Math.min(1, t)) : t);
      }
      scale.domain = function(_) {
        return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];
      };
      scale.clamp = function(_) {
        return arguments.length ? (clamp = !!_, scale) : clamp;
      };
      scale.copy = function() {
        return sequential(interpolate).domain([x0, x1]).clamp(clamp);
      };
      return linearish(scale);
    }
    function warm() {
      return sequential(d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8)));
    }
    function cool() {
      return sequential(d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8)));
    }
    function rainbow() {
      var rainbow = d3Color.cubehelix();
      return sequential(function(t) {
        if (t < 0 || t > 1)
          t -= Math.floor(t);
        var ts = Math.abs(t - 0.5);
        rainbow.h = 360 * t - 100;
        rainbow.s = 1.5 - 1.5 * ts;
        rainbow.l = 0.8 - 0.9 * ts;
        return rainbow + "";
      });
    }
    var rangeViridis = colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725");
    var rangeMagma = colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf");
    var rangeInferno = colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4");
    var rangePlasma = colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921");
    function ramp(range) {
      var s = sequential(function(t) {
        return range[Math.round(t * range.length - t)];
      }).clamp(true);
      delete s.clamp;
      return s;
    }
    function viridis() {
      return ramp(rangeViridis);
    }
    function magma() {
      return ramp(rangeMagma);
    }
    function inferno() {
      return ramp(rangeInferno);
    }
    function plasma() {
      return ramp(rangePlasma);
    }
    exports.version = version;
    exports.scaleBand = band;
    exports.scalePoint = point;
    exports.scaleIdentity = identity;
    exports.scaleLinear = linear;
    exports.scaleLog = log;
    exports.scaleOrdinal = ordinal;
    exports.scaleImplicit = implicit;
    exports.scalePow = pow;
    exports.scaleSqrt = sqrt;
    exports.scaleQuantile = quantile$1;
    exports.scaleQuantize = quantize;
    exports.scaleThreshold = threshold;
    exports.scaleTime = time;
    exports.scaleUtc = utcTime;
    exports.scaleCategory10 = category10;
    exports.scaleCategory20b = category20b;
    exports.scaleCategory20c = category20c;
    exports.scaleCategory20 = category20;
    exports.scaleCubehelix = cubehelix$1;
    exports.scaleRainbow = rainbow;
    exports.scaleWarm = warm;
    exports.scaleCool = cool;
    exports.scaleViridis = viridis;
    exports.scaleMagma = magma;
    exports.scaleInferno = inferno;
    exports.scalePlasma = plasma;
    exports.scaleSequential = sequential;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-scale@0.7.2.js", ["npm:d3-scale@0.7.2/build/d3-scale.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-scale@0.7.2/build/d3-scale.js');
  return module.exports;
});

System.registerDynamic("npm:d3-array@0.7.1/build/d3-array.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (factory((global.d3_array = {})));
  }(this, function(exports) {
    'use strict';
    function ascending(a, b) {
      return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
    }
    function bisector(compare) {
      if (compare.length === 1)
        compare = ascendingComparator(compare);
      return {
        left: function(a, x, lo, hi) {
          if (lo == null)
            lo = 0;
          if (hi == null)
            hi = a.length;
          while (lo < hi) {
            var mid = lo + hi >>> 1;
            if (compare(a[mid], x) < 0)
              lo = mid + 1;
            else
              hi = mid;
          }
          return lo;
        },
        right: function(a, x, lo, hi) {
          if (lo == null)
            lo = 0;
          if (hi == null)
            hi = a.length;
          while (lo < hi) {
            var mid = lo + hi >>> 1;
            if (compare(a[mid], x) > 0)
              hi = mid;
            else
              lo = mid + 1;
          }
          return lo;
        }
      };
    }
    function ascendingComparator(f) {
      return function(d, x) {
        return ascending(f(d), x);
      };
    }
    var ascendingBisect = bisector(ascending);
    var bisectRight = ascendingBisect.right;
    var bisectLeft = ascendingBisect.left;
    function descending(a, b) {
      return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
    }
    function number$1(x) {
      return x === null ? NaN : +x;
    }
    function variance(array, f) {
      var n = array.length,
          m = 0,
          a,
          d,
          s = 0,
          i = -1,
          j = 0;
      if (f == null) {
        while (++i < n) {
          if (!isNaN(a = number$1(array[i]))) {
            d = a - m;
            m += d / ++j;
            s += d * (a - m);
          }
        }
      } else {
        while (++i < n) {
          if (!isNaN(a = number$1(f(array[i], i, array)))) {
            d = a - m;
            m += d / ++j;
            s += d * (a - m);
          }
        }
      }
      if (j > 1)
        return s / (j - 1);
    }
    function deviation(array, f) {
      var v = variance(array, f);
      return v ? Math.sqrt(v) : v;
    }
    function extent(array, f) {
      var i = -1,
          n = array.length,
          a,
          b,
          c;
      if (f == null) {
        while (++i < n)
          if ((b = array[i]) != null && b >= b) {
            a = c = b;
            break;
          }
        while (++i < n)
          if ((b = array[i]) != null) {
            if (a > b)
              a = b;
            if (c < b)
              c = b;
          }
      } else {
        while (++i < n)
          if ((b = f(array[i], i, array)) != null && b >= b) {
            a = c = b;
            break;
          }
        while (++i < n)
          if ((b = f(array[i], i, array)) != null) {
            if (a > b)
              a = b;
            if (c < b)
              c = b;
          }
      }
      return [a, c];
    }
    function constant(x) {
      return function() {
        return x;
      };
    }
    function identity(x) {
      return x;
    }
    function range(start, stop, step) {
      start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
      var i = -1,
          n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
          range = new Array(n);
      while (++i < n) {
        range[i] = start + i * step;
      }
      return range;
    }
    var e10 = Math.sqrt(50);
    var e5 = Math.sqrt(10);
    var e2 = Math.sqrt(2);
    function ticks(start, stop, count) {
      var step = tickStep(start, stop, count);
      return range(Math.ceil(start / step) * step, Math.floor(stop / step) * step + step / 2, step);
    }
    function tickStep(start, stop, count) {
      var step0 = Math.abs(stop - start) / Math.max(0, count),
          step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
          error = step0 / step1;
      if (error >= e10)
        step1 *= 10;
      else if (error >= e5)
        step1 *= 5;
      else if (error >= e2)
        step1 *= 2;
      return stop < start ? -step1 : step1;
    }
    function sturges(values) {
      return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
    }
    function number(x) {
      return +x;
    }
    function histogram() {
      var value = identity,
          domain = extent,
          threshold = sturges;
      function histogram(data) {
        var i,
            n = data.length,
            x,
            values = new Array(n);
        for (i = 0; i < n; ++i) {
          values[i] = +value(data[i], i, data);
        }
        var xz = domain(values),
            x0 = +xz[0],
            x1 = +xz[1],
            tz = threshold(values, x0, x1);
        if (!Array.isArray(tz))
          tz = ticks(x0, x1, +tz);
        var m = tz.length;
        for (i = 0; i < m; ++i)
          tz[i] = +tz[i];
        while (tz[0] <= x0)
          tz.shift(), --m;
        while (tz[m - 1] >= x1)
          tz.pop(), --m;
        var bins = new Array(m + 1),
            bin;
        for (i = 0; i <= m; ++i) {
          bin = bins[i] = [];
          bin.x0 = i > 0 ? tz[i - 1] : x0;
          bin.x1 = i < m ? tz[i] : x1;
        }
        for (i = 0; i < n; ++i) {
          x = values[i];
          if (x0 <= x && x <= x1) {
            bins[bisectRight(tz, x, 0, m)].push(data[i]);
          }
        }
        return bins;
      }
      histogram.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : constant(+_), histogram) : value;
      };
      histogram.domain = function(_) {
        return arguments.length ? (domain = typeof _ === "function" ? _ : constant([+_[0], +_[1]]), histogram) : domain;
      };
      histogram.thresholds = function(_) {
        if (!arguments.length)
          return threshold;
        threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant(Array.prototype.map.call(_, number)) : constant(+_);
        return histogram;
      };
      return histogram;
    }
    function quantile(array, p, f) {
      if (f == null)
        f = number$1;
      if (!(n = array.length))
        return;
      if ((p = +p) <= 0 || n < 2)
        return +f(array[0], 0, array);
      if (p >= 1)
        return +f(array[n - 1], n - 1, array);
      var n,
          h = (n - 1) * p,
          i = Math.floor(h),
          a = +f(array[i], i, array),
          b = +f(array[i + 1], i + 1, array);
      return a + (b - a) * (h - i);
    }
    function freedmanDiaconis(values, min, max) {
      values.sort(ascending);
      return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));
    }
    function scott(values, min, max) {
      return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));
    }
    function max(array, f) {
      var i = -1,
          n = array.length,
          a,
          b;
      if (f == null) {
        while (++i < n)
          if ((b = array[i]) != null && b >= b) {
            a = b;
            break;
          }
        while (++i < n)
          if ((b = array[i]) != null && b > a)
            a = b;
      } else {
        while (++i < n)
          if ((b = f(array[i], i, array)) != null && b >= b) {
            a = b;
            break;
          }
        while (++i < n)
          if ((b = f(array[i], i, array)) != null && b > a)
            a = b;
      }
      return a;
    }
    function mean(array, f) {
      var s = 0,
          n = array.length,
          a,
          i = -1,
          j = n;
      if (f == null) {
        while (++i < n)
          if (!isNaN(a = number$1(array[i])))
            s += a;
          else
            --j;
      } else {
        while (++i < n)
          if (!isNaN(a = number$1(f(array[i], i, array))))
            s += a;
          else
            --j;
      }
      if (j)
        return s / j;
    }
    function median(array, f) {
      var numbers = [],
          n = array.length,
          a,
          i = -1;
      if (f == null) {
        while (++i < n)
          if (!isNaN(a = number$1(array[i])))
            numbers.push(a);
      } else {
        while (++i < n)
          if (!isNaN(a = number$1(f(array[i], i, array))))
            numbers.push(a);
      }
      return quantile(numbers.sort(ascending), 0.5);
    }
    function merge(arrays) {
      var n = arrays.length,
          m,
          i = -1,
          j = 0,
          merged,
          array;
      while (++i < n)
        j += arrays[i].length;
      merged = new Array(j);
      while (--n >= 0) {
        array = arrays[n];
        m = array.length;
        while (--m >= 0) {
          merged[--j] = array[m];
        }
      }
      return merged;
    }
    function min(array, f) {
      var i = -1,
          n = array.length,
          a,
          b;
      if (f == null) {
        while (++i < n)
          if ((b = array[i]) != null && b >= b) {
            a = b;
            break;
          }
        while (++i < n)
          if ((b = array[i]) != null && a > b)
            a = b;
      } else {
        while (++i < n)
          if ((b = f(array[i], i, array)) != null && b >= b) {
            a = b;
            break;
          }
        while (++i < n)
          if ((b = f(array[i], i, array)) != null && a > b)
            a = b;
      }
      return a;
    }
    function pairs(array) {
      var i = 0,
          n = array.length - 1,
          p = array[0],
          pairs = new Array(n < 0 ? 0 : n);
      while (i < n)
        pairs[i] = [p, p = array[++i]];
      return pairs;
    }
    function permute(array, indexes) {
      var i = indexes.length,
          permutes = new Array(i);
      while (i--)
        permutes[i] = array[indexes[i]];
      return permutes;
    }
    function scan(array, compare) {
      if (!(n = array.length))
        return;
      var i = 0,
          n,
          j = 0,
          xi,
          xj = array[j];
      if (!compare)
        compare = ascending;
      while (++i < n)
        if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0)
          xj = xi, j = i;
      if (compare(xj, xj) === 0)
        return j;
    }
    function shuffle(array, i0, i1) {
      var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
          t,
          i;
      while (m) {
        i = Math.random() * m-- | 0;
        t = array[m + i0];
        array[m + i0] = array[i + i0];
        array[i + i0] = t;
      }
      return array;
    }
    function sum(array, f) {
      var s = 0,
          n = array.length,
          a,
          i = -1;
      if (f == null) {
        while (++i < n)
          if (a = +array[i])
            s += a;
      } else {
        while (++i < n)
          if (a = +f(array[i], i, array))
            s += a;
      }
      return s;
    }
    function transpose(matrix) {
      if (!(n = matrix.length))
        return [];
      for (var i = -1,
          m = min(matrix, length),
          transpose = new Array(m); ++i < m; ) {
        for (var j = -1,
            n,
            row = transpose[i] = new Array(n); ++j < n; ) {
          row[j] = matrix[j][i];
        }
      }
      return transpose;
    }
    function length(d) {
      return d.length;
    }
    function zip() {
      return transpose(arguments);
    }
    var version = "0.7.1";
    exports.version = version;
    exports.bisect = bisectRight;
    exports.bisectRight = bisectRight;
    exports.bisectLeft = bisectLeft;
    exports.ascending = ascending;
    exports.bisector = bisector;
    exports.descending = descending;
    exports.deviation = deviation;
    exports.extent = extent;
    exports.histogram = histogram;
    exports.thresholdFreedmanDiaconis = freedmanDiaconis;
    exports.thresholdScott = scott;
    exports.thresholdSturges = sturges;
    exports.max = max;
    exports.mean = mean;
    exports.median = median;
    exports.merge = merge;
    exports.min = min;
    exports.pairs = pairs;
    exports.permute = permute;
    exports.quantile = quantile;
    exports.range = range;
    exports.scan = scan;
    exports.shuffle = shuffle;
    exports.sum = sum;
    exports.ticks = ticks;
    exports.tickStep = tickStep;
    exports.transpose = transpose;
    exports.variance = variance;
    exports.zip = zip;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-array@0.7.1.js", ["npm:d3-array@0.7.1/build/d3-array.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-array@0.7.1/build/d3-array.js');
  return module.exports;
});

System.registerDynamic("npm:d3-collection@0.1.2/build/d3-collection.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (factory((global.d3_collection = global.d3_collection || {})));
  }(this, function(exports) {
    'use strict';
    var prefix = "$";
    function Map() {}
    Map.prototype = map.prototype = {
      constructor: Map,
      has: function(key) {
        return (prefix + key) in this;
      },
      get: function(key) {
        return this[prefix + key];
      },
      set: function(key, value) {
        this[prefix + key] = value;
        return this;
      },
      remove: function(key) {
        var property = prefix + key;
        return property in this && delete this[property];
      },
      clear: function() {
        for (var property in this)
          if (property[0] === prefix)
            delete this[property];
      },
      keys: function() {
        var keys = [];
        for (var property in this)
          if (property[0] === prefix)
            keys.push(property.slice(1));
        return keys;
      },
      values: function() {
        var values = [];
        for (var property in this)
          if (property[0] === prefix)
            values.push(this[property]);
        return values;
      },
      entries: function() {
        var entries = [];
        for (var property in this)
          if (property[0] === prefix)
            entries.push({
              key: property.slice(1),
              value: this[property]
            });
        return entries;
      },
      size: function() {
        var size = 0;
        for (var property in this)
          if (property[0] === prefix)
            ++size;
        return size;
      },
      empty: function() {
        for (var property in this)
          if (property[0] === prefix)
            return false;
        return true;
      },
      each: function(f) {
        for (var property in this)
          if (property[0] === prefix)
            f(this[property], property.slice(1), this);
      }
    };
    function map(object, f) {
      var map = new Map;
      if (object instanceof Map)
        object.each(function(value, key) {
          map.set(key, value);
        });
      else if (Array.isArray(object)) {
        var i = -1,
            n = object.length,
            o;
        if (f == null)
          while (++i < n)
            map.set(i, object[i]);
        else
          while (++i < n)
            map.set(f(o = object[i], i, object), o);
      } else if (object)
        for (var key in object)
          map.set(key, object[key]);
      return map;
    }
    function nest() {
      var keys = [],
          sortKeys = [],
          sortValues,
          rollup,
          nest;
      function apply(array, depth, createResult, setResult) {
        if (depth >= keys.length)
          return rollup ? rollup(array) : (sortValues ? array.sort(sortValues) : array);
        var i = -1,
            n = array.length,
            key = keys[depth++],
            keyValue,
            value,
            valuesByKey = map(),
            values,
            result = createResult();
        while (++i < n) {
          if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
            values.push(value);
          } else {
            valuesByKey.set(keyValue, [value]);
          }
        }
        valuesByKey.each(function(values, key) {
          setResult(result, key, apply(values, depth, createResult, setResult));
        });
        return result;
      }
      function entries(map, depth) {
        if (depth >= keys.length)
          return map;
        var array = [],
            sortKey = sortKeys[depth++];
        map.each(function(value, key) {
          array.push({
            key: key,
            values: entries(value, depth)
          });
        });
        return sortKey ? array.sort(function(a, b) {
          return sortKey(a.key, b.key);
        }) : array;
      }
      return nest = {
        object: function(array) {
          return apply(array, 0, createObject, setObject);
        },
        map: function(array) {
          return apply(array, 0, createMap, setMap);
        },
        entries: function(array) {
          return entries(apply(array, 0, createMap, setMap), 0);
        },
        key: function(d) {
          keys.push(d);
          return nest;
        },
        sortKeys: function(order) {
          sortKeys[keys.length - 1] = order;
          return nest;
        },
        sortValues: function(order) {
          sortValues = order;
          return nest;
        },
        rollup: function(f) {
          rollup = f;
          return nest;
        }
      };
    }
    function createObject() {
      return {};
    }
    function setObject(object, key, value) {
      object[key] = value;
    }
    function createMap() {
      return map();
    }
    function setMap(map, key, value) {
      map.set(key, value);
    }
    function Set() {}
    var proto = map.prototype;
    Set.prototype = set.prototype = {
      constructor: Set,
      has: proto.has,
      add: function(value) {
        value += "";
        this[prefix + value] = value;
        return this;
      },
      remove: proto.remove,
      clear: proto.clear,
      values: proto.keys,
      size: proto.size,
      empty: proto.empty,
      each: proto.each
    };
    function set(object, f) {
      var set = new Set;
      if (object instanceof Set)
        object.each(function(value) {
          set.add(value);
        });
      else if (object) {
        var i = -1,
            n = object.length;
        if (f == null)
          while (++i < n)
            set.add(object[i]);
        else
          while (++i < n)
            set.add(f(object[i], i, object));
      }
      return set;
    }
    function keys(map) {
      var keys = [];
      for (var key in map)
        keys.push(key);
      return keys;
    }
    function values(map) {
      var values = [];
      for (var key in map)
        values.push(map[key]);
      return values;
    }
    function entries(map) {
      var entries = [];
      for (var key in map)
        entries.push({
          key: key,
          value: map[key]
        });
      return entries;
    }
    var version = "0.1.2";
    exports.version = version;
    exports.nest = nest;
    exports.set = set;
    exports.map = map;
    exports.keys = keys;
    exports.values = values;
    exports.entries = entries;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-collection@0.1.2.js", ["npm:d3-collection@0.1.2/build/d3-collection.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-collection@0.1.2/build/d3-collection.js');
  return module.exports;
});

System.registerDynamic("npm:warning@2.1.0/browser.js", ["github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var warning = function() {};
    if ("production" !== 'production') {
      warning = function(condition, format, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (format.length < 10 || (/^[s\W]*$/).test(format)) {
          throw new Error('The warning format should be able to uniquely identify this ' + 'warning. Please, use a more descriptive format than: ' + format);
        }
        if (!condition) {
          var argIndex = 0;
          var message = 'Warning: ' + format.replace(/%s/g, function() {
            return args[argIndex++];
          });
          if (typeof console !== 'undefined') {
            console.error(message);
          }
          try {
            throw new Error(message);
          } catch (x) {}
        }
      };
    }
    module.exports = warning;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:warning@2.1.0.js", ["npm:warning@2.1.0/browser.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:warning@2.1.0/browser.js');
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/utils/data-utils.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.getObjectValueAccessor = getObjectValueAccessor;
  exports.getUniquePropertyValues = getUniquePropertyValues;
  exports.isObjectPropertyInUse = isObjectPropertyInUse;
  exports.addValueToArray = addValueToArray;
  function getObjectValueAccessor(propertyName) {
    return function(obj) {
      return obj[propertyName];
    };
  }
  function getUniquePropertyValues(arr, propertyName) {
    var setOfValues = new Set(arr.map(getObjectValueAccessor(propertyName)));
    return Array.from(setOfValues);
  }
  function isObjectPropertyInUse(arr, propertyName) {
    return Boolean(arr.find(function(d) {
      return d && typeof d[propertyName] !== 'undefined';
    }));
  }
  function addValueToArray(arr, value) {
    var result = [].concat(arr);
    if (result[0] > value) {
      result[0] = value;
    }
    if (result[result.length - 1] < value) {
      result[result.length - 1] = value;
    }
    return result;
  }
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js", ["npm:d3-scale@0.7.2.js", "npm:d3-array@0.7.1.js", "npm:d3-collection@0.1.2.js", "npm:react@15.3.0.js", "npm:warning@2.1.0.js", "npm:react-vis@0.4.2/dist/lib/utils/data-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
    return typeof obj;
  } : function(obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
  };
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _SCALE_FUNCTIONS;
  exports._getSmallestDistanceIndex = _getSmallestDistanceIndex;
  exports.getScaleObjectFromProps = getScaleObjectFromProps;
  exports.getAttributeScale = getAttributeScale;
  exports.getAttributeFunctor = getAttributeFunctor;
  exports.getAttr0Functor = getAttr0Functor;
  exports.getAttributeValue = getAttributeValue;
  exports.getScalePropTypesByAttribute = getScalePropTypesByAttribute;
  var _d3Scale = $__require('npm:d3-scale@0.7.2.js');
  var _d3Scale2 = _interopRequireDefault(_d3Scale);
  var _d3Array = $__require('npm:d3-array@0.7.1.js');
  var _d3Array2 = _interopRequireDefault(_d3Array);
  var _d3Collection = $__require('npm:d3-collection@0.1.2.js');
  var _d3Collection2 = _interopRequireDefault(_d3Collection);
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _warning = $__require('npm:warning@2.1.0.js');
  var _warning2 = _interopRequireDefault(_warning);
  var _dataUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/data-utils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _toConsumableArray(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0,
          arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    } else {
      return Array.from(arr);
    }
  }
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  var LINEAR_SCALE_TYPE = 'linear';
  var ORDINAL_SCALE_TYPE = 'ordinal';
  var CATEGORY_SCALE_TYPE = 'category';
  var LOG_SCALE_TYPE = 'log';
  var TIME_SCALE_TYPE = 'time';
  var TIME_UTC_SCALE_TYPE = 'time-utc';
  var SCALE_FUNCTIONS = (_SCALE_FUNCTIONS = {}, _defineProperty(_SCALE_FUNCTIONS, LINEAR_SCALE_TYPE, _d3Scale2.default.scaleLinear), _defineProperty(_SCALE_FUNCTIONS, ORDINAL_SCALE_TYPE, _d3Scale2.default.scalePoint), _defineProperty(_SCALE_FUNCTIONS, CATEGORY_SCALE_TYPE, _d3Scale2.default.scaleOrdinal), _defineProperty(_SCALE_FUNCTIONS, LOG_SCALE_TYPE, _d3Scale2.default.scaleLog), _defineProperty(_SCALE_FUNCTIONS, TIME_SCALE_TYPE, _d3Scale2.default.scaleTime), _defineProperty(_SCALE_FUNCTIONS, TIME_UTC_SCALE_TYPE, _d3Scale2.default.scaleUtc), _SCALE_FUNCTIONS);
  function _getSmallestDistanceIndex(values, scaleObject) {
    var scaleFn = _getScaleFnFromScaleObject(scaleObject);
    var result = 0;
    if (scaleFn) {
      var nextValue = undefined;
      var currentValue = scaleFn(values[0]);
      var distance = Infinity;
      var nextDistance = undefined;
      for (var i = 1; i < values.length; i++) {
        nextValue = scaleFn(values[i]);
        nextDistance = Math.abs(nextValue - currentValue);
        if (nextDistance < distance) {
          distance = nextDistance;
          result = i;
        }
        currentValue = nextValue;
      }
    }
    return result;
  }
  function _getScaleFnFromScaleObject(scaleObject) {
    if (!scaleObject) {
      return null;
    }
    var type = scaleObject.type;
    var domain = scaleObject.domain;
    var range = scaleObject.range;
    var scale = SCALE_FUNCTIONS[type]().domain(domain).range(range);
    if (type === ORDINAL_SCALE_TYPE) {
      scale.padding(0.5);
    }
    return scale;
  }
  function _getDomainByAttr(allData, attr, type) {
    var domain = undefined;
    var attr0 = attr + '0';
    var values = allData.reduce(function(data, d) {
      var value = d[attr];
      var value0 = d[attr0];
      data.push(value);
      if (_isDefined(value0)) {
        data.push(value0);
      }
      return data;
    }, []);
    if (type !== ORDINAL_SCALE_TYPE && type !== CATEGORY_SCALE_TYPE) {
      domain = _d3Array2.default.extent(values);
    } else {
      domain = _d3Collection2.default.set(values).values();
    }
    return domain;
  }
  function _createScaleObjectForValue(attr, value) {
    if (typeof value === 'undefined') {
      return null;
    }
    return {
      type: 'category',
      range: [value],
      domain: [],
      distance: 0,
      attr: attr,
      baseValue: undefined,
      isValue: true
    };
  }
  function _createScaleObjectForFunction(domain, range, type, distance, attr, baseValue) {
    return {
      domain: domain,
      range: range,
      type: type,
      distance: distance,
      attr: attr,
      baseValue: baseValue,
      isValue: false
    };
  }
  function _collectScaleObjectFromProps(props, attr) {
    var _ref;
    var _props$_allData = props._allData;
    var data = _props$_allData === undefined ? [] : _props$_allData;
    var value = props[attr];
    var fallbackValue = props['_' + attr + 'Value'];
    var initialDomain = props[attr + 'Domain'];
    var range = props[attr + 'Range'];
    var _props$ = props[attr + 'Distance'];
    var distance = _props$ === undefined ? 0 : _props$;
    var baseValue = props[attr + 'BaseValue'];
    var _props$2 = props[attr + 'Type'];
    var type = _props$2 === undefined ? LINEAR_SCALE_TYPE : _props$2;
    if (typeof value !== 'undefined') {
      return _createScaleObjectForValue(attr, value);
    }
    var filteredData = data.filter(function(d) {
      return d;
    });
    var allData = (_ref = []).concat.apply(_ref, _toConsumableArray(filteredData));
    if (!range || !allData.length || !(0, _dataUtils.isObjectPropertyInUse)(allData, attr)) {
      return _createScaleObjectForValue(attr, fallbackValue);
    }
    var domain = initialDomain || _getDomainByAttr(allData, attr, type);
    if (typeof baseValue !== 'undefined') {
      domain = (0, _dataUtils.addValueToArray)(domain, baseValue);
    }
    return _createScaleObjectForFunction(domain, range, type, distance, attr, baseValue);
  }
  function _computeLeftDomainAdjustment(values) {
    if (values.length > 1) {
      return (values[1] - values[0]) / 2;
    }
    if (values.length === 1) {
      return values[0] - 0.5;
    }
    return 0;
  }
  function _computeRightDomainAdjustment(values) {
    if (values.length > 1) {
      return (values[values.length - 1] - values[values.length - 2]) / 2;
    }
    if (values.length === 1) {
      return values[0] - 0.5;
    }
    return 0;
  }
  function _computeScaleDistance(values, domain, bestDistIndex, scaleFn) {
    if (values.length > 1) {
      var i = Math.max(bestDistIndex, 1);
      return Math.abs(scaleFn(values[i]) - scaleFn(values[i - 1]));
    }
    if (values.length === 1) {
      return Math.abs(scaleFn(domain[1]) - scaleFn(domain[0]));
    }
    return 0;
  }
  function _getScaleDistanceAndAdjustedDomain(data, scaleObject) {
    var attr = scaleObject.attr;
    var domain = scaleObject.domain;
    var values = (0, _dataUtils.getUniquePropertyValues)(data, attr);
    var index = _getSmallestDistanceIndex(values, scaleObject);
    var adjustedDomain = [].concat(domain);
    adjustedDomain[0] -= _computeLeftDomainAdjustment(values);
    adjustedDomain[domain.length - 1] += _computeRightDomainAdjustment(values);
    if (scaleObject.type === LOG_SCALE_TYPE && domain[0] <= 0) {
      adjustedDomain[0] = Math.min(domain[1] / 10, 1);
    }
    var adjustedScaleFn = _getScaleFnFromScaleObject(_extends({}, scaleObject, {domain: adjustedDomain}));
    var distance = _computeScaleDistance(values, adjustedDomain, index, adjustedScaleFn);
    return {
      domain0: adjustedDomain[0],
      domainN: adjustedDomain[adjustedDomain.length - 1],
      distance: distance
    };
  }
  function _isScaleAdjustmentPossible(props, scaleObject) {
    var attr = scaleObject.attr;
    var _props$_adjustBy = props._adjustBy;
    var adjustBy = _props$_adjustBy === undefined ? [] : _props$_adjustBy;
    var _props$_adjustWhat = props._adjustWhat;
    var adjustWhat = _props$_adjustWhat === undefined ? [] : _props$_adjustWhat;
    return adjustWhat.length && adjustBy.length && adjustBy.indexOf(attr) !== -1;
  }
  function _adjustContinuousScale(props, scaleObject) {
    var allSeriesData = props._allData;
    var _props$_adjustWhat2 = props._adjustWhat;
    var adjustWhat = _props$_adjustWhat2 === undefined ? [] : _props$_adjustWhat2;
    var domainLength = scaleObject.domain.length;
    var domain = scaleObject.domain;
    var scaleDomain0 = domain[0];
    var scaleDomainN = domain[domainLength - 1];
    var scaleDistance = scaleObject.distance;
    allSeriesData.forEach(function(data, index) {
      if (adjustWhat.indexOf(index) === -1) {
        return;
      }
      if (data && data.length) {
        var _getScaleDistanceAndA = _getScaleDistanceAndAdjustedDomain(data, scaleObject);
        var domain0 = _getScaleDistanceAndA.domain0;
        var domainN = _getScaleDistanceAndA.domainN;
        var distance = _getScaleDistanceAndA.distance;
        scaleDomain0 = Math.min(scaleDomain0, domain0);
        scaleDomainN = Math.max(scaleDomainN, domainN);
        scaleDistance = Math.max(scaleDistance, distance);
      }
    });
    scaleObject.domain = [scaleDomain0].concat(_toConsumableArray(domain.slice(1, -1)), [scaleDomainN]);
    scaleObject.distance = scaleDistance;
    return scaleObject;
  }
  function _adjustCategoricalScale(scaleObject) {
    var scaleFn = _getScaleFnFromScaleObject(scaleObject);
    var domain = scaleObject.domain;
    var range = scaleObject.range;
    if (domain.length > 1) {
      scaleObject.distance = scaleFn(domain[1]) - scaleFn(domain[0]);
    } else {
      scaleObject.distance = range[1] - range[0];
    }
    return scaleObject;
  }
  function getScaleObjectFromProps(props, attr) {
    var scaleObject = _collectScaleObjectFromProps(props, attr);
    if (!scaleObject) {
      return null;
    }
    if (!_isScaleAdjustmentPossible(props, scaleObject)) {
      return scaleObject;
    }
    var type = scaleObject.type;
    if (type === ORDINAL_SCALE_TYPE || type === CATEGORY_SCALE_TYPE) {
      return _adjustCategoricalScale(scaleObject);
    }
    return _adjustContinuousScale(props, scaleObject);
  }
  function getAttributeScale(props, attr) {
    var scaleObject = getScaleObjectFromProps(props, attr);
    return _getScaleFnFromScaleObject(scaleObject);
  }
  function _getAttrValue(d, attr) {
    return d.data ? d.data[attr] : d[attr];
  }
  function _isDefined(value) {
    return typeof value !== 'undefined';
  }
  function getAttributeFunctor(props, attr) {
    var scaleObject = getScaleObjectFromProps(props, attr);
    if (scaleObject) {
      var _ret = function() {
        var scaleFn = _getScaleFnFromScaleObject(scaleObject);
        return {v: function v(d) {
            return scaleFn(_getAttrValue(d, attr));
          }};
      }();
      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object")
        return _ret.v;
    }
    return null;
  }
  function getAttr0Functor(props, attr) {
    var scaleObject = getScaleObjectFromProps(props, attr);
    if (scaleObject) {
      var _ret2 = function() {
        var attr0 = attr + '0';
        var domain = scaleObject.domain;
        var _scaleObject$baseValu = scaleObject.baseValue;
        var baseValue = _scaleObject$baseValu === undefined ? domain[0] : _scaleObject$baseValu;
        var scaleFn = _getScaleFnFromScaleObject(scaleObject);
        return {v: function v(d) {
            var value = _getAttrValue(d, attr0);
            return scaleFn(_isDefined(value) ? value : baseValue);
          }};
      }();
      if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object")
        return _ret2.v;
    }
    return null;
  }
  function getAttributeValue(props, attr) {
    var scaleObject = getScaleObjectFromProps(props, attr);
    if (scaleObject) {
      if (!scaleObject.isValue) {
        (0, _warning2.default)(false, 'Cannot use data defined ' + attr + ' for this series' + 'type. Using fallback value instead.');
      }
      return scaleObject.range[0];
    }
    return null;
  }
  function getScalePropTypesByAttribute(attr) {
    var _ref2;
    return _ref2 = {}, _defineProperty(_ref2, '_' + attr + 'Value', _react2.default.PropTypes.any), _defineProperty(_ref2, attr + 'Domain', _react2.default.PropTypes.array), _defineProperty(_ref2, attr + 'Range', _react2.default.PropTypes.array), _defineProperty(_ref2, attr + 'Type', _react2.default.PropTypes.oneOf(Object.keys(SCALE_FUNCTIONS))), _defineProperty(_ref2, attr + 'Distance', _react2.default.PropTypes.number), _defineProperty(_ref2, attr + 'BaseValue', _react2.default.PropTypes.any), _ref2;
  }
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js", ["npm:react@15.3.0.js", "npm:d3-selection@0.7.3.js", "npm:react-vis@0.4.2/dist/lib/pure-render-component.js", "npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js", "npm:react-vis@0.4.2/dist/lib/utils/animation-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _d3Selection = $__require('npm:d3-selection@0.7.3.js');
  var _d3Selection2 = _interopRequireDefault(_d3Selection);
  var _pureRenderComponent = $__require('npm:react-vis@0.4.2/dist/lib/pure-render-component.js');
  var _pureRenderComponent2 = _interopRequireDefault(_pureRenderComponent);
  var _scalesUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js');
  var _animationUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/animation-utils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var AbstractSeries = function(_PureRenderComponent) {
    _inherits(AbstractSeries, _PureRenderComponent);
    _createClass(AbstractSeries, null, [{
      key: 'propTypes',
      get: function get() {
        return _extends({}, (0, _scalesUtils.getScalePropTypesByAttribute)('x'), (0, _scalesUtils.getScalePropTypesByAttribute)('y'), (0, _scalesUtils.getScalePropTypesByAttribute)('size'), (0, _scalesUtils.getScalePropTypesByAttribute)('opacity'), (0, _scalesUtils.getScalePropTypesByAttribute)('color'), {
          width: _react2.default.PropTypes.number,
          height: _react2.default.PropTypes.number,
          data: _react2.default.PropTypes.array,
          onValueMouseOver: _react2.default.PropTypes.func,
          onValueMouseOut: _react2.default.PropTypes.func,
          onValueClick: _react2.default.PropTypes.func,
          onSeriesMouseOver: _react2.default.PropTypes.func,
          onSeriesMouseOut: _react2.default.PropTypes.func,
          onSeriesClick: _react2.default.PropTypes.func,
          onNearestX: _react2.default.PropTypes.func,
          animation: _animationUtils.AnimationPropType
        });
      }
    }]);
    function AbstractSeries(props) {
      _classCallCheck(this, AbstractSeries);
      var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(AbstractSeries).call(this, props));
      _this._mouseOver = _this._mouseOverHandler.bind(_this, false);
      _this._mouseOverWithValue = _this._mouseOverHandler.bind(_this, true);
      _this._mouseOut = _this._mouseOutHandler.bind(_this, false);
      _this._mouseOutWithValue = _this._mouseOutHandler.bind(_this, true);
      _this._click = _this._clickHandler.bind(_this, false);
      _this._clickWithValue = _this._clickHandler.bind(_this, true);
      return _this;
    }
    _createClass(AbstractSeries, [{
      key: '_mouseOverHandler',
      value: function _mouseOverHandler(useValue, d) {
        var _props = this.props;
        var onValueMouseOver = _props.onValueMouseOver;
        var onSeriesMouseOver = _props.onSeriesMouseOver;
        if (useValue && onValueMouseOver) {
          onValueMouseOver(d, {event: _d3Selection2.default.event});
        }
        if (onSeriesMouseOver) {
          onSeriesMouseOver({event: _d3Selection2.default.event});
        }
      }
    }, {
      key: '_mouseOutHandler',
      value: function _mouseOutHandler(useValue, d) {
        var _props2 = this.props;
        var onValueMouseOut = _props2.onValueMouseOut;
        var onSeriesMouseOut = _props2.onSeriesMouseOut;
        if (useValue && onValueMouseOut) {
          onValueMouseOut(d, {event: _d3Selection2.default.event});
        }
        if (onSeriesMouseOut) {
          onSeriesMouseOut({event: _d3Selection2.default.event});
        }
      }
    }, {
      key: '_clickHandler',
      value: function _clickHandler(useValue, d) {
        var _props3 = this.props;
        var onValueClick = _props3.onValueClick;
        var onSeriesClick = _props3.onSeriesClick;
        if (useValue && onValueClick) {
          onValueClick(d, {event: _d3Selection2.default.event});
        }
        if (onSeriesClick) {
          onSeriesClick({event: _d3Selection2.default.event});
        }
      }
    }, {
      key: '_getAttributeFunctor',
      value: function _getAttributeFunctor(attr) {
        return (0, _scalesUtils.getAttributeFunctor)(this.props, attr);
      }
    }, {
      key: '_getAttr0Functor',
      value: function _getAttr0Functor(attr) {
        return (0, _scalesUtils.getAttr0Functor)(this.props, attr);
      }
    }, {
      key: '_getAttributeValue',
      value: function _getAttributeValue(attr) {
        return (0, _scalesUtils.getAttributeValue)(this.props, attr);
      }
    }, {
      key: '_getScaleDistance',
      value: function _getScaleDistance(attr) {
        var scaleObject = (0, _scalesUtils.getScaleObjectFromProps)(this.props, attr);
        return scaleObject ? scaleObject.distance : 0;
      }
    }, {
      key: '_applyTransition',
      value: function _applyTransition(elements) {
        return (0, _animationUtils.applyTransition)(this.props, elements);
      }
    }, {
      key: 'onParentMouseMove',
      value: function onParentMouseMove(event) {
        var _props4 = this.props;
        var _props4$marginLeft = _props4.marginLeft;
        var marginLeft = _props4$marginLeft === undefined ? 0 : _props4$marginLeft;
        var onNearestX = _props4.onNearestX;
        var data = _props4.data;
        if (!onNearestX || !data) {
          return;
        }
        var minDistance = Number.POSITIVE_INFINITY;
        var value = null;
        _d3Selection2.default.event = event.nativeEvent;
        var coordinate = _d3Selection2.default.mouse(event.currentTarget)[0] - marginLeft;
        var xScaleFn = this._getAttributeFunctor('x');
        data.forEach(function(item) {
          var currentCoordinate = xScaleFn(item);
          var newDistance = Math.abs(coordinate - currentCoordinate);
          if (newDistance < minDistance) {
            minDistance = newDistance;
            value = item;
          }
        });
        if (!value) {
          return;
        }
        onNearestX(value, {
          innerX: xScaleFn(value),
          event: event.nativeEvent
        });
      }
    }], [{
      key: 'getParentConfig',
      value: function getParentConfig() {
        return {};
      }
    }, {
      key: 'requiresSVG',
      get: function get() {
        return true;
      }
    }]);
    return AbstractSeries;
  }(_pureRenderComponent2.default);
  exports.default = AbstractSeries;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/utils/series-utils.js", ["npm:react@15.3.0.js", "npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js", "npm:react-vis@0.4.2/dist/lib/theme.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  exports.isSeriesChild = isSeriesChild;
  exports.getSeriesChildren = getSeriesChildren;
  exports.getStackedData = getStackedData;
  exports.getSeriesPropsFromChildren = getSeriesPropsFromChildren;
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _abstractSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/abstract-series.js');
  var _abstractSeries2 = _interopRequireDefault(_abstractSeries);
  var _theme = $__require('npm:react-vis@0.4.2/dist/lib/theme.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  function isSeriesChild(child) {
    var prototype = child.type.prototype;
    return prototype instanceof _abstractSeries2.default;
  }
  function getSeriesChildren(children) {
    return _react2.default.Children.toArray(children).filter(function(child) {
      return child && isSeriesChild(child);
    });
  }
  function collectSeriesTypesInfo(children) {
    var result = {};
    children.filter(isSeriesChild).forEach(function(child) {
      var displayName = child.type.displayName;
      if (!result[displayName]) {
        result[displayName] = {
          sameTypeTotal: 0,
          sameTypeIndex: 0
        };
      }
      result[displayName].sameTypeTotal++;
    });
    return result;
  }
  function getStackedData(children, attr) {
    var childData = [];
    var prevIndex = -1;
    children.forEach(function(child, childIndex) {
      if (!child) {
        childData.push(null);
        return;
      }
      var data = child.props.data;
      if (!attr || !data || !data.length) {
        childData.push(data);
        return;
      }
      var attr0 = attr + '0';
      childData.push(data.map(function(d, dIndex) {
        var _extends2;
        if (prevIndex < 0) {
          return _extends({}, d);
        }
        var prevD = childData[prevIndex][dIndex];
        return _extends({}, d, (_extends2 = {}, _defineProperty(_extends2, attr0, prevD[attr]), _defineProperty(_extends2, attr, prevD[attr] + d[attr] - (d[attr0] || 0)), _extends2));
      }));
      prevIndex = childIndex;
    });
    return childData;
  }
  function getSeriesPropsFromChildren(children) {
    var result = [];
    var seriesTypesInfo = collectSeriesTypesInfo(children);
    var seriesIndex = 0;
    var _opacityValue = _theme.DEFAULT_OPACITY;
    children.forEach(function(child) {
      var props = undefined;
      if (isSeriesChild(child)) {
        var seriesTypeInfo = seriesTypesInfo[child.type.displayName];
        var _colorValue = _theme.DISCRETE_COLOR_RANGE[seriesIndex % _theme.DISCRETE_COLOR_RANGE.length];
        props = _extends({}, seriesTypeInfo, {
          seriesIndex: seriesIndex,
          ref: 'series' + seriesIndex,
          _colorValue: _colorValue,
          _opacityValue: _opacityValue
        });
        seriesTypeInfo.sameTypeIndex++;
        seriesIndex++;
      }
      result.push(props);
    });
    return result;
  }
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/utils/chart-utils.js", ["npm:react-vis@0.4.2/dist/lib/utils/series-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.getInnerDimensions = getInnerDimensions;
  exports.getDataFromChildren = getDataFromChildren;
  var _seriesUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/series-utils.js');
  function getInnerDimensions(props) {
    var height = props.height;
    var width = props.width;
    var _props$margin = props.margin;
    var _props$margin$left = _props$margin.left;
    var marginLeft = _props$margin$left === undefined ? 0 : _props$margin$left;
    var _props$margin$top = _props$margin.top;
    var marginTop = _props$margin$top === undefined ? 0 : _props$margin$top;
    var _props$margin$right = _props$margin.right;
    var marginRight = _props$margin$right === undefined ? 0 : _props$margin$right;
    var _props$margin$bottom = _props$margin.bottom;
    var marginBottom = _props$margin$bottom === undefined ? 0 : _props$margin$bottom;
    return {
      marginLeft: marginLeft,
      marginTop: marginTop,
      marginRight: marginRight,
      marginBottom: marginBottom,
      width: width,
      height: height,
      innerHeight: height - marginBottom - marginTop,
      innerWidth: width - marginLeft - marginRight
    };
  }
  function getDataFromChildren(props) {
    var children = props.children;
    return (0, _seriesUtils.getSeriesChildren)(children).map(function(child) {
      return child.props.data;
    });
  }
  return module.exports;
});

System.registerDynamic("npm:d3-selection@0.7.3/build/d3-selection.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (factory((global.d3_selection = global.d3_selection || {})));
  }(this, function(exports) {
    'use strict';
    var version = "0.7.3";
    var xhtml = "http://www.w3.org/1999/xhtml";
    var namespaces = {
      svg: "http://www.w3.org/2000/svg",
      xhtml: xhtml,
      xlink: "http://www.w3.org/1999/xlink",
      xml: "http://www.w3.org/XML/1998/namespace",
      xmlns: "http://www.w3.org/2000/xmlns/"
    };
    function namespace(name) {
      var prefix = name += "",
          i = prefix.indexOf(":");
      if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns")
        name = name.slice(i + 1);
      return namespaces.hasOwnProperty(prefix) ? {
        space: namespaces[prefix],
        local: name
      } : name;
    }
    function creatorInherit(name) {
      return function() {
        var document = this.ownerDocument,
            uri = this.namespaceURI;
        return uri === xhtml && document.documentElement.namespaceURI === xhtml ? document.createElement(name) : document.createElementNS(uri, name);
      };
    }
    function creatorFixed(fullname) {
      return function() {
        return this.ownerDocument.createElementNS(fullname.space, fullname.local);
      };
    }
    function creator(name) {
      var fullname = namespace(name);
      return (fullname.local ? creatorFixed : creatorInherit)(fullname);
    }
    var matcher = function(selector) {
      return function() {
        return this.matches(selector);
      };
    };
    if (typeof document !== "undefined") {
      var element = document.documentElement;
      if (!element.matches) {
        var vendorMatches = element.webkitMatchesSelector || element.msMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector;
        matcher = function(selector) {
          return function() {
            return vendorMatches.call(this, selector);
          };
        };
      }
    }
    var matcher$1 = matcher;
    var filterEvents = {};
    exports.event = null;
    if (typeof document !== "undefined") {
      var element$1 = document.documentElement;
      if (!("onmouseenter" in element$1)) {
        filterEvents = {
          mouseenter: "mouseover",
          mouseleave: "mouseout"
        };
      }
    }
    function filterContextListener(listener, index, group) {
      listener = contextListener(listener, index, group);
      return function(event) {
        var related = event.relatedTarget;
        if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {
          listener.call(this, event);
        }
      };
    }
    function contextListener(listener, index, group) {
      return function(event1) {
        var event0 = exports.event;
        exports.event = event1;
        try {
          listener.call(this, this.__data__, index, group);
        } finally {
          exports.event = event0;
        }
      };
    }
    function parseTypenames(typenames) {
      return typenames.trim().split(/^|\s+/).map(function(t) {
        var name = "",
            i = t.indexOf(".");
        if (i >= 0)
          name = t.slice(i + 1), t = t.slice(0, i);
        return {
          type: t,
          name: name
        };
      });
    }
    function onRemove(typename) {
      return function() {
        var on = this.__on;
        if (!on)
          return;
        for (var j = 0,
            i = -1,
            m = on.length,
            o; j < m; ++j) {
          if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
            this.removeEventListener(o.type, o.listener, o.capture);
          } else {
            on[++i] = o;
          }
        }
        if (++i)
          on.length = i;
        else
          delete this.__on;
      };
    }
    function onAdd(typename, value, capture) {
      var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
      return function(d, i, group) {
        var on = this.__on,
            o,
            listener = wrap(value, i, group);
        if (on)
          for (var j = 0,
              m = on.length; j < m; ++j) {
            if ((o = on[j]).type === typename.type && o.name === typename.name) {
              this.removeEventListener(o.type, o.listener, o.capture);
              this.addEventListener(o.type, o.listener = listener, o.capture = capture);
              o.value = value;
              return;
            }
          }
        this.addEventListener(typename.type, listener, capture);
        o = {
          type: typename.type,
          name: typename.name,
          value: value,
          listener: listener,
          capture: capture
        };
        if (!on)
          this.__on = [o];
        else
          on.push(o);
      };
    }
    function selection_on(typename, value, capture) {
      var typenames = parseTypenames(typename + ""),
          i,
          n = typenames.length,
          t;
      if (arguments.length < 2) {
        var on = this.node().__on;
        if (on)
          for (var j = 0,
              m = on.length,
              o; j < m; ++j) {
            for (i = 0, o = on[j]; i < n; ++i) {
              if ((t = typenames[i]).type === o.type && t.name === o.name) {
                return o.value;
              }
            }
          }
        return;
      }
      on = value ? onAdd : onRemove;
      if (capture == null)
        capture = false;
      for (i = 0; i < n; ++i)
        this.each(on(typenames[i], value, capture));
      return this;
    }
    function customEvent(event1, listener, that, args) {
      var event0 = exports.event;
      event1.sourceEvent = exports.event;
      exports.event = event1;
      try {
        return listener.apply(that, args);
      } finally {
        exports.event = event0;
      }
    }
    function sourceEvent() {
      var current = exports.event,
          source;
      while (source = current.sourceEvent)
        current = source;
      return current;
    }
    function point(node, event) {
      var svg = node.ownerSVGElement || node;
      if (svg.createSVGPoint) {
        var point = svg.createSVGPoint();
        point.x = event.clientX, point.y = event.clientY;
        point = point.matrixTransform(node.getScreenCTM().inverse());
        return [point.x, point.y];
      }
      var rect = node.getBoundingClientRect();
      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
    }
    function mouse(node) {
      var event = sourceEvent();
      if (event.changedTouches)
        event = event.changedTouches[0];
      return point(node, event);
    }
    function selector(selector) {
      return function() {
        return this.querySelector(selector);
      };
    }
    function selection_select(select) {
      if (typeof select !== "function")
        select = selector(select);
      for (var groups = this._groups,
          m = groups.length,
          subgroups = new Array(m),
          j = 0; j < m; ++j) {
        for (var group = groups[j],
            n = group.length,
            subgroup = subgroups[j] = new Array(n),
            node,
            subnode,
            i = 0; i < n; ++i) {
          if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
            if ("__data__" in node)
              subnode.__data__ = node.__data__;
            subgroup[i] = subnode;
          }
        }
      }
      return new Selection(subgroups, this._parents);
    }
    function selectorAll(selector) {
      return function() {
        return this.querySelectorAll(selector);
      };
    }
    function selection_selectAll(select) {
      if (typeof select !== "function")
        select = selectorAll(select);
      for (var groups = this._groups,
          m = groups.length,
          subgroups = [],
          parents = [],
          j = 0; j < m; ++j) {
        for (var group = groups[j],
            n = group.length,
            node,
            i = 0; i < n; ++i) {
          if (node = group[i]) {
            subgroups.push(select.call(node, node.__data__, i, group));
            parents.push(node);
          }
        }
      }
      return new Selection(subgroups, parents);
    }
    function selection_filter(match) {
      if (typeof match !== "function")
        match = matcher$1(match);
      for (var groups = this._groups,
          m = groups.length,
          subgroups = new Array(m),
          j = 0; j < m; ++j) {
        for (var group = groups[j],
            n = group.length,
            subgroup = subgroups[j] = new Array(n),
            node,
            i = 0; i < n; ++i) {
          if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
            subgroup[i] = node;
          }
        }
      }
      return new Selection(subgroups, this._parents);
    }
    function constant(x) {
      return function() {
        return x;
      };
    }
    var keyPrefix = "$";
    function bindIndex(parent, group, enter, update, exit, data) {
      var i = 0,
          node,
          groupLength = group.length,
          dataLength = data.length;
      for (; i < dataLength; ++i) {
        if (node = group[i]) {
          node.__data__ = data[i];
          update[i] = node;
        } else {
          enter[i] = new EnterNode(parent, data[i]);
        }
      }
      for (; i < groupLength; ++i) {
        if (node = group[i]) {
          exit[i] = node;
        }
      }
    }
    function bindKey(parent, group, enter, update, exit, data, key) {
      var i,
          node,
          nodeByKeyValue = {},
          groupLength = group.length,
          dataLength = data.length,
          keyValues = new Array(groupLength),
          keyValue;
      for (i = 0; i < groupLength; ++i) {
        if (node = group[i]) {
          keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);
          if (keyValue in nodeByKeyValue) {
            exit[i] = node;
          } else {
            nodeByKeyValue[keyValue] = node;
          }
        }
      }
      for (i = 0; i < dataLength; ++i) {
        keyValue = keyPrefix + key.call(parent, data[i], i, data);
        if (node = nodeByKeyValue[keyValue]) {
          update[i] = node;
          node.__data__ = data[i];
          nodeByKeyValue[keyValue] = null;
        } else {
          enter[i] = new EnterNode(parent, data[i]);
        }
      }
      for (i = 0; i < groupLength; ++i) {
        if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {
          exit[i] = node;
        }
      }
    }
    function selection_data(value, key) {
      if (!value) {
        data = new Array(this.size()), j = -1;
        this.each(function(d) {
          data[++j] = d;
        });
        return data;
      }
      var bind = key ? bindKey : bindIndex,
          parents = this._parents,
          groups = this._groups;
      if (typeof value !== "function")
        value = constant(value);
      for (var m = groups.length,
          update = new Array(m),
          enter = new Array(m),
          exit = new Array(m),
          j = 0; j < m; ++j) {
        var parent = parents[j],
            group = groups[j],
            groupLength = group.length,
            data = value.call(parent, parent && parent.__data__, j, parents),
            dataLength = data.length,
            enterGroup = enter[j] = new Array(dataLength),
            updateGroup = update[j] = new Array(dataLength),
            exitGroup = exit[j] = new Array(groupLength);
        bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);
        for (var i0 = 0,
            i1 = 0,
            previous,
            next; i0 < dataLength; ++i0) {
          if (previous = enterGroup[i0]) {
            if (i0 >= i1)
              i1 = i0 + 1;
            while (!(next = updateGroup[i1]) && ++i1 < dataLength)
              ;
            previous._next = next || null;
          }
        }
      }
      update = new Selection(update, parents);
      update._enter = enter;
      update._exit = exit;
      return update;
    }
    function EnterNode(parent, datum) {
      this.ownerDocument = parent.ownerDocument;
      this.namespaceURI = parent.namespaceURI;
      this._next = null;
      this._parent = parent;
      this.__data__ = datum;
    }
    EnterNode.prototype = {
      constructor: EnterNode,
      appendChild: function(child) {
        return this._parent.insertBefore(child, this._next);
      },
      insertBefore: function(child, next) {
        return this._parent.insertBefore(child, next);
      },
      querySelector: function(selector) {
        return this._parent.querySelector(selector);
      },
      querySelectorAll: function(selector) {
        return this._parent.querySelectorAll(selector);
      }
    };
    function sparse(update) {
      return new Array(update.length);
    }
    function selection_enter() {
      return new Selection(this._enter || this._groups.map(sparse), this._parents);
    }
    function selection_exit() {
      return new Selection(this._exit || this._groups.map(sparse), this._parents);
    }
    function selection_merge(selection) {
      for (var groups0 = this._groups,
          groups1 = selection._groups,
          m0 = groups0.length,
          m1 = groups1.length,
          m = Math.min(m0, m1),
          merges = new Array(m0),
          j = 0; j < m; ++j) {
        for (var group0 = groups0[j],
            group1 = groups1[j],
            n = group0.length,
            merge = merges[j] = new Array(n),
            node,
            i = 0; i < n; ++i) {
          if (node = group0[i] || group1[i]) {
            merge[i] = node;
          }
        }
      }
      for (; j < m0; ++j) {
        merges[j] = groups0[j];
      }
      return new Selection(merges, this._parents);
    }
    function selection_order() {
      for (var groups = this._groups,
          j = -1,
          m = groups.length; ++j < m; ) {
        for (var group = groups[j],
            i = group.length - 1,
            next = group[i],
            node; --i >= 0; ) {
          if (node = group[i]) {
            if (next && next !== node.nextSibling)
              next.parentNode.insertBefore(node, next);
            next = node;
          }
        }
      }
      return this;
    }
    function selection_sort(compare) {
      if (!compare)
        compare = ascending;
      function compareNode(a, b) {
        return a && b ? compare(a.__data__, b.__data__) : !a - !b;
      }
      for (var groups = this._groups,
          m = groups.length,
          sortgroups = new Array(m),
          j = 0; j < m; ++j) {
        for (var group = groups[j],
            n = group.length,
            sortgroup = sortgroups[j] = new Array(n),
            node,
            i = 0; i < n; ++i) {
          if (node = group[i]) {
            sortgroup[i] = node;
          }
        }
        sortgroup.sort(compareNode);
      }
      return new Selection(sortgroups, this._parents).order();
    }
    function ascending(a, b) {
      return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
    }
    function selection_call() {
      var callback = arguments[0];
      arguments[0] = this;
      callback.apply(null, arguments);
      return this;
    }
    function selection_nodes() {
      var nodes = new Array(this.size()),
          i = -1;
      this.each(function() {
        nodes[++i] = this;
      });
      return nodes;
    }
    function selection_node() {
      for (var groups = this._groups,
          j = 0,
          m = groups.length; j < m; ++j) {
        for (var group = groups[j],
            i = 0,
            n = group.length; i < n; ++i) {
          var node = group[i];
          if (node)
            return node;
        }
      }
      return null;
    }
    function selection_size() {
      var size = 0;
      this.each(function() {
        ++size;
      });
      return size;
    }
    function selection_empty() {
      return !this.node();
    }
    function selection_each(callback) {
      for (var groups = this._groups,
          j = 0,
          m = groups.length; j < m; ++j) {
        for (var group = groups[j],
            i = 0,
            n = group.length,
            node; i < n; ++i) {
          if (node = group[i])
            callback.call(node, node.__data__, i, group);
        }
      }
      return this;
    }
    function attrRemove(name) {
      return function() {
        this.removeAttribute(name);
      };
    }
    function attrRemoveNS(fullname) {
      return function() {
        this.removeAttributeNS(fullname.space, fullname.local);
      };
    }
    function attrConstant(name, value) {
      return function() {
        this.setAttribute(name, value);
      };
    }
    function attrConstantNS(fullname, value) {
      return function() {
        this.setAttributeNS(fullname.space, fullname.local, value);
      };
    }
    function attrFunction(name, value) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null)
          this.removeAttribute(name);
        else
          this.setAttribute(name, v);
      };
    }
    function attrFunctionNS(fullname, value) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null)
          this.removeAttributeNS(fullname.space, fullname.local);
        else
          this.setAttributeNS(fullname.space, fullname.local, v);
      };
    }
    function selection_attr(name, value) {
      var fullname = namespace(name);
      if (arguments.length < 2) {
        var node = this.node();
        return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
      }
      return this.each((value == null ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction) : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));
    }
    function defaultView(node) {
      return (node.ownerDocument && node.ownerDocument.defaultView) || (node.document && node) || node.defaultView;
    }
    function styleRemove(name) {
      return function() {
        this.style.removeProperty(name);
      };
    }
    function styleConstant(name, value, priority) {
      return function() {
        this.style.setProperty(name, value, priority);
      };
    }
    function styleFunction(name, value, priority) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null)
          this.style.removeProperty(name);
        else
          this.style.setProperty(name, v, priority);
      };
    }
    function selection_style(name, value, priority) {
      var node;
      return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : defaultView(node = this.node()).getComputedStyle(node, null).getPropertyValue(name);
    }
    function propertyRemove(name) {
      return function() {
        delete this[name];
      };
    }
    function propertyConstant(name, value) {
      return function() {
        this[name] = value;
      };
    }
    function propertyFunction(name, value) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null)
          delete this[name];
        else
          this[name] = v;
      };
    }
    function selection_property(name, value) {
      return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
    }
    function classArray(string) {
      return string.trim().split(/^|\s+/);
    }
    function classList(node) {
      return node.classList || new ClassList(node);
    }
    function ClassList(node) {
      this._node = node;
      this._names = classArray(node.getAttribute("class") || "");
    }
    ClassList.prototype = {
      add: function(name) {
        var i = this._names.indexOf(name);
        if (i < 0) {
          this._names.push(name);
          this._node.setAttribute("class", this._names.join(" "));
        }
      },
      remove: function(name) {
        var i = this._names.indexOf(name);
        if (i >= 0) {
          this._names.splice(i, 1);
          this._node.setAttribute("class", this._names.join(" "));
        }
      },
      contains: function(name) {
        return this._names.indexOf(name) >= 0;
      }
    };
    function classedAdd(node, names) {
      var list = classList(node),
          i = -1,
          n = names.length;
      while (++i < n)
        list.add(names[i]);
    }
    function classedRemove(node, names) {
      var list = classList(node),
          i = -1,
          n = names.length;
      while (++i < n)
        list.remove(names[i]);
    }
    function classedTrue(names) {
      return function() {
        classedAdd(this, names);
      };
    }
    function classedFalse(names) {
      return function() {
        classedRemove(this, names);
      };
    }
    function classedFunction(names, value) {
      return function() {
        (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
      };
    }
    function selection_classed(name, value) {
      var names = classArray(name + "");
      if (arguments.length < 2) {
        var list = classList(this.node()),
            i = -1,
            n = names.length;
        while (++i < n)
          if (!list.contains(names[i]))
            return false;
        return true;
      }
      return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
    }
    function textRemove() {
      this.textContent = "";
    }
    function textConstant(value) {
      return function() {
        this.textContent = value;
      };
    }
    function textFunction(value) {
      return function() {
        var v = value.apply(this, arguments);
        this.textContent = v == null ? "" : v;
      };
    }
    function selection_text(value) {
      return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
    }
    function htmlRemove() {
      this.innerHTML = "";
    }
    function htmlConstant(value) {
      return function() {
        this.innerHTML = value;
      };
    }
    function htmlFunction(value) {
      return function() {
        var v = value.apply(this, arguments);
        this.innerHTML = v == null ? "" : v;
      };
    }
    function selection_html(value) {
      return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
    }
    function raise() {
      if (this.nextSibling)
        this.parentNode.appendChild(this);
    }
    function selection_raise() {
      return this.each(raise);
    }
    function lower() {
      if (this.previousSibling)
        this.parentNode.insertBefore(this, this.parentNode.firstChild);
    }
    function selection_lower() {
      return this.each(lower);
    }
    function append(create) {
      return function() {
        return this.appendChild(create.apply(this, arguments));
      };
    }
    function insert(create, select) {
      return function() {
        return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
      };
    }
    function constantNull() {
      return null;
    }
    function selection_append(name, before) {
      var create = typeof name === "function" ? name : creator(name);
      return this.select(arguments.length < 2 ? append(create) : insert(create, before == null ? constantNull : typeof before === "function" ? before : selector(before)));
    }
    function remove() {
      var parent = this.parentNode;
      if (parent)
        parent.removeChild(this);
    }
    function selection_remove() {
      return this.each(remove);
    }
    function selection_datum(value) {
      return arguments.length ? this.property("__data__", value) : this.node().__data__;
    }
    function dispatchEvent(node, type, params) {
      var window = defaultView(node),
          event = window.CustomEvent;
      if (event) {
        event = new event(type, params);
      } else {
        event = window.document.createEvent("Event");
        if (params)
          event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
        else
          event.initEvent(type, false, false);
      }
      node.dispatchEvent(event);
    }
    function dispatchConstant(type, params) {
      return function() {
        return dispatchEvent(this, type, params);
      };
    }
    function dispatchFunction(type, params) {
      return function() {
        return dispatchEvent(this, type, params.apply(this, arguments));
      };
    }
    function selection_dispatch(type, params) {
      return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));
    }
    var root = [null];
    function Selection(groups, parents) {
      this._groups = groups;
      this._parents = parents;
    }
    function selection() {
      return new Selection([[document.documentElement]], root);
    }
    Selection.prototype = selection.prototype = {
      constructor: Selection,
      select: selection_select,
      selectAll: selection_selectAll,
      filter: selection_filter,
      data: selection_data,
      enter: selection_enter,
      exit: selection_exit,
      merge: selection_merge,
      order: selection_order,
      sort: selection_sort,
      call: selection_call,
      nodes: selection_nodes,
      node: selection_node,
      size: selection_size,
      empty: selection_empty,
      each: selection_each,
      attr: selection_attr,
      style: selection_style,
      property: selection_property,
      classed: selection_classed,
      text: selection_text,
      html: selection_html,
      raise: selection_raise,
      lower: selection_lower,
      append: selection_append,
      remove: selection_remove,
      datum: selection_datum,
      on: selection_on,
      dispatch: selection_dispatch
    };
    function select(selector) {
      return typeof selector === "string" ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], root);
    }
    function selectAll(selector) {
      return typeof selector === "string" ? new Selection([document.querySelectorAll(selector)], [document.documentElement]) : new Selection([selector], root);
    }
    function touch(node, touches, identifier) {
      if (arguments.length < 3)
        identifier = touches, touches = sourceEvent().changedTouches;
      for (var i = 0,
          n = touches ? touches.length : 0,
          touch; i < n; ++i) {
        if ((touch = touches[i]).identifier === identifier) {
          return point(node, touch);
        }
      }
      return null;
    }
    function touches(node, touches) {
      if (touches == null)
        touches = sourceEvent().touches;
      for (var i = 0,
          n = touches ? touches.length : 0,
          points = new Array(n); i < n; ++i) {
        points[i] = point(node, touches[i]);
      }
      return points;
    }
    exports.version = version;
    exports.creator = creator;
    exports.matcher = matcher$1;
    exports.mouse = mouse;
    exports.namespace = namespace;
    exports.namespaces = namespaces;
    exports.select = select;
    exports.selectAll = selectAll;
    exports.selection = selection;
    exports.selector = selector;
    exports.selectorAll = selectorAll;
    exports.touch = touch;
    exports.touches = touches;
    exports.window = defaultView;
    exports.customEvent = customEvent;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-selection@0.7.3.js", ["npm:d3-selection@0.7.3/build/d3-selection.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-selection@0.7.3/build/d3-selection.js');
  return module.exports;
});

System.registerDynamic("npm:d3-dispatch@0.4.4/build/d3-dispatch.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (factory((global.d3_dispatch = global.d3_dispatch || {})));
  }(this, function(exports) {
    'use strict';
    var version = "0.4.4";
    var noop = {value: function() {}};
    function dispatch() {
      for (var i = 0,
          n = arguments.length,
          _ = {},
          t; i < n; ++i) {
        if (!(t = arguments[i] + "") || (t in _))
          throw new Error("illegal type: " + t);
        _[t] = [];
      }
      return new Dispatch(_);
    }
    function Dispatch(_) {
      this._ = _;
    }
    function parseTypenames(typenames, types) {
      return typenames.trim().split(/^|\s+/).map(function(t) {
        var name = "",
            i = t.indexOf(".");
        if (i >= 0)
          name = t.slice(i + 1), t = t.slice(0, i);
        if (t && !types.hasOwnProperty(t))
          throw new Error("unknown type: " + t);
        return {
          type: t,
          name: name
        };
      });
    }
    Dispatch.prototype = dispatch.prototype = {
      constructor: Dispatch,
      on: function(typename, callback) {
        var _ = this._,
            T = parseTypenames(typename + "", _),
            t,
            i = -1,
            n = T.length;
        if (arguments.length < 2) {
          while (++i < n)
            if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name)))
              return t;
          return;
        }
        if (callback != null && typeof callback !== "function")
          throw new Error("invalid callback: " + callback);
        while (++i < n) {
          if (t = (typename = T[i]).type)
            _[t] = set(_[t], typename.name, callback);
          else if (callback == null)
            for (t in _)
              _[t] = set(_[t], typename.name, null);
        }
        return this;
      },
      copy: function() {
        var copy = {},
            _ = this._;
        for (var t in _)
          copy[t] = _[t].slice();
        return new Dispatch(copy);
      },
      call: function(type, that) {
        if ((n = arguments.length - 2) > 0)
          for (var args = new Array(n),
              i = 0,
              n,
              t; i < n; ++i)
            args[i] = arguments[i + 2];
        if (!this._.hasOwnProperty(type))
          throw new Error("unknown type: " + type);
        for (t = this._[type], i = 0, n = t.length; i < n; ++i)
          t[i].value.apply(that, args);
      },
      apply: function(type, that, args) {
        if (!this._.hasOwnProperty(type))
          throw new Error("unknown type: " + type);
        for (var t = this._[type],
            i = 0,
            n = t.length; i < n; ++i)
          t[i].value.apply(that, args);
      }
    };
    function get(type, name) {
      for (var i = 0,
          n = type.length,
          c; i < n; ++i) {
        if ((c = type[i]).name === name) {
          return c.value;
        }
      }
    }
    function set(type, name, callback) {
      for (var i = 0,
          n = type.length; i < n; ++i) {
        if (type[i].name === name) {
          type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
          break;
        }
      }
      if (callback != null)
        type.push({
          name: name,
          value: callback
        });
      return type;
    }
    exports.version = version;
    exports.dispatch = dispatch;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-dispatch@0.4.4.js", ["npm:d3-dispatch@0.4.4/build/d3-dispatch.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-dispatch@0.4.4/build/d3-dispatch.js');
  return module.exports;
});

System.registerDynamic("npm:d3-timer@0.4.4/build/d3-timer.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (factory((global.d3_timer = global.d3_timer || {})));
  }(this, function(exports) {
    'use strict';
    var version = "0.4.4";
    var frame = 0;
    var timeout = 0;
    var interval = 0;
    var pokeDelay = 1000;
    var taskHead;
    var taskTail;
    var clockLast = 0;
    var clockNow = 0;
    var clockSkew = 0;
    var clock = typeof performance === "object" ? performance : Date;
    var setFrame = typeof requestAnimationFrame === "function" ? (clock === Date ? function(f) {
      requestAnimationFrame(function() {
        f(clock.now());
      });
    } : requestAnimationFrame) : function(f) {
      setTimeout(f, 17);
    };
    function now() {
      return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
    }
    function clearNow() {
      clockNow = 0;
    }
    function Timer() {
      this._call = this._time = this._next = null;
    }
    Timer.prototype = timer.prototype = {
      constructor: Timer,
      restart: function(callback, delay, time) {
        if (typeof callback !== "function")
          throw new TypeError("callback is not a function");
        time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
        if (!this._next && taskTail !== this) {
          if (taskTail)
            taskTail._next = this;
          else
            taskHead = this;
          taskTail = this;
        }
        this._call = callback;
        this._time = time;
        sleep();
      },
      stop: function() {
        if (this._call) {
          this._call = null;
          this._time = Infinity;
          sleep();
        }
      }
    };
    function timer(callback, delay, time) {
      var t = new Timer;
      t.restart(callback, delay, time);
      return t;
    }
    function timerFlush() {
      now();
      ++frame;
      var t = taskHead,
          e;
      while (t) {
        if ((e = clockNow - t._time) >= 0)
          t._call.call(null, e);
        t = t._next;
      }
      --frame;
    }
    function wake(time) {
      clockNow = (clockLast = time || clock.now()) + clockSkew;
      frame = timeout = 0;
      try {
        timerFlush();
      } finally {
        frame = 0;
        nap();
        clockNow = 0;
      }
    }
    function poke() {
      var now = clock.now(),
          delay = now - clockLast;
      if (delay > pokeDelay)
        clockSkew -= delay, clockLast = now;
    }
    function nap() {
      var t0,
          t1 = taskHead,
          time = Infinity;
      while (t1) {
        if (t1._call) {
          if (time > t1._time)
            time = t1._time;
          t1 = (t0 = t1)._next;
        } else {
          t1 = t0 ? t0._next = t1._next : taskHead = t1._next;
        }
      }
      taskTail = t0;
      sleep(time);
    }
    function sleep(time) {
      if (frame)
        return;
      if (timeout)
        timeout = clearTimeout(timeout);
      var delay = time - clockNow;
      if (delay > 24) {
        if (time < Infinity)
          timeout = setTimeout(wake, delay);
        if (interval)
          interval = clearInterval(interval);
      } else {
        if (!interval)
          interval = setInterval(poke, pokeDelay);
        frame = 1, setFrame(wake);
      }
    }
    function timeout$1(callback, delay, time) {
      var t = new Timer;
      delay = delay == null ? 0 : +delay;
      t.restart(function(elapsed) {
        t.stop();
        callback(elapsed + delay);
      }, delay, time);
      return t;
    }
    function interval$1(callback, delay, time) {
      var t = new Timer,
          total = delay;
      if (delay == null)
        return t.restart(callback, delay, time), t;
      delay = +delay, time = time == null ? now() : +time;
      t.restart(function tick(elapsed) {
        elapsed += total;
        t.restart(tick, total += delay, time);
        callback(elapsed);
      }, delay, time);
      return t;
    }
    exports.version = version;
    exports.now = now;
    exports.timer = timer;
    exports.timerFlush = timerFlush;
    exports.timeout = timeout$1;
    exports.interval = interval$1;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-timer@0.4.4.js", ["npm:d3-timer@0.4.4/build/d3-timer.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-timer@0.4.4/build/d3-timer.js');
  return module.exports;
});

System.registerDynamic("npm:d3-interpolate@0.8.3/build/d3-interpolate.js", ["npm:d3-color@0.4.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, $__require('npm:d3-color@0.4.2.js')) : typeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) : (factory((global.d3_interpolate = global.d3_interpolate || {}), global.d3_color));
  }(this, function(exports, d3Color) {
    'use strict';
    var version = "0.8.3";
    function basis(t1, v0, v1, v2, v3) {
      var t2 = t1 * t1,
          t3 = t2 * t1;
      return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
    }
    function basis$1(values) {
      var n = values.length - 1;
      return function(t) {
        var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
            v1 = values[i],
            v2 = values[i + 1],
            v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
            v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
        return basis((t - i / n) * n, v0, v1, v2, v3);
      };
    }
    function basisClosed(values) {
      var n = values.length;
      return function(t) {
        var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
            v0 = values[(i + n - 1) % n],
            v1 = values[i % n],
            v2 = values[(i + 1) % n],
            v3 = values[(i + 2) % n];
        return basis((t - i / n) * n, v0, v1, v2, v3);
      };
    }
    function constant(x) {
      return function() {
        return x;
      };
    }
    function linear(a, d) {
      return function(t) {
        return a + t * d;
      };
    }
    function exponential(a, b, y) {
      return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
        return Math.pow(a + t * b, y);
      };
    }
    function hue(a, b) {
      var d = b - a;
      return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);
    }
    function gamma(y) {
      return (y = +y) === 1 ? nogamma : function(a, b) {
        return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);
      };
    }
    function nogamma(a, b) {
      var d = b - a;
      return d ? linear(a, d) : constant(isNaN(a) ? b : a);
    }
    var rgb$1 = (function rgbGamma(y) {
      var color = gamma(y);
      function rgb(start, end) {
        var r = color((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),
            g = color(start.g, end.g),
            b = color(start.b, end.b),
            opacity = color(start.opacity, end.opacity);
        return function(t) {
          start.r = r(t);
          start.g = g(t);
          start.b = b(t);
          start.opacity = opacity(t);
          return start + "";
        };
      }
      rgb.gamma = rgbGamma;
      return rgb;
    })(1);
    function rgbSpline(spline) {
      return function(colors) {
        var n = colors.length,
            r = new Array(n),
            g = new Array(n),
            b = new Array(n),
            i,
            color;
        for (i = 0; i < n; ++i) {
          color = d3Color.rgb(colors[i]);
          r[i] = color.r || 0;
          g[i] = color.g || 0;
          b[i] = color.b || 0;
        }
        r = spline(r);
        g = spline(g);
        b = spline(b);
        color.opacity = 1;
        return function(t) {
          color.r = r(t);
          color.g = g(t);
          color.b = b(t);
          return color + "";
        };
      };
    }
    var rgbBasis = rgbSpline(basis$1);
    var rgbBasisClosed = rgbSpline(basisClosed);
    function array(a, b) {
      var nb = b ? b.length : 0,
          na = a ? Math.min(nb, a.length) : 0,
          x = new Array(nb),
          c = new Array(nb),
          i;
      for (i = 0; i < na; ++i)
        x[i] = value(a[i], b[i]);
      for (; i < nb; ++i)
        c[i] = b[i];
      return function(t) {
        for (i = 0; i < na; ++i)
          c[i] = x[i](t);
        return c;
      };
    }
    function number(a, b) {
      return a = +a, b -= a, function(t) {
        return a + b * t;
      };
    }
    function object(a, b) {
      var i = {},
          c = {},
          k;
      if (a === null || typeof a !== "object")
        a = {};
      if (b === null || typeof b !== "object")
        b = {};
      for (k in b) {
        if (k in a) {
          i[k] = value(a[k], b[k]);
        } else {
          c[k] = b[k];
        }
      }
      return function(t) {
        for (k in i)
          c[k] = i[k](t);
        return c;
      };
    }
    var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
    var reB = new RegExp(reA.source, "g");
    function zero(b) {
      return function() {
        return b;
      };
    }
    function one(b) {
      return function(t) {
        return b(t) + "";
      };
    }
    function string(a, b) {
      var bi = reA.lastIndex = reB.lastIndex = 0,
          am,
          bm,
          bs,
          i = -1,
          s = [],
          q = [];
      a = a + "", b = b + "";
      while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
        if ((bs = bm.index) > bi) {
          bs = b.slice(bi, bs);
          if (s[i])
            s[i] += bs;
          else
            s[++i] = bs;
        }
        if ((am = am[0]) === (bm = bm[0])) {
          if (s[i])
            s[i] += bm;
          else
            s[++i] = bm;
        } else {
          s[++i] = null;
          q.push({
            i: i,
            x: number(am, bm)
          });
        }
        bi = reB.lastIndex;
      }
      if (bi < b.length) {
        bs = b.slice(bi);
        if (s[i])
          s[i] += bs;
        else
          s[++i] = bs;
      }
      return s.length < 2 ? (q[0] ? one(q[0].x) : zero(b)) : (b = q.length, function(t) {
        for (var i = 0,
            o; i < b; ++i)
          s[(o = q[i]).i] = o.x(t);
        return s.join("");
      });
    }
    function value(a, b) {
      var t = typeof b,
          c;
      return b == null || t === "boolean" ? constant(b) : (t === "number" ? number : t === "string" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string) : b instanceof d3Color.color ? rgb$1 : Array.isArray(b) ? array : object)(a, b);
    }
    function round(a, b) {
      return a = +a, b -= a, function(t) {
        return Math.round(a + b * t);
      };
    }
    var rad2deg = 180 / Math.PI;
    var identity = {
      translateX: 0,
      translateY: 0,
      rotate: 0,
      skewX: 0,
      scaleX: 1,
      scaleY: 1
    };
    function decompose(a, b, c, d, e, f) {
      if (a * d === b * c)
        return null;
      var scaleX = Math.sqrt(a * a + b * b);
      a /= scaleX, b /= scaleX;
      var skewX = a * c + b * d;
      c -= a * skewX, d -= b * skewX;
      var scaleY = Math.sqrt(c * c + d * d);
      c /= scaleY, d /= scaleY, skewX /= scaleY;
      if (a * d < b * c)
        a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
      return {
        translateX: e,
        translateY: f,
        rotate: Math.atan2(b, a) * rad2deg,
        skewX: Math.atan(skewX) * rad2deg,
        scaleX: scaleX,
        scaleY: scaleY
      };
    }
    var cssNode;
    var cssRoot;
    var cssView;
    var svgNode;
    function parseCss(value) {
      if (value === "none")
        return identity;
      if (!cssNode)
        cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
      cssNode.style.transform = value;
      value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
      cssRoot.removeChild(cssNode);
      var m = value.slice(7, -1).split(",");
      return decompose(+m[0], +m[1], +m[2], +m[3], +m[4], +m[5]);
    }
    function parseSvg(value) {
      if (!svgNode)
        svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
      svgNode.setAttribute("transform", value == null ? "" : value);
      var m = svgNode.transform.baseVal.consolidate().matrix;
      return decompose(m.a, m.b, m.c, m.d, m.e, m.f);
    }
    function interpolateTransform(parse, pxComma, pxParen, degParen) {
      function pop(s) {
        return s.length ? s.pop() + " " : "";
      }
      function translate(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
          var i = s.push("translate(", null, pxComma, null, pxParen);
          q.push({
            i: i - 4,
            x: number(xa, xb)
          }, {
            i: i - 2,
            x: number(ya, yb)
          });
        } else if (xb || yb) {
          s.push("translate(" + xb + pxComma + yb + pxParen);
        }
      }
      function rotate(a, b, s, q) {
        if (a !== b) {
          if (a - b > 180)
            b += 360;
          else if (b - a > 180)
            a += 360;
          q.push({
            i: s.push(pop(s) + "rotate(", null, degParen) - 2,
            x: number(a, b)
          });
        } else if (b) {
          s.push(pop(s) + "rotate(" + b + degParen);
        }
      }
      function skewX(a, b, s, q) {
        if (a !== b) {
          q.push({
            i: s.push(pop(s) + "skewX(", null, degParen) - 2,
            x: number(a, b)
          });
        } else if (b) {
          s.push(pop(s) + "skewX(" + b + degParen);
        }
      }
      function scale(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
          var i = s.push(pop(s) + "scale(", null, ",", null, ")");
          q.push({
            i: i - 4,
            x: number(xa, xb)
          }, {
            i: i - 2,
            x: number(ya, yb)
          });
        } else if (xb !== 1 || yb !== 1) {
          s.push(pop(s) + "scale(" + xb + "," + yb + ")");
        }
      }
      return function(a, b) {
        var s = [],
            q = [];
        a = parse(a), b = parse(b);
        translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
        rotate(a.rotate, b.rotate, s, q);
        skewX(a.skewX, b.skewX, s, q);
        scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
        a = b = null;
        return function(t) {
          var i = -1,
              n = q.length,
              o;
          while (++i < n)
            s[(o = q[i]).i] = o.x(t);
          return s.join("");
        };
      };
    }
    var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
    var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");
    var rho = Math.SQRT2;
    var rho2 = 2;
    var rho4 = 4;
    var epsilon2 = 1e-12;
    function cosh(x) {
      return ((x = Math.exp(x)) + 1 / x) / 2;
    }
    function sinh(x) {
      return ((x = Math.exp(x)) - 1 / x) / 2;
    }
    function tanh(x) {
      return ((x = Math.exp(2 * x)) - 1) / (x + 1);
    }
    function zoom(p0, p1) {
      var ux0 = p0[0],
          uy0 = p0[1],
          w0 = p0[2],
          ux1 = p1[0],
          uy1 = p1[1],
          w1 = p1[2],
          dx = ux1 - ux0,
          dy = uy1 - uy0,
          d2 = dx * dx + dy * dy,
          i,
          S;
      if (d2 < epsilon2) {
        S = Math.log(w1 / w0) / rho;
        i = function(t) {
          return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];
        };
      } else {
        var d1 = Math.sqrt(d2),
            b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
            b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
            r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
            r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
        S = (r1 - r0) / rho;
        i = function(t) {
          var s = t * S,
              coshr0 = cosh(r0),
              u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
          return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];
        };
      }
      i.duration = S * 1000;
      return i;
    }
    function hsl$1(hue) {
      return function(start, end) {
        var h = hue((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),
            s = nogamma(start.s, end.s),
            l = nogamma(start.l, end.l),
            opacity = nogamma(start.opacity, end.opacity);
        return function(t) {
          start.h = h(t);
          start.s = s(t);
          start.l = l(t);
          start.opacity = opacity(t);
          return start + "";
        };
      };
    }
    var hsl$2 = hsl$1(hue);
    var hslLong = hsl$1(nogamma);
    function lab$1(start, end) {
      var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),
          a = nogamma(start.a, end.a),
          b = nogamma(start.b, end.b),
          opacity = nogamma(start.opacity, end.opacity);
      return function(t) {
        start.l = l(t);
        start.a = a(t);
        start.b = b(t);
        start.opacity = opacity(t);
        return start + "";
      };
    }
    function hcl$1(hue) {
      return function(start, end) {
        var h = hue((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),
            c = nogamma(start.c, end.c),
            l = nogamma(start.l, end.l),
            opacity = nogamma(start.opacity, end.opacity);
        return function(t) {
          start.h = h(t);
          start.c = c(t);
          start.l = l(t);
          start.opacity = opacity(t);
          return start + "";
        };
      };
    }
    var hcl$2 = hcl$1(hue);
    var hclLong = hcl$1(nogamma);
    function cubehelix$1(hue) {
      return (function cubehelixGamma(y) {
        y = +y;
        function cubehelix(start, end) {
          var h = hue((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),
              s = nogamma(start.s, end.s),
              l = nogamma(start.l, end.l),
              opacity = nogamma(start.opacity, end.opacity);
          return function(t) {
            start.h = h(t);
            start.s = s(t);
            start.l = l(Math.pow(t, y));
            start.opacity = opacity(t);
            return start + "";
          };
        }
        cubehelix.gamma = cubehelixGamma;
        return cubehelix;
      })(1);
    }
    var cubehelix$2 = cubehelix$1(hue);
    var cubehelixLong = cubehelix$1(nogamma);
    function quantize(interpolate, n) {
      var samples = new Array(n);
      for (var i = 0; i < n; ++i)
        samples[i] = interpolate(i / (n - 1));
      return samples;
    }
    exports.version = version;
    exports.interpolate = value;
    exports.interpolateArray = array;
    exports.interpolateBasis = basis$1;
    exports.interpolateBasisClosed = basisClosed;
    exports.interpolateNumber = number;
    exports.interpolateObject = object;
    exports.interpolateRound = round;
    exports.interpolateString = string;
    exports.interpolateTransformCss = interpolateTransformCss;
    exports.interpolateTransformSvg = interpolateTransformSvg;
    exports.interpolateZoom = zoom;
    exports.interpolateRgb = rgb$1;
    exports.interpolateRgbBasis = rgbBasis;
    exports.interpolateRgbBasisClosed = rgbBasisClosed;
    exports.interpolateHsl = hsl$2;
    exports.interpolateHslLong = hslLong;
    exports.interpolateLab = lab$1;
    exports.interpolateHcl = hcl$2;
    exports.interpolateHclLong = hclLong;
    exports.interpolateCubehelix = cubehelix$2;
    exports.interpolateCubehelixLong = cubehelixLong;
    exports.quantize = quantize;
    Object.defineProperty(exports, '__esModule', {value: true});
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-interpolate@0.8.3.js", ["npm:d3-interpolate@0.8.3/build/d3-interpolate.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-interpolate@0.8.3/build/d3-interpolate.js');
  return module.exports;
});

System.registerDynamic("npm:d3-color@0.4.2/build/d3-color.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (factory((global.d3_color = global.d3_color || {})));
  }(this, function(exports) {
    'use strict';
    function define(constructor, factory, prototype) {
      constructor.prototype = factory.prototype = prototype;
      prototype.constructor = constructor;
    }
    function extend(parent, definition) {
      var prototype = Object.create(parent.prototype);
      for (var key in definition)
        prototype[key] = definition[key];
      return prototype;
    }
    function Color() {}
    var darker = 0.7;
    var brighter = 1 / darker;
    var reHex3 = /^#([0-9a-f]{3})$/;
    var reHex6 = /^#([0-9a-f]{6})$/;
    var reRgbInteger = /^rgb\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*\)$/;
    var reRgbPercent = /^rgb\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/;
    var reRgbaInteger = /^rgba\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/;
    var reRgbaPercent = /^rgba\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/;
    var reHslPercent = /^hsl\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/;
    var reHslaPercent = /^hsla\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/;
    var named = {
      aliceblue: 0xf0f8ff,
      antiquewhite: 0xfaebd7,
      aqua: 0x00ffff,
      aquamarine: 0x7fffd4,
      azure: 0xf0ffff,
      beige: 0xf5f5dc,
      bisque: 0xffe4c4,
      black: 0x000000,
      blanchedalmond: 0xffebcd,
      blue: 0x0000ff,
      blueviolet: 0x8a2be2,
      brown: 0xa52a2a,
      burlywood: 0xdeb887,
      cadetblue: 0x5f9ea0,
      chartreuse: 0x7fff00,
      chocolate: 0xd2691e,
      coral: 0xff7f50,
      cornflowerblue: 0x6495ed,
      cornsilk: 0xfff8dc,
      crimson: 0xdc143c,
      cyan: 0x00ffff,
      darkblue: 0x00008b,
      darkcyan: 0x008b8b,
      darkgoldenrod: 0xb8860b,
      darkgray: 0xa9a9a9,
      darkgreen: 0x006400,
      darkgrey: 0xa9a9a9,
      darkkhaki: 0xbdb76b,
      darkmagenta: 0x8b008b,
      darkolivegreen: 0x556b2f,
      darkorange: 0xff8c00,
      darkorchid: 0x9932cc,
      darkred: 0x8b0000,
      darksalmon: 0xe9967a,
      darkseagreen: 0x8fbc8f,
      darkslateblue: 0x483d8b,
      darkslategray: 0x2f4f4f,
      darkslategrey: 0x2f4f4f,
      darkturquoise: 0x00ced1,
      darkviolet: 0x9400d3,
      deeppink: 0xff1493,
      deepskyblue: 0x00bfff,
      dimgray: 0x696969,
      dimgrey: 0x696969,
      dodgerblue: 0x1e90ff,
      firebrick: 0xb22222,
      floralwhite: 0xfffaf0,
      forestgreen: 0x228b22,
      fuchsia: 0xff00ff,
      gainsboro: 0xdcdcdc,
      ghostwhite: 0xf8f8ff,
      gold: 0xffd700,
      goldenrod: 0xdaa520,
      gray: 0x808080,
      green: 0x008000,
      greenyellow: 0xadff2f,
      grey: 0x808080,
      honeydew: 0xf0fff0,
      hotpink: 0xff69b4,
      indianred: 0xcd5c5c,
      indigo: 0x4b0082,
      ivory: 0xfffff0,
      khaki: 0xf0e68c,
      lavender: 0xe6e6fa,
      lavenderblush: 0xfff0f5,
      lawngreen: 0x7cfc00,
      lemonchiffon: 0xfffacd,
      lightblue: 0xadd8e6,
      lightcoral: 0xf08080,
      lightcyan: 0xe0ffff,
      lightgoldenrodyellow: 0xfafad2,
      lightgray: 0xd3d3d3,
      lightgreen: 0x90ee90,
      lightgrey: 0xd3d3d3,
      lightpink: 0xffb6c1,
      lightsalmon: 0xffa07a,
      lightseagreen: 0x20b2aa,
      lightskyblue: 0x87cefa,
      lightslategray: 0x778899,
      lightslategrey: 0x778899,
      lightsteelblue: 0xb0c4de,
      lightyellow: 0xffffe0,
      lime: 0x00ff00,
      limegreen: 0x32cd32,
      linen: 0xfaf0e6,
      magenta: 0xff00ff,
      maroon: 0x800000,
      mediumaquamarine: 0x66cdaa,
      mediumblue: 0x0000cd,
      mediumorchid: 0xba55d3,
      mediumpurple: 0x9370db,
      mediumseagreen: 0x3cb371,
      mediumslateblue: 0x7b68ee,
      mediumspringgreen: 0x00fa9a,
      mediumturquoise: 0x48d1cc,
      mediumvioletred: 0xc71585,
      midnightblue: 0x191970,
      mintcream: 0xf5fffa,
      mistyrose: 0xffe4e1,
      moccasin: 0xffe4b5,
      navajowhite: 0xffdead,
      navy: 0x000080,
      oldlace: 0xfdf5e6,
      olive: 0x808000,
      olivedrab: 0x6b8e23,
      orange: 0xffa500,
      orangered: 0xff4500,
      orchid: 0xda70d6,
      palegoldenrod: 0xeee8aa,
      palegreen: 0x98fb98,
      paleturquoise: 0xafeeee,
      palevioletred: 0xdb7093,
      papayawhip: 0xffefd5,
      peachpuff: 0xffdab9,
      peru: 0xcd853f,
      pink: 0xffc0cb,
      plum: 0xdda0dd,
      powderblue: 0xb0e0e6,
      purple: 0x800080,
      rebeccapurple: 0x663399,
      red: 0xff0000,
      rosybrown: 0xbc8f8f,
      royalblue: 0x4169e1,
      saddlebrown: 0x8b4513,
      salmon: 0xfa8072,
      sandybrown: 0xf4a460,
      seagreen: 0x2e8b57,
      seashell: 0xfff5ee,
      sienna: 0xa0522d,
      silver: 0xc0c0c0,
      skyblue: 0x87ceeb,
      slateblue: 0x6a5acd,
      slategray: 0x708090,
      slategrey: 0x708090,
      snow: 0xfffafa,
      springgreen: 0x00ff7f,
      steelblue: 0x4682b4,
      tan: 0xd2b48c,
      teal: 0x008080,
      thistle: 0xd8bfd8,
      tomato: 0xff6347,
      turquoise: 0x40e0d0,
      violet: 0xee82ee,
      wheat: 0xf5deb3,
      white: 0xffffff,
      whitesmoke: 0xf5f5f5,
      yellow: 0xffff00,
      yellowgreen: 0x9acd32
    };
    define(Color, color, {
      displayable: function() {
        return this.rgb().displayable();
      },
      toString: function() {
        return this.rgb() + "";
      }
    });
    function color(format) {
      var m;
      format = (format + "").trim().toLowerCase();
      return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) : named.hasOwnProperty(format) ? rgbn(named[format]) : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
    }
    function rgbn(n) {
      return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
    }
    function rgba(r, g, b, a) {
      if (a <= 0)
        r = g = b = NaN;
      return new Rgb(r, g, b, a);
    }
    function rgbConvert(o) {
      if (!(o instanceof Color))
        o = color(o);
      if (!o)
        return new Rgb;
      o = o.rgb();
      return new Rgb(o.r, o.g, o.b, o.opacity);
    }
    function rgb(r, g, b, opacity) {
      return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
    }
    function Rgb(r, g, b, opacity) {
      this.r = +r;
      this.g = +g;
      this.b = +b;
      this.opacity = +opacity;
    }
    define(Rgb, rgb, extend(Color, {
      brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      rgb: function() {
        return this;
      },
      displayable: function() {
        return (0 <= this.r && this.r <= 255) && (0 <= this.g && this.g <= 255) && (0 <= this.b && this.b <= 255) && (0 <= this.opacity && this.opacity <= 1);
      },
      toString: function() {
        var a = this.opacity;
        a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
        return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
      }
    }));
    function hsla(h, s, l, a) {
      if (a <= 0)
        h = s = l = NaN;
      else if (l <= 0 || l >= 1)
        h = s = NaN;
      else if (s <= 0)
        h = NaN;
      return new Hsl(h, s, l, a);
    }
    function hslConvert(o) {
      if (o instanceof Hsl)
        return new Hsl(o.h, o.s, o.l, o.opacity);
      if (!(o instanceof Color))
        o = color(o);
      if (!o)
        return new Hsl;
      if (o instanceof Hsl)
        return o;
      o = o.rgb();
      var r = o.r / 255,
          g = o.g / 255,
          b = o.b / 255,
          min = Math.min(r, g, b),
          max = Math.max(r, g, b),
          h = NaN,
          s = max - min,
          l = (max + min) / 2;
      if (s) {
        if (r === max)
          h = (g - b) / s + (g < b) * 6;
        else if (g === max)
          h = (b - r) / s + 2;
        else
          h = (r - g) / s + 4;
        s /= l < 0.5 ? max + min : 2 - max - min;
        h *= 60;
      } else {
        s = l > 0 && l < 1 ? 0 : h;
      }
      return new Hsl(h, s, l, o.opacity);
    }
    function hsl(h, s, l, opacity) {
      return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
    }
    function Hsl(h, s, l, opacity) {
      this.h = +h;
      this.s = +s;
      this.l = +l;
      this.opacity = +opacity;
    }
    define(Hsl, hsl, extend(Color, {
      brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      rgb: function() {
        var h = this.h % 360 + (this.h < 0) * 360,
            s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
            l = this.l,
            m2 = l + (l < 0.5 ? l : 1 - l) * s,
            m1 = 2 * l - m2;
        return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
      },
      displayable: function() {
        return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
      }
    }));
    function hsl2rgb(h, m1, m2) {
      return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
    }
    var deg2rad = Math.PI / 180;
    var rad2deg = 180 / Math.PI;
    var Kn = 18;
    var Xn = 0.950470;
    var Yn = 1;
    var Zn = 1.088830;
    var t0 = 4 / 29;
    var t1 = 6 / 29;
    var t2 = 3 * t1 * t1;
    var t3 = t1 * t1 * t1;
    function labConvert(o) {
      if (o instanceof Lab)
        return new Lab(o.l, o.a, o.b, o.opacity);
      if (o instanceof Hcl) {
        var h = o.h * deg2rad;
        return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
      }
      if (!(o instanceof Rgb))
        o = rgbConvert(o);
      var b = rgb2xyz(o.r),
          a = rgb2xyz(o.g),
          l = rgb2xyz(o.b),
          x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),
          y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),
          z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);
      return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
    }
    function lab(l, a, b, opacity) {
      return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
    }
    function Lab(l, a, b, opacity) {
      this.l = +l;
      this.a = +a;
      this.b = +b;
      this.opacity = +opacity;
    }
    define(Lab, lab, extend(Color, {
      brighter: function(k) {
        return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
      },
      darker: function(k) {
        return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
      },
      rgb: function() {
        var y = (this.l + 16) / 116,
            x = isNaN(this.a) ? y : y + this.a / 500,
            z = isNaN(this.b) ? y : y - this.b / 200;
        y = Yn * lab2xyz(y);
        x = Xn * lab2xyz(x);
        z = Zn * lab2xyz(z);
        return new Rgb(xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z), xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), this.opacity);
      }
    }));
    function xyz2lab(t) {
      return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
    }
    function lab2xyz(t) {
      return t > t1 ? t * t * t : t2 * (t - t0);
    }
    function xyz2rgb(x) {
      return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
    }
    function rgb2xyz(x) {
      return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
    }
    function hclConvert(o) {
      if (o instanceof Hcl)
        return new Hcl(o.h, o.c, o.l, o.opacity);
      if (!(o instanceof Lab))
        o = labConvert(o);
      var h = Math.atan2(o.b, o.a) * rad2deg;
      return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
    }
    function hcl(h, c, l, opacity) {
      return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
    }
    function Hcl(h, c, l, opacity) {
      this.h = +h;
      this.c = +c;
      this.l = +l;
      this.opacity = +opacity;
    }
    define(Hcl, hcl, extend(Color, {
      brighter: function(k) {
        return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);
      },
      darker: function(k) {
        return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);
      },
      rgb: function() {
        return labConvert(this).rgb();
      }
    }));
    var A = -0.14861;
    var B = +1.78277;
    var C = -0.29227;
    var D = -0.90649;
    var E = +1.97294;
    var ED = E * D;
    var EB = E * B;
    var BC_DA = B * C - D * A;
    function cubehelixConvert(o) {
      if (o instanceof Cubehelix)
        return new Cubehelix(o.h, o.s, o.l, o.opacity);
      if (!(o instanceof Rgb))
        o = rgbConvert(o);
      var r = o.r / 255,
          g = o.g / 255,
          b = o.b / 255,
          l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
          bl = b - l,
          k = (E * (g - l) - C * bl) / D,
          s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),
          h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;
      return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
    }
    function cubehelix(h, s, l, opacity) {
      return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
    }
    function Cubehelix(h, s, l, opacity) {
      this.h = +h;
      this.s = +s;
      this.l = +l;
      this.opacity = +opacity;
    }
    define(Cubehelix, cubehelix, extend(Color, {
      brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
      },
      darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
      },
      rgb: function() {
        var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,
            l = +this.l,
            a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
            cosh = Math.cos(h),
            sinh = Math.sin(h);
        return new Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
      }
    }));
    var version = "0.4.2";
    exports.version = version;
    exports.color = color;
    exports.rgb = rgb;
    exports.hsl = hsl;
    exports.lab = lab;
    exports.hcl = hcl;
    exports.cubehelix = cubehelix;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-color@0.4.2.js", ["npm:d3-color@0.4.2/build/d3-color.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-color@0.4.2/build/d3-color.js');
  return module.exports;
});

System.registerDynamic("npm:d3-ease@0.7.0/build/d3-ease.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (factory((global.d3_ease = {})));
  }(this, function(exports) {
    'use strict';
    function linear(t) {
      return +t;
    }
    function quadIn(t) {
      return t * t;
    }
    function quadOut(t) {
      return t * (2 - t);
    }
    function quadInOut(t) {
      return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
    }
    function cubicIn(t) {
      return t * t * t;
    }
    function cubicOut(t) {
      return --t * t * t + 1;
    }
    function cubicInOut(t) {
      return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
    }
    var exponent = 3;
    var polyIn = (function custom(e) {
      e = +e;
      function polyIn(t) {
        return Math.pow(t, e);
      }
      polyIn.exponent = custom;
      return polyIn;
    })(exponent);
    var polyOut = (function custom(e) {
      e = +e;
      function polyOut(t) {
        return 1 - Math.pow(1 - t, e);
      }
      polyOut.exponent = custom;
      return polyOut;
    })(exponent);
    var polyInOut = (function custom(e) {
      e = +e;
      function polyInOut(t) {
        return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
      }
      polyInOut.exponent = custom;
      return polyInOut;
    })(exponent);
    var pi = Math.PI;
    var halfPi = pi / 2;
    function sinIn(t) {
      return 1 - Math.cos(t * halfPi);
    }
    function sinOut(t) {
      return Math.sin(t * halfPi);
    }
    function sinInOut(t) {
      return (1 - Math.cos(pi * t)) / 2;
    }
    function expIn(t) {
      return Math.pow(2, 10 * t - 10);
    }
    function expOut(t) {
      return 1 - Math.pow(2, -10 * t);
    }
    function expInOut(t) {
      return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
    }
    function circleIn(t) {
      return 1 - Math.sqrt(1 - t * t);
    }
    function circleOut(t) {
      return Math.sqrt(1 - --t * t);
    }
    function circleInOut(t) {
      return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
    }
    var b1 = 4 / 11;
    var b2 = 6 / 11;
    var b3 = 8 / 11;
    var b4 = 3 / 4;
    var b5 = 9 / 11;
    var b6 = 10 / 11;
    var b7 = 15 / 16;
    var b8 = 21 / 22;
    var b9 = 63 / 64;
    var b0 = 1 / b1 / b1;
    function bounceIn(t) {
      return 1 - bounceOut(1 - t);
    }
    function bounceOut(t) {
      return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
    }
    function bounceInOut(t) {
      return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
    }
    var overshoot = 1.70158;
    var backIn = (function custom(s) {
      s = +s;
      function backIn(t) {
        return t * t * ((s + 1) * t - s);
      }
      backIn.overshoot = custom;
      return backIn;
    })(overshoot);
    var backOut = (function custom(s) {
      s = +s;
      function backOut(t) {
        return --t * t * ((s + 1) * t + s) + 1;
      }
      backOut.overshoot = custom;
      return backOut;
    })(overshoot);
    var backInOut = (function custom(s) {
      s = +s;
      function backInOut(t) {
        return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
      }
      backInOut.overshoot = custom;
      return backInOut;
    })(overshoot);
    var tau = 2 * Math.PI;
    var amplitude = 1;
    var period = 0.3;
    var elasticIn = (function custom(a, p) {
      var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);
      function elasticIn(t) {
        return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
      }
      elasticIn.amplitude = function(a) {
        return custom(a, p * tau);
      };
      elasticIn.period = function(p) {
        return custom(a, p);
      };
      return elasticIn;
    })(amplitude, period);
    var elasticOut = (function custom(a, p) {
      var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);
      function elasticOut(t) {
        return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
      }
      elasticOut.amplitude = function(a) {
        return custom(a, p * tau);
      };
      elasticOut.period = function(p) {
        return custom(a, p);
      };
      return elasticOut;
    })(amplitude, period);
    var elasticInOut = (function custom(a, p) {
      var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);
      function elasticInOut(t) {
        return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
      }
      elasticInOut.amplitude = function(a) {
        return custom(a, p * tau);
      };
      elasticInOut.period = function(p) {
        return custom(a, p);
      };
      return elasticInOut;
    })(amplitude, period);
    var version = "0.7.0";
    exports.version = version;
    exports.easeLinear = linear;
    exports.easeQuad = quadInOut;
    exports.easeQuadIn = quadIn;
    exports.easeQuadOut = quadOut;
    exports.easeQuadInOut = quadInOut;
    exports.easeCubic = cubicInOut;
    exports.easeCubicIn = cubicIn;
    exports.easeCubicOut = cubicOut;
    exports.easeCubicInOut = cubicInOut;
    exports.easePoly = polyInOut;
    exports.easePolyIn = polyIn;
    exports.easePolyOut = polyOut;
    exports.easePolyInOut = polyInOut;
    exports.easeSin = sinInOut;
    exports.easeSinIn = sinIn;
    exports.easeSinOut = sinOut;
    exports.easeSinInOut = sinInOut;
    exports.easeExp = expInOut;
    exports.easeExpIn = expIn;
    exports.easeExpOut = expOut;
    exports.easeExpInOut = expInOut;
    exports.easeCircle = circleInOut;
    exports.easeCircleIn = circleIn;
    exports.easeCircleOut = circleOut;
    exports.easeCircleInOut = circleInOut;
    exports.easeBounce = bounceOut;
    exports.easeBounceIn = bounceIn;
    exports.easeBounceOut = bounceOut;
    exports.easeBounceInOut = bounceInOut;
    exports.easeBack = backInOut;
    exports.easeBackIn = backIn;
    exports.easeBackOut = backOut;
    exports.easeBackInOut = backInOut;
    exports.easeElastic = elasticOut;
    exports.easeElasticIn = elasticIn;
    exports.easeElasticOut = elasticOut;
    exports.easeElasticInOut = elasticInOut;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-ease@0.7.0.js", ["npm:d3-ease@0.7.0/build/d3-ease.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-ease@0.7.0/build/d3-ease.js');
  return module.exports;
});

System.registerDynamic("npm:d3-transition@0.2.10/build/d3-transition.js", ["npm:d3-selection@0.7.3.js", "npm:d3-dispatch@0.4.4.js", "npm:d3-timer@0.4.4.js", "npm:d3-interpolate@0.8.3.js", "npm:d3-color@0.4.2.js", "npm:d3-ease@0.7.0.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, $__require('npm:d3-selection@0.7.3.js'), $__require('npm:d3-dispatch@0.4.4.js'), $__require('npm:d3-timer@0.4.4.js'), $__require('npm:d3-interpolate@0.8.3.js'), $__require('npm:d3-color@0.4.2.js'), $__require('npm:d3-ease@0.7.0.js')) : typeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) : (factory((global.d3_transition = global.d3_transition || {}), global.d3_selection, global.d3_dispatch, global.d3_timer, global.d3_interpolate, global.d3_color, global.d3_ease));
  }(this, function(exports, d3Selection, d3Dispatch, d3Timer, d3Interpolate, d3Color, d3Ease) {
    'use strict';
    var version = "0.2.10";
    var emptyOn = d3Dispatch.dispatch("start", "end", "interrupt");
    var emptyTween = [];
    var CREATED = 0;
    var SCHEDULED = 1;
    var STARTING = 2;
    var STARTED = 3;
    var ENDING = 4;
    var ENDED = 5;
    function schedule(node, name, id, index, group, timing) {
      var schedules = node.__transition;
      if (!schedules)
        node.__transition = {};
      else if (id in schedules)
        return;
      create(node, id, {
        name: name,
        index: index,
        group: group,
        on: emptyOn,
        tween: emptyTween,
        time: timing.time,
        delay: timing.delay,
        duration: timing.duration,
        ease: timing.ease,
        timer: null,
        state: CREATED
      });
    }
    function init(node, id) {
      var schedule = node.__transition;
      if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED)
        throw new Error("too late");
      return schedule;
    }
    function set(node, id) {
      var schedule = node.__transition;
      if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING)
        throw new Error("too late");
      return schedule;
    }
    function get(node, id) {
      var schedule = node.__transition;
      if (!schedule || !(schedule = schedule[id]))
        throw new Error("too late");
      return schedule;
    }
    function create(node, id, self) {
      var schedules = node.__transition,
          tween;
      schedules[id] = self;
      self.timer = d3Timer.timer(schedule, 0, self.time);
      function schedule(elapsed) {
        self.state = SCHEDULED;
        if (self.delay <= elapsed)
          start(elapsed - self.delay);
        else
          self.timer.restart(start, self.delay, self.time);
      }
      function start(elapsed) {
        var i,
            j,
            n,
            o;
        for (i in schedules) {
          o = schedules[i];
          if (o.name !== self.name)
            continue;
          if (o.state === STARTED) {
            o.state = ENDED;
            o.timer.stop();
            o.on.call("interrupt", node, node.__data__, o.index, o.group);
            delete schedules[i];
          } else if (+i < id) {
            o.state = ENDED;
            o.timer.stop();
            delete schedules[i];
          }
        }
        d3Timer.timeout(function() {
          if (self.state === STARTED) {
            self.timer.restart(tick, self.delay, self.time);
            tick(elapsed);
          }
        });
        self.state = STARTING;
        self.on.call("start", node, node.__data__, self.index, self.group);
        if (self.state !== STARTING)
          return;
        self.state = STARTED;
        tween = new Array(n = self.tween.length);
        for (i = 0, j = -1; i < n; ++i) {
          if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
            tween[++j] = o;
          }
        }
        tween.length = j + 1;
      }
      function tick(elapsed) {
        var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.state = ENDING, 1),
            i = -1,
            n = tween.length;
        while (++i < n) {
          tween[i].call(null, t);
        }
        if (self.state === ENDING) {
          self.state = ENDED;
          self.timer.stop();
          self.on.call("end", node, node.__data__, self.index, self.group);
          for (i in schedules)
            if (+i !== id)
              return void delete schedules[id];
          delete node.__transition;
        }
      }
    }
    function interrupt(node, name) {
      var schedules = node.__transition,
          schedule,
          active,
          empty = true,
          i;
      if (!schedules)
        return;
      name = name == null ? null : name + "";
      for (i in schedules) {
        if ((schedule = schedules[i]).name !== name) {
          empty = false;
          continue;
        }
        active = schedule.state === STARTED;
        schedule.state = ENDED;
        schedule.timer.stop();
        if (active)
          schedule.on.call("interrupt", node, node.__data__, schedule.index, schedule.group);
        delete schedules[i];
      }
      if (empty)
        delete node.__transition;
    }
    function selection_interrupt(name) {
      return this.each(function() {
        interrupt(this, name);
      });
    }
    function tweenRemove(id, name) {
      var tween0,
          tween1;
      return function() {
        var schedule = set(this, id),
            tween = schedule.tween;
        if (tween !== tween0) {
          tween1 = tween0 = tween;
          for (var i = 0,
              n = tween1.length; i < n; ++i) {
            if (tween1[i].name === name) {
              tween1 = tween1.slice();
              tween1.splice(i, 1);
              break;
            }
          }
        }
        schedule.tween = tween1;
      };
    }
    function tweenFunction(id, name, value) {
      var tween0,
          tween1;
      if (typeof value !== "function")
        throw new Error;
      return function() {
        var schedule = set(this, id),
            tween = schedule.tween;
        if (tween !== tween0) {
          tween1 = (tween0 = tween).slice();
          for (var t = {
            name: name,
            value: value
          },
              i = 0,
              n = tween1.length; i < n; ++i) {
            if (tween1[i].name === name) {
              tween1[i] = t;
              break;
            }
          }
          if (i === n)
            tween1.push(t);
        }
        schedule.tween = tween1;
      };
    }
    function transition_tween(name, value) {
      var id = this._id;
      name += "";
      if (arguments.length < 2) {
        var tween = get(this.node(), id).tween;
        for (var i = 0,
            n = tween.length,
            t; i < n; ++i) {
          if ((t = tween[i]).name === name) {
            return t.value;
          }
        }
        return null;
      }
      return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
    }
    function tweenValue(transition, name, value) {
      var id = transition._id;
      transition.each(function() {
        var schedule = set(this, id);
        (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
      });
      return function(node) {
        return get(node, id).value[name];
      };
    }
    function interpolate(a, b) {
      var c;
      return (typeof b === "number" ? d3Interpolate.interpolateNumber : b instanceof d3Color.color ? d3Interpolate.interpolateRgb : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb) : d3Interpolate.interpolateString)(a, b);
    }
    function attrRemove(name) {
      return function() {
        this.removeAttribute(name);
      };
    }
    function attrRemoveNS(fullname) {
      return function() {
        this.removeAttributeNS(fullname.space, fullname.local);
      };
    }
    function attrConstant(name, interpolate, value1) {
      var value00,
          interpolate0;
      return function() {
        var value0 = this.getAttribute(name);
        return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);
      };
    }
    function attrConstantNS(fullname, interpolate, value1) {
      var value00,
          interpolate0;
      return function() {
        var value0 = this.getAttributeNS(fullname.space, fullname.local);
        return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);
      };
    }
    function attrFunction(name, interpolate, value) {
      var value00,
          value10,
          interpolate0;
      return function() {
        var value0,
            value1 = value(this);
        if (value1 == null)
          return void this.removeAttribute(name);
        value0 = this.getAttribute(name);
        return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);
      };
    }
    function attrFunctionNS(fullname, interpolate, value) {
      var value00,
          value10,
          interpolate0;
      return function() {
        var value0,
            value1 = value(this);
        if (value1 == null)
          return void this.removeAttributeNS(fullname.space, fullname.local);
        value0 = this.getAttributeNS(fullname.space, fullname.local);
        return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);
      };
    }
    function transition_attr(name, value) {
      var fullname = d3Selection.namespace(name),
          i = fullname === "transform" ? d3Interpolate.interpolateTransformSvg : interpolate;
      return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
    }
    function attrTweenNS(fullname, value) {
      function tween() {
        var node = this,
            i = value.apply(node, arguments);
        return i && function(t) {
          node.setAttributeNS(fullname.space, fullname.local, i(t));
        };
      }
      tween._value = value;
      return tween;
    }
    function attrTween(name, value) {
      function tween() {
        var node = this,
            i = value.apply(node, arguments);
        return i && function(t) {
          node.setAttribute(name, i(t));
        };
      }
      tween._value = value;
      return tween;
    }
    function transition_attrTween(name, value) {
      var key = "attr." + name;
      if (arguments.length < 2)
        return (key = this.tween(key)) && key._value;
      if (value == null)
        return this.tween(key, null);
      if (typeof value !== "function")
        throw new Error;
      var fullname = d3Selection.namespace(name);
      return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
    }
    function delayFunction(id, value) {
      return function() {
        init(this, id).delay = +value.apply(this, arguments);
      };
    }
    function delayConstant(id, value) {
      return value = +value, function() {
        init(this, id).delay = value;
      };
    }
    function transition_delay(value) {
      var id = this._id;
      return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : get(this.node(), id).delay;
    }
    function durationFunction(id, value) {
      return function() {
        set(this, id).duration = +value.apply(this, arguments);
      };
    }
    function durationConstant(id, value) {
      return value = +value, function() {
        set(this, id).duration = value;
      };
    }
    function transition_duration(value) {
      var id = this._id;
      return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : get(this.node(), id).duration;
    }
    function easeConstant(id, value) {
      if (typeof value !== "function")
        throw new Error;
      return function() {
        set(this, id).ease = value;
      };
    }
    function transition_ease(value) {
      var id = this._id;
      return arguments.length ? this.each(easeConstant(id, value)) : get(this.node(), id).ease;
    }
    function transition_filter(match) {
      if (typeof match !== "function")
        match = d3Selection.matcher(match);
      for (var groups = this._groups,
          m = groups.length,
          subgroups = new Array(m),
          j = 0; j < m; ++j) {
        for (var group = groups[j],
            n = group.length,
            subgroup = subgroups[j] = new Array(n),
            node,
            i = 0; i < n; ++i) {
          if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
            subgroup[i] = node;
          }
        }
      }
      return new Transition(subgroups, this._parents, this._name, this._id);
    }
    function transition_merge(transition) {
      if (transition._id !== this._id)
        throw new Error;
      for (var groups0 = this._groups,
          groups1 = transition._groups,
          m0 = groups0.length,
          m1 = groups1.length,
          m = Math.min(m0, m1),
          merges = new Array(m0),
          j = 0; j < m; ++j) {
        for (var group0 = groups0[j],
            group1 = groups1[j],
            n = group0.length,
            merge = merges[j] = new Array(n),
            node,
            i = 0; i < n; ++i) {
          if (node = group0[i] || group1[i]) {
            merge[i] = node;
          }
        }
      }
      for (; j < m0; ++j) {
        merges[j] = groups0[j];
      }
      return new Transition(merges, this._parents, this._name, this._id);
    }
    function start(name) {
      return (name + "").trim().split(/^|\s+/).every(function(t) {
        var i = t.indexOf(".");
        if (i >= 0)
          t = t.slice(0, i);
        return !t || t === "start";
      });
    }
    function onFunction(id, name, listener) {
      var on0,
          on1,
          sit = start(name) ? init : set;
      return function() {
        var schedule = sit(this, id),
            on = schedule.on;
        if (on !== on0)
          (on1 = (on0 = on).copy()).on(name, listener);
        schedule.on = on1;
      };
    }
    function transition_on(name, listener) {
      var id = this._id;
      return arguments.length < 2 ? get(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));
    }
    function removeFunction(id) {
      return function() {
        var parent = this.parentNode;
        for (var i in this.__transition)
          if (+i !== id)
            return;
        if (parent)
          parent.removeChild(this);
      };
    }
    function transition_remove() {
      return this.on("end.remove", removeFunction(this._id));
    }
    function transition_select(select) {
      var name = this._name,
          id = this._id;
      if (typeof select !== "function")
        select = d3Selection.selector(select);
      for (var groups = this._groups,
          m = groups.length,
          subgroups = new Array(m),
          j = 0; j < m; ++j) {
        for (var group = groups[j],
            n = group.length,
            subgroup = subgroups[j] = new Array(n),
            node,
            subnode,
            i = 0; i < n; ++i) {
          if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
            if ("__data__" in node)
              subnode.__data__ = node.__data__;
            subgroup[i] = subnode;
            schedule(subgroup[i], name, id, i, subgroup, get(node, id));
          }
        }
      }
      return new Transition(subgroups, this._parents, name, id);
    }
    function transition_selectAll(select) {
      var name = this._name,
          id = this._id;
      if (typeof select !== "function")
        select = d3Selection.selectorAll(select);
      for (var groups = this._groups,
          m = groups.length,
          subgroups = [],
          parents = [],
          j = 0; j < m; ++j) {
        for (var group = groups[j],
            n = group.length,
            node,
            i = 0; i < n; ++i) {
          if (node = group[i]) {
            for (var children = select.call(node, node.__data__, i, group),
                child,
                inherit = get(node, id),
                k = 0,
                l = children.length; k < l; ++k) {
              if (child = children[k]) {
                schedule(child, name, id, k, children, inherit);
              }
            }
            subgroups.push(children);
            parents.push(node);
          }
        }
      }
      return new Transition(subgroups, parents, name, id);
    }
    var Selection = d3Selection.selection.prototype.constructor;
    function transition_selection() {
      return new Selection(this._groups, this._parents);
    }
    function styleRemove(name, interpolate) {
      var value00,
          value10,
          interpolate0;
      return function() {
        var style = d3Selection.window(this).getComputedStyle(this, null),
            value0 = style.getPropertyValue(name),
            value1 = (this.style.removeProperty(name), style.getPropertyValue(name));
        return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);
      };
    }
    function styleRemoveEnd(name) {
      return function() {
        this.style.removeProperty(name);
      };
    }
    function styleConstant(name, interpolate, value1) {
      var value00,
          interpolate0;
      return function() {
        var value0 = d3Selection.window(this).getComputedStyle(this, null).getPropertyValue(name);
        return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);
      };
    }
    function styleFunction(name, interpolate, value) {
      var value00,
          value10,
          interpolate0;
      return function() {
        var style = d3Selection.window(this).getComputedStyle(this, null),
            value0 = style.getPropertyValue(name),
            value1 = value(this);
        if (value1 == null)
          value1 = (this.style.removeProperty(name), style.getPropertyValue(name));
        return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);
      };
    }
    function transition_style(name, value, priority) {
      var i = (name += "") === "transform" ? d3Interpolate.interpolateTransformCss : interpolate;
      return value == null ? this.styleTween(name, styleRemove(name, i)).on("end.style." + name, styleRemoveEnd(name)) : this.styleTween(name, typeof value === "function" ? styleFunction(name, i, tweenValue(this, "style." + name, value)) : styleConstant(name, i, value), priority);
    }
    function styleTween(name, value, priority) {
      function tween() {
        var node = this,
            i = value.apply(node, arguments);
        return i && function(t) {
          node.style.setProperty(name, i(t), priority);
        };
      }
      tween._value = value;
      return tween;
    }
    function transition_styleTween(name, value, priority) {
      var key = "style." + (name += "");
      if (arguments.length < 2)
        return (key = this.tween(key)) && key._value;
      if (value == null)
        return this.tween(key, null);
      if (typeof value !== "function")
        throw new Error;
      return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
    }
    function textConstant(value) {
      return function() {
        this.textContent = value;
      };
    }
    function textFunction(value) {
      return function() {
        var value1 = value(this);
        this.textContent = value1 == null ? "" : value1;
      };
    }
    function transition_text(value) {
      return this.tween("text", typeof value === "function" ? textFunction(tweenValue(this, "text", value)) : textConstant(value == null ? "" : value + ""));
    }
    function transition_transition() {
      var name = this._name,
          id0 = this._id,
          id1 = newId();
      for (var groups = this._groups,
          m = groups.length,
          j = 0; j < m; ++j) {
        for (var group = groups[j],
            n = group.length,
            node,
            i = 0; i < n; ++i) {
          if (node = group[i]) {
            var inherit = get(node, id0);
            schedule(node, name, id1, i, group, {
              time: inherit.time + inherit.delay + inherit.duration,
              delay: 0,
              duration: inherit.duration,
              ease: inherit.ease
            });
          }
        }
      }
      return new Transition(groups, this._parents, name, id1);
    }
    var id = 0;
    function Transition(groups, parents, name, id) {
      this._groups = groups;
      this._parents = parents;
      this._name = name;
      this._id = id;
    }
    function transition(name) {
      return d3Selection.selection().transition(name);
    }
    function newId() {
      return ++id;
    }
    var selection_prototype = d3Selection.selection.prototype;
    Transition.prototype = transition.prototype = {
      constructor: Transition,
      select: transition_select,
      selectAll: transition_selectAll,
      filter: transition_filter,
      merge: transition_merge,
      selection: transition_selection,
      transition: transition_transition,
      call: selection_prototype.call,
      nodes: selection_prototype.nodes,
      node: selection_prototype.node,
      size: selection_prototype.size,
      empty: selection_prototype.empty,
      each: selection_prototype.each,
      on: transition_on,
      attr: transition_attr,
      attrTween: transition_attrTween,
      style: transition_style,
      styleTween: transition_styleTween,
      text: transition_text,
      remove: transition_remove,
      tween: transition_tween,
      delay: transition_delay,
      duration: transition_duration,
      ease: transition_ease
    };
    var defaultTiming = {
      time: null,
      delay: 0,
      duration: 250,
      ease: d3Ease.easeCubicInOut
    };
    function inherit(node, id) {
      var timing;
      while (!(timing = node.__transition) || !(timing = timing[id])) {
        if (!(node = node.parentNode)) {
          return defaultTiming.time = d3Timer.now(), defaultTiming;
        }
      }
      return timing;
    }
    function selection_transition(name) {
      var id,
          timing;
      if (name instanceof Transition) {
        id = name._id, name = name._name;
      } else {
        id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + "";
      }
      for (var groups = this._groups,
          m = groups.length,
          j = 0; j < m; ++j) {
        for (var group = groups[j],
            n = group.length,
            node,
            i = 0; i < n; ++i) {
          if (node = group[i]) {
            schedule(node, name, id, i, group, timing || inherit(node, id));
          }
        }
      }
      return new Transition(groups, this._parents, name, id);
    }
    d3Selection.selection.prototype.interrupt = selection_interrupt;
    d3Selection.selection.prototype.transition = selection_transition;
    var root = [null];
    function active(node, name) {
      var schedules = node.__transition,
          schedule,
          i;
      if (schedules) {
        name = name == null ? null : name + "";
        for (i in schedules) {
          if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {
            return new Transition([[node]], root, name, +i);
          }
        }
      }
      return null;
    }
    exports.version = version;
    exports.transition = transition;
    exports.active = active;
    exports.interrupt = interrupt;
  }));
  return module.exports;
});

System.registerDynamic("npm:d3-transition@0.2.10.js", ["npm:d3-transition@0.2.10/build/d3-transition.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:d3-transition@0.2.10/build/d3-transition.js');
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/utils/animation-utils.js", ["npm:react@15.3.0.js", "npm:d3-transition@0.2.10.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.DEFAULT_ANIMATION = exports.AnimationPropType = undefined;
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  exports.applyTransition = applyTransition;
  exports.getCSSAnimation = getCSSAnimation;
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  $__require('npm:d3-transition@0.2.10.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var AnimationPropType = exports.AnimationPropType = _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.shape({duration: _react2.default.PropTypes.number}), _react2.default.PropTypes.bool]);
  var DEFAULT_ANIMATION = exports.DEFAULT_ANIMATION = {duration: 100};
  function applyTransition(props, elements) {
    var animation = props.animation;
    if (Boolean(animation)) {
      if (!(animation instanceof Object)) {
        animation = DEFAULT_ANIMATION;
      }
      return elements.transition().duration(animation.duration);
    }
    return elements;
  }
  function getCSSAnimation(props, style) {
    var animation = props.animation;
    var transition = 'none';
    if (animation) {
      if (!(animation instanceof Object)) {
        animation = DEFAULT_ANIMATION;
      }
      var keys = Object.keys(style);
      var animationKeys = keys.filter(function(key) {
        return Boolean(style[key]);
      }).map(function(key) {
        return key + ' ' + animation.duration / 1000 + 's';
      });
      if (animationKeys.length) {
        transition = animationKeys.join(',');
      }
    }
    return _extends({transition: transition}, style);
  }
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/theme.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var DISCRETE_COLOR_RANGE = exports.DISCRETE_COLOR_RANGE = ['#12939A', '#79C7E3', '#1A3177', '#FF9833', '#EF5D28'];
  var CONTINUOUS_COLOR_RANGE = exports.CONTINUOUS_COLOR_RANGE = ['#EF5D28', '#FF9833'];
  var SIZE_RANGE = exports.SIZE_RANGE = [1, 10];
  var OPACITY_RANGE = exports.OPACITY_RANGE = [0.1, 1];
  var DEFAULT_OPACITY = exports.DEFAULT_OPACITY = 1;
  var DEFAULT_SIZE = exports.DEFAULT_SIZE = 5;
  var DEFAULT_COLOR = exports.DEFAULT_COLOR = DISCRETE_COLOR_RANGE[0];
  var DEFAULT_TICK_SIZE = exports.DEFAULT_TICK_SIZE = 7;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/radial-chart/radial-chart.js", ["npm:react@15.3.0.js", "npm:deep-equal@1.0.1.js", "npm:d3-selection@0.7.3.js", "npm:d3-shape@0.6.1.js", "npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js", "npm:react-vis@0.4.2/dist/lib/utils/chart-utils.js", "npm:react-vis@0.4.2/dist/lib/utils/animation-utils.js", "npm:react-vis@0.4.2/dist/lib/theme.js", "npm:react-vis@0.4.2/dist/lib/utils/react-utils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _slicedToArray = function() {
    function sliceIterator(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;
      try {
        for (var _i = arr[Symbol.iterator](),
            _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"])
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    return function(arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if (Symbol.iterator in Object(arr)) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
    };
  }();
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _deepEqual = $__require('npm:deep-equal@1.0.1.js');
  var _deepEqual2 = _interopRequireDefault(_deepEqual);
  var _d3Selection = $__require('npm:d3-selection@0.7.3.js');
  var _d3Selection2 = _interopRequireDefault(_d3Selection);
  var _d3Shape = $__require('npm:d3-shape@0.6.1.js');
  var _d3Shape2 = _interopRequireDefault(_d3Shape);
  var _scalesUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/scales-utils.js');
  var _chartUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/chart-utils.js');
  var _animationUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/animation-utils.js');
  var _theme = $__require('npm:react-vis@0.4.2/dist/lib/theme.js');
  var _reactUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/react-utils.js');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var ATTRIBUTES = ['angle', 'radius', 'innerRadius', 'color', 'opacity', 'fill', 'stroke'];
  function assignColorsToData(data) {
    return data.map(function(d, color) {
      return _extends({color: color}, d);
    });
  }
  var RadialChart = function(_React$Component) {
    _inherits(RadialChart, _React$Component);
    _createClass(RadialChart, null, [{
      key: 'propTypes',
      get: function get() {
        return {
          width: _react2.default.PropTypes.number.isRequired,
          height: _react2.default.PropTypes.number.isRequired,
          margin: _react2.default.PropTypes.shape({
            left: _react2.default.PropTypes.number,
            top: _react2.default.PropTypes.number,
            right: _react2.default.PropTypes.number,
            bottom: _react2.default.PropTypes.number
          }),
          animation: _animationUtils.AnimationPropType,
          onSectionMouseOver: _react2.default.PropTypes.func,
          onSectionMouseOut: _react2.default.PropTypes.func,
          onSectionClick: _react2.default.PropTypes.func
        };
      }
    }, {
      key: 'defaultProps',
      get: function get() {
        return {margin: {
            left: 10,
            right: 10,
            top: 10,
            bottom: 10
          }};
      }
    }]);
    function RadialChart(props) {
      _classCallCheck(this, RadialChart);
      var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(RadialChart).call(this, props));
      var data = assignColorsToData(props.data);
      _this.state = {
        scaleProps: _this._getAllScaleProps(props, data),
        data: data
      };
      _this._sectionMouseOut = _this._sectionMouseOut.bind(_this);
      _this._sectionMouseOver = _this._sectionMouseOver.bind(_this);
      _this._sectionClick = _this._sectionClick.bind(_this);
      _this._arc = null;
      return _this;
    }
    _createClass(RadialChart, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._updateChart();
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var nextData = assignColorsToData(nextProps.data);
        var scaleProps = this.state.scaleProps;
        var nextscaleProps = this._getAllScaleProps(nextProps, nextData);
        if (!(0, _deepEqual2.default)(nextscaleProps, scaleProps)) {
          this.setState({
            scaleProps: nextscaleProps,
            data: nextData
          });
        }
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this._updateChart();
      }
    }, {
      key: '_triggerSectionHandler',
      value: function _triggerSectionHandler(handler, d) {
        if (handler) {
          var _arc$centroid = this._arc.centroid(d);
          var _arc$centroid2 = _slicedToArray(_arc$centroid, 2);
          var x = _arc$centroid2[0];
          var y = _arc$centroid2[1];
          handler(d.data, {
            event: _d3Selection2.default.event,
            x: x,
            y: y
          });
        }
      }
    }, {
      key: '_sectionMouseOver',
      value: function _sectionMouseOver(d) {
        var onSectionMouseOver = this.props.onSectionMouseOver;
        this._triggerSectionHandler(onSectionMouseOver, d);
      }
    }, {
      key: '_sectionMouseOut',
      value: function _sectionMouseOut(d) {
        var onSectionMouseOut = this.props.onSectionMouseOut;
        this._triggerSectionHandler(onSectionMouseOut, d);
      }
    }, {
      key: '_sectionClick',
      value: function _sectionClick(d) {
        var onSectionClick = this.props.onSectionClick;
        this._triggerSectionHandler(onSectionClick, d);
      }
    }, {
      key: '_getScaleDefaults',
      value: function _getScaleDefaults(props) {
        var _getInnerDimensions = (0, _chartUtils.getInnerDimensions)(props);
        var innerWidth = _getInnerDimensions.innerWidth;
        var innerHeight = _getInnerDimensions.innerHeight;
        var radius = Math.min(innerWidth / 2, innerHeight / 2);
        return {
          radiusRange: [0, radius],
          _radiusValue: radius,
          opacityRange: _theme.OPACITY_RANGE,
          _opacityValue: 1,
          colorRange: _theme.DISCRETE_COLOR_RANGE,
          colorType: 'category'
        };
      }
    }, {
      key: '_getAllScaleProps',
      value: function _getAllScaleProps(props, data) {
        var attrProps = {};
        var defaults = this._getScaleDefaults(props);
        Object.keys(props).forEach(function(key) {
          var attr = ATTRIBUTES.find(function(a) {
            return key.indexOf(a) === 0;
          });
          if (!attr) {
            return;
          }
          attrProps[key] = props[key];
        });
        return _extends({}, defaults, attrProps, {
          _allData: data,
          _adjustBy: [],
          _adjustWhat: []
        });
      }
    }, {
      key: '_applyTransition',
      value: function _applyTransition(elements) {
        return (0, _animationUtils.applyTransition)(this.props, elements);
      }
    }, {
      key: '_getAttributeFunctor',
      value: function _getAttributeFunctor(attr) {
        return (0, _scalesUtils.getAttributeFunctor)(this.state.scaleProps, attr);
      }
    }, {
      key: '_updateChart',
      value: function _updateChart() {
        var data = this.state.data;
        var container = (0, _reactUtils.getDOMNode)(this.refs.container);
        var pie = _d3Shape2.default.pie().sort(null).value(function(d) {
          return d.angle;
        });
        var radiusFn = this._getAttributeFunctor('radius');
        var innerRadiusFn = this._getAttributeFunctor('innerRadius');
        if (!radiusFn) {
          return;
        }
        var arc = _d3Shape2.default.arc().outerRadius(radiusFn).innerRadius(innerRadiusFn);
        this._arc = arc;
        var sections = _d3Selection2.default.select(container).selectAll('path').data(pie(data)).on('click', this._sectionClick).on('mouseover', this._sectionMouseOver).on('mouseout', this._sectionMouseOut);
        this._applyTransition(sections).attr('d', arc).style('opacity', this._getAttributeFunctor('opacity')).style('fill', this._getAttributeFunctor('fill') || this._getAttributeFunctor('color')).style('stroke', this._getAttributeFunctor('stroke'));
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props;
        var data = _props.data;
        var width = _props.width;
        var height = _props.height;
        var _getInnerDimensions2 = (0, _chartUtils.getInnerDimensions)(this.props);
        var innerWidth = _getInnerDimensions2.innerWidth;
        var innerHeight = _getInnerDimensions2.innerHeight;
        return _react2.default.createElement('div', {
          style: {
            width: width + 'px',
            height: height + 'px'
          },
          className: 'rv-radial-chart'
        }, _react2.default.createElement('svg', {
          width: width,
          height: height,
          className: 'rv-radial-chart__svg'
        }, _react2.default.createElement('g', {
          className: 'rv-radial-chart__series--pie',
          transform: 'translate(' + innerWidth / 2 + ',' + innerHeight / 2 + ')',
          ref: 'container'
        }, data.map(function(d, i) {
          return _react2.default.createElement('path', {key: i});
        }))));
      }
    }]);
    return RadialChart;
  }(_react2.default.Component);
  exports.default = RadialChart;
  RadialChart.displayName = 'RadialChart';
  exports.default = RadialChart;
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/utils/react-utils.js", ["npm:react@15.3.0.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _slicedToArray = function() {
    function sliceIterator(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;
      try {
        for (var _i = arr[Symbol.iterator](),
            _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"])
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    return function(arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if (Symbol.iterator in Object(arr)) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
    };
  }();
  exports.getDOMNode = getDOMNode;
  exports.isReactDOMSupported = isReactDOMSupported;
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var _React$version$split = _react2.default.version.split('.');
  var _React$version$split2 = _slicedToArray(_React$version$split, 2);
  var major = _React$version$split2[0];
  var minor = _React$version$split2[1];
  var versionHigherThanThirteen = Number(minor) > 13 || Number(major) > 13;
  function getDOMNode(ref) {
    if (!isReactDOMSupported()) {
      return ref && ref.getDOMNode();
    }
    return ref;
  }
  function isReactDOMSupported() {
    return versionHigherThanThirteen;
  }
  return module.exports;
});

System.registerDynamic("npm:global@4.3.0/window.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  if (typeof window !== "undefined") {
    module.exports = window;
  } else if (typeof global !== "undefined") {
    module.exports = global;
  } else if (typeof self !== "undefined") {
    module.exports = self;
  } else {
    module.exports = {};
  }
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/lib/make-vis-flexible.js", ["npm:react@15.3.0.js", "npm:react-vis@0.4.2/dist/lib/utils/react-utils.js", "npm:global@4.3.0/window.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  exports.default = makeVisFlexible;
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _reactUtils = $__require('npm:react-vis@0.4.2/dist/lib/utils/react-utils.js');
  var _window = $__require('npm:global@4.3.0/window.js');
  var _window2 = _interopRequireDefault(_window);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _objectWithoutProperties(obj, keys) {
    var target = {};
    for (var i in obj) {
      if (keys.indexOf(i) >= 0)
        continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i))
        continue;
      target[i] = obj[i];
    }
    return target;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var CONTAINER_REF = 'container';
  var resizeSubscribers = [];
  var DEBOUNCE_DURATION = 100;
  var timeoutId = null;
  function debounceEmitResize() {
    _window2.default.clearTimeout(timeoutId);
    timeoutId = _window2.default.setTimeout(emitResize, DEBOUNCE_DURATION);
  }
  function emitResize() {
    resizeSubscribers.forEach(function(cb) {
      return cb();
    });
  }
  function subscribeToDebouncedResize(cb) {
    resizeSubscribers.push(cb);
    if (resizeSubscribers.length === 1) {
      _window2.default.addEventListener('resize', debounceEmitResize);
    }
    return function unsubscribe() {
      removeSubscriber(resizeSubscribers, cb);
      if (resizeSubscribers.length === 0) {
        _window2.default.clearTimeout(timeoutId);
        _window2.default.removeEventListener('resize', debounceEmitResize);
      }
    };
  }
  function removeSubscriber(item) {
    var index = resizeSubscribers.indexOf(item);
    if (index > -1) {
      resizeSubscribers.splice(index, 1);
    }
  }
  function makeVisFlexible(Component) {
    var ResultClass = function(_React$Component) {
      _inherits(ResultClass, _React$Component);
      _createClass(ResultClass, null, [{
        key: 'propTypes',
        get: function get() {
          var _Component$propTypes = Component.propTypes;
          var width = _Component$propTypes.width;
          var otherPropTypes = _objectWithoutProperties(_Component$propTypes, ['width']);
          return otherPropTypes;
        }
      }]);
      function ResultClass(props) {
        _classCallCheck(this, ResultClass);
        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ResultClass).call(this, props));
        _this.state = {width: 0};
        _this._onResize = _this._onResize.bind(_this);
        return _this;
      }
      _createClass(ResultClass, [{
        key: '_onResize',
        value: function _onResize() {
          var containerElement = (0, _reactUtils.getDOMNode)(this.refs[CONTAINER_REF]);
          var offsetWidth = containerElement.offsetWidth;
          if (this.state.width !== offsetWidth) {
            this.setState({width: offsetWidth});
          }
        }
      }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
          this._onResize();
          this.cancelSubscription = subscribeToDebouncedResize(this._onResize);
        }
      }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps() {
          this._onResize();
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          this.cancelSubscription();
        }
      }, {
        key: 'render',
        value: function render() {
          var width = this.state.width;
          return _react2.default.createElement('div', {ref: CONTAINER_REF}, _react2.default.createElement(Component, _extends({width: width}, this.props)));
        }
      }]);
      return ResultClass;
    }(_react2.default.Component);
    ResultClass.displayName = 'Flexible' + Component.displayName;
    return ResultClass;
  }
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/dist/index.js", ["npm:react-vis@0.4.2/dist/lib/table/table.js", "npm:react-vis@0.4.2/dist/lib/treemap/treemap.js", "npm:react-vis@0.4.2/dist/lib/plot/xy-plot.js", "npm:react-vis@0.4.2/dist/lib/plot/series/line-series.js", "npm:react-vis@0.4.2/dist/lib/plot/series/vertical-bar-series.js", "npm:react-vis@0.4.2/dist/lib/plot/series/horizontal-bar-series.js", "npm:react-vis@0.4.2/dist/lib/plot/series/mark-series.js", "npm:react-vis@0.4.2/dist/lib/plot/series/heatmap-series.js", "npm:react-vis@0.4.2/dist/lib/plot/series/area-series.js", "npm:react-vis@0.4.2/dist/lib/plot/series/line-mark-series.js", "npm:react-vis@0.4.2/dist/lib/plot/hint.js", "npm:react-vis@0.4.2/dist/lib/plot/crosshair.js", "npm:react-vis@0.4.2/dist/lib/plot/x-axis.js", "npm:react-vis@0.4.2/dist/lib/plot/y-axis.js", "npm:react-vis@0.4.2/dist/lib/plot/vertical-grid-lines.js", "npm:react-vis@0.4.2/dist/lib/plot/horizontal-grid-lines.js", "npm:react-vis@0.4.2/dist/lib/radial-chart/radial-chart.js", "npm:react-vis@0.4.2/dist/lib/make-vis-flexible.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _table = $__require('npm:react-vis@0.4.2/dist/lib/table/table.js');
  Object.defineProperty(exports, 'Table', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_table).default;
    }
  });
  var _treemap = $__require('npm:react-vis@0.4.2/dist/lib/treemap/treemap.js');
  Object.defineProperty(exports, 'Treemap', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_treemap).default;
    }
  });
  var _xyPlot = $__require('npm:react-vis@0.4.2/dist/lib/plot/xy-plot.js');
  Object.defineProperty(exports, 'XYPlot', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_xyPlot).default;
    }
  });
  var _lineSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/line-series.js');
  Object.defineProperty(exports, 'LineSeries', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_lineSeries).default;
    }
  });
  var _verticalBarSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/vertical-bar-series.js');
  Object.defineProperty(exports, 'VerticalBarSeries', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_verticalBarSeries).default;
    }
  });
  var _horizontalBarSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/horizontal-bar-series.js');
  Object.defineProperty(exports, 'HorizontalBarSeries', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_horizontalBarSeries).default;
    }
  });
  var _markSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/mark-series.js');
  Object.defineProperty(exports, 'MarkSeries', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_markSeries).default;
    }
  });
  var _heatmapSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/heatmap-series.js');
  Object.defineProperty(exports, 'HeatmapSeries', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_heatmapSeries).default;
    }
  });
  var _areaSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/area-series.js');
  Object.defineProperty(exports, 'AreaSeries', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_areaSeries).default;
    }
  });
  var _lineMarkSeries = $__require('npm:react-vis@0.4.2/dist/lib/plot/series/line-mark-series.js');
  Object.defineProperty(exports, 'LineMarkSeries', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_lineMarkSeries).default;
    }
  });
  var _hint = $__require('npm:react-vis@0.4.2/dist/lib/plot/hint.js');
  Object.defineProperty(exports, 'Hint', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_hint).default;
    }
  });
  var _crosshair = $__require('npm:react-vis@0.4.2/dist/lib/plot/crosshair.js');
  Object.defineProperty(exports, 'Crosshair', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_crosshair).default;
    }
  });
  var _xAxis = $__require('npm:react-vis@0.4.2/dist/lib/plot/x-axis.js');
  Object.defineProperty(exports, 'XAxis', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_xAxis).default;
    }
  });
  var _yAxis = $__require('npm:react-vis@0.4.2/dist/lib/plot/y-axis.js');
  Object.defineProperty(exports, 'YAxis', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_yAxis).default;
    }
  });
  var _verticalGridLines = $__require('npm:react-vis@0.4.2/dist/lib/plot/vertical-grid-lines.js');
  Object.defineProperty(exports, 'VerticalGridLines', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_verticalGridLines).default;
    }
  });
  var _horizontalGridLines = $__require('npm:react-vis@0.4.2/dist/lib/plot/horizontal-grid-lines.js');
  Object.defineProperty(exports, 'HorizontalGridLines', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_horizontalGridLines).default;
    }
  });
  var _radialChart = $__require('npm:react-vis@0.4.2/dist/lib/radial-chart/radial-chart.js');
  Object.defineProperty(exports, 'RadialChart', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_radialChart).default;
    }
  });
  var _makeVisFlexible = $__require('npm:react-vis@0.4.2/dist/lib/make-vis-flexible.js');
  Object.defineProperty(exports, 'makeWidthFlexible', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_makeVisFlexible).default;
    }
  });
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2/index.js", ["npm:react-vis@0.4.2/dist/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react-vis@0.4.2/dist/index.js');
  return module.exports;
});

System.registerDynamic("npm:react-vis@0.4.2.js", ["npm:react-vis@0.4.2/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react-vis@0.4.2/index.js');
  return module.exports;
});

System.registerDynamic("npm:whatwg-fetch@1.0.0/fetch.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(self) {
    'use strict';
    if (self.fetch) {
      return;
    }
    var support = {
      searchParams: 'URLSearchParams' in self,
      iterable: 'Symbol' in self && 'iterator' in Symbol,
      blob: 'FileReader' in self && 'Blob' in self && (function() {
        try {
          new Blob();
          return true;
        } catch (e) {
          return false;
        }
      })(),
      formData: 'FormData' in self,
      arrayBuffer: 'ArrayBuffer' in self
    };
    function normalizeName(name) {
      if (typeof name !== 'string') {
        name = String(name);
      }
      if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
        throw new TypeError('Invalid character in header field name');
      }
      return name.toLowerCase();
    }
    function normalizeValue(value) {
      if (typeof value !== 'string') {
        value = String(value);
      }
      return value;
    }
    function iteratorFor(items) {
      var iterator = {next: function() {
          var value = items.shift();
          return {
            done: value === undefined,
            value: value
          };
        }};
      if (support.iterable) {
        iterator[Symbol.iterator] = function() {
          return iterator;
        };
      }
      return iterator;
    }
    function Headers(headers) {
      this.map = {};
      if (headers instanceof Headers) {
        headers.forEach(function(value, name) {
          this.append(name, value);
        }, this);
      } else if (headers) {
        Object.getOwnPropertyNames(headers).forEach(function(name) {
          this.append(name, headers[name]);
        }, this);
      }
    }
    Headers.prototype.append = function(name, value) {
      name = normalizeName(name);
      value = normalizeValue(value);
      var list = this.map[name];
      if (!list) {
        list = [];
        this.map[name] = list;
      }
      list.push(value);
    };
    Headers.prototype['delete'] = function(name) {
      delete this.map[normalizeName(name)];
    };
    Headers.prototype.get = function(name) {
      var values = this.map[normalizeName(name)];
      return values ? values[0] : null;
    };
    Headers.prototype.getAll = function(name) {
      return this.map[normalizeName(name)] || [];
    };
    Headers.prototype.has = function(name) {
      return this.map.hasOwnProperty(normalizeName(name));
    };
    Headers.prototype.set = function(name, value) {
      this.map[normalizeName(name)] = [normalizeValue(value)];
    };
    Headers.prototype.forEach = function(callback, thisArg) {
      Object.getOwnPropertyNames(this.map).forEach(function(name) {
        this.map[name].forEach(function(value) {
          callback.call(thisArg, value, name, this);
        }, this);
      }, this);
    };
    Headers.prototype.keys = function() {
      var items = [];
      this.forEach(function(value, name) {
        items.push(name);
      });
      return iteratorFor(items);
    };
    Headers.prototype.values = function() {
      var items = [];
      this.forEach(function(value) {
        items.push(value);
      });
      return iteratorFor(items);
    };
    Headers.prototype.entries = function() {
      var items = [];
      this.forEach(function(value, name) {
        items.push([name, value]);
      });
      return iteratorFor(items);
    };
    if (support.iterable) {
      Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
    }
    function consumed(body) {
      if (body.bodyUsed) {
        return Promise.reject(new TypeError('Already read'));
      }
      body.bodyUsed = true;
    }
    function fileReaderReady(reader) {
      return new Promise(function(resolve, reject) {
        reader.onload = function() {
          resolve(reader.result);
        };
        reader.onerror = function() {
          reject(reader.error);
        };
      });
    }
    function readBlobAsArrayBuffer(blob) {
      var reader = new FileReader();
      reader.readAsArrayBuffer(blob);
      return fileReaderReady(reader);
    }
    function readBlobAsText(blob) {
      var reader = new FileReader();
      reader.readAsText(blob);
      return fileReaderReady(reader);
    }
    function Body() {
      this.bodyUsed = false;
      this._initBody = function(body) {
        this._bodyInit = body;
        if (typeof body === 'string') {
          this._bodyText = body;
        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
          this._bodyBlob = body;
        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
          this._bodyFormData = body;
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this._bodyText = body.toString();
        } else if (!body) {
          this._bodyText = '';
        } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {} else {
          throw new Error('unsupported BodyInit type');
        }
        if (!this.headers.get('content-type')) {
          if (typeof body === 'string') {
            this.headers.set('content-type', 'text/plain;charset=UTF-8');
          } else if (this._bodyBlob && this._bodyBlob.type) {
            this.headers.set('content-type', this._bodyBlob.type);
          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
          }
        }
      };
      if (support.blob) {
        this.blob = function() {
          var rejected = consumed(this);
          if (rejected) {
            return rejected;
          }
          if (this._bodyBlob) {
            return Promise.resolve(this._bodyBlob);
          } else if (this._bodyFormData) {
            throw new Error('could not read FormData body as blob');
          } else {
            return Promise.resolve(new Blob([this._bodyText]));
          }
        };
        this.arrayBuffer = function() {
          return this.blob().then(readBlobAsArrayBuffer);
        };
        this.text = function() {
          var rejected = consumed(this);
          if (rejected) {
            return rejected;
          }
          if (this._bodyBlob) {
            return readBlobAsText(this._bodyBlob);
          } else if (this._bodyFormData) {
            throw new Error('could not read FormData body as text');
          } else {
            return Promise.resolve(this._bodyText);
          }
        };
      } else {
        this.text = function() {
          var rejected = consumed(this);
          return rejected ? rejected : Promise.resolve(this._bodyText);
        };
      }
      if (support.formData) {
        this.formData = function() {
          return this.text().then(decode);
        };
      }
      this.json = function() {
        return this.text().then(JSON.parse);
      };
      return this;
    }
    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];
    function normalizeMethod(method) {
      var upcased = method.toUpperCase();
      return (methods.indexOf(upcased) > -1) ? upcased : method;
    }
    function Request(input, options) {
      options = options || {};
      var body = options.body;
      if (Request.prototype.isPrototypeOf(input)) {
        if (input.bodyUsed) {
          throw new TypeError('Already read');
        }
        this.url = input.url;
        this.credentials = input.credentials;
        if (!options.headers) {
          this.headers = new Headers(input.headers);
        }
        this.method = input.method;
        this.mode = input.mode;
        if (!body) {
          body = input._bodyInit;
          input.bodyUsed = true;
        }
      } else {
        this.url = input;
      }
      this.credentials = options.credentials || this.credentials || 'omit';
      if (options.headers || !this.headers) {
        this.headers = new Headers(options.headers);
      }
      this.method = normalizeMethod(options.method || this.method || 'GET');
      this.mode = options.mode || this.mode || null;
      this.referrer = null;
      if ((this.method === 'GET' || this.method === 'HEAD') && body) {
        throw new TypeError('Body not allowed for GET or HEAD requests');
      }
      this._initBody(body);
    }
    Request.prototype.clone = function() {
      return new Request(this);
    };
    function decode(body) {
      var form = new FormData();
      body.trim().split('&').forEach(function(bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
      return form;
    }
    function headers(xhr) {
      var head = new Headers();
      var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\n');
      pairs.forEach(function(header) {
        var split = header.trim().split(':');
        var key = split.shift().trim();
        var value = split.join(':').trim();
        head.append(key, value);
      });
      return head;
    }
    Body.call(Request.prototype);
    function Response(bodyInit, options) {
      if (!options) {
        options = {};
      }
      this.type = 'default';
      this.status = options.status;
      this.ok = this.status >= 200 && this.status < 300;
      this.statusText = options.statusText;
      this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers);
      this.url = options.url || '';
      this._initBody(bodyInit);
    }
    Body.call(Response.prototype);
    Response.prototype.clone = function() {
      return new Response(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new Headers(this.headers),
        url: this.url
      });
    };
    Response.error = function() {
      var response = new Response(null, {
        status: 0,
        statusText: ''
      });
      response.type = 'error';
      return response;
    };
    var redirectStatuses = [301, 302, 303, 307, 308];
    Response.redirect = function(url, status) {
      if (redirectStatuses.indexOf(status) === -1) {
        throw new RangeError('Invalid status code');
      }
      return new Response(null, {
        status: status,
        headers: {location: url}
      });
    };
    self.Headers = Headers;
    self.Request = Request;
    self.Response = Response;
    self.fetch = function(input, init) {
      return new Promise(function(resolve, reject) {
        var request;
        if (Request.prototype.isPrototypeOf(input) && !init) {
          request = input;
        } else {
          request = new Request(input, init);
        }
        var xhr = new XMLHttpRequest();
        function responseURL() {
          if ('responseURL' in xhr) {
            return xhr.responseURL;
          }
          if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {
            return xhr.getResponseHeader('X-Request-URL');
          }
          return;
        }
        xhr.onload = function() {
          var options = {
            status: xhr.status,
            statusText: xhr.statusText,
            headers: headers(xhr),
            url: responseURL()
          };
          var body = 'response' in xhr ? xhr.response : xhr.responseText;
          resolve(new Response(body, options));
        };
        xhr.onerror = function() {
          reject(new TypeError('Network request failed'));
        };
        xhr.ontimeout = function() {
          reject(new TypeError('Network request failed'));
        };
        xhr.open(request.method, request.url, true);
        if (request.credentials === 'include') {
          xhr.withCredentials = true;
        }
        if ('responseType' in xhr && support.blob) {
          xhr.responseType = 'blob';
        }
        request.headers.forEach(function(value, name) {
          xhr.setRequestHeader(name, value);
        });
        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
      });
    };
    self.fetch.polyfill = true;
  })(typeof self !== 'undefined' ? self : this);
  return module.exports;
});

System.registerDynamic("npm:whatwg-fetch@1.0.0.js", ["npm:whatwg-fetch@1.0.0/fetch.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:whatwg-fetch@1.0.0/fetch.js');
  return module.exports;
});

System.register("app/api.js", ["npm:whatwg-fetch@1.0.0.js"], function (_export) {
  "use strict";

  var baseUrl, get;
  return {
    setters: [function (_npmWhatwgFetch100Js) {}],
    execute: function () {

      // const baseUrl = "http://localhost:3000"
      baseUrl = "https://mamersfo.github.io";

      get = function get(which) {
        var url = baseUrl + "/blijdorp/data/" + which + ".json";
        return fetch(url).then(function (response) {
          return response.json();
        });
      };

      _export("get", get);
    }
  };
});
System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/SelectRowHeaderColumn.js", ["npm:react@15.3.0.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var SelectRowHeaderColumn = (function(_Component) {
    _inherits(SelectRowHeaderColumn, _Component);
    function SelectRowHeaderColumn() {
      _classCallCheck(this, SelectRowHeaderColumn);
      _get(Object.getPrototypeOf(SelectRowHeaderColumn.prototype), 'constructor', this).apply(this, arguments);
    }
    _createClass(SelectRowHeaderColumn, [{
      key: 'render',
      value: function render() {
        return _react2['default'].createElement('th', {style: {textAlign: 'center'}}, this.props.children);
      }
    }]);
    return SelectRowHeaderColumn;
  })(_react.Component);
  SelectRowHeaderColumn.propTypes = {children: _react.PropTypes.node};
  exports['default'] = SelectRowHeaderColumn;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/TableHeader.js", ["npm:react@15.3.0.js", "npm:react-dom@15.3.0.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js", "npm:classnames@2.2.5.js", "npm:react-bootstrap-table@2.4.2/lib/SelectRowHeaderColumn.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _reactDom = $__require('npm:react-dom@15.3.0.js');
  var _reactDom2 = _interopRequireDefault(_reactDom);
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var _classnames = $__require('npm:classnames@2.2.5.js');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _SelectRowHeaderColumn = $__require('npm:react-bootstrap-table@2.4.2/lib/SelectRowHeaderColumn.js');
  var _SelectRowHeaderColumn2 = _interopRequireDefault(_SelectRowHeaderColumn);
  var Checkbox = (function(_Component) {
    _inherits(Checkbox, _Component);
    function Checkbox() {
      _classCallCheck(this, Checkbox);
      _get(Object.getPrototypeOf(Checkbox.prototype), 'constructor', this).apply(this, arguments);
    }
    _createClass(Checkbox, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.update(this.props.checked);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(props) {
        this.update(props.checked);
      }
    }, {
      key: 'update',
      value: function update(checked) {
        _reactDom2['default'].findDOMNode(this).indeterminate = checked === 'indeterminate';
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2['default'].createElement('input', {
          className: 'react-bs-select-all',
          type: 'checkbox',
          checked: this.props.checked,
          onChange: this.props.onChange
        });
      }
    }]);
    return Checkbox;
  })(_react.Component);
  var TableHeader = (function(_Component2) {
    _inherits(TableHeader, _Component2);
    function TableHeader() {
      _classCallCheck(this, TableHeader);
      _get(Object.getPrototypeOf(TableHeader.prototype), 'constructor', this).apply(this, arguments);
    }
    _createClass(TableHeader, [{
      key: 'render',
      value: function render() {
        var _this = this;
        var containerClasses = (0, _classnames2['default'])('react-bs-container-header', 'table-header-wrapper');
        var tableClasses = (0, _classnames2['default'])('table', 'table-hover', {
          'table-bordered': this.props.bordered,
          'table-condensed': this.props.condensed
        }, this.props.tableHeaderClass);
        var selectRowHeaderCol = null;
        if (!this.props.hideSelectColumn)
          selectRowHeaderCol = this.renderSelectRowHeader();
        var i = 0;
        return _react2['default'].createElement('div', {
          ref: 'container',
          className: containerClasses,
          style: this.props.style
        }, _react2['default'].createElement('table', {className: tableClasses}, _react2['default'].createElement('thead', null, _react2['default'].createElement('tr', {ref: 'header'}, selectRowHeaderCol, _react2['default'].Children.map(this.props.children, function(elm) {
          var _props = _this.props;
          var sortIndicator = _props.sortIndicator;
          var sortName = _props.sortName;
          var sortOrder = _props.sortOrder;
          var onSort = _props.onSort;
          var _elm$props = elm.props;
          var dataField = _elm$props.dataField;
          var dataSort = _elm$props.dataSort;
          var sort = dataSort && dataField === sortName ? sortOrder : undefined;
          return _react2['default'].cloneElement(elm, {
            key: i++,
            onSort: onSort,
            sort: sort,
            sortIndicator: sortIndicator
          });
        })))));
      }
    }, {
      key: 'renderSelectRowHeader',
      value: function renderSelectRowHeader() {
        if (this.props.customComponent) {
          var CustomComponent = this.props.customComponent;
          return _react2['default'].createElement(_SelectRowHeaderColumn2['default'], null, _react2['default'].createElement(CustomComponent, {
            type: 'checkbox',
            checked: this.props.isSelectAll,
            indeterminate: this.props.isSelectAll === 'indeterminate',
            disabled: false,
            onChange: this.props.onSelectAllRow,
            rowIndex: 'Header'
          }));
        } else if (this.props.rowSelectType === _Const2['default'].ROW_SELECT_SINGLE) {
          return _react2['default'].createElement(_SelectRowHeaderColumn2['default'], null);
        } else if (this.props.rowSelectType === _Const2['default'].ROW_SELECT_MULTI) {
          return _react2['default'].createElement(_SelectRowHeaderColumn2['default'], null, _react2['default'].createElement(Checkbox, {
            onChange: this.props.onSelectAllRow,
            checked: this.props.isSelectAll
          }));
        } else {
          return null;
        }
      }
    }]);
    return TableHeader;
  })(_react.Component);
  TableHeader.propTypes = {
    tableHeaderClass: _react.PropTypes.string,
    style: _react.PropTypes.object,
    rowSelectType: _react.PropTypes.string,
    onSort: _react.PropTypes.func,
    onSelectAllRow: _react.PropTypes.func,
    sortName: _react.PropTypes.string,
    sortOrder: _react.PropTypes.string,
    hideSelectColumn: _react.PropTypes.bool,
    bordered: _react.PropTypes.bool,
    condensed: _react.PropTypes.bool,
    isFiltered: _react.PropTypes.bool,
    isSelectAll: _react.PropTypes.oneOf([true, 'indeterminate', false]),
    sortIndicator: _react.PropTypes.bool,
    customComponent: _react.PropTypes.func
  };
  exports['default'] = TableHeader;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/TableRow.js", ["npm:classnames@2.2.5.js", "npm:react@15.3.0.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _classnames = $__require('npm:classnames@2.2.5.js');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var TableRow = (function(_Component) {
    _inherits(TableRow, _Component);
    function TableRow(props) {
      var _this = this;
      _classCallCheck(this, TableRow);
      _get(Object.getPrototypeOf(TableRow.prototype), 'constructor', this).call(this, props);
      this.rowClick = function(e) {
        if (e.target.tagName !== 'INPUT' && e.target.tagName !== 'SELECT' && e.target.tagName !== 'TEXTAREA') {
          (function() {
            var rowIndex = e.currentTarget.rowIndex + 1;
            var _props = _this.props;
            var selectRow = _props.selectRow;
            var unselectableRow = _props.unselectableRow;
            var isSelected = _props.isSelected;
            var onSelectRow = _props.onSelectRow;
            if (selectRow) {
              if (selectRow.clickToSelect && !unselectableRow) {
                onSelectRow(rowIndex, !isSelected, e);
              } else if (selectRow.clickToSelectAndEditCell && !unselectableRow) {
                _this.clickNum++;
                setTimeout(function() {
                  if (_this.clickNum === 1) {
                    onSelectRow(rowIndex, !isSelected, e);
                  }
                  _this.clickNum = 0;
                }, 200);
              }
            }
            if (_this.props.onRowClick)
              _this.props.onRowClick(rowIndex);
          })();
        }
      };
      this.rowMouseOut = function(e) {
        if (_this.props.onRowMouseOut) {
          _this.props.onRowMouseOut(e.currentTarget.rowIndex, e);
        }
      };
      this.rowMouseOver = function(e) {
        if (_this.props.onRowMouseOver) {
          _this.props.onRowMouseOver(e.currentTarget.rowIndex, e);
        }
      };
      this.clickNum = 0;
    }
    _createClass(TableRow, [{
      key: 'render',
      value: function render() {
        this.clickNum = 0;
        var trCss = {
          style: {backgroundColor: this.props.isSelected ? this.props.selectRow.bgColor : null},
          className: (0, _classnames2['default'])(this.props.isSelected ? this.props.selectRow.className : null, this.props.className)
        };
        if (this.props.selectRow && (this.props.selectRow.clickToSelect || this.props.selectRow.clickToSelectAndEditCell) || this.props.onRowClick) {
          return _react2['default'].createElement('tr', _extends({}, trCss, {
            onMouseOver: this.rowMouseOver,
            onMouseOut: this.rowMouseOut,
            onClick: this.rowClick
          }), this.props.children);
        } else {
          return _react2['default'].createElement('tr', trCss, this.props.children);
        }
      }
    }]);
    return TableRow;
  })(_react.Component);
  TableRow.propTypes = {
    isSelected: _react.PropTypes.bool,
    enableCellEdit: _react.PropTypes.bool,
    onRowClick: _react.PropTypes.func,
    onSelectRow: _react.PropTypes.func,
    onRowMouseOut: _react.PropTypes.func,
    onRowMouseOver: _react.PropTypes.func,
    unselectableRow: _react.PropTypes.bool
  };
  TableRow.defaultProps = {onRowClick: undefined};
  exports['default'] = TableRow;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/TableColumn.js", ["npm:react@15.3.0.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var TableColumn = (function(_Component) {
    _inherits(TableColumn, _Component);
    function TableColumn(props) {
      var _this = this;
      _classCallCheck(this, TableColumn);
      _get(Object.getPrototypeOf(TableColumn.prototype), 'constructor', this).call(this, props);
      this.handleCellEdit = function(e) {
        if (_this.props.cellEdit.mode === _Const2['default'].CELL_EDIT_DBCLICK) {
          if (document.selection && document.selection.empty) {
            document.selection.empty();
          } else if (window.getSelection) {
            var sel = window.getSelection();
            sel.removeAllRanges();
          }
        }
        _this.props.onEdit(e.currentTarget.parentElement.rowIndex + 1, e.currentTarget.cellIndex, e);
      };
    }
    _createClass(TableColumn, [{
      key: 'shouldComponentUpdate',
      value: function shouldComponentUpdate(nextProps, nextState) {
        var children = this.props.children;
        var shouldUpdated = this.props.width !== nextProps.width || this.props.className !== nextProps.className || this.props.hidden !== nextProps.hidden || this.props.dataAlign !== nextProps.dataAlign || typeof children !== typeof nextProps.children || ('' + this.props.onEdit).toString() !== ('' + nextProps.onEdit).toString();
        if (shouldUpdated) {
          return shouldUpdated;
        }
        if (typeof children === 'object' && children !== null && children.props !== null) {
          if (children.props.type === 'checkbox' || children.props.type === 'radio') {
            shouldUpdated = shouldUpdated || children.props.type !== nextProps.children.props.type || children.props.checked !== nextProps.children.props.checked;
          } else {
            shouldUpdated = true;
          }
        } else {
          shouldUpdated = shouldUpdated || children !== nextProps.children;
        }
        if (shouldUpdated) {
          return shouldUpdated;
        }
        if (!(this.props.cellEdit && nextProps.cellEdit)) {
          return false;
        } else {
          return shouldUpdated || this.props.cellEdit.mode !== nextProps.cellEdit.mode;
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var tdStyle = {
          textAlign: this.props.dataAlign,
          display: this.props.hidden ? 'none' : null
        };
        var opts = {};
        if (this.props.cellEdit) {
          if (this.props.cellEdit.mode === _Const2['default'].CELL_EDIT_CLICK) {
            opts.onClick = this.handleCellEdit;
          } else if (this.props.cellEdit.mode === _Const2['default'].CELL_EDIT_DBCLICK) {
            opts.onDoubleClick = this.handleCellEdit;
          }
        }
        return _react2['default'].createElement('td', _extends({
          style: tdStyle,
          title: this.props.columnTitle,
          className: this.props.className
        }, opts), this.props.children);
      }
    }]);
    return TableColumn;
  })(_react.Component);
  TableColumn.propTypes = {
    dataAlign: _react.PropTypes.string,
    hidden: _react.PropTypes.bool,
    className: _react.PropTypes.string,
    columnTitle: _react.PropTypes.string,
    children: _react.PropTypes.node
  };
  TableColumn.defaultProps = {
    dataAlign: 'left',
    hidden: false,
    className: ''
  };
  exports['default'] = TableColumn;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/TableEditColumn.js", ["npm:react@15.3.0.js", "npm:react-bootstrap-table@2.4.2/lib/Editor.js", "npm:react-bootstrap-table@2.4.2/lib/Notification.js", "npm:classnames@2.2.5.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _Editor = $__require('npm:react-bootstrap-table@2.4.2/lib/Editor.js');
  var _Editor2 = _interopRequireDefault(_Editor);
  var _NotificationJs = $__require('npm:react-bootstrap-table@2.4.2/lib/Notification.js');
  var _NotificationJs2 = _interopRequireDefault(_NotificationJs);
  var _classnames = $__require('npm:classnames@2.2.5.js');
  var _classnames2 = _interopRequireDefault(_classnames);
  var TableEditColumn = (function(_Component) {
    _inherits(TableEditColumn, _Component);
    function TableEditColumn(props) {
      var _this = this;
      _classCallCheck(this, TableEditColumn);
      _get(Object.getPrototypeOf(TableEditColumn.prototype), 'constructor', this).call(this, props);
      this.handleKeyPress = function(e) {
        if (e.keyCode === 13) {
          var value = e.currentTarget.type === 'checkbox' ? _this._getCheckBoxValue(e) : e.currentTarget.value;
          if (!_this.validator(value)) {
            return;
          }
          _this.props.completeEdit(value, _this.props.rowIndex, _this.props.colIndex);
        } else if (e.keyCode === 27) {
          _this.props.completeEdit(null, _this.props.rowIndex, _this.props.colIndex);
        } else if (e.type === 'click') {
          var value = e.target.parentElement.firstChild.value;
          if (!_this.validator(value)) {
            return;
          }
          _this.props.completeEdit(value, _this.props.rowIndex, _this.props.colIndex);
        }
      };
      this.handleBlur = function(e) {
        e.stopPropagation();
        if (_this.props.blurToSave) {
          var value = e.currentTarget.type === 'checkbox' ? _this._getCheckBoxValue(e) : e.currentTarget.value;
          if (!_this.validator(value)) {
            return;
          }
          _this.props.completeEdit(value, _this.props.rowIndex, _this.props.colIndex);
        }
      };
      this.handleCustomUpdate = function(value) {
        _this.props.completeEdit(value, _this.props.rowIndex, _this.props.colIndex);
      };
      this.timeouteClear = 0;
      this.state = {shakeEditor: false};
    }
    _createClass(TableEditColumn, [{
      key: 'validator',
      value: function validator(value) {
        var ts = this;
        if (ts.props.editable.validator) {
          var valid = ts.props.editable.validator(value);
          if (valid !== true) {
            ts.refs.notifier.notice('error', valid, 'Pressed ESC can cancel');
            var input = ts.refs.inputRef;
            ts.clearTimeout();
            ts.setState({shakeEditor: true});
            ts.timeouteClear = setTimeout(function() {
              ts.setState({shakeEditor: false});
            }, 300);
            input.focus();
            return false;
          }
        }
        return true;
      }
    }, {
      key: 'clearTimeout',
      value: (function(_clearTimeout) {
        function clearTimeout() {
          return _clearTimeout.apply(this, arguments);
        }
        clearTimeout.toString = function() {
          return _clearTimeout.toString();
        };
        return clearTimeout;
      })(function() {
        if (this.timeouteClear !== 0) {
          clearTimeout(this.timeouteClear);
          this.timeouteClear = 0;
        }
      })
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.refs.inputRef.focus();
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this.clearTimeout();
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props;
        var editable = _props.editable;
        var format = _props.format;
        var fieldValue = _props.fieldValue;
        var customEditor = _props.customEditor;
        var shakeEditor = this.state.shakeEditor;
        var attr = {
          ref: 'inputRef',
          onKeyDown: this.handleKeyPress,
          onBlur: this.handleBlur
        };
        editable.placeholder && (attr.placeholder = editable.placeholder);
        var editorClass = (0, _classnames2['default'])({
          'animated': shakeEditor,
          'shake': shakeEditor
        });
        var cellEditor = undefined;
        if (customEditor) {
          var customEditorProps = _extends({row: this.props.row}, attr, {defaultValue: fieldValue || ''}, customEditor.customEditorParameters);
          cellEditor = customEditor.getElement(this.handleCustomUpdate, customEditorProps);
        } else {
          cellEditor = (0, _Editor2['default'])(editable, attr, format, editorClass, fieldValue || '');
        }
        return _react2['default'].createElement('td', {
          ref: 'td',
          style: {position: 'relative'}
        }, cellEditor, _react2['default'].createElement(_NotificationJs2['default'], {ref: 'notifier'}));
      }
    }, {
      key: '_getCheckBoxValue',
      value: function _getCheckBoxValue(e) {
        var value = '';
        var values = e.currentTarget.value.split(':');
        value = e.currentTarget.checked ? values[0] : values[1];
        return value;
      }
    }]);
    return TableEditColumn;
  })(_react.Component);
  TableEditColumn.propTypes = {
    completeEdit: _react.PropTypes.func,
    rowIndex: _react.PropTypes.number,
    colIndex: _react.PropTypes.number,
    blurToSave: _react.PropTypes.bool,
    editable: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object]),
    format: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.func]),
    row: _react.PropTypes.any,
    fieldValue: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.bool, _react.PropTypes.number, _react.PropTypes.array, _react.PropTypes.object])
  };
  exports['default'] = TableEditColumn;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/TableBody.js", ["npm:react@15.3.0.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js", "npm:react-bootstrap-table@2.4.2/lib/TableRow.js", "npm:react-bootstrap-table@2.4.2/lib/TableColumn.js", "npm:react-bootstrap-table@2.4.2/lib/TableEditColumn.js", "npm:classnames@2.2.5.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x3, _x4, _x5) {
    var _again = true;
    _function: while (_again) {
      var object = _x3,
          property = _x4,
          receiver = _x5;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x3 = parent;
          _x4 = property;
          _x5 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var _TableRow = $__require('npm:react-bootstrap-table@2.4.2/lib/TableRow.js');
  var _TableRow2 = _interopRequireDefault(_TableRow);
  var _TableColumn = $__require('npm:react-bootstrap-table@2.4.2/lib/TableColumn.js');
  var _TableColumn2 = _interopRequireDefault(_TableColumn);
  var _TableEditColumn = $__require('npm:react-bootstrap-table@2.4.2/lib/TableEditColumn.js');
  var _TableEditColumn2 = _interopRequireDefault(_TableEditColumn);
  var _classnames = $__require('npm:classnames@2.2.5.js');
  var _classnames2 = _interopRequireDefault(_classnames);
  var isFun = function isFun(obj) {
    return obj && typeof obj === 'function';
  };
  var TableBody = (function(_Component) {
    _inherits(TableBody, _Component);
    function TableBody(props) {
      var _this = this;
      _classCallCheck(this, TableBody);
      _get(Object.getPrototypeOf(TableBody.prototype), 'constructor', this).call(this, props);
      this.handleRowMouseOut = function(rowIndex, event) {
        var targetRow = _this.props.data[rowIndex];
        _this.props.onRowMouseOut(targetRow, event);
      };
      this.handleRowMouseOver = function(rowIndex, event) {
        var targetRow = _this.props.data[rowIndex];
        _this.props.onRowMouseOver(targetRow, event);
      };
      this.handleRowClick = function(rowIndex) {
        var selectedRow = undefined;
        var _props = _this.props;
        var data = _props.data;
        var onRowClick = _props.onRowClick;
        data.forEach(function(row, i) {
          if (i === rowIndex - 1) {
            selectedRow = row;
          }
        });
        onRowClick(selectedRow);
      };
      this.handleSelectRow = function(rowIndex, isSelected, e) {
        var selectedRow = undefined;
        var _props2 = _this.props;
        var data = _props2.data;
        var onSelectRow = _props2.onSelectRow;
        data.forEach(function(row, i) {
          if (i === rowIndex - 1) {
            selectedRow = row;
            return false;
          }
        });
        onSelectRow(selectedRow, isSelected, e);
      };
      this.handleSelectRowColumChange = function(e, rowIndex) {
        if (!_this.props.selectRow.clickToSelect || !_this.props.selectRow.clickToSelectAndEditCell) {
          _this.handleSelectRow(rowIndex + 1, e.currentTarget.checked, e);
        }
      };
      this.handleEditCell = function(rowIndex, columnIndex, e) {
        _this.editing = true;
        if (_this._isSelectRowDefined()) {
          columnIndex--;
          if (_this.props.selectRow.hideSelectColumn)
            columnIndex++;
        }
        rowIndex--;
        var stateObj = {currEditCell: {
            rid: rowIndex,
            cid: columnIndex
          }};
        if (_this.props.selectRow.clickToSelectAndEditCell && _this.props.cellEdit.mode !== _Const2['default'].CELL_EDIT_DBCLICK) {
          var selected = _this.props.selectedRowKeys.indexOf(_this.props.data[rowIndex][_this.props.keyField]) !== -1;
          _this.handleSelectRow(rowIndex + 1, !selected, e);
        }
        _this.setState(stateObj);
      };
      this.handleCompleteEditCell = function(newVal, rowIndex, columnIndex) {
        _this.setState({currEditCell: null});
        if (newVal !== null) {
          _this.props.cellEdit.__onCompleteEdit__(newVal, rowIndex, columnIndex);
        }
      };
      this.state = {currEditCell: null};
      this.editing = false;
    }
    _createClass(TableBody, [{
      key: 'render',
      value: function render() {
        var tableClasses = (0, _classnames2['default'])('table', {
          'table-striped': this.props.striped,
          'table-bordered': this.props.bordered,
          'table-hover': this.props.hover,
          'table-condensed': this.props.condensed
        }, this.props.tableBodyClass);
        var unselectable = this.props.selectRow.unselectable || [];
        var isSelectRowDefined = this._isSelectRowDefined();
        var tableHeader = this.renderTableHeader(isSelectRowDefined);
        var inputType = this.props.selectRow.mode === _Const2['default'].ROW_SELECT_SINGLE ? 'radio' : 'checkbox';
        var CustomComponent = this.props.selectRow.customComponent;
        var tableRows = this.props.data.map(function(data, r) {
          var tableColumns = this.props.columns.map(function(column, i) {
            var fieldValue = data[column.name];
            if (this.editing && column.name !== this.props.keyField && column.editable && this.state.currEditCell !== null && this.state.currEditCell.rid === r && this.state.currEditCell.cid === i) {
              var editable = column.editable;
              var format = column.format ? function(value) {
                return column.format(value, data, column.formatExtraData, r).replace(/<.*?>/g, '');
              } : false;
              if (isFun(column.editable)) {
                editable = column.editable(fieldValue, data, r, i);
              }
              return _react2['default'].createElement(_TableEditColumn2['default'], {
                completeEdit: this.handleCompleteEditCell,
                editable: editable,
                customEditor: column.customEditor,
                format: column.format ? format : false,
                key: i,
                blurToSave: this.props.cellEdit.blurToSave,
                rowIndex: r,
                colIndex: i,
                row: data,
                fieldValue: fieldValue
              });
            } else {
              var columnChild = fieldValue;
              var columnTitle = null;
              var tdClassName = column.className;
              if (isFun(column.className)) {
                tdClassName = column.className(fieldValue, data, r, i);
              }
              if (typeof column.format !== 'undefined') {
                var formattedValue = column.format(fieldValue, data, column.formatExtraData, r);
                if (!_react2['default'].isValidElement(formattedValue)) {
                  columnChild = _react2['default'].createElement('div', {dangerouslySetInnerHTML: {__html: formattedValue}});
                } else {
                  columnChild = formattedValue;
                  columnTitle = column.columnTitle && formattedValue ? formattedValue.toString() : null;
                }
              } else {
                columnTitle = column.columnTitle && fieldValue ? fieldValue.toString() : null;
              }
              return _react2['default'].createElement(_TableColumn2['default'], {
                key: i,
                dataAlign: column.align,
                className: tdClassName,
                columnTitle: columnTitle,
                cellEdit: this.props.cellEdit,
                hidden: column.hidden,
                onEdit: this.handleEditCell,
                width: column.width
              }, columnChild);
            }
          }, this);
          var key = data[this.props.keyField];
          var disable = unselectable.indexOf(key) !== -1;
          var selected = this.props.selectedRowKeys.indexOf(key) !== -1;
          var selectRowColumn = isSelectRowDefined && !this.props.selectRow.hideSelectColumn ? this.renderSelectRowColumn(selected, inputType, disable, CustomComponent, r) : null;
          var trClassName = this.props.trClassName;
          if (isFun(this.props.trClassName)) {
            trClassName = this.props.trClassName(data, r);
          }
          return _react2['default'].createElement(_TableRow2['default'], {
            isSelected: selected,
            key: key,
            className: trClassName,
            selectRow: isSelectRowDefined ? this.props.selectRow : undefined,
            enableCellEdit: this.props.cellEdit.mode !== _Const2['default'].CELL_EDIT_NONE,
            onRowClick: this.handleRowClick,
            onRowMouseOver: this.handleRowMouseOver,
            onRowMouseOut: this.handleRowMouseOut,
            onSelectRow: this.handleSelectRow,
            unselectableRow: disable
          }, selectRowColumn, tableColumns);
        }, this);
        if (tableRows.length === 0) {
          tableRows.push(_react2['default'].createElement(_TableRow2['default'], {key: '##table-empty##'}, _react2['default'].createElement('td', {
            colSpan: this.props.columns.length + (isSelectRowDefined ? 1 : 0),
            className: 'react-bs-table-no-data'
          }, this.props.noDataText || _Const2['default'].NO_DATA_TEXT)));
        }
        this.editing = false;
        return _react2['default'].createElement('div', {
          ref: 'container',
          className: 'react-bs-container-body',
          style: this.props.style
        }, _react2['default'].createElement('table', {className: tableClasses}, tableHeader, _react2['default'].createElement('tbody', {ref: 'tbody'}, tableRows)));
      }
    }, {
      key: 'renderTableHeader',
      value: function renderTableHeader(isSelectRowDefined) {
        var selectRowHeader = null;
        if (isSelectRowDefined) {
          var style = {
            width: 30,
            minWidth: 30
          };
          if (!this.props.selectRow.hideSelectColumn) {
            selectRowHeader = _react2['default'].createElement('col', {
              style: style,
              key: -1
            });
          }
        }
        var theader = this.props.columns.map(function(column, i) {
          var style = {display: column.hidden ? 'none' : null};
          if (column.width) {
            var width = parseInt(column.width, 10);
            style.width = width;
            style.minWidth = width;
          }
          return _react2['default'].createElement('col', {
            style: style,
            key: i,
            className: column.className
          });
        });
        return _react2['default'].createElement('colgroup', {ref: 'header'}, selectRowHeader, theader);
      }
    }, {
      key: 'renderSelectRowColumn',
      value: function renderSelectRowColumn(selected, inputType, disabled) {
        var _this2 = this;
        var CustomComponent = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];
        var rowIndex = arguments.length <= 4 || arguments[4] === undefined ? null : arguments[4];
        return _react2['default'].createElement(_TableColumn2['default'], {dataAlign: 'center'}, CustomComponent ? _react2['default'].createElement(CustomComponent, {
          type: inputType,
          checked: selected,
          disabled: disabled,
          rowIndex: rowIndex,
          onChange: function(e) {
            return _this2.handleSelectRowColumChange(e, e.currentTarget.parentElement.parentElement.parentElement.rowIndex);
          }
        }) : _react2['default'].createElement('input', {
          type: inputType,
          checked: selected,
          disabled: disabled,
          onChange: function(e) {
            return _this2.handleSelectRowColumChange(e, e.currentTarget.parentElement.parentElement.rowIndex);
          }
        }));
      }
    }, {
      key: '_isSelectRowDefined',
      value: function _isSelectRowDefined() {
        return this.props.selectRow.mode === _Const2['default'].ROW_SELECT_SINGLE || this.props.selectRow.mode === _Const2['default'].ROW_SELECT_MULTI;
      }
    }]);
    return TableBody;
  })(_react.Component);
  TableBody.propTypes = {
    data: _react.PropTypes.array,
    columns: _react.PropTypes.array,
    striped: _react.PropTypes.bool,
    bordered: _react.PropTypes.bool,
    hover: _react.PropTypes.bool,
    condensed: _react.PropTypes.bool,
    keyField: _react.PropTypes.string,
    selectedRowKeys: _react.PropTypes.array,
    onRowClick: _react.PropTypes.func,
    onSelectRow: _react.PropTypes.func,
    noDataText: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.object]),
    style: _react.PropTypes.object,
    tableBodyClass: _react.PropTypes.string
  };
  exports['default'] = TableBody;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/pagination/PageButton.js", ["npm:react@15.3.0.js", "npm:classnames@2.2.5.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _classnames = $__require('npm:classnames@2.2.5.js');
  var _classnames2 = _interopRequireDefault(_classnames);
  var PageButton = (function(_Component) {
    _inherits(PageButton, _Component);
    function PageButton(props) {
      var _this = this;
      _classCallCheck(this, PageButton);
      _get(Object.getPrototypeOf(PageButton.prototype), 'constructor', this).call(this, props);
      this.pageBtnClick = function(e) {
        e.preventDefault();
        _this.props.changePage(e.currentTarget.textContent);
      };
    }
    _createClass(PageButton, [{
      key: 'render',
      value: function render() {
        var classes = (0, _classnames2['default'])({
          'active': this.props.active,
          'disabled': this.props.disable,
          'hidden': this.props.hidden
        });
        return _react2['default'].createElement('li', {className: classes}, _react2['default'].createElement('a', {
          href: '#',
          onClick: this.pageBtnClick
        }, this.props.children));
      }
    }]);
    return PageButton;
  })(_react.Component);
  PageButton.propTypes = {
    changePage: _react.PropTypes.func,
    active: _react.PropTypes.bool,
    disable: _react.PropTypes.bool,
    hidden: _react.PropTypes.bool,
    children: _react.PropTypes.node
  };
  exports['default'] = PageButton;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/pagination/PaginationList.js", ["npm:react@15.3.0.js", "npm:react-bootstrap-table@2.4.2/lib/pagination/PageButton.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _PageButtonJs = $__require('npm:react-bootstrap-table@2.4.2/lib/pagination/PageButton.js');
  var _PageButtonJs2 = _interopRequireDefault(_PageButtonJs);
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var PaginationList = (function(_Component) {
    _inherits(PaginationList, _Component);
    function PaginationList() {
      var _this = this;
      _classCallCheck(this, PaginationList);
      _get(Object.getPrototypeOf(PaginationList.prototype), 'constructor', this).apply(this, arguments);
      this.changePage = function(page) {
        var _props = _this.props;
        var pageStartIndex = _props.pageStartIndex;
        var prePage = _props.prePage;
        var currPage = _props.currPage;
        var nextPage = _props.nextPage;
        var lastPage = _props.lastPage;
        var firstPage = _props.firstPage;
        var sizePerPage = _props.sizePerPage;
        if (page === prePage) {
          page = currPage - 1 < pageStartIndex ? pageStartIndex : currPage - 1;
        } else if (page === nextPage) {
          page = currPage + 1 > _this.lastPage ? _this.lastPage : currPage + 1;
        } else if (page === lastPage) {
          page = _this.lastPage;
        } else if (page === firstPage) {
          page = pageStartIndex;
        } else {
          page = parseInt(page, 10);
        }
        if (page !== currPage) {
          _this.props.changePage(page, sizePerPage);
        }
      };
      this.changeSizePerPage = function(e) {
        e.preventDefault();
        var selectSize = parseInt(e.currentTarget.text, 10);
        var currPage = _this.props.currPage;
        if (selectSize !== _this.props.sizePerPage) {
          _this.totalPages = Math.ceil(_this.props.dataSize / selectSize);
          _this.lastPage = _this.props.pageStartIndex + _this.totalPages - 1;
          if (currPage > _this.lastPage)
            currPage = _this.lastPage;
          _this.props.changePage(currPage, selectSize);
          if (_this.props.onSizePerPageList) {
            _this.props.onSizePerPageList(selectSize);
          }
        }
      };
    }
    _createClass(PaginationList, [{
      key: 'render',
      value: function render() {
        var _this2 = this;
        var _props2 = this.props;
        var currPage = _props2.currPage;
        var dataSize = _props2.dataSize;
        var sizePerPage = _props2.sizePerPage;
        var sizePerPageList = _props2.sizePerPageList;
        var paginationShowsTotal = _props2.paginationShowsTotal;
        var pageStartIndex = _props2.pageStartIndex;
        var hideSizePerPage = _props2.hideSizePerPage;
        this.totalPages = Math.ceil(dataSize / sizePerPage);
        this.lastPage = this.props.pageStartIndex + this.totalPages - 1;
        var pageBtns = this.makePage();
        var pageListStyle = {
          float: 'right',
          marginTop: '0px'
        };
        var sizePerPageOptions = sizePerPageList.map(function(_sizePerPage) {
          return _react2['default'].createElement('li', {
            key: _sizePerPage,
            role: 'presentation'
          }, _react2['default'].createElement('a', {
            role: 'menuitem',
            tabIndex: '-1',
            href: '#',
            onClick: _this2.changeSizePerPage
          }, _sizePerPage));
        });
        var offset = Math.abs(_Const2['default'].PAGE_START_INDEX - pageStartIndex);
        var start = (currPage - pageStartIndex) * sizePerPage;
        var to = Math.min(sizePerPage * (currPage + offset) - 1, dataSize);
        var total = paginationShowsTotal ? _react2['default'].createElement('span', null, 'Showing rows ', start, ' to ', to, ' of ', dataSize) : null;
        if (typeof paginationShowsTotal === 'function') {
          total = paginationShowsTotal(start, to, dataSize);
        }
        var dropDownStyle = {visibility: hideSizePerPage ? 'hidden' : 'visible'};
        return _react2['default'].createElement('div', {
          className: 'row',
          style: {marginTop: 15}
        }, sizePerPageList.length > 1 ? _react2['default'].createElement('div', null, _react2['default'].createElement('div', {className: 'col-md-6'}, total, ' ', _react2['default'].createElement('span', {
          className: 'dropdown',
          style: dropDownStyle
        }, _react2['default'].createElement('button', {
          className: 'btn btn-default dropdown-toggle',
          type: 'button',
          id: 'pageDropDown',
          'data-toggle': 'dropdown',
          'aria-expanded': 'true'
        }, sizePerPage, _react2['default'].createElement('span', null, ' ', _react2['default'].createElement('span', {className: 'caret'}))), _react2['default'].createElement('ul', {
          className: 'dropdown-menu',
          role: 'menu',
          'aria-labelledby': 'pageDropDown'
        }, sizePerPageOptions))), _react2['default'].createElement('div', {className: 'col-md-6'}, _react2['default'].createElement('ul', {
          className: 'pagination',
          style: pageListStyle
        }, pageBtns))) : _react2['default'].createElement('div', null, _react2['default'].createElement('div', {className: 'col-md-6'}, total), _react2['default'].createElement('div', {className: 'col-md-6'}, _react2['default'].createElement('ul', {
          className: 'pagination',
          style: pageListStyle
        }, pageBtns))));
      }
    }, {
      key: 'makePage',
      value: function makePage() {
        var pages = this.getPages();
        return pages.map(function(page) {
          var isActive = page === this.props.currPage;
          var disabled = false;
          var hidden = false;
          if (this.props.currPage === this.props.pageStartIndex && (page === this.props.firstPage || page === this.props.prePage)) {
            disabled = true;
            hidden = true;
          }
          if (this.props.currPage === this.lastPage && (page === this.props.nextPage || page === this.props.lastPage)) {
            disabled = true;
            hidden = true;
          }
          return _react2['default'].createElement(_PageButtonJs2['default'], {
            key: page,
            changePage: this.changePage,
            active: isActive,
            disable: disabled,
            hidden: hidden
          }, page);
        }, this);
      }
    }, {
      key: 'getPages',
      value: function getPages() {
        var pages = undefined;
        var endPage = this.totalPages;
        if (endPage <= 0)
          return [];
        var startPage = Math.max(this.props.currPage - Math.floor(this.props.paginationSize / 2), this.props.pageStartIndex);
        endPage = startPage + this.props.paginationSize - 1;
        if (endPage > this.lastPage) {
          endPage = this.lastPage;
          startPage = endPage - this.props.paginationSize + 1;
        }
        if (startPage !== this.props.pageStartIndex && this.totalPages > this.props.paginationSize) {
          pages = [this.props.firstPage, this.props.prePage];
        } else if (this.totalPages > 1) {
          pages = [this.props.prePage];
        } else {
          pages = [];
        }
        for (var i = startPage; i <= endPage; i++) {
          if (i >= this.props.pageStartIndex)
            pages.push(i);
        }
        if (endPage < this.lastPage) {
          pages.push(this.props.nextPage);
          pages.push(this.props.lastPage);
        } else if (endPage === this.lastPage && this.props.currPage !== this.lastPage) {
          pages.push(this.props.nextPage);
        }
        return pages;
      }
    }]);
    return PaginationList;
  })(_react.Component);
  PaginationList.propTypes = {
    currPage: _react.PropTypes.number,
    sizePerPage: _react.PropTypes.number,
    dataSize: _react.PropTypes.number,
    changePage: _react.PropTypes.func,
    sizePerPageList: _react.PropTypes.array,
    paginationShowsTotal: _react.PropTypes.bool,
    paginationSize: _react.PropTypes.number,
    remote: _react.PropTypes.bool,
    onSizePerPageList: _react.PropTypes.func,
    prePage: _react.PropTypes.string,
    pageStartIndex: _react.PropTypes.number,
    hideSizePerPage: _react.PropTypes.bool
  };
  PaginationList.defaultProps = {
    sizePerPage: _Const2['default'].SIZE_PER_PAGE,
    pageStartIndex: _Const2['default'].PAGE_START_INDEX
  };
  exports['default'] = PaginationList;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/Editor.js", ["npm:react@15.3.0.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    Object.defineProperty(exports, '__esModule', {value: true});
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    var _react = $__require('npm:react@15.3.0.js');
    var _react2 = _interopRequireDefault(_react);
    var editor = function editor(editable, attr, format, editorClass, defaultValue, ignoreEditable) {
      if (editable === true || editable === false && ignoreEditable || typeof editable === 'string') {
        var type = editable ? 'text' : editable;
        return _react2['default'].createElement('input', _extends({}, attr, {
          type: type,
          defaultValue: defaultValue,
          className: (editorClass || '') + ' form-control editor edit-text'
        }));
      } else if (!editable) {
        var type = editable ? 'text' : editable;
        return _react2['default'].createElement('input', _extends({}, attr, {
          type: type,
          defaultValue: defaultValue,
          disabled: 'disabled',
          className: (editorClass || '') + ' form-control editor edit-text'
        }));
      } else if (editable && (editable.type === undefined || editable.type === null || editable.type.trim() === '')) {
        var type = editable ? 'text' : editable;
        return _react2['default'].createElement('input', _extends({}, attr, {
          type: type,
          defaultValue: defaultValue,
          className: (editorClass || '') + ' form-control editor edit-text'
        }));
      } else if (editable.type) {
        editable.style && (attr.style = editable.style);
        attr.className = (editorClass || '') + ' form-control editor edit-' + editable.type + (editable.className ? ' ' + editable.className : '');
        if (editable.type === 'select') {
          var options = [];
          var values = editable.options.values;
          if (Array.isArray(values)) {
            (function() {
              var rowValue = undefined;
              options = values.map(function(d, i) {
                rowValue = format ? format(d) : d;
                return _react2['default'].createElement('option', {
                  key: 'option' + i,
                  value: d
                }, rowValue);
              });
            })();
          }
          return _react2['default'].createElement('select', _extends({}, attr, {defaultValue: defaultValue}), options);
        } else if (editable.type === 'textarea') {
          var _ret2 = (function() {
            editable.cols && (attr.cols = editable.cols);
            editable.rows && (attr.rows = editable.rows);
            var saveBtn = undefined;
            var keyUpHandler = attr.onKeyDown;
            if (keyUpHandler) {
              attr.onKeyDown = function(e) {
                if (e.keyCode !== 13) {
                  keyUpHandler(e);
                }
              };
              saveBtn = _react2['default'].createElement('button', {
                className: 'btn btn-info btn-xs textarea-save-btn',
                onClick: keyUpHandler
              }, 'save');
            }
            return {v: _react2['default'].createElement('div', null, _react2['default'].createElement('textarea', _extends({}, attr, {defaultValue: defaultValue})), saveBtn)};
          })();
          if (typeof _ret2 === 'object')
            return _ret2.v;
        } else if (editable.type === 'checkbox') {
          var values = 'true:false';
          if (editable.options && editable.options.values) {
            values = editable.options.values;
          }
          attr.className = attr.className.replace('form-control', '');
          attr.className += ' checkbox pull-right';
          var checked = defaultValue && defaultValue.toString() === values.split(':')[0] ? true : false;
          return _react2['default'].createElement('input', _extends({}, attr, {
            type: 'checkbox',
            value: values,
            defaultChecked: checked
          }));
        } else if (editable.type === 'datetime') {
          return _react2['default'].createElement('input', _extends({}, attr, {
            type: 'datetime-local',
            defaultValue: defaultValue
          }));
        } else {
          return _react2['default'].createElement('input', _extends({}, attr, {
            type: 'text',
            defaultValue: defaultValue
          }));
        }
      }
      return _react2['default'].createElement('input', _extends({}, attr, {
        type: 'text',
        className: (editorClass || '') + ' form-control editor edit-text'
      }));
    };
    exports['default'] = editor;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:lodash@4.15.0/lodash.js", ["@empty"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function(Buffer, process) {
    ;
    (function() {
      var undefined;
      var VERSION = '4.15.0';
      var LARGE_ARRAY_SIZE = 200;
      var FUNC_ERROR_TEXT = 'Expected a function';
      var HASH_UNDEFINED = '__lodash_hash_undefined__';
      var PLACEHOLDER = '__lodash_placeholder__';
      var BIND_FLAG = 1,
          BIND_KEY_FLAG = 2,
          CURRY_BOUND_FLAG = 4,
          CURRY_FLAG = 8,
          CURRY_RIGHT_FLAG = 16,
          PARTIAL_FLAG = 32,
          PARTIAL_RIGHT_FLAG = 64,
          ARY_FLAG = 128,
          REARG_FLAG = 256,
          FLIP_FLAG = 512;
      var UNORDERED_COMPARE_FLAG = 1,
          PARTIAL_COMPARE_FLAG = 2;
      var DEFAULT_TRUNC_LENGTH = 30,
          DEFAULT_TRUNC_OMISSION = '...';
      var HOT_COUNT = 150,
          HOT_SPAN = 16;
      var LAZY_FILTER_FLAG = 1,
          LAZY_MAP_FLAG = 2,
          LAZY_WHILE_FLAG = 3;
      var INFINITY = 1 / 0,
          MAX_SAFE_INTEGER = 9007199254740991,
          MAX_INTEGER = 1.7976931348623157e+308,
          NAN = 0 / 0;
      var MAX_ARRAY_LENGTH = 4294967295,
          MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
          HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
      var wrapFlags = [['ary', ARY_FLAG], ['bind', BIND_FLAG], ['bindKey', BIND_KEY_FLAG], ['curry', CURRY_FLAG], ['curryRight', CURRY_RIGHT_FLAG], ['flip', FLIP_FLAG], ['partial', PARTIAL_FLAG], ['partialRight', PARTIAL_RIGHT_FLAG], ['rearg', REARG_FLAG]];
      var argsTag = '[object Arguments]',
          arrayTag = '[object Array]',
          boolTag = '[object Boolean]',
          dateTag = '[object Date]',
          errorTag = '[object Error]',
          funcTag = '[object Function]',
          genTag = '[object GeneratorFunction]',
          mapTag = '[object Map]',
          numberTag = '[object Number]',
          objectTag = '[object Object]',
          promiseTag = '[object Promise]',
          regexpTag = '[object RegExp]',
          setTag = '[object Set]',
          stringTag = '[object String]',
          symbolTag = '[object Symbol]',
          weakMapTag = '[object WeakMap]',
          weakSetTag = '[object WeakSet]';
      var arrayBufferTag = '[object ArrayBuffer]',
          dataViewTag = '[object DataView]',
          float32Tag = '[object Float32Array]',
          float64Tag = '[object Float64Array]',
          int8Tag = '[object Int8Array]',
          int16Tag = '[object Int16Array]',
          int32Tag = '[object Int32Array]',
          uint8Tag = '[object Uint8Array]',
          uint8ClampedTag = '[object Uint8ClampedArray]',
          uint16Tag = '[object Uint16Array]',
          uint32Tag = '[object Uint32Array]';
      var reEmptyStringLeading = /\b__p \+= '';/g,
          reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
          reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
      var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,
          reUnescapedHtml = /[&<>"'`]/g,
          reHasEscapedHtml = RegExp(reEscapedHtml.source),
          reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
      var reEscape = /<%-([\s\S]+?)%>/g,
          reEvaluate = /<%([\s\S]+?)%>/g,
          reInterpolate = /<%=([\s\S]+?)%>/g;
      var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
          reIsPlainProp = /^\w*$/,
          reLeadingDot = /^\./,
          rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
          reHasRegExpChar = RegExp(reRegExpChar.source);
      var reTrim = /^\s+|\s+$/g,
          reTrimStart = /^\s+/,
          reTrimEnd = /\s+$/;
      var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
          reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
          reSplitDetails = /,? & /;
      var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
      var reEscapeChar = /\\(\\)?/g;
      var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
      var reFlags = /\w*$/;
      var reHasHexPrefix = /^0x/i;
      var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
      var reIsBinary = /^0b[01]+$/i;
      var reIsHostCtor = /^\[object .+?Constructor\]$/;
      var reIsOctal = /^0o[0-7]+$/i;
      var reIsUint = /^(?:0|[1-9]\d*)$/;
      var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
      var reNoMatch = /($^)/;
      var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
      var rsAstralRange = '\\ud800-\\udfff',
          rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
          rsComboSymbolsRange = '\\u20d0-\\u20f0',
          rsDingbatRange = '\\u2700-\\u27bf',
          rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
          rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
          rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
          rsPunctuationRange = '\\u2000-\\u206f',
          rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
          rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
          rsVarRange = '\\ufe0e\\ufe0f',
          rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
      var rsApos = "['\u2019]",
          rsAstral = '[' + rsAstralRange + ']',
          rsBreak = '[' + rsBreakRange + ']',
          rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
          rsDigits = '\\d+',
          rsDingbat = '[' + rsDingbatRange + ']',
          rsLower = '[' + rsLowerRange + ']',
          rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
          rsFitz = '\\ud83c[\\udffb-\\udfff]',
          rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
          rsNonAstral = '[^' + rsAstralRange + ']',
          rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
          rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
          rsUpper = '[' + rsUpperRange + ']',
          rsZWJ = '\\u200d';
      var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',
          rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',
          rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
          rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
          reOptMod = rsModifier + '?',
          rsOptVar = '[' + rsVarRange + ']?',
          rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
          rsSeq = rsOptVar + reOptMod + rsOptJoin,
          rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
          rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
      var reApos = RegExp(rsApos, 'g');
      var reComboMark = RegExp(rsCombo, 'g');
      var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
      var reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')', rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr, rsUpper + '+' + rsOptUpperContr, rsDigits, rsEmoji].join('|'), 'g');
      var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');
      var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
      var contextProps = ['Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object', 'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'];
      var templateCounter = -1;
      var typedArrayTags = {};
      typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
      typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
      var cloneableTags = {};
      cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
      cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
      var deburredLetters = {
        '\xc0': 'A',
        '\xc1': 'A',
        '\xc2': 'A',
        '\xc3': 'A',
        '\xc4': 'A',
        '\xc5': 'A',
        '\xe0': 'a',
        '\xe1': 'a',
        '\xe2': 'a',
        '\xe3': 'a',
        '\xe4': 'a',
        '\xe5': 'a',
        '\xc7': 'C',
        '\xe7': 'c',
        '\xd0': 'D',
        '\xf0': 'd',
        '\xc8': 'E',
        '\xc9': 'E',
        '\xca': 'E',
        '\xcb': 'E',
        '\xe8': 'e',
        '\xe9': 'e',
        '\xea': 'e',
        '\xeb': 'e',
        '\xcc': 'I',
        '\xcd': 'I',
        '\xce': 'I',
        '\xcf': 'I',
        '\xec': 'i',
        '\xed': 'i',
        '\xee': 'i',
        '\xef': 'i',
        '\xd1': 'N',
        '\xf1': 'n',
        '\xd2': 'O',
        '\xd3': 'O',
        '\xd4': 'O',
        '\xd5': 'O',
        '\xd6': 'O',
        '\xd8': 'O',
        '\xf2': 'o',
        '\xf3': 'o',
        '\xf4': 'o',
        '\xf5': 'o',
        '\xf6': 'o',
        '\xf8': 'o',
        '\xd9': 'U',
        '\xda': 'U',
        '\xdb': 'U',
        '\xdc': 'U',
        '\xf9': 'u',
        '\xfa': 'u',
        '\xfb': 'u',
        '\xfc': 'u',
        '\xdd': 'Y',
        '\xfd': 'y',
        '\xff': 'y',
        '\xc6': 'Ae',
        '\xe6': 'ae',
        '\xde': 'Th',
        '\xfe': 'th',
        '\xdf': 'ss',
        '\u0100': 'A',
        '\u0102': 'A',
        '\u0104': 'A',
        '\u0101': 'a',
        '\u0103': 'a',
        '\u0105': 'a',
        '\u0106': 'C',
        '\u0108': 'C',
        '\u010a': 'C',
        '\u010c': 'C',
        '\u0107': 'c',
        '\u0109': 'c',
        '\u010b': 'c',
        '\u010d': 'c',
        '\u010e': 'D',
        '\u0110': 'D',
        '\u010f': 'd',
        '\u0111': 'd',
        '\u0112': 'E',
        '\u0114': 'E',
        '\u0116': 'E',
        '\u0118': 'E',
        '\u011a': 'E',
        '\u0113': 'e',
        '\u0115': 'e',
        '\u0117': 'e',
        '\u0119': 'e',
        '\u011b': 'e',
        '\u011c': 'G',
        '\u011e': 'G',
        '\u0120': 'G',
        '\u0122': 'G',
        '\u011d': 'g',
        '\u011f': 'g',
        '\u0121': 'g',
        '\u0123': 'g',
        '\u0124': 'H',
        '\u0126': 'H',
        '\u0125': 'h',
        '\u0127': 'h',
        '\u0128': 'I',
        '\u012a': 'I',
        '\u012c': 'I',
        '\u012e': 'I',
        '\u0130': 'I',
        '\u0129': 'i',
        '\u012b': 'i',
        '\u012d': 'i',
        '\u012f': 'i',
        '\u0131': 'i',
        '\u0134': 'J',
        '\u0135': 'j',
        '\u0136': 'K',
        '\u0137': 'k',
        '\u0138': 'k',
        '\u0139': 'L',
        '\u013b': 'L',
        '\u013d': 'L',
        '\u013f': 'L',
        '\u0141': 'L',
        '\u013a': 'l',
        '\u013c': 'l',
        '\u013e': 'l',
        '\u0140': 'l',
        '\u0142': 'l',
        '\u0143': 'N',
        '\u0145': 'N',
        '\u0147': 'N',
        '\u014a': 'N',
        '\u0144': 'n',
        '\u0146': 'n',
        '\u0148': 'n',
        '\u014b': 'n',
        '\u014c': 'O',
        '\u014e': 'O',
        '\u0150': 'O',
        '\u014d': 'o',
        '\u014f': 'o',
        '\u0151': 'o',
        '\u0154': 'R',
        '\u0156': 'R',
        '\u0158': 'R',
        '\u0155': 'r',
        '\u0157': 'r',
        '\u0159': 'r',
        '\u015a': 'S',
        '\u015c': 'S',
        '\u015e': 'S',
        '\u0160': 'S',
        '\u015b': 's',
        '\u015d': 's',
        '\u015f': 's',
        '\u0161': 's',
        '\u0162': 'T',
        '\u0164': 'T',
        '\u0166': 'T',
        '\u0163': 't',
        '\u0165': 't',
        '\u0167': 't',
        '\u0168': 'U',
        '\u016a': 'U',
        '\u016c': 'U',
        '\u016e': 'U',
        '\u0170': 'U',
        '\u0172': 'U',
        '\u0169': 'u',
        '\u016b': 'u',
        '\u016d': 'u',
        '\u016f': 'u',
        '\u0171': 'u',
        '\u0173': 'u',
        '\u0174': 'W',
        '\u0175': 'w',
        '\u0176': 'Y',
        '\u0177': 'y',
        '\u0178': 'Y',
        '\u0179': 'Z',
        '\u017b': 'Z',
        '\u017d': 'Z',
        '\u017a': 'z',
        '\u017c': 'z',
        '\u017e': 'z',
        '\u0132': 'IJ',
        '\u0133': 'ij',
        '\u0152': 'Oe',
        '\u0153': 'oe',
        '\u0149': "'n",
        '\u017f': 'ss'
      };
      var htmlEscapes = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&#39;',
        '`': '&#96;'
      };
      var htmlUnescapes = {
        '&amp;': '&',
        '&lt;': '<',
        '&gt;': '>',
        '&quot;': '"',
        '&#39;': "'",
        '&#96;': '`'
      };
      var stringEscapes = {
        '\\': '\\',
        "'": "'",
        '\n': 'n',
        '\r': 'r',
        '\u2028': 'u2028',
        '\u2029': 'u2029'
      };
      var freeParseFloat = parseFloat,
          freeParseInt = parseInt;
      var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
      var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
      var root = freeGlobal || freeSelf || Function('return this')();
      var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
      var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
      var moduleExports = freeModule && freeModule.exports === freeExports;
      var freeProcess = moduleExports && freeGlobal.process;
      var nodeUtil = (function() {
        try {
          return freeProcess && freeProcess.binding('util');
        } catch (e) {}
      }());
      var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
          nodeIsDate = nodeUtil && nodeUtil.isDate,
          nodeIsMap = nodeUtil && nodeUtil.isMap,
          nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
          nodeIsSet = nodeUtil && nodeUtil.isSet,
          nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
      function addMapEntry(map, pair) {
        map.set(pair[0], pair[1]);
        return map;
      }
      function addSetEntry(set, value) {
        set.add(value);
        return set;
      }
      function apply(func, thisArg, args) {
        switch (args.length) {
          case 0:
            return func.call(thisArg);
          case 1:
            return func.call(thisArg, args[0]);
          case 2:
            return func.call(thisArg, args[0], args[1]);
          case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
      }
      function arrayAggregator(array, setter, iteratee, accumulator) {
        var index = -1,
            length = array ? array.length : 0;
        while (++index < length) {
          var value = array[index];
          setter(accumulator, value, iteratee(value), array);
        }
        return accumulator;
      }
      function arrayEach(array, iteratee) {
        var index = -1,
            length = array ? array.length : 0;
        while (++index < length) {
          if (iteratee(array[index], index, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEachRight(array, iteratee) {
        var length = array ? array.length : 0;
        while (length--) {
          if (iteratee(array[length], length, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEvery(array, predicate) {
        var index = -1,
            length = array ? array.length : 0;
        while (++index < length) {
          if (!predicate(array[index], index, array)) {
            return false;
          }
        }
        return true;
      }
      function arrayFilter(array, predicate) {
        var index = -1,
            length = array ? array.length : 0,
            resIndex = 0,
            result = [];
        while (++index < length) {
          var value = array[index];
          if (predicate(value, index, array)) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      function arrayIncludes(array, value) {
        var length = array ? array.length : 0;
        return !!length && baseIndexOf(array, value, 0) > -1;
      }
      function arrayIncludesWith(array, value, comparator) {
        var index = -1,
            length = array ? array.length : 0;
        while (++index < length) {
          if (comparator(value, array[index])) {
            return true;
          }
        }
        return false;
      }
      function arrayMap(array, iteratee) {
        var index = -1,
            length = array ? array.length : 0,
            result = Array(length);
        while (++index < length) {
          result[index] = iteratee(array[index], index, array);
        }
        return result;
      }
      function arrayPush(array, values) {
        var index = -1,
            length = values.length,
            offset = array.length;
        while (++index < length) {
          array[offset + index] = values[index];
        }
        return array;
      }
      function arrayReduce(array, iteratee, accumulator, initAccum) {
        var index = -1,
            length = array ? array.length : 0;
        if (initAccum && length) {
          accumulator = array[++index];
        }
        while (++index < length) {
          accumulator = iteratee(accumulator, array[index], index, array);
        }
        return accumulator;
      }
      function arrayReduceRight(array, iteratee, accumulator, initAccum) {
        var length = array ? array.length : 0;
        if (initAccum && length) {
          accumulator = array[--length];
        }
        while (length--) {
          accumulator = iteratee(accumulator, array[length], length, array);
        }
        return accumulator;
      }
      function arraySome(array, predicate) {
        var index = -1,
            length = array ? array.length : 0;
        while (++index < length) {
          if (predicate(array[index], index, array)) {
            return true;
          }
        }
        return false;
      }
      var asciiSize = baseProperty('length');
      function asciiToArray(string) {
        return string.split('');
      }
      function asciiWords(string) {
        return string.match(reAsciiWord) || [];
      }
      function baseFindKey(collection, predicate, eachFunc) {
        var result;
        eachFunc(collection, function(value, key, collection) {
          if (predicate(value, key, collection)) {
            result = key;
            return false;
          }
        });
        return result;
      }
      function baseFindIndex(array, predicate, fromIndex, fromRight) {
        var length = array.length,
            index = fromIndex + (fromRight ? 1 : -1);
        while ((fromRight ? index-- : ++index < length)) {
          if (predicate(array[index], index, array)) {
            return index;
          }
        }
        return -1;
      }
      function baseIndexOf(array, value, fromIndex) {
        if (value !== value) {
          return baseFindIndex(array, baseIsNaN, fromIndex);
        }
        var index = fromIndex - 1,
            length = array.length;
        while (++index < length) {
          if (array[index] === value) {
            return index;
          }
        }
        return -1;
      }
      function baseIndexOfWith(array, value, fromIndex, comparator) {
        var index = fromIndex - 1,
            length = array.length;
        while (++index < length) {
          if (comparator(array[index], value)) {
            return index;
          }
        }
        return -1;
      }
      function baseIsNaN(value) {
        return value !== value;
      }
      function baseMean(array, iteratee) {
        var length = array ? array.length : 0;
        return length ? (baseSum(array, iteratee) / length) : NAN;
      }
      function baseProperty(key) {
        return function(object) {
          return object == null ? undefined : object[key];
        };
      }
      function basePropertyOf(object) {
        return function(key) {
          return object == null ? undefined : object[key];
        };
      }
      function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
        eachFunc(collection, function(value, index, collection) {
          accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
        });
        return accumulator;
      }
      function baseSortBy(array, comparer) {
        var length = array.length;
        array.sort(comparer);
        while (length--) {
          array[length] = array[length].value;
        }
        return array;
      }
      function baseSum(array, iteratee) {
        var result,
            index = -1,
            length = array.length;
        while (++index < length) {
          var current = iteratee(array[index]);
          if (current !== undefined) {
            result = result === undefined ? current : (result + current);
          }
        }
        return result;
      }
      function baseTimes(n, iteratee) {
        var index = -1,
            result = Array(n);
        while (++index < n) {
          result[index] = iteratee(index);
        }
        return result;
      }
      function baseToPairs(object, props) {
        return arrayMap(props, function(key) {
          return [key, object[key]];
        });
      }
      function baseUnary(func) {
        return function(value) {
          return func(value);
        };
      }
      function baseValues(object, props) {
        return arrayMap(props, function(key) {
          return object[key];
        });
      }
      function cacheHas(cache, key) {
        return cache.has(key);
      }
      function charsStartIndex(strSymbols, chrSymbols) {
        var index = -1,
            length = strSymbols.length;
        while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
        return index;
      }
      function charsEndIndex(strSymbols, chrSymbols) {
        var index = strSymbols.length;
        while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
        return index;
      }
      function countHolders(array, placeholder) {
        var length = array.length,
            result = 0;
        while (length--) {
          if (array[length] === placeholder) {
            result++;
          }
        }
        return result;
      }
      var deburrLetter = basePropertyOf(deburredLetters);
      var escapeHtmlChar = basePropertyOf(htmlEscapes);
      function escapeStringChar(chr) {
        return '\\' + stringEscapes[chr];
      }
      function getValue(object, key) {
        return object == null ? undefined : object[key];
      }
      function hasUnicode(string) {
        return reHasUnicode.test(string);
      }
      function hasUnicodeWord(string) {
        return reHasUnicodeWord.test(string);
      }
      function isHostObject(value) {
        var result = false;
        if (value != null && typeof value.toString != 'function') {
          try {
            result = !!(value + '');
          } catch (e) {}
        }
        return result;
      }
      function iteratorToArray(iterator) {
        var data,
            result = [];
        while (!(data = iterator.next()).done) {
          result.push(data.value);
        }
        return result;
      }
      function mapToArray(map) {
        var index = -1,
            result = Array(map.size);
        map.forEach(function(value, key) {
          result[++index] = [key, value];
        });
        return result;
      }
      function overArg(func, transform) {
        return function(arg) {
          return func(transform(arg));
        };
      }
      function replaceHolders(array, placeholder) {
        var index = -1,
            length = array.length,
            resIndex = 0,
            result = [];
        while (++index < length) {
          var value = array[index];
          if (value === placeholder || value === PLACEHOLDER) {
            array[index] = PLACEHOLDER;
            result[resIndex++] = index;
          }
        }
        return result;
      }
      function setToArray(set) {
        var index = -1,
            result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = value;
        });
        return result;
      }
      function setToPairs(set) {
        var index = -1,
            result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = [value, value];
        });
        return result;
      }
      function stringSize(string) {
        return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
      }
      function stringToArray(string) {
        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
      }
      var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
      function unicodeSize(string) {
        var result = reUnicode.lastIndex = 0;
        while (reUnicode.test(string)) {
          result++;
        }
        return result;
      }
      function unicodeToArray(string) {
        return string.match(reUnicode) || [];
      }
      function unicodeWords(string) {
        return string.match(reUnicodeWord) || [];
      }
      function runInContext(context) {
        context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;
        var Array = context.Array,
            Date = context.Date,
            Error = context.Error,
            Function = context.Function,
            Math = context.Math,
            Object = context.Object,
            RegExp = context.RegExp,
            String = context.String,
            TypeError = context.TypeError;
        var arrayProto = Array.prototype,
            funcProto = Function.prototype,
            objectProto = Object.prototype;
        var coreJsData = context['__core-js_shared__'];
        var maskSrcKey = (function() {
          var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
          return uid ? ('Symbol(src)_1.' + uid) : '';
        }());
        var funcToString = funcProto.toString;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var idCounter = 0;
        var objectCtorString = funcToString.call(Object);
        var objectToString = objectProto.toString;
        var oldDash = root._;
        var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
        var Buffer = moduleExports ? context.Buffer : undefined,
            Symbol = context.Symbol,
            Uint8Array = context.Uint8Array,
            getPrototype = overArg(Object.getPrototypeOf, Object),
            iteratorSymbol = Symbol ? Symbol.iterator : undefined,
            objectCreate = Object.create,
            propertyIsEnumerable = objectProto.propertyIsEnumerable,
            splice = arrayProto.splice,
            spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;
        var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
            ctxNow = Date && Date.now !== root.Date.now && Date.now,
            ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
        var nativeCeil = Math.ceil,
            nativeFloor = Math.floor,
            nativeGetSymbols = Object.getOwnPropertySymbols,
            nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
            nativeIsFinite = context.isFinite,
            nativeJoin = arrayProto.join,
            nativeKeys = overArg(Object.keys, Object),
            nativeMax = Math.max,
            nativeMin = Math.min,
            nativeParseInt = context.parseInt,
            nativeRandom = Math.random,
            nativeReverse = arrayProto.reverse;
        var DataView = getNative(context, 'DataView'),
            Map = getNative(context, 'Map'),
            Promise = getNative(context, 'Promise'),
            Set = getNative(context, 'Set'),
            WeakMap = getNative(context, 'WeakMap'),
            nativeCreate = getNative(Object, 'create');
        var defineProperty = (function() {
          var func = getNative(Object, 'defineProperty'),
              name = getNative.name;
          return (name && name.length > 2) ? func : undefined;
        }());
        var metaMap = WeakMap && new WeakMap;
        var nonEnumShadows = !propertyIsEnumerable.call({'valueOf': 1}, 'valueOf');
        var realNames = {};
        var dataViewCtorString = toSource(DataView),
            mapCtorString = toSource(Map),
            promiseCtorString = toSource(Promise),
            setCtorString = toSource(Set),
            weakMapCtorString = toSource(WeakMap);
        var symbolProto = Symbol ? Symbol.prototype : undefined,
            symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
            symbolToString = symbolProto ? symbolProto.toString : undefined;
        function lodash(value) {
          if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
            if (value instanceof LodashWrapper) {
              return value;
            }
            if (hasOwnProperty.call(value, '__wrapped__')) {
              return wrapperClone(value);
            }
          }
          return new LodashWrapper(value);
        }
        function baseLodash() {}
        function LodashWrapper(value, chainAll) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__chain__ = !!chainAll;
          this.__index__ = 0;
          this.__values__ = undefined;
        }
        lodash.templateSettings = {
          'escape': reEscape,
          'evaluate': reEvaluate,
          'interpolate': reInterpolate,
          'variable': '',
          'imports': {'_': lodash}
        };
        lodash.prototype = baseLodash.prototype;
        lodash.prototype.constructor = lodash;
        LodashWrapper.prototype = baseCreate(baseLodash.prototype);
        LodashWrapper.prototype.constructor = LodashWrapper;
        function LazyWrapper(value) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__dir__ = 1;
          this.__filtered__ = false;
          this.__iteratees__ = [];
          this.__takeCount__ = MAX_ARRAY_LENGTH;
          this.__views__ = [];
        }
        function lazyClone() {
          var result = new LazyWrapper(this.__wrapped__);
          result.__actions__ = copyArray(this.__actions__);
          result.__dir__ = this.__dir__;
          result.__filtered__ = this.__filtered__;
          result.__iteratees__ = copyArray(this.__iteratees__);
          result.__takeCount__ = this.__takeCount__;
          result.__views__ = copyArray(this.__views__);
          return result;
        }
        function lazyReverse() {
          if (this.__filtered__) {
            var result = new LazyWrapper(this);
            result.__dir__ = -1;
            result.__filtered__ = true;
          } else {
            result = this.clone();
            result.__dir__ *= -1;
          }
          return result;
        }
        function lazyValue() {
          var array = this.__wrapped__.value(),
              dir = this.__dir__,
              isArr = isArray(array),
              isRight = dir < 0,
              arrLength = isArr ? array.length : 0,
              view = getView(0, arrLength, this.__views__),
              start = view.start,
              end = view.end,
              length = end - start,
              index = isRight ? end : (start - 1),
              iteratees = this.__iteratees__,
              iterLength = iteratees.length,
              resIndex = 0,
              takeCount = nativeMin(length, this.__takeCount__);
          if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {
            return baseWrapperValue(array, this.__actions__);
          }
          var result = [];
          outer: while (length-- && resIndex < takeCount) {
            index += dir;
            var iterIndex = -1,
                value = array[index];
            while (++iterIndex < iterLength) {
              var data = iteratees[iterIndex],
                  iteratee = data.iteratee,
                  type = data.type,
                  computed = iteratee(value);
              if (type == LAZY_MAP_FLAG) {
                value = computed;
              } else if (!computed) {
                if (type == LAZY_FILTER_FLAG) {
                  continue outer;
                } else {
                  break outer;
                }
              }
            }
            result[resIndex++] = value;
          }
          return result;
        }
        LazyWrapper.prototype = baseCreate(baseLodash.prototype);
        LazyWrapper.prototype.constructor = LazyWrapper;
        function Hash(entries) {
          var index = -1,
              length = entries ? entries.length : 0;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function hashClear() {
          this.__data__ = nativeCreate ? nativeCreate(null) : {};
        }
        function hashDelete(key) {
          return this.has(key) && delete this.__data__[key];
        }
        function hashGet(key) {
          var data = this.__data__;
          if (nativeCreate) {
            var result = data[key];
            return result === HASH_UNDEFINED ? undefined : result;
          }
          return hasOwnProperty.call(data, key) ? data[key] : undefined;
        }
        function hashHas(key) {
          var data = this.__data__;
          return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
        }
        function hashSet(key, value) {
          var data = this.__data__;
          data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
          return this;
        }
        Hash.prototype.clear = hashClear;
        Hash.prototype['delete'] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;
        function ListCache(entries) {
          var index = -1,
              length = entries ? entries.length : 0;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function listCacheClear() {
          this.__data__ = [];
        }
        function listCacheDelete(key) {
          var data = this.__data__,
              index = assocIndexOf(data, key);
          if (index < 0) {
            return false;
          }
          var lastIndex = data.length - 1;
          if (index == lastIndex) {
            data.pop();
          } else {
            splice.call(data, index, 1);
          }
          return true;
        }
        function listCacheGet(key) {
          var data = this.__data__,
              index = assocIndexOf(data, key);
          return index < 0 ? undefined : data[index][1];
        }
        function listCacheHas(key) {
          return assocIndexOf(this.__data__, key) > -1;
        }
        function listCacheSet(key, value) {
          var data = this.__data__,
              index = assocIndexOf(data, key);
          if (index < 0) {
            data.push([key, value]);
          } else {
            data[index][1] = value;
          }
          return this;
        }
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype['delete'] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;
        function MapCache(entries) {
          var index = -1,
              length = entries ? entries.length : 0;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function mapCacheClear() {
          this.__data__ = {
            'hash': new Hash,
            'map': new (Map || ListCache),
            'string': new Hash
          };
        }
        function mapCacheDelete(key) {
          return getMapData(this, key)['delete'](key);
        }
        function mapCacheGet(key) {
          return getMapData(this, key).get(key);
        }
        function mapCacheHas(key) {
          return getMapData(this, key).has(key);
        }
        function mapCacheSet(key, value) {
          getMapData(this, key).set(key, value);
          return this;
        }
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype['delete'] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;
        function SetCache(values) {
          var index = -1,
              length = values ? values.length : 0;
          this.__data__ = new MapCache;
          while (++index < length) {
            this.add(values[index]);
          }
        }
        function setCacheAdd(value) {
          this.__data__.set(value, HASH_UNDEFINED);
          return this;
        }
        function setCacheHas(value) {
          return this.__data__.has(value);
        }
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;
        function Stack(entries) {
          this.__data__ = new ListCache(entries);
        }
        function stackClear() {
          this.__data__ = new ListCache;
        }
        function stackDelete(key) {
          return this.__data__['delete'](key);
        }
        function stackGet(key) {
          return this.__data__.get(key);
        }
        function stackHas(key) {
          return this.__data__.has(key);
        }
        function stackSet(key, value) {
          var cache = this.__data__;
          if (cache instanceof ListCache) {
            var pairs = cache.__data__;
            if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
              pairs.push([key, value]);
              return this;
            }
            cache = this.__data__ = new MapCache(pairs);
          }
          cache.set(key, value);
          return this;
        }
        Stack.prototype.clear = stackClear;
        Stack.prototype['delete'] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;
        function arrayLikeKeys(value, inherited) {
          var result = (isArray(value) || isArguments(value)) ? baseTimes(value.length, String) : [];
          var length = result.length,
              skipIndexes = !!length;
          for (var key in value) {
            if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
              result.push(key);
            }
          }
          return result;
        }
        function assignInDefaults(objValue, srcValue, key, object) {
          if (objValue === undefined || (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            return srcValue;
          }
          return objValue;
        }
        function assignMergeValue(object, key, value) {
          if ((value !== undefined && !eq(object[key], value)) || (typeof key == 'number' && value === undefined && !(key in object))) {
            object[key] = value;
          }
        }
        function assignValue(object, key, value) {
          var objValue = object[key];
          if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || (value === undefined && !(key in object))) {
            object[key] = value;
          }
        }
        function assocIndexOf(array, key) {
          var length = array.length;
          while (length--) {
            if (eq(array[length][0], key)) {
              return length;
            }
          }
          return -1;
        }
        function baseAggregator(collection, setter, iteratee, accumulator) {
          baseEach(collection, function(value, key, collection) {
            setter(accumulator, value, iteratee(value), collection);
          });
          return accumulator;
        }
        function baseAssign(object, source) {
          return object && copyObject(source, keys(source), object);
        }
        function baseAt(object, paths) {
          var index = -1,
              isNil = object == null,
              length = paths.length,
              result = Array(length);
          while (++index < length) {
            result[index] = isNil ? undefined : get(object, paths[index]);
          }
          return result;
        }
        function baseClamp(number, lower, upper) {
          if (number === number) {
            if (upper !== undefined) {
              number = number <= upper ? number : upper;
            }
            if (lower !== undefined) {
              number = number >= lower ? number : lower;
            }
          }
          return number;
        }
        function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
          var result;
          if (customizer) {
            result = object ? customizer(value, key, object, stack) : customizer(value);
          }
          if (result !== undefined) {
            return result;
          }
          if (!isObject(value)) {
            return value;
          }
          var isArr = isArray(value);
          if (isArr) {
            result = initCloneArray(value);
            if (!isDeep) {
              return copyArray(value, result);
            }
          } else {
            var tag = getTag(value),
                isFunc = tag == funcTag || tag == genTag;
            if (isBuffer(value)) {
              return cloneBuffer(value, isDeep);
            }
            if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
              if (isHostObject(value)) {
                return object ? value : {};
              }
              result = initCloneObject(isFunc ? {} : value);
              if (!isDeep) {
                return copySymbols(value, baseAssign(result, value));
              }
            } else {
              if (!cloneableTags[tag]) {
                return object ? value : {};
              }
              result = initCloneByTag(value, tag, baseClone, isDeep);
            }
          }
          stack || (stack = new Stack);
          var stacked = stack.get(value);
          if (stacked) {
            return stacked;
          }
          stack.set(value, result);
          if (!isArr) {
            var props = isFull ? getAllKeys(value) : keys(value);
          }
          arrayEach(props || value, function(subValue, key) {
            if (props) {
              key = subValue;
              subValue = value[key];
            }
            assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
          });
          return result;
        }
        function baseConforms(source) {
          var props = keys(source);
          return function(object) {
            return baseConformsTo(object, source, props);
          };
        }
        function baseConformsTo(object, source, props) {
          var length = props.length;
          if (object == null) {
            return !length;
          }
          object = Object(object);
          while (length--) {
            var key = props[length],
                predicate = source[key],
                value = object[key];
            if ((value === undefined && !(key in object)) || !predicate(value)) {
              return false;
            }
          }
          return true;
        }
        function baseCreate(proto) {
          return isObject(proto) ? objectCreate(proto) : {};
        }
        function baseDelay(func, wait, args) {
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          return setTimeout(function() {
            func.apply(undefined, args);
          }, wait);
        }
        function baseDifference(array, values, iteratee, comparator) {
          var index = -1,
              includes = arrayIncludes,
              isCommon = true,
              length = array.length,
              result = [],
              valuesLength = values.length;
          if (!length) {
            return result;
          }
          if (iteratee) {
            values = arrayMap(values, baseUnary(iteratee));
          }
          if (comparator) {
            includes = arrayIncludesWith;
            isCommon = false;
          } else if (values.length >= LARGE_ARRAY_SIZE) {
            includes = cacheHas;
            isCommon = false;
            values = new SetCache(values);
          }
          outer: while (++index < length) {
            var value = array[index],
                computed = iteratee ? iteratee(value) : value;
            value = (comparator || value !== 0) ? value : 0;
            if (isCommon && computed === computed) {
              var valuesIndex = valuesLength;
              while (valuesIndex--) {
                if (values[valuesIndex] === computed) {
                  continue outer;
                }
              }
              result.push(value);
            } else if (!includes(values, computed, comparator)) {
              result.push(value);
            }
          }
          return result;
        }
        var baseEach = createBaseEach(baseForOwn);
        var baseEachRight = createBaseEach(baseForOwnRight, true);
        function baseEvery(collection, predicate) {
          var result = true;
          baseEach(collection, function(value, index, collection) {
            result = !!predicate(value, index, collection);
            return result;
          });
          return result;
        }
        function baseExtremum(array, iteratee, comparator) {
          var index = -1,
              length = array.length;
          while (++index < length) {
            var value = array[index],
                current = iteratee(value);
            if (current != null && (computed === undefined ? (current === current && !isSymbol(current)) : comparator(current, computed))) {
              var computed = current,
                  result = value;
            }
          }
          return result;
        }
        function baseFill(array, value, start, end) {
          var length = array.length;
          start = toInteger(start);
          if (start < 0) {
            start = -start > length ? 0 : (length + start);
          }
          end = (end === undefined || end > length) ? length : toInteger(end);
          if (end < 0) {
            end += length;
          }
          end = start > end ? 0 : toLength(end);
          while (start < end) {
            array[start++] = value;
          }
          return array;
        }
        function baseFilter(collection, predicate) {
          var result = [];
          baseEach(collection, function(value, index, collection) {
            if (predicate(value, index, collection)) {
              result.push(value);
            }
          });
          return result;
        }
        function baseFlatten(array, depth, predicate, isStrict, result) {
          var index = -1,
              length = array.length;
          predicate || (predicate = isFlattenable);
          result || (result = []);
          while (++index < length) {
            var value = array[index];
            if (depth > 0 && predicate(value)) {
              if (depth > 1) {
                baseFlatten(value, depth - 1, predicate, isStrict, result);
              } else {
                arrayPush(result, value);
              }
            } else if (!isStrict) {
              result[result.length] = value;
            }
          }
          return result;
        }
        var baseFor = createBaseFor();
        var baseForRight = createBaseFor(true);
        function baseForOwn(object, iteratee) {
          return object && baseFor(object, iteratee, keys);
        }
        function baseForOwnRight(object, iteratee) {
          return object && baseForRight(object, iteratee, keys);
        }
        function baseFunctions(object, props) {
          return arrayFilter(props, function(key) {
            return isFunction(object[key]);
          });
        }
        function baseGet(object, path) {
          path = isKey(path, object) ? [path] : castPath(path);
          var index = 0,
              length = path.length;
          while (object != null && index < length) {
            object = object[toKey(path[index++])];
          }
          return (index && index == length) ? object : undefined;
        }
        function baseGetAllKeys(object, keysFunc, symbolsFunc) {
          var result = keysFunc(object);
          return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
        }
        function baseGetTag(value) {
          return objectToString.call(value);
        }
        function baseGt(value, other) {
          return value > other;
        }
        function baseHas(object, key) {
          return object != null && hasOwnProperty.call(object, key);
        }
        function baseHasIn(object, key) {
          return object != null && key in Object(object);
        }
        function baseInRange(number, start, end) {
          return number >= nativeMin(start, end) && number < nativeMax(start, end);
        }
        function baseIntersection(arrays, iteratee, comparator) {
          var includes = comparator ? arrayIncludesWith : arrayIncludes,
              length = arrays[0].length,
              othLength = arrays.length,
              othIndex = othLength,
              caches = Array(othLength),
              maxLength = Infinity,
              result = [];
          while (othIndex--) {
            var array = arrays[othIndex];
            if (othIndex && iteratee) {
              array = arrayMap(array, baseUnary(iteratee));
            }
            maxLength = nativeMin(array.length, maxLength);
            caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120)) ? new SetCache(othIndex && array) : undefined;
          }
          array = arrays[0];
          var index = -1,
              seen = caches[0];
          outer: while (++index < length && result.length < maxLength) {
            var value = array[index],
                computed = iteratee ? iteratee(value) : value;
            value = (comparator || value !== 0) ? value : 0;
            if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
              othIndex = othLength;
              while (--othIndex) {
                var cache = caches[othIndex];
                if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {
                  continue outer;
                }
              }
              if (seen) {
                seen.push(computed);
              }
              result.push(value);
            }
          }
          return result;
        }
        function baseInverter(object, setter, iteratee, accumulator) {
          baseForOwn(object, function(value, key, object) {
            setter(accumulator, iteratee(value), key, object);
          });
          return accumulator;
        }
        function baseInvoke(object, path, args) {
          if (!isKey(path, object)) {
            path = castPath(path);
            object = parent(object, path);
            path = last(path);
          }
          var func = object == null ? object : object[toKey(path)];
          return func == null ? undefined : apply(func, object, args);
        }
        function baseIsArrayBuffer(value) {
          return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;
        }
        function baseIsDate(value) {
          return isObjectLike(value) && objectToString.call(value) == dateTag;
        }
        function baseIsEqual(value, other, customizer, bitmask, stack) {
          if (value === other) {
            return true;
          }
          if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
            return value !== value && other !== other;
          }
          return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
        }
        function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
          var objIsArr = isArray(object),
              othIsArr = isArray(other),
              objTag = arrayTag,
              othTag = arrayTag;
          if (!objIsArr) {
            objTag = getTag(object);
            objTag = objTag == argsTag ? objectTag : objTag;
          }
          if (!othIsArr) {
            othTag = getTag(other);
            othTag = othTag == argsTag ? objectTag : othTag;
          }
          var objIsObj = objTag == objectTag && !isHostObject(object),
              othIsObj = othTag == objectTag && !isHostObject(other),
              isSameTag = objTag == othTag;
          if (isSameTag && !objIsObj) {
            stack || (stack = new Stack);
            return (objIsArr || isTypedArray(object)) ? equalArrays(object, other, equalFunc, customizer, bitmask, stack) : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
          }
          if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
            var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
                othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
            if (objIsWrapped || othIsWrapped) {
              var objUnwrapped = objIsWrapped ? object.value() : object,
                  othUnwrapped = othIsWrapped ? other.value() : other;
              stack || (stack = new Stack);
              return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
            }
          }
          if (!isSameTag) {
            return false;
          }
          stack || (stack = new Stack);
          return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
        }
        function baseIsMap(value) {
          return isObjectLike(value) && getTag(value) == mapTag;
        }
        function baseIsMatch(object, source, matchData, customizer) {
          var index = matchData.length,
              length = index,
              noCustomizer = !customizer;
          if (object == null) {
            return !length;
          }
          object = Object(object);
          while (index--) {
            var data = matchData[index];
            if ((noCustomizer && data[2]) ? data[1] !== object[data[0]] : !(data[0] in object)) {
              return false;
            }
          }
          while (++index < length) {
            data = matchData[index];
            var key = data[0],
                objValue = object[key],
                srcValue = data[1];
            if (noCustomizer && data[2]) {
              if (objValue === undefined && !(key in object)) {
                return false;
              }
            } else {
              var stack = new Stack;
              if (customizer) {
                var result = customizer(objValue, srcValue, key, object, source, stack);
              }
              if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack) : result)) {
                return false;
              }
            }
          }
          return true;
        }
        function baseIsNative(value) {
          if (!isObject(value) || isMasked(value)) {
            return false;
          }
          var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
          return pattern.test(toSource(value));
        }
        function baseIsRegExp(value) {
          return isObject(value) && objectToString.call(value) == regexpTag;
        }
        function baseIsSet(value) {
          return isObjectLike(value) && getTag(value) == setTag;
        }
        function baseIsTypedArray(value) {
          return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
        }
        function baseIteratee(value) {
          if (typeof value == 'function') {
            return value;
          }
          if (value == null) {
            return identity;
          }
          if (typeof value == 'object') {
            return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
          }
          return property(value);
        }
        function baseKeys(object) {
          if (!isPrototype(object)) {
            return nativeKeys(object);
          }
          var result = [];
          for (var key in Object(object)) {
            if (hasOwnProperty.call(object, key) && key != 'constructor') {
              result.push(key);
            }
          }
          return result;
        }
        function baseKeysIn(object) {
          if (!isObject(object)) {
            return nativeKeysIn(object);
          }
          var isProto = isPrototype(object),
              result = [];
          for (var key in object) {
            if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
              result.push(key);
            }
          }
          return result;
        }
        function baseLt(value, other) {
          return value < other;
        }
        function baseMap(collection, iteratee) {
          var index = -1,
              result = isArrayLike(collection) ? Array(collection.length) : [];
          baseEach(collection, function(value, key, collection) {
            result[++index] = iteratee(value, key, collection);
          });
          return result;
        }
        function baseMatches(source) {
          var matchData = getMatchData(source);
          if (matchData.length == 1 && matchData[0][2]) {
            return matchesStrictComparable(matchData[0][0], matchData[0][1]);
          }
          return function(object) {
            return object === source || baseIsMatch(object, source, matchData);
          };
        }
        function baseMatchesProperty(path, srcValue) {
          if (isKey(path) && isStrictComparable(srcValue)) {
            return matchesStrictComparable(toKey(path), srcValue);
          }
          return function(object) {
            var objValue = get(object, path);
            return (objValue === undefined && objValue === srcValue) ? hasIn(object, path) : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
          };
        }
        function baseMerge(object, source, srcIndex, customizer, stack) {
          if (object === source) {
            return;
          }
          if (!(isArray(source) || isTypedArray(source))) {
            var props = baseKeysIn(source);
          }
          arrayEach(props || source, function(srcValue, key) {
            if (props) {
              key = srcValue;
              srcValue = source[key];
            }
            if (isObject(srcValue)) {
              stack || (stack = new Stack);
              baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
            } else {
              var newValue = customizer ? customizer(object[key], srcValue, (key + ''), object, source, stack) : undefined;
              if (newValue === undefined) {
                newValue = srcValue;
              }
              assignMergeValue(object, key, newValue);
            }
          });
        }
        function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
          var objValue = object[key],
              srcValue = source[key],
              stacked = stack.get(srcValue);
          if (stacked) {
            assignMergeValue(object, key, stacked);
            return;
          }
          var newValue = customizer ? customizer(objValue, srcValue, (key + ''), object, source, stack) : undefined;
          var isCommon = newValue === undefined;
          if (isCommon) {
            newValue = srcValue;
            if (isArray(srcValue) || isTypedArray(srcValue)) {
              if (isArray(objValue)) {
                newValue = objValue;
              } else if (isArrayLikeObject(objValue)) {
                newValue = copyArray(objValue);
              } else {
                isCommon = false;
                newValue = baseClone(srcValue, true);
              }
            } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
              if (isArguments(objValue)) {
                newValue = toPlainObject(objValue);
              } else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
                isCommon = false;
                newValue = baseClone(srcValue, true);
              } else {
                newValue = objValue;
              }
            } else {
              isCommon = false;
            }
          }
          if (isCommon) {
            stack.set(srcValue, newValue);
            mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
            stack['delete'](srcValue);
          }
          assignMergeValue(object, key, newValue);
        }
        function baseNth(array, n) {
          var length = array.length;
          if (!length) {
            return;
          }
          n += n < 0 ? length : 0;
          return isIndex(n, length) ? array[n] : undefined;
        }
        function baseOrderBy(collection, iteratees, orders) {
          var index = -1;
          iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));
          var result = baseMap(collection, function(value, key, collection) {
            var criteria = arrayMap(iteratees, function(iteratee) {
              return iteratee(value);
            });
            return {
              'criteria': criteria,
              'index': ++index,
              'value': value
            };
          });
          return baseSortBy(result, function(object, other) {
            return compareMultiple(object, other, orders);
          });
        }
        function basePick(object, props) {
          object = Object(object);
          return basePickBy(object, props, function(value, key) {
            return key in object;
          });
        }
        function basePickBy(object, props, predicate) {
          var index = -1,
              length = props.length,
              result = {};
          while (++index < length) {
            var key = props[index],
                value = object[key];
            if (predicate(value, key)) {
              result[key] = value;
            }
          }
          return result;
        }
        function basePropertyDeep(path) {
          return function(object) {
            return baseGet(object, path);
          };
        }
        function basePullAll(array, values, iteratee, comparator) {
          var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
              index = -1,
              length = values.length,
              seen = array;
          if (array === values) {
            values = copyArray(values);
          }
          if (iteratee) {
            seen = arrayMap(array, baseUnary(iteratee));
          }
          while (++index < length) {
            var fromIndex = 0,
                value = values[index],
                computed = iteratee ? iteratee(value) : value;
            while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
              if (seen !== array) {
                splice.call(seen, fromIndex, 1);
              }
              splice.call(array, fromIndex, 1);
            }
          }
          return array;
        }
        function basePullAt(array, indexes) {
          var length = array ? indexes.length : 0,
              lastIndex = length - 1;
          while (length--) {
            var index = indexes[length];
            if (length == lastIndex || index !== previous) {
              var previous = index;
              if (isIndex(index)) {
                splice.call(array, index, 1);
              } else if (!isKey(index, array)) {
                var path = castPath(index),
                    object = parent(array, path);
                if (object != null) {
                  delete object[toKey(last(path))];
                }
              } else {
                delete array[toKey(index)];
              }
            }
          }
          return array;
        }
        function baseRandom(lower, upper) {
          return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
        }
        function baseRange(start, end, step, fromRight) {
          var index = -1,
              length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
              result = Array(length);
          while (length--) {
            result[fromRight ? length : ++index] = start;
            start += step;
          }
          return result;
        }
        function baseRepeat(string, n) {
          var result = '';
          if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
            return result;
          }
          do {
            if (n % 2) {
              result += string;
            }
            n = nativeFloor(n / 2);
            if (n) {
              string += string;
            }
          } while (n);
          return result;
        }
        function baseRest(func, start) {
          start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
          return function() {
            var args = arguments,
                index = -1,
                length = nativeMax(args.length - start, 0),
                array = Array(length);
            while (++index < length) {
              array[index] = args[start + index];
            }
            index = -1;
            var otherArgs = Array(start + 1);
            while (++index < start) {
              otherArgs[index] = args[index];
            }
            otherArgs[start] = array;
            return apply(func, this, otherArgs);
          };
        }
        function baseSet(object, path, value, customizer) {
          if (!isObject(object)) {
            return object;
          }
          path = isKey(path, object) ? [path] : castPath(path);
          var index = -1,
              length = path.length,
              lastIndex = length - 1,
              nested = object;
          while (nested != null && ++index < length) {
            var key = toKey(path[index]),
                newValue = value;
            if (index != lastIndex) {
              var objValue = nested[key];
              newValue = customizer ? customizer(objValue, key, nested) : undefined;
              if (newValue === undefined) {
                newValue = isObject(objValue) ? objValue : (isIndex(path[index + 1]) ? [] : {});
              }
            }
            assignValue(nested, key, newValue);
            nested = nested[key];
          }
          return object;
        }
        var baseSetData = !metaMap ? identity : function(func, data) {
          metaMap.set(func, data);
          return func;
        };
        function baseSlice(array, start, end) {
          var index = -1,
              length = array.length;
          if (start < 0) {
            start = -start > length ? 0 : (length + start);
          }
          end = end > length ? length : end;
          if (end < 0) {
            end += length;
          }
          length = start > end ? 0 : ((end - start) >>> 0);
          start >>>= 0;
          var result = Array(length);
          while (++index < length) {
            result[index] = array[index + start];
          }
          return result;
        }
        function baseSome(collection, predicate) {
          var result;
          baseEach(collection, function(value, index, collection) {
            result = predicate(value, index, collection);
            return !result;
          });
          return !!result;
        }
        function baseSortedIndex(array, value, retHighest) {
          var low = 0,
              high = array ? array.length : low;
          if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
            while (low < high) {
              var mid = (low + high) >>> 1,
                  computed = array[mid];
              if (computed !== null && !isSymbol(computed) && (retHighest ? (computed <= value) : (computed < value))) {
                low = mid + 1;
              } else {
                high = mid;
              }
            }
            return high;
          }
          return baseSortedIndexBy(array, value, identity, retHighest);
        }
        function baseSortedIndexBy(array, value, iteratee, retHighest) {
          value = iteratee(value);
          var low = 0,
              high = array ? array.length : 0,
              valIsNaN = value !== value,
              valIsNull = value === null,
              valIsSymbol = isSymbol(value),
              valIsUndefined = value === undefined;
          while (low < high) {
            var mid = nativeFloor((low + high) / 2),
                computed = iteratee(array[mid]),
                othIsDefined = computed !== undefined,
                othIsNull = computed === null,
                othIsReflexive = computed === computed,
                othIsSymbol = isSymbol(computed);
            if (valIsNaN) {
              var setLow = retHighest || othIsReflexive;
            } else if (valIsUndefined) {
              setLow = othIsReflexive && (retHighest || othIsDefined);
            } else if (valIsNull) {
              setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
            } else if (valIsSymbol) {
              setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
            } else if (othIsNull || othIsSymbol) {
              setLow = false;
            } else {
              setLow = retHighest ? (computed <= value) : (computed < value);
            }
            if (setLow) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }
          return nativeMin(high, MAX_ARRAY_INDEX);
        }
        function baseSortedUniq(array, iteratee) {
          var index = -1,
              length = array.length,
              resIndex = 0,
              result = [];
          while (++index < length) {
            var value = array[index],
                computed = iteratee ? iteratee(value) : value;
            if (!index || !eq(computed, seen)) {
              var seen = computed;
              result[resIndex++] = value === 0 ? 0 : value;
            }
          }
          return result;
        }
        function baseToNumber(value) {
          if (typeof value == 'number') {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          return +value;
        }
        function baseToString(value) {
          if (typeof value == 'string') {
            return value;
          }
          if (isSymbol(value)) {
            return symbolToString ? symbolToString.call(value) : '';
          }
          var result = (value + '');
          return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
        }
        function baseUniq(array, iteratee, comparator) {
          var index = -1,
              includes = arrayIncludes,
              length = array.length,
              isCommon = true,
              result = [],
              seen = result;
          if (comparator) {
            isCommon = false;
            includes = arrayIncludesWith;
          } else if (length >= LARGE_ARRAY_SIZE) {
            var set = iteratee ? null : createSet(array);
            if (set) {
              return setToArray(set);
            }
            isCommon = false;
            includes = cacheHas;
            seen = new SetCache;
          } else {
            seen = iteratee ? [] : result;
          }
          outer: while (++index < length) {
            var value = array[index],
                computed = iteratee ? iteratee(value) : value;
            value = (comparator || value !== 0) ? value : 0;
            if (isCommon && computed === computed) {
              var seenIndex = seen.length;
              while (seenIndex--) {
                if (seen[seenIndex] === computed) {
                  continue outer;
                }
              }
              if (iteratee) {
                seen.push(computed);
              }
              result.push(value);
            } else if (!includes(seen, computed, comparator)) {
              if (seen !== result) {
                seen.push(computed);
              }
              result.push(value);
            }
          }
          return result;
        }
        function baseUnset(object, path) {
          path = isKey(path, object) ? [path] : castPath(path);
          object = parent(object, path);
          var key = toKey(last(path));
          return !(object != null && hasOwnProperty.call(object, key)) || delete object[key];
        }
        function baseUpdate(object, path, updater, customizer) {
          return baseSet(object, path, updater(baseGet(object, path)), customizer);
        }
        function baseWhile(array, predicate, isDrop, fromRight) {
          var length = array.length,
              index = fromRight ? length : -1;
          while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}
          return isDrop ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length)) : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
        }
        function baseWrapperValue(value, actions) {
          var result = value;
          if (result instanceof LazyWrapper) {
            result = result.value();
          }
          return arrayReduce(actions, function(result, action) {
            return action.func.apply(action.thisArg, arrayPush([result], action.args));
          }, result);
        }
        function baseXor(arrays, iteratee, comparator) {
          var index = -1,
              length = arrays.length;
          while (++index < length) {
            var result = result ? arrayPush(baseDifference(result, arrays[index], iteratee, comparator), baseDifference(arrays[index], result, iteratee, comparator)) : arrays[index];
          }
          return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];
        }
        function baseZipObject(props, values, assignFunc) {
          var index = -1,
              length = props.length,
              valsLength = values.length,
              result = {};
          while (++index < length) {
            var value = index < valsLength ? values[index] : undefined;
            assignFunc(result, props[index], value);
          }
          return result;
        }
        function castArrayLikeObject(value) {
          return isArrayLikeObject(value) ? value : [];
        }
        function castFunction(value) {
          return typeof value == 'function' ? value : identity;
        }
        function castPath(value) {
          return isArray(value) ? value : stringToPath(value);
        }
        function castSlice(array, start, end) {
          var length = array.length;
          end = end === undefined ? length : end;
          return (!start && end >= length) ? array : baseSlice(array, start, end);
        }
        var clearTimeout = ctxClearTimeout || function(id) {
          return root.clearTimeout(id);
        };
        function cloneBuffer(buffer, isDeep) {
          if (isDeep) {
            return buffer.slice();
          }
          var result = new buffer.constructor(buffer.length);
          buffer.copy(result);
          return result;
        }
        function cloneArrayBuffer(arrayBuffer) {
          var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
          new Uint8Array(result).set(new Uint8Array(arrayBuffer));
          return result;
        }
        function cloneDataView(dataView, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
          return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }
        function cloneMap(map, isDeep, cloneFunc) {
          var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
          return arrayReduce(array, addMapEntry, new map.constructor);
        }
        function cloneRegExp(regexp) {
          var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
          result.lastIndex = regexp.lastIndex;
          return result;
        }
        function cloneSet(set, isDeep, cloneFunc) {
          var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
          return arrayReduce(array, addSetEntry, new set.constructor);
        }
        function cloneSymbol(symbol) {
          return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
        }
        function cloneTypedArray(typedArray, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
          return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }
        function compareAscending(value, other) {
          if (value !== other) {
            var valIsDefined = value !== undefined,
                valIsNull = value === null,
                valIsReflexive = value === value,
                valIsSymbol = isSymbol(value);
            var othIsDefined = other !== undefined,
                othIsNull = other === null,
                othIsReflexive = other === other,
                othIsSymbol = isSymbol(other);
            if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) || (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) || (valIsNull && othIsDefined && othIsReflexive) || (!valIsDefined && othIsReflexive) || !valIsReflexive) {
              return 1;
            }
            if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) || (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) || (othIsNull && valIsDefined && valIsReflexive) || (!othIsDefined && valIsReflexive) || !othIsReflexive) {
              return -1;
            }
          }
          return 0;
        }
        function compareMultiple(object, other, orders) {
          var index = -1,
              objCriteria = object.criteria,
              othCriteria = other.criteria,
              length = objCriteria.length,
              ordersLength = orders.length;
          while (++index < length) {
            var result = compareAscending(objCriteria[index], othCriteria[index]);
            if (result) {
              if (index >= ordersLength) {
                return result;
              }
              var order = orders[index];
              return result * (order == 'desc' ? -1 : 1);
            }
          }
          return object.index - other.index;
        }
        function composeArgs(args, partials, holders, isCurried) {
          var argsIndex = -1,
              argsLength = args.length,
              holdersLength = holders.length,
              leftIndex = -1,
              leftLength = partials.length,
              rangeLength = nativeMax(argsLength - holdersLength, 0),
              result = Array(leftLength + rangeLength),
              isUncurried = !isCurried;
          while (++leftIndex < leftLength) {
            result[leftIndex] = partials[leftIndex];
          }
          while (++argsIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result[holders[argsIndex]] = args[argsIndex];
            }
          }
          while (rangeLength--) {
            result[leftIndex++] = args[argsIndex++];
          }
          return result;
        }
        function composeArgsRight(args, partials, holders, isCurried) {
          var argsIndex = -1,
              argsLength = args.length,
              holdersIndex = -1,
              holdersLength = holders.length,
              rightIndex = -1,
              rightLength = partials.length,
              rangeLength = nativeMax(argsLength - holdersLength, 0),
              result = Array(rangeLength + rightLength),
              isUncurried = !isCurried;
          while (++argsIndex < rangeLength) {
            result[argsIndex] = args[argsIndex];
          }
          var offset = argsIndex;
          while (++rightIndex < rightLength) {
            result[offset + rightIndex] = partials[rightIndex];
          }
          while (++holdersIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result[offset + holders[holdersIndex]] = args[argsIndex++];
            }
          }
          return result;
        }
        function copyArray(source, array) {
          var index = -1,
              length = source.length;
          array || (array = Array(length));
          while (++index < length) {
            array[index] = source[index];
          }
          return array;
        }
        function copyObject(source, props, object, customizer) {
          object || (object = {});
          var index = -1,
              length = props.length;
          while (++index < length) {
            var key = props[index];
            var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;
            assignValue(object, key, newValue === undefined ? source[key] : newValue);
          }
          return object;
        }
        function copySymbols(source, object) {
          return copyObject(source, getSymbols(source), object);
        }
        function createAggregator(setter, initializer) {
          return function(collection, iteratee) {
            var func = isArray(collection) ? arrayAggregator : baseAggregator,
                accumulator = initializer ? initializer() : {};
            return func(collection, setter, getIteratee(iteratee, 2), accumulator);
          };
        }
        function createAssigner(assigner) {
          return baseRest(function(object, sources) {
            var index = -1,
                length = sources.length,
                customizer = length > 1 ? sources[length - 1] : undefined,
                guard = length > 2 ? sources[2] : undefined;
            customizer = (assigner.length > 3 && typeof customizer == 'function') ? (length--, customizer) : undefined;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) {
              customizer = length < 3 ? undefined : customizer;
              length = 1;
            }
            object = Object(object);
            while (++index < length) {
              var source = sources[index];
              if (source) {
                assigner(object, source, index, customizer);
              }
            }
            return object;
          });
        }
        function createBaseEach(eachFunc, fromRight) {
          return function(collection, iteratee) {
            if (collection == null) {
              return collection;
            }
            if (!isArrayLike(collection)) {
              return eachFunc(collection, iteratee);
            }
            var length = collection.length,
                index = fromRight ? length : -1,
                iterable = Object(collection);
            while ((fromRight ? index-- : ++index < length)) {
              if (iteratee(iterable[index], index, iterable) === false) {
                break;
              }
            }
            return collection;
          };
        }
        function createBaseFor(fromRight) {
          return function(object, iteratee, keysFunc) {
            var index = -1,
                iterable = Object(object),
                props = keysFunc(object),
                length = props.length;
            while (length--) {
              var key = props[fromRight ? length : ++index];
              if (iteratee(iterable[key], key, iterable) === false) {
                break;
              }
            }
            return object;
          };
        }
        function createBind(func, bitmask, thisArg) {
          var isBind = bitmask & BIND_FLAG,
              Ctor = createCtor(func);
          function wrapper() {
            var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
            return fn.apply(isBind ? thisArg : this, arguments);
          }
          return wrapper;
        }
        function createCaseFirst(methodName) {
          return function(string) {
            string = toString(string);
            var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
            var chr = strSymbols ? strSymbols[0] : string.charAt(0);
            var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
            return chr[methodName]() + trailing;
          };
        }
        function createCompounder(callback) {
          return function(string) {
            return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
          };
        }
        function createCtor(Ctor) {
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return new Ctor;
              case 1:
                return new Ctor(args[0]);
              case 2:
                return new Ctor(args[0], args[1]);
              case 3:
                return new Ctor(args[0], args[1], args[2]);
              case 4:
                return new Ctor(args[0], args[1], args[2], args[3]);
              case 5:
                return new Ctor(args[0], args[1], args[2], args[3], args[4]);
              case 6:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
              case 7:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
            }
            var thisBinding = baseCreate(Ctor.prototype),
                result = Ctor.apply(thisBinding, args);
            return isObject(result) ? result : thisBinding;
          };
        }
        function createCurry(func, bitmask, arity) {
          var Ctor = createCtor(func);
          function wrapper() {
            var length = arguments.length,
                args = Array(length),
                index = length,
                placeholder = getHolder(wrapper);
            while (index--) {
              args[index] = arguments[index];
            }
            var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder) ? [] : replaceHolders(args, placeholder);
            length -= holders.length;
            if (length < arity) {
              return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
            }
            var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
            return apply(fn, this, args);
          }
          return wrapper;
        }
        function createFind(findIndexFunc) {
          return function(collection, predicate, fromIndex) {
            var iterable = Object(collection);
            if (!isArrayLike(collection)) {
              var iteratee = getIteratee(predicate, 3);
              collection = keys(collection);
              predicate = function(key) {
                return iteratee(iterable[key], key, iterable);
              };
            }
            var index = findIndexFunc(collection, predicate, fromIndex);
            return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
          };
        }
        function createFlow(fromRight) {
          return baseRest(function(funcs) {
            funcs = baseFlatten(funcs, 1);
            var length = funcs.length,
                index = length,
                prereq = LodashWrapper.prototype.thru;
            if (fromRight) {
              funcs.reverse();
            }
            while (index--) {
              var func = funcs[index];
              if (typeof func != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT);
              }
              if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
                var wrapper = new LodashWrapper([], true);
              }
            }
            index = wrapper ? index : length;
            while (++index < length) {
              func = funcs[index];
              var funcName = getFuncName(func),
                  data = funcName == 'wrapper' ? getData(func) : undefined;
              if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {
                wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
              } else {
                wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);
              }
            }
            return function() {
              var args = arguments,
                  value = args[0];
              if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
                return wrapper.plant(value).value();
              }
              var index = 0,
                  result = length ? funcs[index].apply(this, args) : value;
              while (++index < length) {
                result = funcs[index].call(this, result);
              }
              return result;
            };
          });
        }
        function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
          var isAry = bitmask & ARY_FLAG,
              isBind = bitmask & BIND_FLAG,
              isBindKey = bitmask & BIND_KEY_FLAG,
              isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),
              isFlip = bitmask & FLIP_FLAG,
              Ctor = isBindKey ? undefined : createCtor(func);
          function wrapper() {
            var length = arguments.length,
                args = Array(length),
                index = length;
            while (index--) {
              args[index] = arguments[index];
            }
            if (isCurried) {
              var placeholder = getHolder(wrapper),
                  holdersCount = countHolders(args, placeholder);
            }
            if (partials) {
              args = composeArgs(args, partials, holders, isCurried);
            }
            if (partialsRight) {
              args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
            }
            length -= holdersCount;
            if (isCurried && length < arity) {
              var newHolders = replaceHolders(args, placeholder);
              return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
            }
            var thisBinding = isBind ? thisArg : this,
                fn = isBindKey ? thisBinding[func] : func;
            length = args.length;
            if (argPos) {
              args = reorder(args, argPos);
            } else if (isFlip && length > 1) {
              args.reverse();
            }
            if (isAry && ary < length) {
              args.length = ary;
            }
            if (this && this !== root && this instanceof wrapper) {
              fn = Ctor || createCtor(fn);
            }
            return fn.apply(thisBinding, args);
          }
          return wrapper;
        }
        function createInverter(setter, toIteratee) {
          return function(object, iteratee) {
            return baseInverter(object, setter, toIteratee(iteratee), {});
          };
        }
        function createMathOperation(operator, defaultValue) {
          return function(value, other) {
            var result;
            if (value === undefined && other === undefined) {
              return defaultValue;
            }
            if (value !== undefined) {
              result = value;
            }
            if (other !== undefined) {
              if (result === undefined) {
                return other;
              }
              if (typeof value == 'string' || typeof other == 'string') {
                value = baseToString(value);
                other = baseToString(other);
              } else {
                value = baseToNumber(value);
                other = baseToNumber(other);
              }
              result = operator(value, other);
            }
            return result;
          };
        }
        function createOver(arrayFunc) {
          return baseRest(function(iteratees) {
            iteratees = (iteratees.length == 1 && isArray(iteratees[0])) ? arrayMap(iteratees[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(iteratees, 1), baseUnary(getIteratee()));
            return baseRest(function(args) {
              var thisArg = this;
              return arrayFunc(iteratees, function(iteratee) {
                return apply(iteratee, thisArg, args);
              });
            });
          });
        }
        function createPadding(length, chars) {
          chars = chars === undefined ? ' ' : baseToString(chars);
          var charsLength = chars.length;
          if (charsLength < 2) {
            return charsLength ? baseRepeat(chars, length) : chars;
          }
          var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
          return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join('') : result.slice(0, length);
        }
        function createPartial(func, bitmask, thisArg, partials) {
          var isBind = bitmask & BIND_FLAG,
              Ctor = createCtor(func);
          function wrapper() {
            var argsIndex = -1,
                argsLength = arguments.length,
                leftIndex = -1,
                leftLength = partials.length,
                args = Array(leftLength + argsLength),
                fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
            while (++leftIndex < leftLength) {
              args[leftIndex] = partials[leftIndex];
            }
            while (argsLength--) {
              args[leftIndex++] = arguments[++argsIndex];
            }
            return apply(fn, isBind ? thisArg : this, args);
          }
          return wrapper;
        }
        function createRange(fromRight) {
          return function(start, end, step) {
            if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
              end = step = undefined;
            }
            start = toFinite(start);
            if (end === undefined) {
              end = start;
              start = 0;
            } else {
              end = toFinite(end);
            }
            step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
            return baseRange(start, end, step, fromRight);
          };
        }
        function createRelationalOperation(operator) {
          return function(value, other) {
            if (!(typeof value == 'string' && typeof other == 'string')) {
              value = toNumber(value);
              other = toNumber(other);
            }
            return operator(value, other);
          };
        }
        function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
          var isCurry = bitmask & CURRY_FLAG,
              newHolders = isCurry ? holders : undefined,
              newHoldersRight = isCurry ? undefined : holders,
              newPartials = isCurry ? partials : undefined,
              newPartialsRight = isCurry ? undefined : partials;
          bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);
          bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);
          if (!(bitmask & CURRY_BOUND_FLAG)) {
            bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
          }
          var newData = [func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity];
          var result = wrapFunc.apply(undefined, newData);
          if (isLaziable(func)) {
            setData(result, newData);
          }
          result.placeholder = placeholder;
          return setWrapToString(result, func, bitmask);
        }
        function createRound(methodName) {
          var func = Math[methodName];
          return function(number, precision) {
            number = toNumber(number);
            precision = nativeMin(toInteger(precision), 292);
            if (precision) {
              var pair = (toString(number) + 'e').split('e'),
                  value = func(pair[0] + 'e' + (+pair[1] + precision));
              pair = (toString(value) + 'e').split('e');
              return +(pair[0] + 'e' + (+pair[1] - precision));
            }
            return func(number);
          };
        }
        var createSet = !(Set && (1 / setToArray(new Set([, -0]))[1]) == INFINITY) ? noop : function(values) {
          return new Set(values);
        };
        function createToPairs(keysFunc) {
          return function(object) {
            var tag = getTag(object);
            if (tag == mapTag) {
              return mapToArray(object);
            }
            if (tag == setTag) {
              return setToPairs(object);
            }
            return baseToPairs(object, keysFunc(object));
          };
        }
        function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
          var isBindKey = bitmask & BIND_KEY_FLAG;
          if (!isBindKey && typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          var length = partials ? partials.length : 0;
          if (!length) {
            bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
            partials = holders = undefined;
          }
          ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
          arity = arity === undefined ? arity : toInteger(arity);
          length -= holders ? holders.length : 0;
          if (bitmask & PARTIAL_RIGHT_FLAG) {
            var partialsRight = partials,
                holdersRight = holders;
            partials = holders = undefined;
          }
          var data = isBindKey ? undefined : getData(func);
          var newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];
          if (data) {
            mergeData(newData, data);
          }
          func = newData[0];
          bitmask = newData[1];
          thisArg = newData[2];
          partials = newData[3];
          holders = newData[4];
          arity = newData[9] = newData[9] == null ? (isBindKey ? 0 : func.length) : nativeMax(newData[9] - length, 0);
          if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {
            bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);
          }
          if (!bitmask || bitmask == BIND_FLAG) {
            var result = createBind(func, bitmask, thisArg);
          } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {
            result = createCurry(func, bitmask, arity);
          } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {
            result = createPartial(func, bitmask, thisArg, partials);
          } else {
            result = createHybrid.apply(undefined, newData);
          }
          var setter = data ? baseSetData : setData;
          return setWrapToString(setter(result, newData), func, bitmask);
        }
        function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
          var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
              arrLength = array.length,
              othLength = other.length;
          if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
            return false;
          }
          var stacked = stack.get(array);
          if (stacked && stack.get(other)) {
            return stacked == other;
          }
          var index = -1,
              result = true,
              seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;
          stack.set(array, other);
          stack.set(other, array);
          while (++index < arrLength) {
            var arrValue = array[index],
                othValue = other[index];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
            }
            if (compared !== undefined) {
              if (compared) {
                continue;
              }
              result = false;
              break;
            }
            if (seen) {
              if (!arraySome(other, function(othValue, othIndex) {
                if (!seen.has(othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
                  return seen.add(othIndex);
                }
              })) {
                result = false;
                break;
              }
            } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
              result = false;
              break;
            }
          }
          stack['delete'](array);
          stack['delete'](other);
          return result;
        }
        function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
          switch (tag) {
            case dataViewTag:
              if ((object.byteLength != other.byteLength) || (object.byteOffset != other.byteOffset)) {
                return false;
              }
              object = object.buffer;
              other = other.buffer;
            case arrayBufferTag:
              if ((object.byteLength != other.byteLength) || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
                return false;
              }
              return true;
            case boolTag:
            case dateTag:
            case numberTag:
              return eq(+object, +other);
            case errorTag:
              return object.name == other.name && object.message == other.message;
            case regexpTag:
            case stringTag:
              return object == (other + '');
            case mapTag:
              var convert = mapToArray;
            case setTag:
              var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
              convert || (convert = setToArray);
              if (object.size != other.size && !isPartial) {
                return false;
              }
              var stacked = stack.get(object);
              if (stacked) {
                return stacked == other;
              }
              bitmask |= UNORDERED_COMPARE_FLAG;
              stack.set(object, other);
              var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
              stack['delete'](object);
              return result;
            case symbolTag:
              if (symbolValueOf) {
                return symbolValueOf.call(object) == symbolValueOf.call(other);
              }
          }
          return false;
        }
        function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
          var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
              objProps = keys(object),
              objLength = objProps.length,
              othProps = keys(other),
              othLength = othProps.length;
          if (objLength != othLength && !isPartial) {
            return false;
          }
          var index = objLength;
          while (index--) {
            var key = objProps[index];
            if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
              return false;
            }
          }
          var stacked = stack.get(object);
          if (stacked && stack.get(other)) {
            return stacked == other;
          }
          var result = true;
          stack.set(object, other);
          stack.set(other, object);
          var skipCtor = isPartial;
          while (++index < objLength) {
            key = objProps[index];
            var objValue = object[key],
                othValue = other[key];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
            }
            if (!(compared === undefined ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack)) : compared)) {
              result = false;
              break;
            }
            skipCtor || (skipCtor = key == 'constructor');
          }
          if (result && !skipCtor) {
            var objCtor = object.constructor,
                othCtor = other.constructor;
            if (objCtor != othCtor && ('constructor' in object && 'constructor' in other) && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
              result = false;
            }
          }
          stack['delete'](object);
          stack['delete'](other);
          return result;
        }
        function getAllKeys(object) {
          return baseGetAllKeys(object, keys, getSymbols);
        }
        function getAllKeysIn(object) {
          return baseGetAllKeys(object, keysIn, getSymbolsIn);
        }
        var getData = !metaMap ? noop : function(func) {
          return metaMap.get(func);
        };
        function getFuncName(func) {
          var result = (func.name + ''),
              array = realNames[result],
              length = hasOwnProperty.call(realNames, result) ? array.length : 0;
          while (length--) {
            var data = array[length],
                otherFunc = data.func;
            if (otherFunc == null || otherFunc == func) {
              return data.name;
            }
          }
          return result;
        }
        function getHolder(func) {
          var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
          return object.placeholder;
        }
        function getIteratee() {
          var result = lodash.iteratee || iteratee;
          result = result === iteratee ? baseIteratee : result;
          return arguments.length ? result(arguments[0], arguments[1]) : result;
        }
        function getMapData(map, key) {
          var data = map.__data__;
          return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
        }
        function getMatchData(object) {
          var result = keys(object),
              length = result.length;
          while (length--) {
            var key = result[length],
                value = object[key];
            result[length] = [key, value, isStrictComparable(value)];
          }
          return result;
        }
        function getNative(object, key) {
          var value = getValue(object, key);
          return baseIsNative(value) ? value : undefined;
        }
        var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;
        var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
          var result = [];
          while (object) {
            arrayPush(result, getSymbols(object));
            object = getPrototype(object);
          }
          return result;
        };
        var getTag = baseGetTag;
        if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) || (Map && getTag(new Map) != mapTag) || (Promise && getTag(Promise.resolve()) != promiseTag) || (Set && getTag(new Set) != setTag) || (WeakMap && getTag(new WeakMap) != weakMapTag)) {
          getTag = function(value) {
            var result = objectToString.call(value),
                Ctor = result == objectTag ? value.constructor : undefined,
                ctorString = Ctor ? toSource(Ctor) : undefined;
            if (ctorString) {
              switch (ctorString) {
                case dataViewCtorString:
                  return dataViewTag;
                case mapCtorString:
                  return mapTag;
                case promiseCtorString:
                  return promiseTag;
                case setCtorString:
                  return setTag;
                case weakMapCtorString:
                  return weakMapTag;
              }
            }
            return result;
          };
        }
        function getView(start, end, transforms) {
          var index = -1,
              length = transforms.length;
          while (++index < length) {
            var data = transforms[index],
                size = data.size;
            switch (data.type) {
              case 'drop':
                start += size;
                break;
              case 'dropRight':
                end -= size;
                break;
              case 'take':
                end = nativeMin(end, start + size);
                break;
              case 'takeRight':
                start = nativeMax(start, end - size);
                break;
            }
          }
          return {
            'start': start,
            'end': end
          };
        }
        function getWrapDetails(source) {
          var match = source.match(reWrapDetails);
          return match ? match[1].split(reSplitDetails) : [];
        }
        function hasPath(object, path, hasFunc) {
          path = isKey(path, object) ? [path] : castPath(path);
          var result,
              index = -1,
              length = path.length;
          while (++index < length) {
            var key = toKey(path[index]);
            if (!(result = object != null && hasFunc(object, key))) {
              break;
            }
            object = object[key];
          }
          if (result) {
            return result;
          }
          var length = object ? object.length : 0;
          return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
        }
        function initCloneArray(array) {
          var length = array.length,
              result = array.constructor(length);
          if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
            result.index = array.index;
            result.input = array.input;
          }
          return result;
        }
        function initCloneObject(object) {
          return (typeof object.constructor == 'function' && !isPrototype(object)) ? baseCreate(getPrototype(object)) : {};
        }
        function initCloneByTag(object, tag, cloneFunc, isDeep) {
          var Ctor = object.constructor;
          switch (tag) {
            case arrayBufferTag:
              return cloneArrayBuffer(object);
            case boolTag:
            case dateTag:
              return new Ctor(+object);
            case dataViewTag:
              return cloneDataView(object, isDeep);
            case float32Tag:
            case float64Tag:
            case int8Tag:
            case int16Tag:
            case int32Tag:
            case uint8Tag:
            case uint8ClampedTag:
            case uint16Tag:
            case uint32Tag:
              return cloneTypedArray(object, isDeep);
            case mapTag:
              return cloneMap(object, isDeep, cloneFunc);
            case numberTag:
            case stringTag:
              return new Ctor(object);
            case regexpTag:
              return cloneRegExp(object);
            case setTag:
              return cloneSet(object, isDeep, cloneFunc);
            case symbolTag:
              return cloneSymbol(object);
          }
        }
        function insertWrapDetails(source, details) {
          var length = details.length,
              lastIndex = length - 1;
          details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
          details = details.join(length > 2 ? ', ' : ' ');
          return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
        }
        function isFlattenable(value) {
          return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
        }
        function isIndex(value, length) {
          length = length == null ? MAX_SAFE_INTEGER : length;
          return !!length && (typeof value == 'number' || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
        }
        function isIterateeCall(value, index, object) {
          if (!isObject(object)) {
            return false;
          }
          var type = typeof index;
          if (type == 'number' ? (isArrayLike(object) && isIndex(index, object.length)) : (type == 'string' && index in object)) {
            return eq(object[index], value);
          }
          return false;
        }
        function isKey(value, object) {
          if (isArray(value)) {
            return false;
          }
          var type = typeof value;
          if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
            return true;
          }
          return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || (object != null && value in Object(object));
        }
        function isKeyable(value) {
          var type = typeof value;
          return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean') ? (value !== '__proto__') : (value === null);
        }
        function isLaziable(func) {
          var funcName = getFuncName(func),
              other = lodash[funcName];
          if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
            return false;
          }
          if (func === other) {
            return true;
          }
          var data = getData(other);
          return !!data && func === data[0];
        }
        function isMasked(func) {
          return !!maskSrcKey && (maskSrcKey in func);
        }
        var isMaskable = coreJsData ? isFunction : stubFalse;
        function isPrototype(value) {
          var Ctor = value && value.constructor,
              proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
          return value === proto;
        }
        function isStrictComparable(value) {
          return value === value && !isObject(value);
        }
        function matchesStrictComparable(key, srcValue) {
          return function(object) {
            if (object == null) {
              return false;
            }
            return object[key] === srcValue && (srcValue !== undefined || (key in Object(object)));
          };
        }
        function mergeData(data, source) {
          var bitmask = data[1],
              srcBitmask = source[1],
              newBitmask = bitmask | srcBitmask,
              isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);
          var isCombo = ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) || ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) || ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));
          if (!(isCommon || isCombo)) {
            return data;
          }
          if (srcBitmask & BIND_FLAG) {
            data[2] = source[2];
            newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;
          }
          var value = source[3];
          if (value) {
            var partials = data[3];
            data[3] = partials ? composeArgs(partials, value, source[4]) : value;
            data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
          }
          value = source[5];
          if (value) {
            partials = data[5];
            data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
            data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
          }
          value = source[7];
          if (value) {
            data[7] = value;
          }
          if (srcBitmask & ARY_FLAG) {
            data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
          }
          if (data[9] == null) {
            data[9] = source[9];
          }
          data[0] = source[0];
          data[1] = newBitmask;
          return data;
        }
        function mergeDefaults(objValue, srcValue, key, object, source, stack) {
          if (isObject(objValue) && isObject(srcValue)) {
            stack.set(srcValue, objValue);
            baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);
            stack['delete'](srcValue);
          }
          return objValue;
        }
        function nativeKeysIn(object) {
          var result = [];
          if (object != null) {
            for (var key in Object(object)) {
              result.push(key);
            }
          }
          return result;
        }
        function parent(object, path) {
          return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
        }
        function reorder(array, indexes) {
          var arrLength = array.length,
              length = nativeMin(indexes.length, arrLength),
              oldArray = copyArray(array);
          while (length--) {
            var index = indexes[length];
            array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
          }
          return array;
        }
        var setData = (function() {
          var count = 0,
              lastCalled = 0;
          return function(key, value) {
            var stamp = now(),
                remaining = HOT_SPAN - (stamp - lastCalled);
            lastCalled = stamp;
            if (remaining > 0) {
              if (++count >= HOT_COUNT) {
                return key;
              }
            } else {
              count = 0;
            }
            return baseSetData(key, value);
          };
        }());
        var setTimeout = ctxSetTimeout || function(func, wait) {
          return root.setTimeout(func, wait);
        };
        var setWrapToString = !defineProperty ? identity : function(wrapper, reference, bitmask) {
          var source = (reference + '');
          return defineProperty(wrapper, 'toString', {
            'configurable': true,
            'enumerable': false,
            'value': constant(insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)))
          });
        };
        var stringToPath = memoize(function(string) {
          string = toString(string);
          var result = [];
          if (reLeadingDot.test(string)) {
            result.push('');
          }
          string.replace(rePropName, function(match, number, quote, string) {
            result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
          });
          return result;
        });
        function toKey(value) {
          if (typeof value == 'string' || isSymbol(value)) {
            return value;
          }
          var result = (value + '');
          return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
        }
        function toSource(func) {
          if (func != null) {
            try {
              return funcToString.call(func);
            } catch (e) {}
            try {
              return (func + '');
            } catch (e) {}
          }
          return '';
        }
        function updateWrapDetails(details, bitmask) {
          arrayEach(wrapFlags, function(pair) {
            var value = '_.' + pair[0];
            if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
              details.push(value);
            }
          });
          return details.sort();
        }
        function wrapperClone(wrapper) {
          if (wrapper instanceof LazyWrapper) {
            return wrapper.clone();
          }
          var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
          result.__actions__ = copyArray(wrapper.__actions__);
          result.__index__ = wrapper.__index__;
          result.__values__ = wrapper.__values__;
          return result;
        }
        function chunk(array, size, guard) {
          if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
            size = 1;
          } else {
            size = nativeMax(toInteger(size), 0);
          }
          var length = array ? array.length : 0;
          if (!length || size < 1) {
            return [];
          }
          var index = 0,
              resIndex = 0,
              result = Array(nativeCeil(length / size));
          while (index < length) {
            result[resIndex++] = baseSlice(array, index, (index += size));
          }
          return result;
        }
        function compact(array) {
          var index = -1,
              length = array ? array.length : 0,
              resIndex = 0,
              result = [];
          while (++index < length) {
            var value = array[index];
            if (value) {
              result[resIndex++] = value;
            }
          }
          return result;
        }
        function concat() {
          var length = arguments.length,
              args = Array(length ? length - 1 : 0),
              array = arguments[0],
              index = length;
          while (index--) {
            args[index - 1] = arguments[index];
          }
          return length ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1)) : [];
        }
        var difference = baseRest(function(array, values) {
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
        });
        var differenceBy = baseRest(function(array, values) {
          var iteratee = last(values);
          if (isArrayLikeObject(iteratee)) {
            iteratee = undefined;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
        });
        var differenceWith = baseRest(function(array, values) {
          var comparator = last(values);
          if (isArrayLikeObject(comparator)) {
            comparator = undefined;
          }
          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator) : [];
        });
        function drop(array, n, guard) {
          var length = array ? array.length : 0;
          if (!length) {
            return [];
          }
          n = (guard || n === undefined) ? 1 : toInteger(n);
          return baseSlice(array, n < 0 ? 0 : n, length);
        }
        function dropRight(array, n, guard) {
          var length = array ? array.length : 0;
          if (!length) {
            return [];
          }
          n = (guard || n === undefined) ? 1 : toInteger(n);
          n = length - n;
          return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        function dropRightWhile(array, predicate) {
          return (array && array.length) ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
        }
        function dropWhile(array, predicate) {
          return (array && array.length) ? baseWhile(array, getIteratee(predicate, 3), true) : [];
        }
        function fill(array, value, start, end) {
          var length = array ? array.length : 0;
          if (!length) {
            return [];
          }
          if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
            start = 0;
            end = length;
          }
          return baseFill(array, value, start, end);
        }
        function findIndex(array, predicate, fromIndex) {
          var length = array ? array.length : 0;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index);
        }
        function findLastIndex(array, predicate, fromIndex) {
          var length = array ? array.length : 0;
          if (!length) {
            return -1;
          }
          var index = length - 1;
          if (fromIndex !== undefined) {
            index = toInteger(fromIndex);
            index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index, true);
        }
        function flatten(array) {
          var length = array ? array.length : 0;
          return length ? baseFlatten(array, 1) : [];
        }
        function flattenDeep(array) {
          var length = array ? array.length : 0;
          return length ? baseFlatten(array, INFINITY) : [];
        }
        function flattenDepth(array, depth) {
          var length = array ? array.length : 0;
          if (!length) {
            return [];
          }
          depth = depth === undefined ? 1 : toInteger(depth);
          return baseFlatten(array, depth);
        }
        function fromPairs(pairs) {
          var index = -1,
              length = pairs ? pairs.length : 0,
              result = {};
          while (++index < length) {
            var pair = pairs[index];
            result[pair[0]] = pair[1];
          }
          return result;
        }
        function head(array) {
          return (array && array.length) ? array[0] : undefined;
        }
        function indexOf(array, value, fromIndex) {
          var length = array ? array.length : 0;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger(fromIndex);
          if (index < 0) {
            index = nativeMax(length + index, 0);
          }
          return baseIndexOf(array, value, index);
        }
        function initial(array) {
          var length = array ? array.length : 0;
          return length ? baseSlice(array, 0, -1) : [];
        }
        var intersection = baseRest(function(arrays) {
          var mapped = arrayMap(arrays, castArrayLikeObject);
          return (mapped.length && mapped[0] === arrays[0]) ? baseIntersection(mapped) : [];
        });
        var intersectionBy = baseRest(function(arrays) {
          var iteratee = last(arrays),
              mapped = arrayMap(arrays, castArrayLikeObject);
          if (iteratee === last(mapped)) {
            iteratee = undefined;
          } else {
            mapped.pop();
          }
          return (mapped.length && mapped[0] === arrays[0]) ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
        });
        var intersectionWith = baseRest(function(arrays) {
          var comparator = last(arrays),
              mapped = arrayMap(arrays, castArrayLikeObject);
          if (comparator === last(mapped)) {
            comparator = undefined;
          } else {
            mapped.pop();
          }
          return (mapped.length && mapped[0] === arrays[0]) ? baseIntersection(mapped, undefined, comparator) : [];
        });
        function join(array, separator) {
          return array ? nativeJoin.call(array, separator) : '';
        }
        function last(array) {
          var length = array ? array.length : 0;
          return length ? array[length - 1] : undefined;
        }
        function lastIndexOf(array, value, fromIndex) {
          var length = array ? array.length : 0;
          if (!length) {
            return -1;
          }
          var index = length;
          if (fromIndex !== undefined) {
            index = toInteger(fromIndex);
            index = (index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)) + 1;
          }
          if (value !== value) {
            return baseFindIndex(array, baseIsNaN, index - 1, true);
          }
          while (index--) {
            if (array[index] === value) {
              return index;
            }
          }
          return -1;
        }
        function nth(array, n) {
          return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
        }
        var pull = baseRest(pullAll);
        function pullAll(array, values) {
          return (array && array.length && values && values.length) ? basePullAll(array, values) : array;
        }
        function pullAllBy(array, values, iteratee) {
          return (array && array.length && values && values.length) ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
        }
        function pullAllWith(array, values, comparator) {
          return (array && array.length && values && values.length) ? basePullAll(array, values, undefined, comparator) : array;
        }
        var pullAt = baseRest(function(array, indexes) {
          indexes = baseFlatten(indexes, 1);
          var length = array ? array.length : 0,
              result = baseAt(array, indexes);
          basePullAt(array, arrayMap(indexes, function(index) {
            return isIndex(index, length) ? +index : index;
          }).sort(compareAscending));
          return result;
        });
        function remove(array, predicate) {
          var result = [];
          if (!(array && array.length)) {
            return result;
          }
          var index = -1,
              indexes = [],
              length = array.length;
          predicate = getIteratee(predicate, 3);
          while (++index < length) {
            var value = array[index];
            if (predicate(value, index, array)) {
              result.push(value);
              indexes.push(index);
            }
          }
          basePullAt(array, indexes);
          return result;
        }
        function reverse(array) {
          return array ? nativeReverse.call(array) : array;
        }
        function slice(array, start, end) {
          var length = array ? array.length : 0;
          if (!length) {
            return [];
          }
          if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
            start = 0;
            end = length;
          } else {
            start = start == null ? 0 : toInteger(start);
            end = end === undefined ? length : toInteger(end);
          }
          return baseSlice(array, start, end);
        }
        function sortedIndex(array, value) {
          return baseSortedIndex(array, value);
        }
        function sortedIndexBy(array, value, iteratee) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
        }
        function sortedIndexOf(array, value) {
          var length = array ? array.length : 0;
          if (length) {
            var index = baseSortedIndex(array, value);
            if (index < length && eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedLastIndex(array, value) {
          return baseSortedIndex(array, value, true);
        }
        function sortedLastIndexBy(array, value, iteratee) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
        }
        function sortedLastIndexOf(array, value) {
          var length = array ? array.length : 0;
          if (length) {
            var index = baseSortedIndex(array, value, true) - 1;
            if (eq(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedUniq(array) {
          return (array && array.length) ? baseSortedUniq(array) : [];
        }
        function sortedUniqBy(array, iteratee) {
          return (array && array.length) ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
        }
        function tail(array) {
          var length = array ? array.length : 0;
          return length ? baseSlice(array, 1, length) : [];
        }
        function take(array, n, guard) {
          if (!(array && array.length)) {
            return [];
          }
          n = (guard || n === undefined) ? 1 : toInteger(n);
          return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        function takeRight(array, n, guard) {
          var length = array ? array.length : 0;
          if (!length) {
            return [];
          }
          n = (guard || n === undefined) ? 1 : toInteger(n);
          n = length - n;
          return baseSlice(array, n < 0 ? 0 : n, length);
        }
        function takeRightWhile(array, predicate) {
          return (array && array.length) ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
        }
        function takeWhile(array, predicate) {
          return (array && array.length) ? baseWhile(array, getIteratee(predicate, 3)) : [];
        }
        var union = baseRest(function(arrays) {
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
        });
        var unionBy = baseRest(function(arrays) {
          var iteratee = last(arrays);
          if (isArrayLikeObject(iteratee)) {
            iteratee = undefined;
          }
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
        });
        var unionWith = baseRest(function(arrays) {
          var comparator = last(arrays);
          if (isArrayLikeObject(comparator)) {
            comparator = undefined;
          }
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
        });
        function uniq(array) {
          return (array && array.length) ? baseUniq(array) : [];
        }
        function uniqBy(array, iteratee) {
          return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
        }
        function uniqWith(array, comparator) {
          return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
        }
        function unzip(array) {
          if (!(array && array.length)) {
            return [];
          }
          var length = 0;
          array = arrayFilter(array, function(group) {
            if (isArrayLikeObject(group)) {
              length = nativeMax(group.length, length);
              return true;
            }
          });
          return baseTimes(length, function(index) {
            return arrayMap(array, baseProperty(index));
          });
        }
        function unzipWith(array, iteratee) {
          if (!(array && array.length)) {
            return [];
          }
          var result = unzip(array);
          if (iteratee == null) {
            return result;
          }
          return arrayMap(result, function(group) {
            return apply(iteratee, undefined, group);
          });
        }
        var without = baseRest(function(array, values) {
          return isArrayLikeObject(array) ? baseDifference(array, values) : [];
        });
        var xor = baseRest(function(arrays) {
          return baseXor(arrayFilter(arrays, isArrayLikeObject));
        });
        var xorBy = baseRest(function(arrays) {
          var iteratee = last(arrays);
          if (isArrayLikeObject(iteratee)) {
            iteratee = undefined;
          }
          return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
        });
        var xorWith = baseRest(function(arrays) {
          var comparator = last(arrays);
          if (isArrayLikeObject(comparator)) {
            comparator = undefined;
          }
          return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
        });
        var zip = baseRest(unzip);
        function zipObject(props, values) {
          return baseZipObject(props || [], values || [], assignValue);
        }
        function zipObjectDeep(props, values) {
          return baseZipObject(props || [], values || [], baseSet);
        }
        var zipWith = baseRest(function(arrays) {
          var length = arrays.length,
              iteratee = length > 1 ? arrays[length - 1] : undefined;
          iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
          return unzipWith(arrays, iteratee);
        });
        function chain(value) {
          var result = lodash(value);
          result.__chain__ = true;
          return result;
        }
        function tap(value, interceptor) {
          interceptor(value);
          return value;
        }
        function thru(value, interceptor) {
          return interceptor(value);
        }
        var wrapperAt = baseRest(function(paths) {
          paths = baseFlatten(paths, 1);
          var length = paths.length,
              start = length ? paths[0] : 0,
              value = this.__wrapped__,
              interceptor = function(object) {
                return baseAt(object, paths);
              };
          if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
            return this.thru(interceptor);
          }
          value = value.slice(start, +start + (length ? 1 : 0));
          value.__actions__.push({
            'func': thru,
            'args': [interceptor],
            'thisArg': undefined
          });
          return new LodashWrapper(value, this.__chain__).thru(function(array) {
            if (length && !array.length) {
              array.push(undefined);
            }
            return array;
          });
        });
        function wrapperChain() {
          return chain(this);
        }
        function wrapperCommit() {
          return new LodashWrapper(this.value(), this.__chain__);
        }
        function wrapperNext() {
          if (this.__values__ === undefined) {
            this.__values__ = toArray(this.value());
          }
          var done = this.__index__ >= this.__values__.length,
              value = done ? undefined : this.__values__[this.__index__++];
          return {
            'done': done,
            'value': value
          };
        }
        function wrapperToIterator() {
          return this;
        }
        function wrapperPlant(value) {
          var result,
              parent = this;
          while (parent instanceof baseLodash) {
            var clone = wrapperClone(parent);
            clone.__index__ = 0;
            clone.__values__ = undefined;
            if (result) {
              previous.__wrapped__ = clone;
            } else {
              result = clone;
            }
            var previous = clone;
            parent = parent.__wrapped__;
          }
          previous.__wrapped__ = value;
          return result;
        }
        function wrapperReverse() {
          var value = this.__wrapped__;
          if (value instanceof LazyWrapper) {
            var wrapped = value;
            if (this.__actions__.length) {
              wrapped = new LazyWrapper(this);
            }
            wrapped = wrapped.reverse();
            wrapped.__actions__.push({
              'func': thru,
              'args': [reverse],
              'thisArg': undefined
            });
            return new LodashWrapper(wrapped, this.__chain__);
          }
          return this.thru(reverse);
        }
        function wrapperValue() {
          return baseWrapperValue(this.__wrapped__, this.__actions__);
        }
        var countBy = createAggregator(function(result, value, key) {
          hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);
        });
        function every(collection, predicate, guard) {
          var func = isArray(collection) ? arrayEvery : baseEvery;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        function filter(collection, predicate) {
          var func = isArray(collection) ? arrayFilter : baseFilter;
          return func(collection, getIteratee(predicate, 3));
        }
        var find = createFind(findIndex);
        var findLast = createFind(findLastIndex);
        function flatMap(collection, iteratee) {
          return baseFlatten(map(collection, iteratee), 1);
        }
        function flatMapDeep(collection, iteratee) {
          return baseFlatten(map(collection, iteratee), INFINITY);
        }
        function flatMapDepth(collection, iteratee, depth) {
          depth = depth === undefined ? 1 : toInteger(depth);
          return baseFlatten(map(collection, iteratee), depth);
        }
        function forEach(collection, iteratee) {
          var func = isArray(collection) ? arrayEach : baseEach;
          return func(collection, getIteratee(iteratee, 3));
        }
        function forEachRight(collection, iteratee) {
          var func = isArray(collection) ? arrayEachRight : baseEachRight;
          return func(collection, getIteratee(iteratee, 3));
        }
        var groupBy = createAggregator(function(result, value, key) {
          if (hasOwnProperty.call(result, key)) {
            result[key].push(value);
          } else {
            result[key] = [value];
          }
        });
        function includes(collection, value, fromIndex, guard) {
          collection = isArrayLike(collection) ? collection : values(collection);
          fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;
          var length = collection.length;
          if (fromIndex < 0) {
            fromIndex = nativeMax(length + fromIndex, 0);
          }
          return isString(collection) ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1) : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
        }
        var invokeMap = baseRest(function(collection, path, args) {
          var index = -1,
              isFunc = typeof path == 'function',
              isProp = isKey(path),
              result = isArrayLike(collection) ? Array(collection.length) : [];
          baseEach(collection, function(value) {
            var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);
            result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);
          });
          return result;
        });
        var keyBy = createAggregator(function(result, value, key) {
          result[key] = value;
        });
        function map(collection, iteratee) {
          var func = isArray(collection) ? arrayMap : baseMap;
          return func(collection, getIteratee(iteratee, 3));
        }
        function orderBy(collection, iteratees, orders, guard) {
          if (collection == null) {
            return [];
          }
          if (!isArray(iteratees)) {
            iteratees = iteratees == null ? [] : [iteratees];
          }
          orders = guard ? undefined : orders;
          if (!isArray(orders)) {
            orders = orders == null ? [] : [orders];
          }
          return baseOrderBy(collection, iteratees, orders);
        }
        var partition = createAggregator(function(result, value, key) {
          result[key ? 0 : 1].push(value);
        }, function() {
          return [[], []];
        });
        function reduce(collection, iteratee, accumulator) {
          var func = isArray(collection) ? arrayReduce : baseReduce,
              initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
        }
        function reduceRight(collection, iteratee, accumulator) {
          var func = isArray(collection) ? arrayReduceRight : baseReduce,
              initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
        }
        function reject(collection, predicate) {
          var func = isArray(collection) ? arrayFilter : baseFilter;
          return func(collection, negate(getIteratee(predicate, 3)));
        }
        function sample(collection) {
          var array = isArrayLike(collection) ? collection : values(collection),
              length = array.length;
          return length > 0 ? array[baseRandom(0, length - 1)] : undefined;
        }
        function sampleSize(collection, n, guard) {
          var index = -1,
              result = toArray(collection),
              length = result.length,
              lastIndex = length - 1;
          if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
            n = 1;
          } else {
            n = baseClamp(toInteger(n), 0, length);
          }
          while (++index < n) {
            var rand = baseRandom(index, lastIndex),
                value = result[rand];
            result[rand] = result[index];
            result[index] = value;
          }
          result.length = n;
          return result;
        }
        function shuffle(collection) {
          return sampleSize(collection, MAX_ARRAY_LENGTH);
        }
        function size(collection) {
          if (collection == null) {
            return 0;
          }
          if (isArrayLike(collection)) {
            return isString(collection) ? stringSize(collection) : collection.length;
          }
          var tag = getTag(collection);
          if (tag == mapTag || tag == setTag) {
            return collection.size;
          }
          return baseKeys(collection).length;
        }
        function some(collection, predicate, guard) {
          var func = isArray(collection) ? arraySome : baseSome;
          if (guard && isIterateeCall(collection, predicate, guard)) {
            predicate = undefined;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        var sortBy = baseRest(function(collection, iteratees) {
          if (collection == null) {
            return [];
          }
          var length = iteratees.length;
          if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
            iteratees = [];
          } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
            iteratees = [iteratees[0]];
          }
          return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
        });
        var now = ctxNow || function() {
          return root.Date.now();
        };
        function after(n, func) {
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          n = toInteger(n);
          return function() {
            if (--n < 1) {
              return func.apply(this, arguments);
            }
          };
        }
        function ary(func, n, guard) {
          n = guard ? undefined : n;
          n = (func && n == null) ? func.length : n;
          return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);
        }
        function before(n, func) {
          var result;
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          n = toInteger(n);
          return function() {
            if (--n > 0) {
              result = func.apply(this, arguments);
            }
            if (n <= 1) {
              func = undefined;
            }
            return result;
          };
        }
        var bind = baseRest(function(func, thisArg, partials) {
          var bitmask = BIND_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bind));
            bitmask |= PARTIAL_FLAG;
          }
          return createWrap(func, bitmask, thisArg, partials, holders);
        });
        var bindKey = baseRest(function(object, key, partials) {
          var bitmask = BIND_FLAG | BIND_KEY_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bindKey));
            bitmask |= PARTIAL_FLAG;
          }
          return createWrap(key, bitmask, object, partials, holders);
        });
        function curry(func, arity, guard) {
          arity = guard ? undefined : arity;
          var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
          result.placeholder = curry.placeholder;
          return result;
        }
        function curryRight(func, arity, guard) {
          arity = guard ? undefined : arity;
          var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
          result.placeholder = curryRight.placeholder;
          return result;
        }
        function debounce(func, wait, options) {
          var lastArgs,
              lastThis,
              maxWait,
              result,
              timerId,
              lastCallTime,
              lastInvokeTime = 0,
              leading = false,
              maxing = false,
              trailing = true;
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject(options)) {
            leading = !!options.leading;
            maxing = 'maxWait' in options;
            maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
            trailing = 'trailing' in options ? !!options.trailing : trailing;
          }
          function invokeFunc(time) {
            var args = lastArgs,
                thisArg = lastThis;
            lastArgs = lastThis = undefined;
            lastInvokeTime = time;
            result = func.apply(thisArg, args);
            return result;
          }
          function leadingEdge(time) {
            lastInvokeTime = time;
            timerId = setTimeout(timerExpired, wait);
            return leading ? invokeFunc(time) : result;
          }
          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime,
                timeSinceLastInvoke = time - lastInvokeTime,
                result = wait - timeSinceLastCall;
            return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
          }
          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime,
                timeSinceLastInvoke = time - lastInvokeTime;
            return (lastCallTime === undefined || (timeSinceLastCall >= wait) || (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
          }
          function timerExpired() {
            var time = now();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            timerId = setTimeout(timerExpired, remainingWait(time));
          }
          function trailingEdge(time) {
            timerId = undefined;
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined;
            return result;
          }
          function cancel() {
            if (timerId !== undefined) {
              clearTimeout(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined;
          }
          function flush() {
            return timerId === undefined ? result : trailingEdge(now());
          }
          function debounced() {
            var time = now(),
                isInvoking = shouldInvoke(time);
            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;
            if (isInvoking) {
              if (timerId === undefined) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                timerId = setTimeout(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined) {
              timerId = setTimeout(timerExpired, wait);
            }
            return result;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }
        var defer = baseRest(function(func, args) {
          return baseDelay(func, 1, args);
        });
        var delay = baseRest(function(func, wait, args) {
          return baseDelay(func, toNumber(wait) || 0, args);
        });
        function flip(func) {
          return createWrap(func, FLIP_FLAG);
        }
        function memoize(func, resolver) {
          if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          var memoized = function() {
            var args = arguments,
                key = resolver ? resolver.apply(this, args) : args[0],
                cache = memoized.cache;
            if (cache.has(key)) {
              return cache.get(key);
            }
            var result = func.apply(this, args);
            memoized.cache = cache.set(key, result);
            return result;
          };
          memoized.cache = new (memoize.Cache || MapCache);
          return memoized;
        }
        memoize.Cache = MapCache;
        function negate(predicate) {
          if (typeof predicate != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return !predicate.call(this);
              case 1:
                return !predicate.call(this, args[0]);
              case 2:
                return !predicate.call(this, args[0], args[1]);
              case 3:
                return !predicate.call(this, args[0], args[1], args[2]);
            }
            return !predicate.apply(this, args);
          };
        }
        function once(func) {
          return before(2, func);
        }
        var overArgs = baseRest(function(func, transforms) {
          transforms = (transforms.length == 1 && isArray(transforms[0])) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
          var funcsLength = transforms.length;
          return baseRest(function(args) {
            var index = -1,
                length = nativeMin(args.length, funcsLength);
            while (++index < length) {
              args[index] = transforms[index].call(this, args[index]);
            }
            return apply(func, this, args);
          });
        });
        var partial = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partial));
          return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);
        });
        var partialRight = baseRest(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partialRight));
          return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);
        });
        var rearg = baseRest(function(func, indexes) {
          return createWrap(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));
        });
        function rest(func, start) {
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          start = start === undefined ? start : toInteger(start);
          return baseRest(func, start);
        }
        function spread(func, start) {
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          start = start === undefined ? 0 : nativeMax(toInteger(start), 0);
          return baseRest(function(args) {
            var array = args[start],
                otherArgs = castSlice(args, 0, start);
            if (array) {
              arrayPush(otherArgs, array);
            }
            return apply(func, this, otherArgs);
          });
        }
        function throttle(func, wait, options) {
          var leading = true,
              trailing = true;
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (isObject(options)) {
            leading = 'leading' in options ? !!options.leading : leading;
            trailing = 'trailing' in options ? !!options.trailing : trailing;
          }
          return debounce(func, wait, {
            'leading': leading,
            'maxWait': wait,
            'trailing': trailing
          });
        }
        function unary(func) {
          return ary(func, 1);
        }
        function wrap(value, wrapper) {
          wrapper = wrapper == null ? identity : wrapper;
          return partial(wrapper, value);
        }
        function castArray() {
          if (!arguments.length) {
            return [];
          }
          var value = arguments[0];
          return isArray(value) ? value : [value];
        }
        function clone(value) {
          return baseClone(value, false, true);
        }
        function cloneWith(value, customizer) {
          return baseClone(value, false, true, customizer);
        }
        function cloneDeep(value) {
          return baseClone(value, true, true);
        }
        function cloneDeepWith(value, customizer) {
          return baseClone(value, true, true, customizer);
        }
        function conformsTo(object, source) {
          return source == null || baseConformsTo(object, source, keys(source));
        }
        function eq(value, other) {
          return value === other || (value !== value && other !== other);
        }
        var gt = createRelationalOperation(baseGt);
        var gte = createRelationalOperation(function(value, other) {
          return value >= other;
        });
        function isArguments(value) {
          return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
        }
        var isArray = Array.isArray;
        var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
        function isArrayLike(value) {
          return value != null && isLength(value.length) && !isFunction(value);
        }
        function isArrayLikeObject(value) {
          return isObjectLike(value) && isArrayLike(value);
        }
        function isBoolean(value) {
          return value === true || value === false || (isObjectLike(value) && objectToString.call(value) == boolTag);
        }
        var isBuffer = nativeIsBuffer || stubFalse;
        var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
        function isElement(value) {
          return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);
        }
        function isEmpty(value) {
          if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isArguments(value))) {
            return !value.length;
          }
          var tag = getTag(value);
          if (tag == mapTag || tag == setTag) {
            return !value.size;
          }
          if (nonEnumShadows || isPrototype(value)) {
            return !nativeKeys(value).length;
          }
          for (var key in value) {
            if (hasOwnProperty.call(value, key)) {
              return false;
            }
          }
          return true;
        }
        function isEqual(value, other) {
          return baseIsEqual(value, other);
        }
        function isEqualWith(value, other, customizer) {
          customizer = typeof customizer == 'function' ? customizer : undefined;
          var result = customizer ? customizer(value, other) : undefined;
          return result === undefined ? baseIsEqual(value, other, customizer) : !!result;
        }
        function isError(value) {
          if (!isObjectLike(value)) {
            return false;
          }
          return (objectToString.call(value) == errorTag) || (typeof value.message == 'string' && typeof value.name == 'string');
        }
        function isFinite(value) {
          return typeof value == 'number' && nativeIsFinite(value);
        }
        function isFunction(value) {
          var tag = isObject(value) ? objectToString.call(value) : '';
          return tag == funcTag || tag == genTag;
        }
        function isInteger(value) {
          return typeof value == 'number' && value == toInteger(value);
        }
        function isLength(value) {
          return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }
        function isObject(value) {
          var type = typeof value;
          return !!value && (type == 'object' || type == 'function');
        }
        function isObjectLike(value) {
          return !!value && typeof value == 'object';
        }
        var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
        function isMatch(object, source) {
          return object === source || baseIsMatch(object, source, getMatchData(source));
        }
        function isMatchWith(object, source, customizer) {
          customizer = typeof customizer == 'function' ? customizer : undefined;
          return baseIsMatch(object, source, getMatchData(source), customizer);
        }
        function isNaN(value) {
          return isNumber(value) && value != +value;
        }
        function isNative(value) {
          if (isMaskable(value)) {
            throw new Error('This method is not supported with core-js. Try https://github.com/es-shims.');
          }
          return baseIsNative(value);
        }
        function isNull(value) {
          return value === null;
        }
        function isNil(value) {
          return value == null;
        }
        function isNumber(value) {
          return typeof value == 'number' || (isObjectLike(value) && objectToString.call(value) == numberTag);
        }
        function isPlainObject(value) {
          if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
            return false;
          }
          var proto = getPrototype(value);
          if (proto === null) {
            return true;
          }
          var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
          return (typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
        }
        var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
        function isSafeInteger(value) {
          return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
        }
        var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
        function isString(value) {
          return typeof value == 'string' || (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
        }
        function isSymbol(value) {
          return typeof value == 'symbol' || (isObjectLike(value) && objectToString.call(value) == symbolTag);
        }
        var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
        function isUndefined(value) {
          return value === undefined;
        }
        function isWeakMap(value) {
          return isObjectLike(value) && getTag(value) == weakMapTag;
        }
        function isWeakSet(value) {
          return isObjectLike(value) && objectToString.call(value) == weakSetTag;
        }
        var lt = createRelationalOperation(baseLt);
        var lte = createRelationalOperation(function(value, other) {
          return value <= other;
        });
        function toArray(value) {
          if (!value) {
            return [];
          }
          if (isArrayLike(value)) {
            return isString(value) ? stringToArray(value) : copyArray(value);
          }
          if (iteratorSymbol && value[iteratorSymbol]) {
            return iteratorToArray(value[iteratorSymbol]());
          }
          var tag = getTag(value),
              func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);
          return func(value);
        }
        function toFinite(value) {
          if (!value) {
            return value === 0 ? value : 0;
          }
          value = toNumber(value);
          if (value === INFINITY || value === -INFINITY) {
            var sign = (value < 0 ? -1 : 1);
            return sign * MAX_INTEGER;
          }
          return value === value ? value : 0;
        }
        function toInteger(value) {
          var result = toFinite(value),
              remainder = result % 1;
          return result === result ? (remainder ? result - remainder : result) : 0;
        }
        function toLength(value) {
          return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
        }
        function toNumber(value) {
          if (typeof value == 'number') {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          if (isObject(value)) {
            var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
            value = isObject(other) ? (other + '') : other;
          }
          if (typeof value != 'string') {
            return value === 0 ? value : +value;
          }
          value = value.replace(reTrim, '');
          var isBinary = reIsBinary.test(value);
          return (isBinary || reIsOctal.test(value)) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : (reIsBadHex.test(value) ? NAN : +value);
        }
        function toPlainObject(value) {
          return copyObject(value, keysIn(value));
        }
        function toSafeInteger(value) {
          return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
        }
        function toString(value) {
          return value == null ? '' : baseToString(value);
        }
        var assign = createAssigner(function(object, source) {
          if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
            copyObject(source, keys(source), object);
            return;
          }
          for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
              assignValue(object, key, source[key]);
            }
          }
        });
        var assignIn = createAssigner(function(object, source) {
          copyObject(source, keysIn(source), object);
        });
        var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keysIn(source), object, customizer);
        });
        var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
          copyObject(source, keys(source), object, customizer);
        });
        var at = baseRest(function(object, paths) {
          return baseAt(object, baseFlatten(paths, 1));
        });
        function create(prototype, properties) {
          var result = baseCreate(prototype);
          return properties ? baseAssign(result, properties) : result;
        }
        var defaults = baseRest(function(args) {
          args.push(undefined, assignInDefaults);
          return apply(assignInWith, undefined, args);
        });
        var defaultsDeep = baseRest(function(args) {
          args.push(undefined, mergeDefaults);
          return apply(mergeWith, undefined, args);
        });
        function findKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
        }
        function findLastKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
        }
        function forIn(object, iteratee) {
          return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
        }
        function forInRight(object, iteratee) {
          return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
        }
        function forOwn(object, iteratee) {
          return object && baseForOwn(object, getIteratee(iteratee, 3));
        }
        function forOwnRight(object, iteratee) {
          return object && baseForOwnRight(object, getIteratee(iteratee, 3));
        }
        function functions(object) {
          return object == null ? [] : baseFunctions(object, keys(object));
        }
        function functionsIn(object) {
          return object == null ? [] : baseFunctions(object, keysIn(object));
        }
        function get(object, path, defaultValue) {
          var result = object == null ? undefined : baseGet(object, path);
          return result === undefined ? defaultValue : result;
        }
        function has(object, path) {
          return object != null && hasPath(object, path, baseHas);
        }
        function hasIn(object, path) {
          return object != null && hasPath(object, path, baseHasIn);
        }
        var invert = createInverter(function(result, value, key) {
          result[value] = key;
        }, constant(identity));
        var invertBy = createInverter(function(result, value, key) {
          if (hasOwnProperty.call(result, value)) {
            result[value].push(key);
          } else {
            result[value] = [key];
          }
        }, getIteratee);
        var invoke = baseRest(baseInvoke);
        function keys(object) {
          return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }
        function keysIn(object) {
          return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
        }
        function mapKeys(object, iteratee) {
          var result = {};
          iteratee = getIteratee(iteratee, 3);
          baseForOwn(object, function(value, key, object) {
            result[iteratee(value, key, object)] = value;
          });
          return result;
        }
        function mapValues(object, iteratee) {
          var result = {};
          iteratee = getIteratee(iteratee, 3);
          baseForOwn(object, function(value, key, object) {
            result[key] = iteratee(value, key, object);
          });
          return result;
        }
        var merge = createAssigner(function(object, source, srcIndex) {
          baseMerge(object, source, srcIndex);
        });
        var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
          baseMerge(object, source, srcIndex, customizer);
        });
        var omit = baseRest(function(object, props) {
          if (object == null) {
            return {};
          }
          props = arrayMap(baseFlatten(props, 1), toKey);
          return basePick(object, baseDifference(getAllKeysIn(object), props));
        });
        function omitBy(object, predicate) {
          return pickBy(object, negate(getIteratee(predicate)));
        }
        var pick = baseRest(function(object, props) {
          return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));
        });
        function pickBy(object, predicate) {
          return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));
        }
        function result(object, path, defaultValue) {
          path = isKey(path, object) ? [path] : castPath(path);
          var index = -1,
              length = path.length;
          if (!length) {
            object = undefined;
            length = 1;
          }
          while (++index < length) {
            var value = object == null ? undefined : object[toKey(path[index])];
            if (value === undefined) {
              index = length;
              value = defaultValue;
            }
            object = isFunction(value) ? value.call(object) : value;
          }
          return object;
        }
        function set(object, path, value) {
          return object == null ? object : baseSet(object, path, value);
        }
        function setWith(object, path, value, customizer) {
          customizer = typeof customizer == 'function' ? customizer : undefined;
          return object == null ? object : baseSet(object, path, value, customizer);
        }
        var toPairs = createToPairs(keys);
        var toPairsIn = createToPairs(keysIn);
        function transform(object, iteratee, accumulator) {
          var isArr = isArray(object) || isTypedArray(object);
          iteratee = getIteratee(iteratee, 4);
          if (accumulator == null) {
            if (isArr || isObject(object)) {
              var Ctor = object.constructor;
              if (isArr) {
                accumulator = isArray(object) ? new Ctor : [];
              } else {
                accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
              }
            } else {
              accumulator = {};
            }
          }
          (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {
            return iteratee(accumulator, value, index, object);
          });
          return accumulator;
        }
        function unset(object, path) {
          return object == null ? true : baseUnset(object, path);
        }
        function update(object, path, updater) {
          return object == null ? object : baseUpdate(object, path, castFunction(updater));
        }
        function updateWith(object, path, updater, customizer) {
          customizer = typeof customizer == 'function' ? customizer : undefined;
          return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
        }
        function values(object) {
          return object ? baseValues(object, keys(object)) : [];
        }
        function valuesIn(object) {
          return object == null ? [] : baseValues(object, keysIn(object));
        }
        function clamp(number, lower, upper) {
          if (upper === undefined) {
            upper = lower;
            lower = undefined;
          }
          if (upper !== undefined) {
            upper = toNumber(upper);
            upper = upper === upper ? upper : 0;
          }
          if (lower !== undefined) {
            lower = toNumber(lower);
            lower = lower === lower ? lower : 0;
          }
          return baseClamp(toNumber(number), lower, upper);
        }
        function inRange(number, start, end) {
          start = toFinite(start);
          if (end === undefined) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }
          number = toNumber(number);
          return baseInRange(number, start, end);
        }
        function random(lower, upper, floating) {
          if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
            upper = floating = undefined;
          }
          if (floating === undefined) {
            if (typeof upper == 'boolean') {
              floating = upper;
              upper = undefined;
            } else if (typeof lower == 'boolean') {
              floating = lower;
              lower = undefined;
            }
          }
          if (lower === undefined && upper === undefined) {
            lower = 0;
            upper = 1;
          } else {
            lower = toFinite(lower);
            if (upper === undefined) {
              upper = lower;
              lower = 0;
            } else {
              upper = toFinite(upper);
            }
          }
          if (lower > upper) {
            var temp = lower;
            lower = upper;
            upper = temp;
          }
          if (floating || lower % 1 || upper % 1) {
            var rand = nativeRandom();
            return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
          }
          return baseRandom(lower, upper);
        }
        var camelCase = createCompounder(function(result, word, index) {
          word = word.toLowerCase();
          return result + (index ? capitalize(word) : word);
        });
        function capitalize(string) {
          return upperFirst(toString(string).toLowerCase());
        }
        function deburr(string) {
          string = toString(string);
          return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
        }
        function endsWith(string, target, position) {
          string = toString(string);
          target = baseToString(target);
          var length = string.length;
          position = position === undefined ? length : baseClamp(toInteger(position), 0, length);
          var end = position;
          position -= target.length;
          return position >= 0 && string.slice(position, end) == target;
        }
        function escape(string) {
          string = toString(string);
          return (string && reHasUnescapedHtml.test(string)) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
        }
        function escapeRegExp(string) {
          string = toString(string);
          return (string && reHasRegExpChar.test(string)) ? string.replace(reRegExpChar, '\\$&') : string;
        }
        var kebabCase = createCompounder(function(result, word, index) {
          return result + (index ? '-' : '') + word.toLowerCase();
        });
        var lowerCase = createCompounder(function(result, word, index) {
          return result + (index ? ' ' : '') + word.toLowerCase();
        });
        var lowerFirst = createCaseFirst('toLowerCase');
        function pad(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          if (!length || strLength >= length) {
            return string;
          }
          var mid = (length - strLength) / 2;
          return (createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars));
        }
        function padEnd(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          return (length && strLength < length) ? (string + createPadding(length - strLength, chars)) : string;
        }
        function padStart(string, length, chars) {
          string = toString(string);
          length = toInteger(length);
          var strLength = length ? stringSize(string) : 0;
          return (length && strLength < length) ? (createPadding(length - strLength, chars) + string) : string;
        }
        function parseInt(string, radix, guard) {
          if (guard || radix == null) {
            radix = 0;
          } else if (radix) {
            radix = +radix;
          }
          string = toString(string).replace(reTrim, '');
          return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));
        }
        function repeat(string, n, guard) {
          if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
            n = 1;
          } else {
            n = toInteger(n);
          }
          return baseRepeat(toString(string), n);
        }
        function replace() {
          var args = arguments,
              string = toString(args[0]);
          return args.length < 3 ? string : string.replace(args[1], args[2]);
        }
        var snakeCase = createCompounder(function(result, word, index) {
          return result + (index ? '_' : '') + word.toLowerCase();
        });
        function split(string, separator, limit) {
          if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
            separator = limit = undefined;
          }
          limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
          if (!limit) {
            return [];
          }
          string = toString(string);
          if (string && (typeof separator == 'string' || (separator != null && !isRegExp(separator)))) {
            separator = baseToString(separator);
            if (!separator && hasUnicode(string)) {
              return castSlice(stringToArray(string), 0, limit);
            }
          }
          return string.split(separator, limit);
        }
        var startCase = createCompounder(function(result, word, index) {
          return result + (index ? ' ' : '') + upperFirst(word);
        });
        function startsWith(string, target, position) {
          string = toString(string);
          position = baseClamp(toInteger(position), 0, string.length);
          target = baseToString(target);
          return string.slice(position, position + target.length) == target;
        }
        function template(string, options, guard) {
          var settings = lodash.templateSettings;
          if (guard && isIterateeCall(string, options, guard)) {
            options = undefined;
          }
          string = toString(string);
          options = assignInWith({}, options, settings, assignInDefaults);
          var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),
              importsKeys = keys(imports),
              importsValues = baseValues(imports, importsKeys);
          var isEscaping,
              isEvaluating,
              index = 0,
              interpolate = options.interpolate || reNoMatch,
              source = "__p += '";
          var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');
          var sourceURL = '//# sourceURL=' + ('sourceURL' in options ? options.sourceURL : ('lodash.templateSources[' + (++templateCounter) + ']')) + '\n';
          string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
            interpolateValue || (interpolateValue = esTemplateValue);
            source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
            if (escapeValue) {
              isEscaping = true;
              source += "' +\n__e(" + escapeValue + ") +\n'";
            }
            if (evaluateValue) {
              isEvaluating = true;
              source += "';\n" + evaluateValue + ";\n__p += '";
            }
            if (interpolateValue) {
              source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
            }
            index = offset + match.length;
            return match;
          });
          source += "';\n";
          var variable = options.variable;
          if (!variable) {
            source = 'with (obj) {\n' + source + '\n}\n';
          }
          source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');
          source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\n' + "function print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';
          var result = attempt(function() {
            return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);
          });
          result.source = source;
          if (isError(result)) {
            throw result;
          }
          return result;
        }
        function toLower(value) {
          return toString(value).toLowerCase();
        }
        function toUpper(value) {
          return toString(value).toUpperCase();
        }
        function trim(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined)) {
            return string.replace(reTrim, '');
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string),
              chrSymbols = stringToArray(chars),
              start = charsStartIndex(strSymbols, chrSymbols),
              end = charsEndIndex(strSymbols, chrSymbols) + 1;
          return castSlice(strSymbols, start, end).join('');
        }
        function trimEnd(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined)) {
            return string.replace(reTrimEnd, '');
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string),
              end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
          return castSlice(strSymbols, 0, end).join('');
        }
        function trimStart(string, chars, guard) {
          string = toString(string);
          if (string && (guard || chars === undefined)) {
            return string.replace(reTrimStart, '');
          }
          if (!string || !(chars = baseToString(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string),
              start = charsStartIndex(strSymbols, stringToArray(chars));
          return castSlice(strSymbols, start).join('');
        }
        function truncate(string, options) {
          var length = DEFAULT_TRUNC_LENGTH,
              omission = DEFAULT_TRUNC_OMISSION;
          if (isObject(options)) {
            var separator = 'separator' in options ? options.separator : separator;
            length = 'length' in options ? toInteger(options.length) : length;
            omission = 'omission' in options ? baseToString(options.omission) : omission;
          }
          string = toString(string);
          var strLength = string.length;
          if (hasUnicode(string)) {
            var strSymbols = stringToArray(string);
            strLength = strSymbols.length;
          }
          if (length >= strLength) {
            return string;
          }
          var end = length - stringSize(omission);
          if (end < 1) {
            return omission;
          }
          var result = strSymbols ? castSlice(strSymbols, 0, end).join('') : string.slice(0, end);
          if (separator === undefined) {
            return result + omission;
          }
          if (strSymbols) {
            end += (result.length - end);
          }
          if (isRegExp(separator)) {
            if (string.slice(end).search(separator)) {
              var match,
                  substring = result;
              if (!separator.global) {
                separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
              }
              separator.lastIndex = 0;
              while ((match = separator.exec(substring))) {
                var newEnd = match.index;
              }
              result = result.slice(0, newEnd === undefined ? end : newEnd);
            }
          } else if (string.indexOf(baseToString(separator), end) != end) {
            var index = result.lastIndexOf(separator);
            if (index > -1) {
              result = result.slice(0, index);
            }
          }
          return result + omission;
        }
        function unescape(string) {
          string = toString(string);
          return (string && reHasEscapedHtml.test(string)) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
        }
        var upperCase = createCompounder(function(result, word, index) {
          return result + (index ? ' ' : '') + word.toUpperCase();
        });
        var upperFirst = createCaseFirst('toUpperCase');
        function words(string, pattern, guard) {
          string = toString(string);
          pattern = guard ? undefined : pattern;
          if (pattern === undefined) {
            return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
          }
          return string.match(pattern) || [];
        }
        var attempt = baseRest(function(func, args) {
          try {
            return apply(func, undefined, args);
          } catch (e) {
            return isError(e) ? e : new Error(e);
          }
        });
        var bindAll = baseRest(function(object, methodNames) {
          arrayEach(baseFlatten(methodNames, 1), function(key) {
            key = toKey(key);
            object[key] = bind(object[key], object);
          });
          return object;
        });
        function cond(pairs) {
          var length = pairs ? pairs.length : 0,
              toIteratee = getIteratee();
          pairs = !length ? [] : arrayMap(pairs, function(pair) {
            if (typeof pair[1] != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            return [toIteratee(pair[0]), pair[1]];
          });
          return baseRest(function(args) {
            var index = -1;
            while (++index < length) {
              var pair = pairs[index];
              if (apply(pair[0], this, args)) {
                return apply(pair[1], this, args);
              }
            }
          });
        }
        function conforms(source) {
          return baseConforms(baseClone(source, true));
        }
        function constant(value) {
          return function() {
            return value;
          };
        }
        function defaultTo(value, defaultValue) {
          return (value == null || value !== value) ? defaultValue : value;
        }
        var flow = createFlow();
        var flowRight = createFlow(true);
        function identity(value) {
          return value;
        }
        function iteratee(func) {
          return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));
        }
        function matches(source) {
          return baseMatches(baseClone(source, true));
        }
        function matchesProperty(path, srcValue) {
          return baseMatchesProperty(path, baseClone(srcValue, true));
        }
        var method = baseRest(function(path, args) {
          return function(object) {
            return baseInvoke(object, path, args);
          };
        });
        var methodOf = baseRest(function(object, args) {
          return function(path) {
            return baseInvoke(object, path, args);
          };
        });
        function mixin(object, source, options) {
          var props = keys(source),
              methodNames = baseFunctions(source, props);
          if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
            options = source;
            source = object;
            object = this;
            methodNames = baseFunctions(source, keys(source));
          }
          var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
              isFunc = isFunction(object);
          arrayEach(methodNames, function(methodName) {
            var func = source[methodName];
            object[methodName] = func;
            if (isFunc) {
              object.prototype[methodName] = function() {
                var chainAll = this.__chain__;
                if (chain || chainAll) {
                  var result = object(this.__wrapped__),
                      actions = result.__actions__ = copyArray(this.__actions__);
                  actions.push({
                    'func': func,
                    'args': arguments,
                    'thisArg': object
                  });
                  result.__chain__ = chainAll;
                  return result;
                }
                return func.apply(object, arrayPush([this.value()], arguments));
              };
            }
          });
          return object;
        }
        function noConflict() {
          if (root._ === this) {
            root._ = oldDash;
          }
          return this;
        }
        function noop() {}
        function nthArg(n) {
          n = toInteger(n);
          return baseRest(function(args) {
            return baseNth(args, n);
          });
        }
        var over = createOver(arrayMap);
        var overEvery = createOver(arrayEvery);
        var overSome = createOver(arraySome);
        function property(path) {
          return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
        }
        function propertyOf(object) {
          return function(path) {
            return object == null ? undefined : baseGet(object, path);
          };
        }
        var range = createRange();
        var rangeRight = createRange(true);
        function stubArray() {
          return [];
        }
        function stubFalse() {
          return false;
        }
        function stubObject() {
          return {};
        }
        function stubString() {
          return '';
        }
        function stubTrue() {
          return true;
        }
        function times(n, iteratee) {
          n = toInteger(n);
          if (n < 1 || n > MAX_SAFE_INTEGER) {
            return [];
          }
          var index = MAX_ARRAY_LENGTH,
              length = nativeMin(n, MAX_ARRAY_LENGTH);
          iteratee = getIteratee(iteratee);
          n -= MAX_ARRAY_LENGTH;
          var result = baseTimes(length, iteratee);
          while (++index < n) {
            iteratee(index);
          }
          return result;
        }
        function toPath(value) {
          if (isArray(value)) {
            return arrayMap(value, toKey);
          }
          return isSymbol(value) ? [value] : copyArray(stringToPath(value));
        }
        function uniqueId(prefix) {
          var id = ++idCounter;
          return toString(prefix) + id;
        }
        var add = createMathOperation(function(augend, addend) {
          return augend + addend;
        }, 0);
        var ceil = createRound('ceil');
        var divide = createMathOperation(function(dividend, divisor) {
          return dividend / divisor;
        }, 1);
        var floor = createRound('floor');
        function max(array) {
          return (array && array.length) ? baseExtremum(array, identity, baseGt) : undefined;
        }
        function maxBy(array, iteratee) {
          return (array && array.length) ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined;
        }
        function mean(array) {
          return baseMean(array, identity);
        }
        function meanBy(array, iteratee) {
          return baseMean(array, getIteratee(iteratee, 2));
        }
        function min(array) {
          return (array && array.length) ? baseExtremum(array, identity, baseLt) : undefined;
        }
        function minBy(array, iteratee) {
          return (array && array.length) ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined;
        }
        var multiply = createMathOperation(function(multiplier, multiplicand) {
          return multiplier * multiplicand;
        }, 1);
        var round = createRound('round');
        var subtract = createMathOperation(function(minuend, subtrahend) {
          return minuend - subtrahend;
        }, 0);
        function sum(array) {
          return (array && array.length) ? baseSum(array, identity) : 0;
        }
        function sumBy(array, iteratee) {
          return (array && array.length) ? baseSum(array, getIteratee(iteratee, 2)) : 0;
        }
        lodash.after = after;
        lodash.ary = ary;
        lodash.assign = assign;
        lodash.assignIn = assignIn;
        lodash.assignInWith = assignInWith;
        lodash.assignWith = assignWith;
        lodash.at = at;
        lodash.before = before;
        lodash.bind = bind;
        lodash.bindAll = bindAll;
        lodash.bindKey = bindKey;
        lodash.castArray = castArray;
        lodash.chain = chain;
        lodash.chunk = chunk;
        lodash.compact = compact;
        lodash.concat = concat;
        lodash.cond = cond;
        lodash.conforms = conforms;
        lodash.constant = constant;
        lodash.countBy = countBy;
        lodash.create = create;
        lodash.curry = curry;
        lodash.curryRight = curryRight;
        lodash.debounce = debounce;
        lodash.defaults = defaults;
        lodash.defaultsDeep = defaultsDeep;
        lodash.defer = defer;
        lodash.delay = delay;
        lodash.difference = difference;
        lodash.differenceBy = differenceBy;
        lodash.differenceWith = differenceWith;
        lodash.drop = drop;
        lodash.dropRight = dropRight;
        lodash.dropRightWhile = dropRightWhile;
        lodash.dropWhile = dropWhile;
        lodash.fill = fill;
        lodash.filter = filter;
        lodash.flatMap = flatMap;
        lodash.flatMapDeep = flatMapDeep;
        lodash.flatMapDepth = flatMapDepth;
        lodash.flatten = flatten;
        lodash.flattenDeep = flattenDeep;
        lodash.flattenDepth = flattenDepth;
        lodash.flip = flip;
        lodash.flow = flow;
        lodash.flowRight = flowRight;
        lodash.fromPairs = fromPairs;
        lodash.functions = functions;
        lodash.functionsIn = functionsIn;
        lodash.groupBy = groupBy;
        lodash.initial = initial;
        lodash.intersection = intersection;
        lodash.intersectionBy = intersectionBy;
        lodash.intersectionWith = intersectionWith;
        lodash.invert = invert;
        lodash.invertBy = invertBy;
        lodash.invokeMap = invokeMap;
        lodash.iteratee = iteratee;
        lodash.keyBy = keyBy;
        lodash.keys = keys;
        lodash.keysIn = keysIn;
        lodash.map = map;
        lodash.mapKeys = mapKeys;
        lodash.mapValues = mapValues;
        lodash.matches = matches;
        lodash.matchesProperty = matchesProperty;
        lodash.memoize = memoize;
        lodash.merge = merge;
        lodash.mergeWith = mergeWith;
        lodash.method = method;
        lodash.methodOf = methodOf;
        lodash.mixin = mixin;
        lodash.negate = negate;
        lodash.nthArg = nthArg;
        lodash.omit = omit;
        lodash.omitBy = omitBy;
        lodash.once = once;
        lodash.orderBy = orderBy;
        lodash.over = over;
        lodash.overArgs = overArgs;
        lodash.overEvery = overEvery;
        lodash.overSome = overSome;
        lodash.partial = partial;
        lodash.partialRight = partialRight;
        lodash.partition = partition;
        lodash.pick = pick;
        lodash.pickBy = pickBy;
        lodash.property = property;
        lodash.propertyOf = propertyOf;
        lodash.pull = pull;
        lodash.pullAll = pullAll;
        lodash.pullAllBy = pullAllBy;
        lodash.pullAllWith = pullAllWith;
        lodash.pullAt = pullAt;
        lodash.range = range;
        lodash.rangeRight = rangeRight;
        lodash.rearg = rearg;
        lodash.reject = reject;
        lodash.remove = remove;
        lodash.rest = rest;
        lodash.reverse = reverse;
        lodash.sampleSize = sampleSize;
        lodash.set = set;
        lodash.setWith = setWith;
        lodash.shuffle = shuffle;
        lodash.slice = slice;
        lodash.sortBy = sortBy;
        lodash.sortedUniq = sortedUniq;
        lodash.sortedUniqBy = sortedUniqBy;
        lodash.split = split;
        lodash.spread = spread;
        lodash.tail = tail;
        lodash.take = take;
        lodash.takeRight = takeRight;
        lodash.takeRightWhile = takeRightWhile;
        lodash.takeWhile = takeWhile;
        lodash.tap = tap;
        lodash.throttle = throttle;
        lodash.thru = thru;
        lodash.toArray = toArray;
        lodash.toPairs = toPairs;
        lodash.toPairsIn = toPairsIn;
        lodash.toPath = toPath;
        lodash.toPlainObject = toPlainObject;
        lodash.transform = transform;
        lodash.unary = unary;
        lodash.union = union;
        lodash.unionBy = unionBy;
        lodash.unionWith = unionWith;
        lodash.uniq = uniq;
        lodash.uniqBy = uniqBy;
        lodash.uniqWith = uniqWith;
        lodash.unset = unset;
        lodash.unzip = unzip;
        lodash.unzipWith = unzipWith;
        lodash.update = update;
        lodash.updateWith = updateWith;
        lodash.values = values;
        lodash.valuesIn = valuesIn;
        lodash.without = without;
        lodash.words = words;
        lodash.wrap = wrap;
        lodash.xor = xor;
        lodash.xorBy = xorBy;
        lodash.xorWith = xorWith;
        lodash.zip = zip;
        lodash.zipObject = zipObject;
        lodash.zipObjectDeep = zipObjectDeep;
        lodash.zipWith = zipWith;
        lodash.entries = toPairs;
        lodash.entriesIn = toPairsIn;
        lodash.extend = assignIn;
        lodash.extendWith = assignInWith;
        mixin(lodash, lodash);
        lodash.add = add;
        lodash.attempt = attempt;
        lodash.camelCase = camelCase;
        lodash.capitalize = capitalize;
        lodash.ceil = ceil;
        lodash.clamp = clamp;
        lodash.clone = clone;
        lodash.cloneDeep = cloneDeep;
        lodash.cloneDeepWith = cloneDeepWith;
        lodash.cloneWith = cloneWith;
        lodash.conformsTo = conformsTo;
        lodash.deburr = deburr;
        lodash.defaultTo = defaultTo;
        lodash.divide = divide;
        lodash.endsWith = endsWith;
        lodash.eq = eq;
        lodash.escape = escape;
        lodash.escapeRegExp = escapeRegExp;
        lodash.every = every;
        lodash.find = find;
        lodash.findIndex = findIndex;
        lodash.findKey = findKey;
        lodash.findLast = findLast;
        lodash.findLastIndex = findLastIndex;
        lodash.findLastKey = findLastKey;
        lodash.floor = floor;
        lodash.forEach = forEach;
        lodash.forEachRight = forEachRight;
        lodash.forIn = forIn;
        lodash.forInRight = forInRight;
        lodash.forOwn = forOwn;
        lodash.forOwnRight = forOwnRight;
        lodash.get = get;
        lodash.gt = gt;
        lodash.gte = gte;
        lodash.has = has;
        lodash.hasIn = hasIn;
        lodash.head = head;
        lodash.identity = identity;
        lodash.includes = includes;
        lodash.indexOf = indexOf;
        lodash.inRange = inRange;
        lodash.invoke = invoke;
        lodash.isArguments = isArguments;
        lodash.isArray = isArray;
        lodash.isArrayBuffer = isArrayBuffer;
        lodash.isArrayLike = isArrayLike;
        lodash.isArrayLikeObject = isArrayLikeObject;
        lodash.isBoolean = isBoolean;
        lodash.isBuffer = isBuffer;
        lodash.isDate = isDate;
        lodash.isElement = isElement;
        lodash.isEmpty = isEmpty;
        lodash.isEqual = isEqual;
        lodash.isEqualWith = isEqualWith;
        lodash.isError = isError;
        lodash.isFinite = isFinite;
        lodash.isFunction = isFunction;
        lodash.isInteger = isInteger;
        lodash.isLength = isLength;
        lodash.isMap = isMap;
        lodash.isMatch = isMatch;
        lodash.isMatchWith = isMatchWith;
        lodash.isNaN = isNaN;
        lodash.isNative = isNative;
        lodash.isNil = isNil;
        lodash.isNull = isNull;
        lodash.isNumber = isNumber;
        lodash.isObject = isObject;
        lodash.isObjectLike = isObjectLike;
        lodash.isPlainObject = isPlainObject;
        lodash.isRegExp = isRegExp;
        lodash.isSafeInteger = isSafeInteger;
        lodash.isSet = isSet;
        lodash.isString = isString;
        lodash.isSymbol = isSymbol;
        lodash.isTypedArray = isTypedArray;
        lodash.isUndefined = isUndefined;
        lodash.isWeakMap = isWeakMap;
        lodash.isWeakSet = isWeakSet;
        lodash.join = join;
        lodash.kebabCase = kebabCase;
        lodash.last = last;
        lodash.lastIndexOf = lastIndexOf;
        lodash.lowerCase = lowerCase;
        lodash.lowerFirst = lowerFirst;
        lodash.lt = lt;
        lodash.lte = lte;
        lodash.max = max;
        lodash.maxBy = maxBy;
        lodash.mean = mean;
        lodash.meanBy = meanBy;
        lodash.min = min;
        lodash.minBy = minBy;
        lodash.stubArray = stubArray;
        lodash.stubFalse = stubFalse;
        lodash.stubObject = stubObject;
        lodash.stubString = stubString;
        lodash.stubTrue = stubTrue;
        lodash.multiply = multiply;
        lodash.nth = nth;
        lodash.noConflict = noConflict;
        lodash.noop = noop;
        lodash.now = now;
        lodash.pad = pad;
        lodash.padEnd = padEnd;
        lodash.padStart = padStart;
        lodash.parseInt = parseInt;
        lodash.random = random;
        lodash.reduce = reduce;
        lodash.reduceRight = reduceRight;
        lodash.repeat = repeat;
        lodash.replace = replace;
        lodash.result = result;
        lodash.round = round;
        lodash.runInContext = runInContext;
        lodash.sample = sample;
        lodash.size = size;
        lodash.snakeCase = snakeCase;
        lodash.some = some;
        lodash.sortedIndex = sortedIndex;
        lodash.sortedIndexBy = sortedIndexBy;
        lodash.sortedIndexOf = sortedIndexOf;
        lodash.sortedLastIndex = sortedLastIndex;
        lodash.sortedLastIndexBy = sortedLastIndexBy;
        lodash.sortedLastIndexOf = sortedLastIndexOf;
        lodash.startCase = startCase;
        lodash.startsWith = startsWith;
        lodash.subtract = subtract;
        lodash.sum = sum;
        lodash.sumBy = sumBy;
        lodash.template = template;
        lodash.times = times;
        lodash.toFinite = toFinite;
        lodash.toInteger = toInteger;
        lodash.toLength = toLength;
        lodash.toLower = toLower;
        lodash.toNumber = toNumber;
        lodash.toSafeInteger = toSafeInteger;
        lodash.toString = toString;
        lodash.toUpper = toUpper;
        lodash.trim = trim;
        lodash.trimEnd = trimEnd;
        lodash.trimStart = trimStart;
        lodash.truncate = truncate;
        lodash.unescape = unescape;
        lodash.uniqueId = uniqueId;
        lodash.upperCase = upperCase;
        lodash.upperFirst = upperFirst;
        lodash.each = forEach;
        lodash.eachRight = forEachRight;
        lodash.first = head;
        mixin(lodash, (function() {
          var source = {};
          baseForOwn(lodash, function(func, methodName) {
            if (!hasOwnProperty.call(lodash.prototype, methodName)) {
              source[methodName] = func;
            }
          });
          return source;
        }()), {'chain': false});
        lodash.VERSION = VERSION;
        arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
          lodash[methodName].placeholder = lodash;
        });
        arrayEach(['drop', 'take'], function(methodName, index) {
          LazyWrapper.prototype[methodName] = function(n) {
            var filtered = this.__filtered__;
            if (filtered && !index) {
              return new LazyWrapper(this);
            }
            n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
            var result = this.clone();
            if (filtered) {
              result.__takeCount__ = nativeMin(n, result.__takeCount__);
            } else {
              result.__views__.push({
                'size': nativeMin(n, MAX_ARRAY_LENGTH),
                'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
              });
            }
            return result;
          };
          LazyWrapper.prototype[methodName + 'Right'] = function(n) {
            return this.reverse()[methodName](n).reverse();
          };
        });
        arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
          var type = index + 1,
              isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
          LazyWrapper.prototype[methodName] = function(iteratee) {
            var result = this.clone();
            result.__iteratees__.push({
              'iteratee': getIteratee(iteratee, 3),
              'type': type
            });
            result.__filtered__ = result.__filtered__ || isFilter;
            return result;
          };
        });
        arrayEach(['head', 'last'], function(methodName, index) {
          var takeName = 'take' + (index ? 'Right' : '');
          LazyWrapper.prototype[methodName] = function() {
            return this[takeName](1).value()[0];
          };
        });
        arrayEach(['initial', 'tail'], function(methodName, index) {
          var dropName = 'drop' + (index ? '' : 'Right');
          LazyWrapper.prototype[methodName] = function() {
            return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
          };
        });
        LazyWrapper.prototype.compact = function() {
          return this.filter(identity);
        };
        LazyWrapper.prototype.find = function(predicate) {
          return this.filter(predicate).head();
        };
        LazyWrapper.prototype.findLast = function(predicate) {
          return this.reverse().find(predicate);
        };
        LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
          if (typeof path == 'function') {
            return new LazyWrapper(this);
          }
          return this.map(function(value) {
            return baseInvoke(value, path, args);
          });
        });
        LazyWrapper.prototype.reject = function(predicate) {
          return this.filter(negate(getIteratee(predicate)));
        };
        LazyWrapper.prototype.slice = function(start, end) {
          start = toInteger(start);
          var result = this;
          if (result.__filtered__ && (start > 0 || end < 0)) {
            return new LazyWrapper(result);
          }
          if (start < 0) {
            result = result.takeRight(-start);
          } else if (start) {
            result = result.drop(start);
          }
          if (end !== undefined) {
            end = toInteger(end);
            result = end < 0 ? result.dropRight(-end) : result.take(end - start);
          }
          return result;
        };
        LazyWrapper.prototype.takeRightWhile = function(predicate) {
          return this.reverse().takeWhile(predicate).reverse();
        };
        LazyWrapper.prototype.toArray = function() {
          return this.take(MAX_ARRAY_LENGTH);
        };
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
              isTaker = /^(?:head|last)$/.test(methodName),
              lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
              retUnwrapped = isTaker || /^find/.test(methodName);
          if (!lodashFunc) {
            return;
          }
          lodash.prototype[methodName] = function() {
            var value = this.__wrapped__,
                args = isTaker ? [1] : arguments,
                isLazy = value instanceof LazyWrapper,
                iteratee = args[0],
                useLazy = isLazy || isArray(value);
            var interceptor = function(value) {
              var result = lodashFunc.apply(lodash, arrayPush([value], args));
              return (isTaker && chainAll) ? result[0] : result;
            };
            if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
              isLazy = useLazy = false;
            }
            var chainAll = this.__chain__,
                isHybrid = !!this.__actions__.length,
                isUnwrapped = retUnwrapped && !chainAll,
                onlyLazy = isLazy && !isHybrid;
            if (!retUnwrapped && useLazy) {
              value = onlyLazy ? value : new LazyWrapper(this);
              var result = func.apply(value, args);
              result.__actions__.push({
                'func': thru,
                'args': [interceptor],
                'thisArg': undefined
              });
              return new LodashWrapper(result, chainAll);
            }
            if (isUnwrapped && onlyLazy) {
              return func.apply(this, args);
            }
            result = this.thru(interceptor);
            return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
          };
        });
        arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
          var func = arrayProto[methodName],
              chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
              retUnwrapped = /^(?:pop|shift)$/.test(methodName);
          lodash.prototype[methodName] = function() {
            var args = arguments;
            if (retUnwrapped && !this.__chain__) {
              var value = this.value();
              return func.apply(isArray(value) ? value : [], args);
            }
            return this[chainName](function(value) {
              return func.apply(isArray(value) ? value : [], args);
            });
          };
        });
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
          var lodashFunc = lodash[methodName];
          if (lodashFunc) {
            var key = (lodashFunc.name + ''),
                names = realNames[key] || (realNames[key] = []);
            names.push({
              'name': methodName,
              'func': lodashFunc
            });
          }
        });
        realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{
          'name': 'wrapper',
          'func': undefined
        }];
        LazyWrapper.prototype.clone = lazyClone;
        LazyWrapper.prototype.reverse = lazyReverse;
        LazyWrapper.prototype.value = lazyValue;
        lodash.prototype.at = wrapperAt;
        lodash.prototype.chain = wrapperChain;
        lodash.prototype.commit = wrapperCommit;
        lodash.prototype.next = wrapperNext;
        lodash.prototype.plant = wrapperPlant;
        lodash.prototype.reverse = wrapperReverse;
        lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
        lodash.prototype.first = lodash.prototype.head;
        if (iteratorSymbol) {
          lodash.prototype[iteratorSymbol] = wrapperToIterator;
        }
        return lodash;
      }
      var _ = runInContext();
      if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
        root._ = _;
        define(function() {
          return _;
        });
      } else if (freeModule) {
        (freeModule.exports = _)._ = _;
        freeExports._ = _;
      } else {
        root._ = _;
      }
    }.call(this));
  })($__require('@empty').Buffer, $__require('@empty'));
  return module.exports;
});

System.registerDynamic("npm:lodash@4.15.0.js", ["npm:lodash@4.15.0/lodash.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:lodash@4.15.0/lodash.js');
  return module.exports;
});

System.registerDynamic("npm:react-toastr@2.8.0/lib/ToastContainer.js", ["npm:react@15.3.0.js", "npm:react-addons-update@15.3.0.js", "npm:react-toastr@2.8.0/lib/ToastMessage/index.js", "npm:lodash@4.15.0.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _reactAddonsUpdate = $__require('npm:react-addons-update@15.3.0.js');
  var _reactAddonsUpdate2 = _interopRequireDefault(_reactAddonsUpdate);
  var _ToastMessage = $__require('npm:react-toastr@2.8.0/lib/ToastMessage/index.js');
  var _ToastMessage2 = _interopRequireDefault(_ToastMessage);
  var _lodash = $__require('npm:lodash@4.15.0.js');
  var _lodash2 = _interopRequireDefault(_lodash);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var ToastContainer = function(_Component) {
    _inherits(ToastContainer, _Component);
    function ToastContainer() {
      var _Object$getPrototypeO;
      var _temp,
          _this,
          _ret;
      _classCallCheck(this, ToastContainer);
      for (var _len = arguments.length,
          args = Array(_len),
          _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(ToastContainer)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
        toasts: [],
        toastId: 0,
        messageList: []
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }
    _createClass(ToastContainer, [{
      key: "error",
      value: function error(message, title, optionsOverride) {
        this._notify(this.props.toastType.error, message, title, optionsOverride);
      }
    }, {
      key: "info",
      value: function info(message, title, optionsOverride) {
        this._notify(this.props.toastType.info, message, title, optionsOverride);
      }
    }, {
      key: "success",
      value: function success(message, title, optionsOverride) {
        this._notify(this.props.toastType.success, message, title, optionsOverride);
      }
    }, {
      key: "warning",
      value: function warning(message, title, optionsOverride) {
        this._notify(this.props.toastType.warning, message, title, optionsOverride);
      }
    }, {
      key: "clear",
      value: function clear() {
        var _this2 = this;
        Object.keys(this.refs).forEach(function(key) {
          _this2.refs[key].hideToast(false);
        });
      }
    }, {
      key: "_notify",
      value: function _notify(type, message, title) {
        var _this3 = this;
        var optionsOverride = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];
        if (this.props.preventDuplicates) {
          if (_lodash2.default.includes(this.state.messageList, message)) {
            return;
          }
        }
        var key = this.state.toastId++;
        var toastId = key;
        var newToast = (0, _reactAddonsUpdate2.default)(optionsOverride, {$merge: {
            type: type,
            title: title,
            message: message,
            toastId: toastId,
            key: key,
            ref: "toasts__" + key,
            handleOnClick: function handleOnClick(e) {
              if ("function" === typeof optionsOverride.handleOnClick) {
                optionsOverride.handleOnClick();
              }
              return _this3._handle_toast_on_click(e);
            },
            handleRemove: this._handle_toast_remove.bind(this)
          }});
        var toastOperation = _defineProperty({}, "" + (this.props.newestOnTop ? "$unshift" : "$push"), [newToast]);
        var messageOperation = _defineProperty({}, "" + (this.props.newestOnTop ? "$unshift" : "$push"), [message]);
        var nextState = (0, _reactAddonsUpdate2.default)(this.state, {
          toasts: toastOperation,
          messageList: messageOperation
        });
        this.setState(nextState);
      }
    }, {
      key: "_handle_toast_on_click",
      value: function _handle_toast_on_click(event) {
        this.props.onClick(event);
        if (event.defaultPrevented) {
          return;
        }
        event.preventDefault();
        event.stopPropagation();
      }
    }, {
      key: "_handle_toast_remove",
      value: function _handle_toast_remove(toastId) {
        var _this4 = this;
        if (this.props.preventDuplicates) {
          this.state.previousMessage = "";
        }
        var operationName = "" + (this.props.newestOnTop ? "reduceRight" : "reduce");
        this.state.toasts[operationName](function(found, toast, index) {
          if (found || toast.toastId !== toastId) {
            return false;
          }
          _this4.setState((0, _reactAddonsUpdate2.default)(_this4.state, {
            toasts: {$splice: [[index, 1]]},
            messageList: {$splice: [[index, 1]]}
          }));
          return true;
        }, false);
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;
        var divProps = _lodash2.default.omit(this.props, ["toastType", "toastMessageFactory", "preventDuplicates", "newestOnTop"]);
        return _react2.default.createElement("div", _extends({}, divProps, {
          "aria-live": "polite",
          role: "alert"
        }), this.state.toasts.map(function(toast) {
          return _this5.props.toastMessageFactory(toast);
        }));
      }
    }]);
    return ToastContainer;
  }(_react.Component);
  ToastContainer.propTypes = {
    toastType: _react.PropTypes.shape({
      error: _react.PropTypes.string,
      info: _react.PropTypes.string,
      success: _react.PropTypes.string,
      warning: _react.PropTypes.string
    }).isRequired,
    id: _react.PropTypes.string.isRequired,
    toastMessageFactory: _react.PropTypes.func.isRequired,
    preventDuplicates: _react.PropTypes.bool.isRequired,
    newestOnTop: _react.PropTypes.bool.isRequired,
    onClick: _react.PropTypes.func.isRequired
  };
  ToastContainer.defaultProps = {
    toastType: {
      error: "error",
      info: "info",
      success: "success",
      warning: "warning"
    },
    id: "toast-container",
    toastMessageFactory: _react2.default.createFactory(_ToastMessage2.default.animation),
    preventDuplicates: true,
    newestOnTop: true,
    onClick: function onClick() {}
  };
  exports.default = ToastContainer;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/update.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:object-assign@4.1.0.js", "npm:fbjs@0.8.3/lib/keyOf.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.0.js');
    var keyOf = $__require('npm:fbjs@0.8.3/lib/keyOf.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var hasOwnProperty = {}.hasOwnProperty;
    function shallowCopy(x) {
      if (Array.isArray(x)) {
        return x.concat();
      } else if (x && typeof x === 'object') {
        return _assign(new x.constructor(), x);
      } else {
        return x;
      }
    }
    var COMMAND_PUSH = keyOf({$push: null});
    var COMMAND_UNSHIFT = keyOf({$unshift: null});
    var COMMAND_SPLICE = keyOf({$splice: null});
    var COMMAND_SET = keyOf({$set: null});
    var COMMAND_MERGE = keyOf({$merge: null});
    var COMMAND_APPLY = keyOf({$apply: null});
    var ALL_COMMANDS_LIST = [COMMAND_PUSH, COMMAND_UNSHIFT, COMMAND_SPLICE, COMMAND_SET, COMMAND_MERGE, COMMAND_APPLY];
    var ALL_COMMANDS_SET = {};
    ALL_COMMANDS_LIST.forEach(function(command) {
      ALL_COMMANDS_SET[command] = true;
    });
    function invariantArrayCase(value, spec, command) {
      !Array.isArray(value) ? "production" !== 'production' ? invariant(false, 'update(): expected target of %s to be an array; got %s.', command, value) : _prodInvariant('1', command, value) : void 0;
      var specValue = spec[command];
      !Array.isArray(specValue) ? "production" !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array; got %s. Did you forget to wrap your parameter in an array?', command, specValue) : _prodInvariant('2', command, specValue) : void 0;
    }
    function update(value, spec) {
      !(typeof spec === 'object') ? "production" !== 'production' ? invariant(false, 'update(): You provided a key path to update() that did not contain one of %s. Did you forget to include {%s: ...}?', ALL_COMMANDS_LIST.join(', '), COMMAND_SET) : _prodInvariant('3', ALL_COMMANDS_LIST.join(', '), COMMAND_SET) : void 0;
      if (hasOwnProperty.call(spec, COMMAND_SET)) {
        !(Object.keys(spec).length === 1) ? "production" !== 'production' ? invariant(false, 'Cannot have more than one key in an object with %s', COMMAND_SET) : _prodInvariant('4', COMMAND_SET) : void 0;
        return spec[COMMAND_SET];
      }
      var nextValue = shallowCopy(value);
      if (hasOwnProperty.call(spec, COMMAND_MERGE)) {
        var mergeObj = spec[COMMAND_MERGE];
        !(mergeObj && typeof mergeObj === 'object') ? "production" !== 'production' ? invariant(false, 'update(): %s expects a spec of type \'object\'; got %s', COMMAND_MERGE, mergeObj) : _prodInvariant('5', COMMAND_MERGE, mergeObj) : void 0;
        !(nextValue && typeof nextValue === 'object') ? "production" !== 'production' ? invariant(false, 'update(): %s expects a target of type \'object\'; got %s', COMMAND_MERGE, nextValue) : _prodInvariant('6', COMMAND_MERGE, nextValue) : void 0;
        _assign(nextValue, spec[COMMAND_MERGE]);
      }
      if (hasOwnProperty.call(spec, COMMAND_PUSH)) {
        invariantArrayCase(value, spec, COMMAND_PUSH);
        spec[COMMAND_PUSH].forEach(function(item) {
          nextValue.push(item);
        });
      }
      if (hasOwnProperty.call(spec, COMMAND_UNSHIFT)) {
        invariantArrayCase(value, spec, COMMAND_UNSHIFT);
        spec[COMMAND_UNSHIFT].forEach(function(item) {
          nextValue.unshift(item);
        });
      }
      if (hasOwnProperty.call(spec, COMMAND_SPLICE)) {
        !Array.isArray(value) ? "production" !== 'production' ? invariant(false, 'Expected %s target to be an array; got %s', COMMAND_SPLICE, value) : _prodInvariant('7', COMMAND_SPLICE, value) : void 0;
        !Array.isArray(spec[COMMAND_SPLICE]) ? "production" !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array of arrays; got %s. Did you forget to wrap your parameters in an array?', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : _prodInvariant('8', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : void 0;
        spec[COMMAND_SPLICE].forEach(function(args) {
          !Array.isArray(args) ? "production" !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array of arrays; got %s. Did you forget to wrap your parameters in an array?', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : _prodInvariant('8', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : void 0;
          nextValue.splice.apply(nextValue, args);
        });
      }
      if (hasOwnProperty.call(spec, COMMAND_APPLY)) {
        !(typeof spec[COMMAND_APPLY] === 'function') ? "production" !== 'production' ? invariant(false, 'update(): expected spec of %s to be a function; got %s.', COMMAND_APPLY, spec[COMMAND_APPLY]) : _prodInvariant('9', COMMAND_APPLY, spec[COMMAND_APPLY]) : void 0;
        nextValue = spec[COMMAND_APPLY](nextValue);
      }
      for (var k in spec) {
        if (!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])) {
          nextValue[k] = update(value[k], spec[k]);
        }
      }
      return nextValue;
    }
    module.exports = update;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-addons-update@15.3.0/index.js", ["npm:react@15.3.0/lib/update.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react@15.3.0/lib/update.js');
  return module.exports;
});

System.registerDynamic("npm:react-addons-update@15.3.0.js", ["npm:react-addons-update@15.3.0/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react-addons-update@15.3.0/index.js');
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactTransitionEvents.js", ["npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "npm:react@15.3.0/lib/getVendorPrefixedEventName.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
  var getVendorPrefixedEventName = $__require('npm:react@15.3.0/lib/getVendorPrefixedEventName.js');
  var endEvents = [];
  function detectEvents() {
    var animEnd = getVendorPrefixedEventName('animationend');
    var transEnd = getVendorPrefixedEventName('transitionend');
    if (animEnd) {
      endEvents.push(animEnd);
    }
    if (transEnd) {
      endEvents.push(transEnd);
    }
  }
  if (ExecutionEnvironment.canUseDOM) {
    detectEvents();
  }
  function addEventListener(node, eventName, eventListener) {
    node.addEventListener(eventName, eventListener, false);
  }
  function removeEventListener(node, eventName, eventListener) {
    node.removeEventListener(eventName, eventListener, false);
  }
  var ReactTransitionEvents = {
    addEndEventListener: function(node, eventListener) {
      if (endEvents.length === 0) {
        window.setTimeout(eventListener, 0);
        return;
      }
      endEvents.forEach(function(endEvent) {
        addEventListener(node, endEvent, eventListener);
      });
    },
    removeEndEventListener: function(node, eventListener) {
      if (endEvents.length === 0) {
        return;
      }
      endEvents.forEach(function(endEvent) {
        removeEventListener(node, endEvent, eventListener);
      });
    }
  };
  module.exports = ReactTransitionEvents;
  return module.exports;
});

System.registerDynamic("npm:element-class@0.2.2/index.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = function(opts) {
    return new ElementClass(opts);
  };
  function indexOf(arr, prop) {
    if (arr.indexOf)
      return arr.indexOf(prop);
    for (var i = 0,
        len = arr.length; i < len; i++)
      if (arr[i] === prop)
        return i;
    return -1;
  }
  function ElementClass(opts) {
    if (!(this instanceof ElementClass))
      return new ElementClass(opts);
    var self = this;
    if (!opts)
      opts = {};
    if (opts.nodeType)
      opts = {el: opts};
    this.opts = opts;
    this.el = opts.el || document.body;
    if (typeof this.el !== 'object')
      this.el = document.querySelector(this.el);
  }
  ElementClass.prototype.add = function(className) {
    var el = this.el;
    if (!el)
      return;
    if (el.className === "")
      return el.className = className;
    var classes = el.className.split(' ');
    if (indexOf(classes, className) > -1)
      return classes;
    classes.push(className);
    el.className = classes.join(' ');
    return classes;
  };
  ElementClass.prototype.remove = function(className) {
    var el = this.el;
    if (!el)
      return;
    if (el.className === "")
      return;
    var classes = el.className.split(' ');
    var idx = indexOf(classes, className);
    if (idx > -1)
      classes.splice(idx, 1);
    el.className = classes.join(' ');
    return classes;
  };
  ElementClass.prototype.has = function(className) {
    var el = this.el;
    if (!el)
      return;
    var classes = el.className.split(' ');
    return indexOf(classes, className) > -1;
  };
  ElementClass.prototype.toggle = function(className) {
    var el = this.el;
    if (!el)
      return;
    if (this.has(className))
      this.remove(className);
    else
      this.add(className);
  };
  return module.exports;
});

System.registerDynamic("npm:element-class@0.2.2.js", ["npm:element-class@0.2.2/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:element-class@0.2.2/index.js');
  return module.exports;
});

System.registerDynamic("npm:react-toastr@2.8.0/lib/ToastMessage/animationMixin.js", ["npm:react@15.3.0/lib/ReactTransitionEvents.js", "npm:react-dom@15.3.0.js", "npm:element-class@0.2.2.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _ReactTransitionEvents = $__require('npm:react@15.3.0/lib/ReactTransitionEvents.js');
  var _ReactTransitionEvents2 = _interopRequireDefault(_ReactTransitionEvents);
  var _reactDom = $__require('npm:react-dom@15.3.0.js');
  var _reactDom2 = _interopRequireDefault(_reactDom);
  var _elementClass = $__require('npm:element-class@0.2.2.js');
  var _elementClass2 = _interopRequireDefault(_elementClass);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var TICK = 17;
  var toString = Object.prototype.toString;
  exports.default = {
    getDefaultProps: function getDefaultProps() {
      return {
        transition: null,
        showAnimation: "animated bounceIn",
        hideAnimation: "animated bounceOut",
        timeOut: 5000,
        extendedTimeOut: 1000
      };
    },
    componentWillMount: function componentWillMount() {
      this.classNameQueue = [];
      this.isHiding = false;
      this.intervalId = null;
    },
    componentDidMount: function componentDidMount() {
      var _this = this;
      this._is_mounted = true;
      this._show();
      var node = _reactDom2.default.findDOMNode(this);
      var onHideComplete = function onHideComplete() {
        if (_this.isHiding) {
          _this._set_is_hiding(false);
          _ReactTransitionEvents2.default.removeEndEventListener(node, onHideComplete);
          _this._handle_remove();
        }
      };
      _ReactTransitionEvents2.default.addEndEventListener(node, onHideComplete);
      if (this.props.timeOut > 0) {
        this._set_interval_id(setTimeout(this.hideToast, this.props.timeOut));
      }
    },
    componentWillUnmount: function componentWillUnmount() {
      this._is_mounted = false;
      if (this.intervalId) {
        clearTimeout(this.intervalId);
      }
    },
    _set_transition: function _set_transition(hide) {
      var animationType = hide ? "leave" : "enter";
      var node = _reactDom2.default.findDOMNode(this);
      var className = this.props.transition + "-" + animationType;
      var activeClassName = className + "-active";
      var endListener = function endListener(e) {
        if (e && e.target !== node) {
          return;
        }
        var classList = (0, _elementClass2.default)(node);
        classList.remove(className);
        classList.remove(activeClassName);
        _ReactTransitionEvents2.default.removeEndEventListener(node, endListener);
      };
      _ReactTransitionEvents2.default.addEndEventListener(node, endListener);
      (0, _elementClass2.default)(node).add(className);
      this._queue_class(activeClassName);
    },
    _clear_transition: function _clear_transition(hide) {
      var node = _reactDom2.default.findDOMNode(this);
      var animationType = hide ? "leave" : "enter";
      var className = this.props.transition + "-" + animationType;
      var activeClassName = className + "-active";
      var classList = (0, _elementClass2.default)(node);
      classList.remove(className);
      classList.remove(activeClassName);
    },
    _set_animation: function _set_animation(hide) {
      var node = _reactDom2.default.findDOMNode(this);
      var animations = this._get_animation_classes(hide);
      var endListener = function endListener(e) {
        if (e && e.target !== node) {
          return;
        }
        animations.forEach(function(anim) {
          return (0, _elementClass2.default)(node).remove(anim);
        });
        _ReactTransitionEvents2.default.removeEndEventListener(node, endListener);
      };
      _ReactTransitionEvents2.default.addEndEventListener(node, endListener);
      animations.forEach(function(anim) {
        return (0, _elementClass2.default)(node).add(anim);
      });
    },
    _get_animation_classes: function _get_animation_classes(hide) {
      var animations = hide ? this.props.hideAnimation : this.props.showAnimation;
      if ("[object Array]" === toString.call(animations)) {
        return animations;
      } else if ("string" === typeof animations) {
        return animations.split(" ");
      }
    },
    _clear_animation: function _clear_animation(hide) {
      var node = _reactDom2.default.findDOMNode(this);
      var animations = this._get_animation_classes(hide);
      animations.forEach(function(animation) {
        return (0, _elementClass2.default)(node).remove(animation);
      });
    },
    _queue_class: function _queue_class(className) {
      this.classNameQueue.push(className);
      if (!this.timeout) {
        this.timeout = setTimeout(this._flush_class_name_queue, TICK);
      }
    },
    _flush_class_name_queue: function _flush_class_name_queue() {
      var _this2 = this;
      if (this._is_mounted) {
        (function() {
          var node = _reactDom2.default.findDOMNode(_this2);
          _this2.classNameQueue.forEach(function(className) {
            return (0, _elementClass2.default)(node).add(className);
          });
        })();
      }
      this.classNameQueue.length = 0;
      this.timeout = null;
    },
    _show: function _show() {
      if (this.props.transition) {
        this._set_transition();
      } else if (this.props.showAnimation) {
        this._set_animation();
      }
    },
    handleMouseEnter: function handleMouseEnter() {
      clearTimeout(this.intervalId);
      this._set_interval_id(null);
      if (this.isHiding) {
        this._set_is_hiding(false);
        if (this.props.hideAnimation) {
          this._clear_animation(true);
        } else if (this.props.transition) {
          this._clear_transition(true);
        }
      }
    },
    handleMouseLeave: function handleMouseLeave() {
      if (!this.isHiding && (this.props.timeOut > 0 || this.props.extendedTimeOut > 0)) {
        this._set_interval_id(setTimeout(this.hideToast, this.props.extendedTimeOut));
      }
    },
    hideToast: function hideToast(override) {
      if (this.isHiding || this.intervalId === null && !override) {
        return;
      }
      this._set_is_hiding(true);
      if (this.props.transition) {
        this._set_transition(true);
      } else if (this.props.hideAnimation) {
        this._set_animation(true);
      } else {
        this._handle_remove();
      }
    },
    _set_interval_id: function _set_interval_id(intervalId) {
      this.intervalId = intervalId;
    },
    _set_is_hiding: function _set_is_hiding(isHiding) {
      this.isHiding = isHiding;
    }
  };
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/FallbackCompositionState.js", ["npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/PooledClass.js", "npm:react@15.3.0/lib/getTextContentAccessor.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var _assign = $__require('npm:object-assign@4.1.0.js');
  var PooledClass = $__require('npm:react@15.3.0/lib/PooledClass.js');
  var getTextContentAccessor = $__require('npm:react@15.3.0/lib/getTextContentAccessor.js');
  function FallbackCompositionState(root) {
    this._root = root;
    this._startText = this.getText();
    this._fallbackText = null;
  }
  _assign(FallbackCompositionState.prototype, {
    destructor: function() {
      this._root = null;
      this._startText = null;
      this._fallbackText = null;
    },
    getText: function() {
      if ('value' in this._root) {
        return this._root.value;
      }
      return this._root[getTextContentAccessor()];
    },
    getData: function() {
      if (this._fallbackText) {
        return this._fallbackText;
      }
      var start;
      var startValue = this._startText;
      var startLength = startValue.length;
      var end;
      var endValue = this.getText();
      var endLength = endValue.length;
      for (start = 0; start < startLength; start++) {
        if (startValue[start] !== endValue[start]) {
          break;
        }
      }
      var minEnd = startLength - start;
      for (end = 1; end <= minEnd; end++) {
        if (startValue[startLength - end] !== endValue[endLength - end]) {
          break;
        }
      }
      var sliceTail = end > 1 ? 1 - end : undefined;
      this._fallbackText = endValue.slice(start, sliceTail);
      return this._fallbackText;
    }
  });
  PooledClass.addPoolingTo(FallbackCompositionState);
  module.exports = FallbackCompositionState;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SyntheticCompositionEvent.js", ["npm:react@15.3.0/lib/SyntheticEvent.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react@15.3.0/lib/SyntheticEvent.js');
  var CompositionEventInterface = {data: null};
  function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
  module.exports = SyntheticCompositionEvent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SyntheticInputEvent.js", ["npm:react@15.3.0/lib/SyntheticEvent.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react@15.3.0/lib/SyntheticEvent.js');
  var InputEventInterface = {data: null};
  function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
  module.exports = SyntheticInputEvent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/BeforeInputEventPlugin.js", ["npm:react@15.3.0/lib/EventConstants.js", "npm:react@15.3.0/lib/EventPropagators.js", "npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "npm:react@15.3.0/lib/FallbackCompositionState.js", "npm:react@15.3.0/lib/SyntheticCompositionEvent.js", "npm:react@15.3.0/lib/SyntheticInputEvent.js", "npm:fbjs@0.8.3/lib/keyOf.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var EventConstants = $__require('npm:react@15.3.0/lib/EventConstants.js');
  var EventPropagators = $__require('npm:react@15.3.0/lib/EventPropagators.js');
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
  var FallbackCompositionState = $__require('npm:react@15.3.0/lib/FallbackCompositionState.js');
  var SyntheticCompositionEvent = $__require('npm:react@15.3.0/lib/SyntheticCompositionEvent.js');
  var SyntheticInputEvent = $__require('npm:react@15.3.0/lib/SyntheticInputEvent.js');
  var keyOf = $__require('npm:fbjs@0.8.3/lib/keyOf.js');
  var END_KEYCODES = [9, 13, 27, 32];
  var START_KEYCODE = 229;
  var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
  var documentMode = null;
  if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
    documentMode = document.documentMode;
  }
  var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
  var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
  function isPresto() {
    var opera = window.opera;
    return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
  }
  var SPACEBAR_CODE = 32;
  var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
  var topLevelTypes = EventConstants.topLevelTypes;
  var eventTypes = {
    beforeInput: {
      phasedRegistrationNames: {
        bubbled: keyOf({onBeforeInput: null}),
        captured: keyOf({onBeforeInputCapture: null})
      },
      dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
    },
    compositionEnd: {
      phasedRegistrationNames: {
        bubbled: keyOf({onCompositionEnd: null}),
        captured: keyOf({onCompositionEndCapture: null})
      },
      dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
    },
    compositionStart: {
      phasedRegistrationNames: {
        bubbled: keyOf({onCompositionStart: null}),
        captured: keyOf({onCompositionStartCapture: null})
      },
      dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
    },
    compositionUpdate: {
      phasedRegistrationNames: {
        bubbled: keyOf({onCompositionUpdate: null}),
        captured: keyOf({onCompositionUpdateCapture: null})
      },
      dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
    }
  };
  var hasSpaceKeypress = false;
  function isKeypressCommand(nativeEvent) {
    return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
  }
  function getCompositionEventType(topLevelType) {
    switch (topLevelType) {
      case topLevelTypes.topCompositionStart:
        return eventTypes.compositionStart;
      case topLevelTypes.topCompositionEnd:
        return eventTypes.compositionEnd;
      case topLevelTypes.topCompositionUpdate:
        return eventTypes.compositionUpdate;
    }
  }
  function isFallbackCompositionStart(topLevelType, nativeEvent) {
    return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
  }
  function isFallbackCompositionEnd(topLevelType, nativeEvent) {
    switch (topLevelType) {
      case topLevelTypes.topKeyUp:
        return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
      case topLevelTypes.topKeyDown:
        return nativeEvent.keyCode !== START_KEYCODE;
      case topLevelTypes.topKeyPress:
      case topLevelTypes.topMouseDown:
      case topLevelTypes.topBlur:
        return true;
      default:
        return false;
    }
  }
  function getDataFromCustomEvent(nativeEvent) {
    var detail = nativeEvent.detail;
    if (typeof detail === 'object' && 'data' in detail) {
      return detail.data;
    }
    return null;
  }
  var currentComposition = null;
  function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var eventType;
    var fallbackData;
    if (canUseCompositionEvent) {
      eventType = getCompositionEventType(topLevelType);
    } else if (!currentComposition) {
      if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
        eventType = eventTypes.compositionStart;
      }
    } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionEnd;
    }
    if (!eventType) {
      return null;
    }
    if (useFallbackCompositionData) {
      if (!currentComposition && eventType === eventTypes.compositionStart) {
        currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
      } else if (eventType === eventTypes.compositionEnd) {
        if (currentComposition) {
          fallbackData = currentComposition.getData();
        }
      }
    }
    var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
    if (fallbackData) {
      event.data = fallbackData;
    } else {
      var customData = getDataFromCustomEvent(nativeEvent);
      if (customData !== null) {
        event.data = customData;
      }
    }
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }
  function getNativeBeforeInputChars(topLevelType, nativeEvent) {
    switch (topLevelType) {
      case topLevelTypes.topCompositionEnd:
        return getDataFromCustomEvent(nativeEvent);
      case topLevelTypes.topKeyPress:
        var which = nativeEvent.which;
        if (which !== SPACEBAR_CODE) {
          return null;
        }
        hasSpaceKeypress = true;
        return SPACEBAR_CHAR;
      case topLevelTypes.topTextInput:
        var chars = nativeEvent.data;
        if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
          return null;
        }
        return chars;
      default:
        return null;
    }
  }
  function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
    if (currentComposition) {
      if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
        var chars = currentComposition.getData();
        FallbackCompositionState.release(currentComposition);
        currentComposition = null;
        return chars;
      }
      return null;
    }
    switch (topLevelType) {
      case topLevelTypes.topPaste:
        return null;
      case topLevelTypes.topKeyPress:
        if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
          return String.fromCharCode(nativeEvent.which);
        }
        return null;
      case topLevelTypes.topCompositionEnd:
        return useFallbackCompositionData ? null : nativeEvent.data;
      default:
        return null;
    }
  }
  function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var chars;
    if (canUseTextInputEvent) {
      chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
    } else {
      chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
    }
    if (!chars) {
      return null;
    }
    var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
    event.data = chars;
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }
  var BeforeInputEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
    }
  };
  module.exports = BeforeInputEventPlugin;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ChangeEventPlugin.js", ["npm:react@15.3.0/lib/EventConstants.js", "npm:react@15.3.0/lib/EventPluginHub.js", "npm:react@15.3.0/lib/EventPropagators.js", "npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactUpdates.js", "npm:react@15.3.0/lib/SyntheticEvent.js", "npm:react@15.3.0/lib/getEventTarget.js", "npm:react@15.3.0/lib/isEventSupported.js", "npm:react@15.3.0/lib/isTextInputElement.js", "npm:fbjs@0.8.3/lib/keyOf.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var EventConstants = $__require('npm:react@15.3.0/lib/EventConstants.js');
    var EventPluginHub = $__require('npm:react@15.3.0/lib/EventPluginHub.js');
    var EventPropagators = $__require('npm:react@15.3.0/lib/EventPropagators.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactUpdates = $__require('npm:react@15.3.0/lib/ReactUpdates.js');
    var SyntheticEvent = $__require('npm:react@15.3.0/lib/SyntheticEvent.js');
    var getEventTarget = $__require('npm:react@15.3.0/lib/getEventTarget.js');
    var isEventSupported = $__require('npm:react@15.3.0/lib/isEventSupported.js');
    var isTextInputElement = $__require('npm:react@15.3.0/lib/isTextInputElement.js');
    var keyOf = $__require('npm:fbjs@0.8.3/lib/keyOf.js');
    var topLevelTypes = EventConstants.topLevelTypes;
    var eventTypes = {change: {
        phasedRegistrationNames: {
          bubbled: keyOf({onChange: null}),
          captured: keyOf({onChangeCapture: null})
        },
        dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
      }};
    var activeElement = null;
    var activeElementInst = null;
    var activeElementValue = null;
    var activeElementValueProp = null;
    function shouldUseChangeEvent(elem) {
      var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
    }
    var doesChangeEventBubble = false;
    if (ExecutionEnvironment.canUseDOM) {
      doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
    }
    function manualDispatchChangeEvent(nativeEvent) {
      var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
      EventPropagators.accumulateTwoPhaseDispatches(event);
      ReactUpdates.batchedUpdates(runEventInBatch, event);
    }
    function runEventInBatch(event) {
      EventPluginHub.enqueueEvents(event);
      EventPluginHub.processEventQueue(false);
    }
    function startWatchingForChangeEventIE8(target, targetInst) {
      activeElement = target;
      activeElementInst = targetInst;
      activeElement.attachEvent('onchange', manualDispatchChangeEvent);
    }
    function stopWatchingForChangeEventIE8() {
      if (!activeElement) {
        return;
      }
      activeElement.detachEvent('onchange', manualDispatchChangeEvent);
      activeElement = null;
      activeElementInst = null;
    }
    function getTargetInstForChangeEvent(topLevelType, targetInst) {
      if (topLevelType === topLevelTypes.topChange) {
        return targetInst;
      }
    }
    function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
      if (topLevelType === topLevelTypes.topFocus) {
        stopWatchingForChangeEventIE8();
        startWatchingForChangeEventIE8(target, targetInst);
      } else if (topLevelType === topLevelTypes.topBlur) {
        stopWatchingForChangeEventIE8();
      }
    }
    var isInputEventSupported = false;
    if (ExecutionEnvironment.canUseDOM) {
      isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
    }
    var newValueProp = {
      get: function() {
        return activeElementValueProp.get.call(this);
      },
      set: function(val) {
        activeElementValue = '' + val;
        activeElementValueProp.set.call(this, val);
      }
    };
    function startWatchingForValueChange(target, targetInst) {
      activeElement = target;
      activeElementInst = targetInst;
      activeElementValue = target.value;
      activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
      Object.defineProperty(activeElement, 'value', newValueProp);
      if (activeElement.attachEvent) {
        activeElement.attachEvent('onpropertychange', handlePropertyChange);
      } else {
        activeElement.addEventListener('propertychange', handlePropertyChange, false);
      }
    }
    function stopWatchingForValueChange() {
      if (!activeElement) {
        return;
      }
      delete activeElement.value;
      if (activeElement.detachEvent) {
        activeElement.detachEvent('onpropertychange', handlePropertyChange);
      } else {
        activeElement.removeEventListener('propertychange', handlePropertyChange, false);
      }
      activeElement = null;
      activeElementInst = null;
      activeElementValue = null;
      activeElementValueProp = null;
    }
    function handlePropertyChange(nativeEvent) {
      if (nativeEvent.propertyName !== 'value') {
        return;
      }
      var value = nativeEvent.srcElement.value;
      if (value === activeElementValue) {
        return;
      }
      activeElementValue = value;
      manualDispatchChangeEvent(nativeEvent);
    }
    function getTargetInstForInputEvent(topLevelType, targetInst) {
      if (topLevelType === topLevelTypes.topInput) {
        return targetInst;
      }
    }
    function handleEventsForInputEventIE(topLevelType, target, targetInst) {
      if (topLevelType === topLevelTypes.topFocus) {
        stopWatchingForValueChange();
        startWatchingForValueChange(target, targetInst);
      } else if (topLevelType === topLevelTypes.topBlur) {
        stopWatchingForValueChange();
      }
    }
    function getTargetInstForInputEventIE(topLevelType, targetInst) {
      if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
        if (activeElement && activeElement.value !== activeElementValue) {
          activeElementValue = activeElement.value;
          return activeElementInst;
        }
      }
    }
    function shouldUseClickEvent(elem) {
      return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
    }
    function getTargetInstForClickEvent(topLevelType, targetInst) {
      if (topLevelType === topLevelTypes.topClick) {
        return targetInst;
      }
    }
    var ChangeEventPlugin = {
      eventTypes: eventTypes,
      extractEvents: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
        var getTargetInstFunc,
            handleEventFunc;
        if (shouldUseChangeEvent(targetNode)) {
          if (doesChangeEventBubble) {
            getTargetInstFunc = getTargetInstForChangeEvent;
          } else {
            handleEventFunc = handleEventsForChangeEventIE8;
          }
        } else if (isTextInputElement(targetNode)) {
          if (isInputEventSupported) {
            getTargetInstFunc = getTargetInstForInputEvent;
          } else {
            getTargetInstFunc = getTargetInstForInputEventIE;
            handleEventFunc = handleEventsForInputEventIE;
          }
        } else if (shouldUseClickEvent(targetNode)) {
          getTargetInstFunc = getTargetInstForClickEvent;
        }
        if (getTargetInstFunc) {
          var inst = getTargetInstFunc(topLevelType, targetInst);
          if (inst) {
            var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
            event.type = 'change';
            EventPropagators.accumulateTwoPhaseDispatches(event);
            return event;
          }
        }
        if (handleEventFunc) {
          handleEventFunc(topLevelType, targetNode, targetInst);
        }
      }
    };
    module.exports = ChangeEventPlugin;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/DefaultEventPluginOrder.js", ["npm:fbjs@0.8.3/lib/keyOf.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var keyOf = $__require('npm:fbjs@0.8.3/lib/keyOf.js');
  var DefaultEventPluginOrder = [keyOf({ResponderEventPlugin: null}), keyOf({SimpleEventPlugin: null}), keyOf({TapEventPlugin: null}), keyOf({EnterLeaveEventPlugin: null}), keyOf({ChangeEventPlugin: null}), keyOf({SelectEventPlugin: null}), keyOf({BeforeInputEventPlugin: null})];
  module.exports = DefaultEventPluginOrder;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/EnterLeaveEventPlugin.js", ["npm:react@15.3.0/lib/EventConstants.js", "npm:react@15.3.0/lib/EventPropagators.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/SyntheticMouseEvent.js", "npm:fbjs@0.8.3/lib/keyOf.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var EventConstants = $__require('npm:react@15.3.0/lib/EventConstants.js');
  var EventPropagators = $__require('npm:react@15.3.0/lib/EventPropagators.js');
  var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
  var SyntheticMouseEvent = $__require('npm:react@15.3.0/lib/SyntheticMouseEvent.js');
  var keyOf = $__require('npm:fbjs@0.8.3/lib/keyOf.js');
  var topLevelTypes = EventConstants.topLevelTypes;
  var eventTypes = {
    mouseEnter: {
      registrationName: keyOf({onMouseEnter: null}),
      dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
    },
    mouseLeave: {
      registrationName: keyOf({onMouseLeave: null}),
      dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
    }
  };
  var EnterLeaveEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
        return null;
      }
      if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
        return null;
      }
      var win;
      if (nativeEventTarget.window === nativeEventTarget) {
        win = nativeEventTarget;
      } else {
        var doc = nativeEventTarget.ownerDocument;
        if (doc) {
          win = doc.defaultView || doc.parentWindow;
        } else {
          win = window;
        }
      }
      var from;
      var to;
      if (topLevelType === topLevelTypes.topMouseOut) {
        from = targetInst;
        var related = nativeEvent.relatedTarget || nativeEvent.toElement;
        to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
      } else {
        from = null;
        to = targetInst;
      }
      if (from === to) {
        return null;
      }
      var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
      var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
      var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
      leave.type = 'mouseleave';
      leave.target = fromNode;
      leave.relatedTarget = toNode;
      var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
      enter.type = 'mouseenter';
      enter.target = toNode;
      enter.relatedTarget = fromNode;
      EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
      return [leave, enter];
    }
  };
  module.exports = EnterLeaveEventPlugin;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/HTMLDOMPropertyConfig.js", ["npm:react@15.3.0/lib/DOMProperty.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var DOMProperty = $__require('npm:react@15.3.0/lib/DOMProperty.js');
  var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
  var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
  var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
  var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
  var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
  var HTMLDOMPropertyConfig = {
    isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
    Properties: {
      accept: 0,
      acceptCharset: 0,
      accessKey: 0,
      action: 0,
      allowFullScreen: HAS_BOOLEAN_VALUE,
      allowTransparency: 0,
      alt: 0,
      async: HAS_BOOLEAN_VALUE,
      autoComplete: 0,
      autoPlay: HAS_BOOLEAN_VALUE,
      capture: HAS_BOOLEAN_VALUE,
      cellPadding: 0,
      cellSpacing: 0,
      charSet: 0,
      challenge: 0,
      checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      cite: 0,
      classID: 0,
      className: 0,
      cols: HAS_POSITIVE_NUMERIC_VALUE,
      colSpan: 0,
      content: 0,
      contentEditable: 0,
      contextMenu: 0,
      controls: HAS_BOOLEAN_VALUE,
      coords: 0,
      crossOrigin: 0,
      data: 0,
      dateTime: 0,
      'default': HAS_BOOLEAN_VALUE,
      defer: HAS_BOOLEAN_VALUE,
      dir: 0,
      disabled: HAS_BOOLEAN_VALUE,
      download: HAS_OVERLOADED_BOOLEAN_VALUE,
      draggable: 0,
      encType: 0,
      form: 0,
      formAction: 0,
      formEncType: 0,
      formMethod: 0,
      formNoValidate: HAS_BOOLEAN_VALUE,
      formTarget: 0,
      frameBorder: 0,
      headers: 0,
      height: 0,
      hidden: HAS_BOOLEAN_VALUE,
      high: 0,
      href: 0,
      hrefLang: 0,
      htmlFor: 0,
      httpEquiv: 0,
      icon: 0,
      id: 0,
      inputMode: 0,
      integrity: 0,
      is: 0,
      keyParams: 0,
      keyType: 0,
      kind: 0,
      label: 0,
      lang: 0,
      list: 0,
      loop: HAS_BOOLEAN_VALUE,
      low: 0,
      manifest: 0,
      marginHeight: 0,
      marginWidth: 0,
      max: 0,
      maxLength: 0,
      media: 0,
      mediaGroup: 0,
      method: 0,
      min: 0,
      minLength: 0,
      multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      name: 0,
      nonce: 0,
      noValidate: HAS_BOOLEAN_VALUE,
      open: HAS_BOOLEAN_VALUE,
      optimum: 0,
      pattern: 0,
      placeholder: 0,
      poster: 0,
      preload: 0,
      profile: 0,
      radioGroup: 0,
      readOnly: HAS_BOOLEAN_VALUE,
      referrerPolicy: 0,
      rel: 0,
      required: HAS_BOOLEAN_VALUE,
      reversed: HAS_BOOLEAN_VALUE,
      role: 0,
      rows: HAS_POSITIVE_NUMERIC_VALUE,
      rowSpan: HAS_NUMERIC_VALUE,
      sandbox: 0,
      scope: 0,
      scoped: HAS_BOOLEAN_VALUE,
      scrolling: 0,
      seamless: HAS_BOOLEAN_VALUE,
      selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      shape: 0,
      size: HAS_POSITIVE_NUMERIC_VALUE,
      sizes: 0,
      span: HAS_POSITIVE_NUMERIC_VALUE,
      spellCheck: 0,
      src: 0,
      srcDoc: 0,
      srcLang: 0,
      srcSet: 0,
      start: HAS_NUMERIC_VALUE,
      step: 0,
      style: 0,
      summary: 0,
      tabIndex: 0,
      target: 0,
      title: 0,
      type: 0,
      useMap: 0,
      value: 0,
      width: 0,
      wmode: 0,
      wrap: 0,
      about: 0,
      datatype: 0,
      inlist: 0,
      prefix: 0,
      property: 0,
      resource: 0,
      'typeof': 0,
      vocab: 0,
      autoCapitalize: 0,
      autoCorrect: 0,
      autoSave: 0,
      color: 0,
      itemProp: 0,
      itemScope: HAS_BOOLEAN_VALUE,
      itemType: 0,
      itemID: 0,
      itemRef: 0,
      results: 0,
      security: 0,
      unselectable: 0
    },
    DOMAttributeNames: {
      acceptCharset: 'accept-charset',
      className: 'class',
      htmlFor: 'for',
      httpEquiv: 'http-equiv'
    },
    DOMPropertyNames: {}
  };
  module.exports = HTMLDOMPropertyConfig;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/AutoFocusUtils.js", ["npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:fbjs@0.8.3/lib/focusNode.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
  var focusNode = $__require('npm:fbjs@0.8.3/lib/focusNode.js');
  var AutoFocusUtils = {focusDOMComponent: function() {
      focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
    }};
  module.exports = AutoFocusUtils;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/camelize.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var _hyphenPattern = /-(.)/g;
  function camelize(string) {
    return string.replace(_hyphenPattern, function(_, character) {
      return character.toUpperCase();
    });
  }
  module.exports = camelize;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/camelizeStyleName.js", ["npm:fbjs@0.8.3/lib/camelize.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var camelize = $__require('npm:fbjs@0.8.3/lib/camelize.js');
  var msPattern = /^-ms-/;
  function camelizeStyleName(string) {
    return camelize(string.replace(msPattern, 'ms-'));
  }
  module.exports = camelizeStyleName;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/CSSProperty.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var isUnitlessNumber = {
    animationIterationCount: true,
    borderImageOutset: true,
    borderImageSlice: true,
    borderImageWidth: true,
    boxFlex: true,
    boxFlexGroup: true,
    boxOrdinalGroup: true,
    columnCount: true,
    flex: true,
    flexGrow: true,
    flexPositive: true,
    flexShrink: true,
    flexNegative: true,
    flexOrder: true,
    gridRow: true,
    gridColumn: true,
    fontWeight: true,
    lineClamp: true,
    lineHeight: true,
    opacity: true,
    order: true,
    orphans: true,
    tabSize: true,
    widows: true,
    zIndex: true,
    zoom: true,
    fillOpacity: true,
    floodOpacity: true,
    stopOpacity: true,
    strokeDasharray: true,
    strokeDashoffset: true,
    strokeMiterlimit: true,
    strokeOpacity: true,
    strokeWidth: true
  };
  function prefixKey(prefix, key) {
    return prefix + key.charAt(0).toUpperCase() + key.substring(1);
  }
  var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
  Object.keys(isUnitlessNumber).forEach(function(prop) {
    prefixes.forEach(function(prefix) {
      isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
    });
  });
  var shorthandPropertyExpansions = {
    background: {
      backgroundAttachment: true,
      backgroundColor: true,
      backgroundImage: true,
      backgroundPositionX: true,
      backgroundPositionY: true,
      backgroundRepeat: true
    },
    backgroundPosition: {
      backgroundPositionX: true,
      backgroundPositionY: true
    },
    border: {
      borderWidth: true,
      borderStyle: true,
      borderColor: true
    },
    borderBottom: {
      borderBottomWidth: true,
      borderBottomStyle: true,
      borderBottomColor: true
    },
    borderLeft: {
      borderLeftWidth: true,
      borderLeftStyle: true,
      borderLeftColor: true
    },
    borderRight: {
      borderRightWidth: true,
      borderRightStyle: true,
      borderRightColor: true
    },
    borderTop: {
      borderTopWidth: true,
      borderTopStyle: true,
      borderTopColor: true
    },
    font: {
      fontStyle: true,
      fontVariant: true,
      fontWeight: true,
      fontSize: true,
      lineHeight: true,
      fontFamily: true
    },
    outline: {
      outlineWidth: true,
      outlineStyle: true,
      outlineColor: true
    }
  };
  var CSSProperty = {
    isUnitlessNumber: isUnitlessNumber,
    shorthandPropertyExpansions: shorthandPropertyExpansions
  };
  module.exports = CSSProperty;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/dangerousStyleValue.js", ["npm:react@15.3.0/lib/CSSProperty.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var CSSProperty = $__require('npm:react@15.3.0/lib/CSSProperty.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var isUnitlessNumber = CSSProperty.isUnitlessNumber;
    var styleWarnings = {};
    function dangerousStyleValue(name, value, component) {
      var isEmpty = value == null || typeof value === 'boolean' || value === '';
      if (isEmpty) {
        return '';
      }
      var isNonNumeric = isNaN(value);
      if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
        return '' + value;
      }
      if (typeof value === 'string') {
        if ("production" !== 'production') {
          if (component && value !== '0') {
            var owner = component._currentElement._owner;
            var ownerName = owner ? owner.getName() : null;
            if (ownerName && !styleWarnings[ownerName]) {
              styleWarnings[ownerName] = {};
            }
            var warned = false;
            if (ownerName) {
              var warnings = styleWarnings[ownerName];
              warned = warnings[name];
              if (!warned) {
                warnings[name] = true;
              }
            }
            if (!warned) {
              "production" !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
            }
          }
        }
        value = value.trim();
      }
      return value + 'px';
    }
    module.exports = dangerousStyleValue;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/hyphenate.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var _uppercasePattern = /([A-Z])/g;
  function hyphenate(string) {
    return string.replace(_uppercasePattern, '-$1').toLowerCase();
  }
  module.exports = hyphenate;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/hyphenateStyleName.js", ["npm:fbjs@0.8.3/lib/hyphenate.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var hyphenate = $__require('npm:fbjs@0.8.3/lib/hyphenate.js');
  var msPattern = /^ms-/;
  function hyphenateStyleName(string) {
    return hyphenate(string).replace(msPattern, '-ms-');
  }
  module.exports = hyphenateStyleName;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/memoizeStringOnly.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function memoizeStringOnly(callback) {
    var cache = {};
    return function(string) {
      if (!cache.hasOwnProperty(string)) {
        cache[string] = callback.call(this, string);
      }
      return cache[string];
    };
  }
  module.exports = memoizeStringOnly;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/CSSPropertyOperations.js", ["npm:react@15.3.0/lib/CSSProperty.js", "npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "npm:react@15.3.0/lib/ReactInstrumentation.js", "npm:fbjs@0.8.3/lib/camelizeStyleName.js", "npm:react@15.3.0/lib/dangerousStyleValue.js", "npm:fbjs@0.8.3/lib/hyphenateStyleName.js", "npm:fbjs@0.8.3/lib/memoizeStringOnly.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var CSSProperty = $__require('npm:react@15.3.0/lib/CSSProperty.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
    var ReactInstrumentation = $__require('npm:react@15.3.0/lib/ReactInstrumentation.js');
    var camelizeStyleName = $__require('npm:fbjs@0.8.3/lib/camelizeStyleName.js');
    var dangerousStyleValue = $__require('npm:react@15.3.0/lib/dangerousStyleValue.js');
    var hyphenateStyleName = $__require('npm:fbjs@0.8.3/lib/hyphenateStyleName.js');
    var memoizeStringOnly = $__require('npm:fbjs@0.8.3/lib/memoizeStringOnly.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var processStyleName = memoizeStringOnly(function(styleName) {
      return hyphenateStyleName(styleName);
    });
    var hasShorthandPropertyBug = false;
    var styleFloatAccessor = 'cssFloat';
    if (ExecutionEnvironment.canUseDOM) {
      var tempStyle = document.createElement('div').style;
      try {
        tempStyle.font = '';
      } catch (e) {
        hasShorthandPropertyBug = true;
      }
      if (document.documentElement.style.cssFloat === undefined) {
        styleFloatAccessor = 'styleFloat';
      }
    }
    if ("production" !== 'production') {
      var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
      var badStyleValueWithSemicolonPattern = /;\s*$/;
      var warnedStyleNames = {};
      var warnedStyleValues = {};
      var warnedForNaNValue = false;
      var warnHyphenatedStyleName = function(name, owner) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }
        warnedStyleNames[name] = true;
        "production" !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
      };
      var warnBadVendoredStyleName = function(name, owner) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }
        warnedStyleNames[name] = true;
        "production" !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
      };
      var warnStyleValueWithSemicolon = function(name, value, owner) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
          return;
        }
        warnedStyleValues[value] = true;
        "production" !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
      };
      var warnStyleValueIsNaN = function(name, value, owner) {
        if (warnedForNaNValue) {
          return;
        }
        warnedForNaNValue = true;
        "production" !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
      };
      var checkRenderMessage = function(owner) {
        if (owner) {
          var name = owner.getName();
          if (name) {
            return ' Check the render method of `' + name + '`.';
          }
        }
        return '';
      };
      var warnValidStyle = function(name, value, component) {
        var owner;
        if (component) {
          owner = component._currentElement._owner;
        }
        if (name.indexOf('-') > -1) {
          warnHyphenatedStyleName(name, owner);
        } else if (badVendoredStyleNamePattern.test(name)) {
          warnBadVendoredStyleName(name, owner);
        } else if (badStyleValueWithSemicolonPattern.test(value)) {
          warnStyleValueWithSemicolon(name, value, owner);
        }
        if (typeof value === 'number' && isNaN(value)) {
          warnStyleValueIsNaN(name, value, owner);
        }
      };
    }
    var CSSPropertyOperations = {
      createMarkupForStyles: function(styles, component) {
        var serialized = '';
        for (var styleName in styles) {
          if (!styles.hasOwnProperty(styleName)) {
            continue;
          }
          var styleValue = styles[styleName];
          if ("production" !== 'production') {
            warnValidStyle(styleName, styleValue, component);
          }
          if (styleValue != null) {
            serialized += processStyleName(styleName) + ':';
            serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
          }
        }
        return serialized || null;
      },
      setValueForStyles: function(node, styles, component) {
        if ("production" !== 'production') {
          ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
        }
        var style = node.style;
        for (var styleName in styles) {
          if (!styles.hasOwnProperty(styleName)) {
            continue;
          }
          if ("production" !== 'production') {
            warnValidStyle(styleName, styles[styleName], component);
          }
          var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
          if (styleName === 'float' || styleName === 'cssFloat') {
            styleName = styleFloatAccessor;
          }
          if (styleValue) {
            style[styleName] = styleValue;
          } else {
            var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
            if (expansion) {
              for (var individualStyleName in expansion) {
                style[individualStyleName] = '';
              }
            } else {
              style[styleName] = '';
            }
          }
        }
      }
    };
    module.exports = CSSPropertyOperations;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMIDOperations.js", ["npm:react@15.3.0/lib/DOMChildrenOperations.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var DOMChildrenOperations = $__require('npm:react@15.3.0/lib/DOMChildrenOperations.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactDOMIDOperations = {dangerouslyProcessChildrenUpdates: function(parentInst, updates) {
        var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
        DOMChildrenOperations.processUpdates(node, updates);
      }};
    module.exports = ReactDOMIDOperations;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactComponentBrowserEnvironment.js", ["npm:react@15.3.0/lib/DOMChildrenOperations.js", "npm:react@15.3.0/lib/ReactDOMIDOperations.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var DOMChildrenOperations = $__require('npm:react@15.3.0/lib/DOMChildrenOperations.js');
    var ReactDOMIDOperations = $__require('npm:react@15.3.0/lib/ReactDOMIDOperations.js');
    var ReactComponentBrowserEnvironment = {
      processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
      replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,
      unmountIDFromEnvironment: function(rootNodeID) {}
    };
    module.exports = ReactComponentBrowserEnvironment;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMButton.js", ["npm:react@15.3.0/lib/DisabledInputUtils.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var DisabledInputUtils = $__require('npm:react@15.3.0/lib/DisabledInputUtils.js');
  var ReactDOMButton = {getHostProps: DisabledInputUtils.getHostProps};
  module.exports = ReactDOMButton;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMNullInputValuePropDevtool.js", ["npm:react@15.3.0/lib/ReactComponentTreeDevtool.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ReactComponentTreeDevtool = $__require('npm:react@15.3.0/lib/ReactComponentTreeDevtool.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var didWarnValueNull = false;
    function handleElement(debugID, element) {
      if (element == null) {
        return;
      }
      if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
        return;
      }
      if (element.props != null && element.props.value === null && !didWarnValueNull) {
        "production" !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
        didWarnValueNull = true;
      }
    }
    var ReactDOMUnknownPropertyDevtool = {
      onBeforeMountComponent: function(debugID, element) {
        handleElement(debugID, element);
      },
      onBeforeUpdateComponent: function(debugID, element) {
        handleElement(debugID, element);
      }
    };
    module.exports = ReactDOMUnknownPropertyDevtool;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMUnknownPropertyDevtool.js", ["npm:react@15.3.0/lib/DOMProperty.js", "npm:react@15.3.0/lib/EventPluginRegistry.js", "npm:react@15.3.0/lib/ReactComponentTreeDevtool.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var DOMProperty = $__require('npm:react@15.3.0/lib/DOMProperty.js');
    var EventPluginRegistry = $__require('npm:react@15.3.0/lib/EventPluginRegistry.js');
    var ReactComponentTreeDevtool = $__require('npm:react@15.3.0/lib/ReactComponentTreeDevtool.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    if ("production" !== 'production') {
      var reactProps = {
        children: true,
        dangerouslySetInnerHTML: true,
        key: true,
        ref: true,
        autoFocus: true,
        defaultValue: true,
        valueLink: true,
        defaultChecked: true,
        checkedLink: true,
        innerHTML: true,
        suppressContentEditableWarning: true,
        onFocusIn: true,
        onFocusOut: true
      };
      var warnedProperties = {};
      var validateProperty = function(tagName, name, debugID) {
        if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
          return true;
        }
        if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
          return true;
        }
        if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
          return true;
        }
        warnedProperties[name] = true;
        var lowerCasedName = name.toLowerCase();
        var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
        var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
        if (standardName != null) {
          "production" !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
          return true;
        } else if (registrationName != null) {
          "production" !== 'production' ? warning(registrationName == null, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
          return true;
        } else {
          return false;
        }
      };
    }
    var warnUnknownProperties = function(debugID, element) {
      var unknownProps = [];
      for (var key in element.props) {
        var isValid = validateProperty(element.type, key, debugID);
        if (!isValid) {
          unknownProps.push(key);
        }
      }
      var unknownPropString = unknownProps.map(function(prop) {
        return '`' + prop + '`';
      }).join(', ');
      if (unknownProps.length === 1) {
        "production" !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
      } else if (unknownProps.length > 1) {
        "production" !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
      }
    };
    function handleElement(debugID, element) {
      if (element == null || typeof element.type !== 'string') {
        return;
      }
      if (element.type.indexOf('-') >= 0 || element.props.is) {
        return;
      }
      warnUnknownProperties(debugID, element);
    }
    var ReactDOMUnknownPropertyDevtool = {
      onBeforeMountComponent: function(debugID, element) {
        handleElement(debugID, element);
      },
      onBeforeUpdateComponent: function(debugID, element) {
        handleElement(debugID, element);
      }
    };
    module.exports = ReactDOMUnknownPropertyDevtool;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMDebugTool.js", ["npm:react@15.3.0/lib/ReactDOMNullInputValuePropDevtool.js", "npm:react@15.3.0/lib/ReactDOMUnknownPropertyDevtool.js", "npm:react@15.3.0/lib/ReactDebugTool.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ReactDOMNullInputValuePropDevtool = $__require('npm:react@15.3.0/lib/ReactDOMNullInputValuePropDevtool.js');
    var ReactDOMUnknownPropertyDevtool = $__require('npm:react@15.3.0/lib/ReactDOMUnknownPropertyDevtool.js');
    var ReactDebugTool = $__require('npm:react@15.3.0/lib/ReactDebugTool.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var eventHandlers = [];
    var handlerDoesThrowForEvent = {};
    function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
      eventHandlers.forEach(function(handler) {
        try {
          if (handler[handlerFunctionName]) {
            handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
          }
        } catch (e) {
          "production" !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
          handlerDoesThrowForEvent[handlerFunctionName] = true;
        }
      });
    }
    var ReactDOMDebugTool = {
      addDevtool: function(devtool) {
        ReactDebugTool.addDevtool(devtool);
        eventHandlers.push(devtool);
      },
      removeDevtool: function(devtool) {
        ReactDebugTool.removeDevtool(devtool);
        for (var i = 0; i < eventHandlers.length; i++) {
          if (eventHandlers[i] === devtool) {
            eventHandlers.splice(i, 1);
            i--;
          }
        }
      },
      onCreateMarkupForProperty: function(name, value) {
        emitEvent('onCreateMarkupForProperty', name, value);
      },
      onSetValueForProperty: function(node, name, value) {
        emitEvent('onSetValueForProperty', node, name, value);
      },
      onDeleteValueForProperty: function(node, name) {
        emitEvent('onDeleteValueForProperty', node, name);
      },
      onTestEvent: function() {
        emitEvent('onTestEvent');
      }
    };
    ReactDOMDebugTool.addDevtool(ReactDOMUnknownPropertyDevtool);
    ReactDOMDebugTool.addDevtool(ReactDOMNullInputValuePropDevtool);
    module.exports = ReactDOMDebugTool;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMInstrumentation.js", ["npm:react@15.3.0/lib/ReactDOMDebugTool.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var debugTool = null;
    if ("production" !== 'production') {
      var ReactDOMDebugTool = $__require('npm:react@15.3.0/lib/ReactDOMDebugTool.js');
      debugTool = ReactDOMDebugTool;
    }
    module.exports = {debugTool: debugTool};
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/quoteAttributeValueForBrowser.js", ["npm:react@15.3.0/lib/escapeTextContentForBrowser.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var escapeTextContentForBrowser = $__require('npm:react@15.3.0/lib/escapeTextContentForBrowser.js');
  function quoteAttributeValueForBrowser(value) {
    return '"' + escapeTextContentForBrowser(value) + '"';
  }
  module.exports = quoteAttributeValueForBrowser;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/DOMPropertyOperations.js", ["npm:react@15.3.0/lib/DOMProperty.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactDOMInstrumentation.js", "npm:react@15.3.0/lib/ReactInstrumentation.js", "npm:react@15.3.0/lib/quoteAttributeValueForBrowser.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var DOMProperty = $__require('npm:react@15.3.0/lib/DOMProperty.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactDOMInstrumentation = $__require('npm:react@15.3.0/lib/ReactDOMInstrumentation.js');
    var ReactInstrumentation = $__require('npm:react@15.3.0/lib/ReactInstrumentation.js');
    var quoteAttributeValueForBrowser = $__require('npm:react@15.3.0/lib/quoteAttributeValueForBrowser.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
      if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
        return true;
      }
      if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
        return false;
      }
      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
        validatedAttributeNameCache[attributeName] = true;
        return true;
      }
      illegalAttributeNameCache[attributeName] = true;
      "production" !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
      return false;
    }
    function shouldIgnoreValue(propertyInfo, value) {
      return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
    }
    var DOMPropertyOperations = {
      createMarkupForID: function(id) {
        return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
      },
      setAttributeForID: function(node, id) {
        node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
      },
      createMarkupForRoot: function() {
        return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
      },
      setAttributeForRoot: function(node) {
        node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
      },
      createMarkupForProperty: function(name, value) {
        if ("production" !== 'production') {
          ReactDOMInstrumentation.debugTool.onCreateMarkupForProperty(name, value);
        }
        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
        if (propertyInfo) {
          if (shouldIgnoreValue(propertyInfo, value)) {
            return '';
          }
          var attributeName = propertyInfo.attributeName;
          if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
            return attributeName + '=""';
          }
          return attributeName + '=' + quoteAttributeValueForBrowser(value);
        } else if (DOMProperty.isCustomAttribute(name)) {
          if (value == null) {
            return '';
          }
          return name + '=' + quoteAttributeValueForBrowser(value);
        }
        return null;
      },
      createMarkupForCustomAttribute: function(name, value) {
        if (!isAttributeNameSafe(name) || value == null) {
          return '';
        }
        return name + '=' + quoteAttributeValueForBrowser(value);
      },
      setValueForProperty: function(node, name, value) {
        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
        if (propertyInfo) {
          var mutationMethod = propertyInfo.mutationMethod;
          if (mutationMethod) {
            mutationMethod(node, value);
          } else if (shouldIgnoreValue(propertyInfo, value)) {
            this.deleteValueForProperty(node, name);
            return;
          } else if (propertyInfo.mustUseProperty) {
            node[propertyInfo.propertyName] = value;
          } else {
            var attributeName = propertyInfo.attributeName;
            var namespace = propertyInfo.attributeNamespace;
            if (namespace) {
              node.setAttributeNS(namespace, attributeName, '' + value);
            } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
              node.setAttribute(attributeName, '');
            } else {
              node.setAttribute(attributeName, '' + value);
            }
          }
        } else if (DOMProperty.isCustomAttribute(name)) {
          DOMPropertyOperations.setValueForAttribute(node, name, value);
          return;
        }
        if ("production" !== 'production') {
          ReactDOMInstrumentation.debugTool.onSetValueForProperty(node, name, value);
          var payload = {};
          payload[name] = value;
          ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
        }
      },
      setValueForAttribute: function(node, name, value) {
        if (!isAttributeNameSafe(name)) {
          return;
        }
        if (value == null) {
          node.removeAttribute(name);
        } else {
          node.setAttribute(name, '' + value);
        }
        if ("production" !== 'production') {
          var payload = {};
          payload[name] = value;
          ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
        }
      },
      deleteValueForAttribute: function(node, name) {
        node.removeAttribute(name);
        if ("production" !== 'production') {
          ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
          ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
        }
      },
      deleteValueForProperty: function(node, name) {
        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
        if (propertyInfo) {
          var mutationMethod = propertyInfo.mutationMethod;
          if (mutationMethod) {
            mutationMethod(node, undefined);
          } else if (propertyInfo.mustUseProperty) {
            var propName = propertyInfo.propertyName;
            if (propertyInfo.hasBooleanValue) {
              node[propName] = false;
            } else {
              node[propName] = '';
            }
          } else {
            node.removeAttribute(propertyInfo.attributeName);
          }
        } else if (DOMProperty.isCustomAttribute(name)) {
          node.removeAttribute(name);
        }
        if ("production" !== 'production') {
          ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
          ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
        }
      }
    };
    module.exports = DOMPropertyOperations;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMInput.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/DisabledInputUtils.js", "npm:react@15.3.0/lib/DOMPropertyOperations.js", "npm:react@15.3.0/lib/LinkedValueUtils.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactUpdates.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.0.js');
    var DisabledInputUtils = $__require('npm:react@15.3.0/lib/DisabledInputUtils.js');
    var DOMPropertyOperations = $__require('npm:react@15.3.0/lib/DOMPropertyOperations.js');
    var LinkedValueUtils = $__require('npm:react@15.3.0/lib/LinkedValueUtils.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactUpdates = $__require('npm:react@15.3.0/lib/ReactUpdates.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var didWarnValueLink = false;
    var didWarnCheckedLink = false;
    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;
    function forceUpdateIfMounted() {
      if (this._rootNodeID) {
        ReactDOMInput.updateWrapper(this);
      }
    }
    function isControlled(props) {
      var usesChecked = props.type === 'checkbox' || props.type === 'radio';
      return usesChecked ? props.checked !== undefined : props.value !== undefined;
    }
    var ReactDOMInput = {
      getHostProps: function(inst, props) {
        var value = LinkedValueUtils.getValue(props);
        var checked = LinkedValueUtils.getChecked(props);
        var hostProps = _assign({
          type: undefined,
          step: undefined
        }, DisabledInputUtils.getHostProps(inst, props), {
          defaultChecked: undefined,
          defaultValue: undefined,
          value: value != null ? value : inst._wrapperState.initialValue,
          checked: checked != null ? checked : inst._wrapperState.initialChecked,
          onChange: inst._wrapperState.onChange
        });
        return hostProps;
      },
      mountWrapper: function(inst, props) {
        if ("production" !== 'production') {
          LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
          var owner = inst._currentElement._owner;
          if (props.valueLink !== undefined && !didWarnValueLink) {
            "production" !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
            didWarnValueLink = true;
          }
          if (props.checkedLink !== undefined && !didWarnCheckedLink) {
            "production" !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
            didWarnCheckedLink = true;
          }
          if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
            "production" !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
            didWarnCheckedDefaultChecked = true;
          }
          if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
            "production" !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
            didWarnValueDefaultValue = true;
          }
        }
        var defaultValue = props.defaultValue;
        inst._wrapperState = {
          initialChecked: props.checked != null ? props.checked : props.defaultChecked,
          initialValue: props.value != null ? props.value : defaultValue,
          listeners: null,
          onChange: _handleChange.bind(inst)
        };
        if ("production" !== 'production') {
          inst._wrapperState.controlled = isControlled(props);
        }
      },
      updateWrapper: function(inst) {
        var props = inst._currentElement.props;
        if ("production" !== 'production') {
          var controlled = isControlled(props);
          var owner = inst._currentElement._owner;
          if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
            "production" !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
            didWarnUncontrolledToControlled = true;
          }
          if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
            "production" !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
            didWarnControlledToUncontrolled = true;
          }
        }
        var checked = props.checked;
        if (checked != null) {
          DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
        }
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          var newValue = '' + value;
          if (newValue !== node.value) {
            node.value = newValue;
          }
        } else {
          if (props.value == null && props.defaultValue != null) {
            node.defaultValue = '' + props.defaultValue;
          }
          if (props.checked == null && props.defaultChecked != null) {
            node.defaultChecked = !!props.defaultChecked;
          }
        }
      },
      postMountWrapper: function(inst) {
        var props = inst._currentElement.props;
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        if (props.type !== 'submit' && props.type !== 'reset') {
          node.value = node.value;
        }
        var name = node.name;
        if (name !== '') {
          node.name = '';
        }
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !node.defaultChecked;
        if (name !== '') {
          node.name = name;
        }
      }
    };
    function _handleChange(event) {
      var props = this._currentElement.props;
      var returnValue = LinkedValueUtils.executeOnChange(props, event);
      ReactUpdates.asap(forceUpdateIfMounted, this);
      var name = props.name;
      if (props.type === 'radio' && name != null) {
        var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
        var queryRoot = rootNode;
        while (queryRoot.parentNode) {
          queryRoot = queryRoot.parentNode;
        }
        var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
        for (var i = 0; i < group.length; i++) {
          var otherNode = group[i];
          if (otherNode === rootNode || otherNode.form !== rootNode.form) {
            continue;
          }
          var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
          !otherInstance ? "production" !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
          ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
        }
      }
      return returnValue;
    }
    module.exports = ReactDOMInput;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMOption.js", ["npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/ReactChildren.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactDOMSelect.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _assign = $__require('npm:object-assign@4.1.0.js');
    var ReactChildren = $__require('npm:react@15.3.0/lib/ReactChildren.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactDOMSelect = $__require('npm:react@15.3.0/lib/ReactDOMSelect.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var didWarnInvalidOptionChildren = false;
    function flattenChildren(children) {
      var content = '';
      ReactChildren.forEach(children, function(child) {
        if (child == null) {
          return;
        }
        if (typeof child === 'string' || typeof child === 'number') {
          content += child;
        } else if (!didWarnInvalidOptionChildren) {
          didWarnInvalidOptionChildren = true;
          "production" !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
        }
      });
      return content;
    }
    var ReactDOMOption = {
      mountWrapper: function(inst, props, hostParent) {
        if ("production" !== 'production') {
          "production" !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
        }
        var selectValue = null;
        if (hostParent != null) {
          var selectParent = hostParent;
          if (selectParent._tag === 'optgroup') {
            selectParent = selectParent._hostParent;
          }
          if (selectParent != null && selectParent._tag === 'select') {
            selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
          }
        }
        var selected = null;
        if (selectValue != null) {
          var value;
          if (props.value != null) {
            value = props.value + '';
          } else {
            value = flattenChildren(props.children);
          }
          selected = false;
          if (Array.isArray(selectValue)) {
            for (var i = 0; i < selectValue.length; i++) {
              if ('' + selectValue[i] === value) {
                selected = true;
                break;
              }
            }
          } else {
            selected = '' + selectValue === value;
          }
        }
        inst._wrapperState = {selected: selected};
      },
      postMountWrapper: function(inst) {
        var props = inst._currentElement.props;
        if (props.value != null) {
          var node = ReactDOMComponentTree.getNodeFromInstance(inst);
          node.setAttribute('value', props.value);
        }
      },
      getHostProps: function(inst, props) {
        var hostProps = _assign({
          selected: undefined,
          children: undefined
        }, props);
        if (inst._wrapperState.selected != null) {
          hostProps.selected = inst._wrapperState.selected;
        }
        var content = flattenChildren(props.children);
        if (content) {
          hostProps.children = content;
        }
        return hostProps;
      }
    };
    module.exports = ReactDOMOption;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMSelect.js", ["npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/DisabledInputUtils.js", "npm:react@15.3.0/lib/LinkedValueUtils.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactUpdates.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _assign = $__require('npm:object-assign@4.1.0.js');
    var DisabledInputUtils = $__require('npm:react@15.3.0/lib/DisabledInputUtils.js');
    var LinkedValueUtils = $__require('npm:react@15.3.0/lib/LinkedValueUtils.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactUpdates = $__require('npm:react@15.3.0/lib/ReactUpdates.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var didWarnValueLink = false;
    var didWarnValueDefaultValue = false;
    function updateOptionsIfPendingUpdateAndMounted() {
      if (this._rootNodeID && this._wrapperState.pendingUpdate) {
        this._wrapperState.pendingUpdate = false;
        var props = this._currentElement.props;
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          updateOptions(this, Boolean(props.multiple), value);
        }
      }
    }
    function getDeclarationErrorAddendum(owner) {
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    var valuePropNames = ['value', 'defaultValue'];
    function checkSelectPropTypes(inst, props) {
      var owner = inst._currentElement._owner;
      LinkedValueUtils.checkPropTypes('select', props, owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        "production" !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      for (var i = 0; i < valuePropNames.length; i++) {
        var propName = valuePropNames[i];
        if (props[propName] == null) {
          continue;
        }
        if (props.multiple) {
          "production" !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
        } else {
          "production" !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
        }
      }
    }
    function updateOptions(inst, multiple, propValue) {
      var selectedValue,
          i;
      var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
      if (multiple) {
        selectedValue = {};
        for (i = 0; i < propValue.length; i++) {
          selectedValue['' + propValue[i]] = true;
        }
        for (i = 0; i < options.length; i++) {
          var selected = selectedValue.hasOwnProperty(options[i].value);
          if (options[i].selected !== selected) {
            options[i].selected = selected;
          }
        }
      } else {
        selectedValue = '' + propValue;
        for (i = 0; i < options.length; i++) {
          if (options[i].value === selectedValue) {
            options[i].selected = true;
            return;
          }
        }
        if (options.length) {
          options[0].selected = true;
        }
      }
    }
    var ReactDOMSelect = {
      getHostProps: function(inst, props) {
        return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
          onChange: inst._wrapperState.onChange,
          value: undefined
        });
      },
      mountWrapper: function(inst, props) {
        if ("production" !== 'production') {
          checkSelectPropTypes(inst, props);
        }
        var value = LinkedValueUtils.getValue(props);
        inst._wrapperState = {
          pendingUpdate: false,
          initialValue: value != null ? value : props.defaultValue,
          listeners: null,
          onChange: _handleChange.bind(inst),
          wasMultiple: Boolean(props.multiple)
        };
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
          "production" !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
          didWarnValueDefaultValue = true;
        }
      },
      getSelectValueContext: function(inst) {
        return inst._wrapperState.initialValue;
      },
      postUpdateWrapper: function(inst) {
        var props = inst._currentElement.props;
        inst._wrapperState.initialValue = undefined;
        var wasMultiple = inst._wrapperState.wasMultiple;
        inst._wrapperState.wasMultiple = Boolean(props.multiple);
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          inst._wrapperState.pendingUpdate = false;
          updateOptions(inst, Boolean(props.multiple), value);
        } else if (wasMultiple !== Boolean(props.multiple)) {
          if (props.defaultValue != null) {
            updateOptions(inst, Boolean(props.multiple), props.defaultValue);
          } else {
            updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
          }
        }
      }
    };
    function _handleChange(event) {
      var props = this._currentElement.props;
      var returnValue = LinkedValueUtils.executeOnChange(props, event);
      if (this._rootNodeID) {
        this._wrapperState.pendingUpdate = true;
      }
      ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
      return returnValue;
    }
    module.exports = ReactDOMSelect;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/DisabledInputUtils.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var disableableMouseListenerNames = {
    onClick: true,
    onDoubleClick: true,
    onMouseDown: true,
    onMouseMove: true,
    onMouseUp: true,
    onClickCapture: true,
    onDoubleClickCapture: true,
    onMouseDownCapture: true,
    onMouseMoveCapture: true,
    onMouseUpCapture: true
  };
  var DisabledInputUtils = {getHostProps: function(inst, props) {
      if (!props.disabled) {
        return props;
      }
      var hostProps = {};
      for (var key in props) {
        if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
          hostProps[key] = props[key];
        }
      }
      return hostProps;
    }};
  module.exports = DisabledInputUtils;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/LinkedValueUtils.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/ReactPropTypes.js", "npm:react@15.3.0/lib/ReactPropTypeLocations.js", "npm:react@15.3.0/lib/ReactPropTypesSecret.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var ReactPropTypes = $__require('npm:react@15.3.0/lib/ReactPropTypes.js');
    var ReactPropTypeLocations = $__require('npm:react@15.3.0/lib/ReactPropTypeLocations.js');
    var ReactPropTypesSecret = $__require('npm:react@15.3.0/lib/ReactPropTypesSecret.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var hasReadOnlyValue = {
      'button': true,
      'checkbox': true,
      'image': true,
      'hidden': true,
      'radio': true,
      'reset': true,
      'submit': true
    };
    function _assertSingleLink(inputProps) {
      !(inputProps.checkedLink == null || inputProps.valueLink == null) ? "production" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
    }
    function _assertValueLink(inputProps) {
      _assertSingleLink(inputProps);
      !(inputProps.value == null && inputProps.onChange == null) ? "production" !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
    }
    function _assertCheckedLink(inputProps) {
      _assertSingleLink(inputProps);
      !(inputProps.checked == null && inputProps.onChange == null) ? "production" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
    }
    var propTypes = {
      value: function(props, propName, componentName) {
        if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
          return null;
        }
        return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
      },
      checked: function(props, propName, componentName) {
        if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
          return null;
        }
        return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
      },
      onChange: ReactPropTypes.func
    };
    var loggedTypeFailures = {};
    function getDeclarationErrorAddendum(owner) {
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    var LinkedValueUtils = {
      checkPropTypes: function(tagName, props, owner) {
        for (var propName in propTypes) {
          if (propTypes.hasOwnProperty(propName)) {
            var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);
          }
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = true;
            var addendum = getDeclarationErrorAddendum(owner);
            "production" !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
          }
        }
      },
      getValue: function(inputProps) {
        if (inputProps.valueLink) {
          _assertValueLink(inputProps);
          return inputProps.valueLink.value;
        }
        return inputProps.value;
      },
      getChecked: function(inputProps) {
        if (inputProps.checkedLink) {
          _assertCheckedLink(inputProps);
          return inputProps.checkedLink.value;
        }
        return inputProps.checked;
      },
      executeOnChange: function(inputProps, event) {
        if (inputProps.valueLink) {
          _assertValueLink(inputProps);
          return inputProps.valueLink.requestChange(event.target.value);
        } else if (inputProps.checkedLink) {
          _assertCheckedLink(inputProps);
          return inputProps.checkedLink.requestChange(event.target.checked);
        } else if (inputProps.onChange) {
          return inputProps.onChange.call(undefined, event);
        }
      }
    };
    module.exports = LinkedValueUtils;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMTextarea.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/DisabledInputUtils.js", "npm:react@15.3.0/lib/LinkedValueUtils.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactUpdates.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.0.js');
    var DisabledInputUtils = $__require('npm:react@15.3.0/lib/DisabledInputUtils.js');
    var LinkedValueUtils = $__require('npm:react@15.3.0/lib/LinkedValueUtils.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactUpdates = $__require('npm:react@15.3.0/lib/ReactUpdates.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var didWarnValueLink = false;
    var didWarnValDefaultVal = false;
    function forceUpdateIfMounted() {
      if (this._rootNodeID) {
        ReactDOMTextarea.updateWrapper(this);
      }
    }
    var ReactDOMTextarea = {
      getHostProps: function(inst, props) {
        !(props.dangerouslySetInnerHTML == null) ? "production" !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
        var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
          value: undefined,
          defaultValue: undefined,
          children: '' + inst._wrapperState.initialValue,
          onChange: inst._wrapperState.onChange
        });
        return hostProps;
      },
      mountWrapper: function(inst, props) {
        if ("production" !== 'production') {
          LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
          if (props.valueLink !== undefined && !didWarnValueLink) {
            "production" !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
            didWarnValueLink = true;
          }
          if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
            "production" !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
            didWarnValDefaultVal = true;
          }
        }
        var value = LinkedValueUtils.getValue(props);
        var initialValue = value;
        if (value == null) {
          var defaultValue = props.defaultValue;
          var children = props.children;
          if (children != null) {
            if ("production" !== 'production') {
              "production" !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
            }
            !(defaultValue == null) ? "production" !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
            if (Array.isArray(children)) {
              !(children.length <= 1) ? "production" !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
              children = children[0];
            }
            defaultValue = '' + children;
          }
          if (defaultValue == null) {
            defaultValue = '';
          }
          initialValue = defaultValue;
        }
        inst._wrapperState = {
          initialValue: '' + initialValue,
          listeners: null,
          onChange: _handleChange.bind(inst)
        };
      },
      updateWrapper: function(inst) {
        var props = inst._currentElement.props;
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          var newValue = '' + value;
          if (newValue !== node.value) {
            node.value = newValue;
          }
          if (props.defaultValue == null) {
            node.defaultValue = newValue;
          }
        }
        if (props.defaultValue != null) {
          node.defaultValue = props.defaultValue;
        }
      },
      postMountWrapper: function(inst) {
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        node.value = node.textContent;
      }
    };
    function _handleChange(event) {
      var props = this._currentElement.props;
      var returnValue = LinkedValueUtils.executeOnChange(props, event);
      ReactUpdates.asap(forceUpdateIfMounted, this);
      return returnValue;
    }
    module.exports = ReactDOMTextarea;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactChildReconciler.js", ["npm:react@15.3.0/lib/ReactReconciler.js", "npm:react@15.3.0/lib/instantiateReactComponent.js", "npm:react@15.3.0/lib/KeyEscapeUtils.js", "npm:react@15.3.0/lib/shouldUpdateReactComponent.js", "npm:react@15.3.0/lib/traverseAllChildren.js", "npm:fbjs@0.8.3/lib/warning.js", "npm:react@15.3.0/lib/ReactComponentTreeDevtool.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ReactReconciler = $__require('npm:react@15.3.0/lib/ReactReconciler.js');
    var instantiateReactComponent = $__require('npm:react@15.3.0/lib/instantiateReactComponent.js');
    var KeyEscapeUtils = $__require('npm:react@15.3.0/lib/KeyEscapeUtils.js');
    var shouldUpdateReactComponent = $__require('npm:react@15.3.0/lib/shouldUpdateReactComponent.js');
    var traverseAllChildren = $__require('npm:react@15.3.0/lib/traverseAllChildren.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var ReactComponentTreeDevtool;
    if (typeof process !== 'undefined' && process.env && "production" === 'test') {
      ReactComponentTreeDevtool = $__require('npm:react@15.3.0/lib/ReactComponentTreeDevtool.js');
    }
    function instantiateChild(childInstances, child, name, selfDebugID) {
      var keyUnique = childInstances[name] === undefined;
      if ("production" !== 'production') {
        if (!ReactComponentTreeDevtool) {
          ReactComponentTreeDevtool = $__require('npm:react@15.3.0/lib/ReactComponentTreeDevtool.js');
        }
        "production" !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
      }
      if (child != null && keyUnique) {
        childInstances[name] = instantiateReactComponent(child, true);
      }
    }
    var ReactChildReconciler = {
      instantiateChildren: function(nestedChildNodes, transaction, context, selfDebugID) {
        if (nestedChildNodes == null) {
          return null;
        }
        var childInstances = {};
        if ("production" !== 'production') {
          traverseAllChildren(nestedChildNodes, function(childInsts, child, name) {
            return instantiateChild(childInsts, child, name, selfDebugID);
          }, childInstances);
        } else {
          traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
        }
        return childInstances;
      },
      updateChildren: function(prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context) {
        if (!nextChildren && !prevChildren) {
          return;
        }
        var name;
        var prevChild;
        for (name in nextChildren) {
          if (!nextChildren.hasOwnProperty(name)) {
            continue;
          }
          prevChild = prevChildren && prevChildren[name];
          var prevElement = prevChild && prevChild._currentElement;
          var nextElement = nextChildren[name];
          if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
            ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
            nextChildren[name] = prevChild;
          } else {
            if (prevChild) {
              removedNodes[name] = ReactReconciler.getHostNode(prevChild);
              ReactReconciler.unmountComponent(prevChild, false);
            }
            var nextChildInstance = instantiateReactComponent(nextElement, true);
            nextChildren[name] = nextChildInstance;
            var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context);
            mountImages.push(nextChildMountImage);
          }
        }
        for (name in prevChildren) {
          if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
            prevChild = prevChildren[name];
            removedNodes[name] = ReactReconciler.getHostNode(prevChild);
            ReactReconciler.unmountComponent(prevChild, false);
          }
        }
      },
      unmountChildren: function(renderedChildren, safely) {
        for (var name in renderedChildren) {
          if (renderedChildren.hasOwnProperty(name)) {
            var renderedChild = renderedChildren[name];
            ReactReconciler.unmountComponent(renderedChild, safely);
          }
        }
      }
    };
    module.exports = ReactChildReconciler;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/flattenChildren.js", ["npm:react@15.3.0/lib/KeyEscapeUtils.js", "npm:react@15.3.0/lib/traverseAllChildren.js", "npm:fbjs@0.8.3/lib/warning.js", "npm:react@15.3.0/lib/ReactComponentTreeDevtool.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var KeyEscapeUtils = $__require('npm:react@15.3.0/lib/KeyEscapeUtils.js');
    var traverseAllChildren = $__require('npm:react@15.3.0/lib/traverseAllChildren.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var ReactComponentTreeDevtool;
    if (typeof process !== 'undefined' && process.env && "production" === 'test') {
      ReactComponentTreeDevtool = $__require('npm:react@15.3.0/lib/ReactComponentTreeDevtool.js');
    }
    function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
      if (traverseContext && typeof traverseContext === 'object') {
        var result = traverseContext;
        var keyUnique = result[name] === undefined;
        if ("production" !== 'production') {
          if (!ReactComponentTreeDevtool) {
            ReactComponentTreeDevtool = $__require('npm:react@15.3.0/lib/ReactComponentTreeDevtool.js');
          }
          "production" !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
        }
        if (keyUnique && child != null) {
          result[name] = child;
        }
      }
    }
    function flattenChildren(children, selfDebugID) {
      if (children == null) {
        return children;
      }
      var result = {};
      if ("production" !== 'production') {
        traverseAllChildren(children, function(traverseContext, child, name) {
          return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
        }, result);
      } else {
        traverseAllChildren(children, flattenSingleChildIntoContext, result);
      }
      return result;
    }
    module.exports = flattenChildren;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactMultiChild.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/ReactComponentEnvironment.js", "npm:react@15.3.0/lib/ReactInstanceMap.js", "npm:react@15.3.0/lib/ReactInstrumentation.js", "npm:react@15.3.0/lib/ReactMultiChildUpdateTypes.js", "npm:react@15.3.0/lib/ReactCurrentOwner.js", "npm:react@15.3.0/lib/ReactReconciler.js", "npm:react@15.3.0/lib/ReactChildReconciler.js", "npm:fbjs@0.8.3/lib/emptyFunction.js", "npm:react@15.3.0/lib/flattenChildren.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var ReactComponentEnvironment = $__require('npm:react@15.3.0/lib/ReactComponentEnvironment.js');
    var ReactInstanceMap = $__require('npm:react@15.3.0/lib/ReactInstanceMap.js');
    var ReactInstrumentation = $__require('npm:react@15.3.0/lib/ReactInstrumentation.js');
    var ReactMultiChildUpdateTypes = $__require('npm:react@15.3.0/lib/ReactMultiChildUpdateTypes.js');
    var ReactCurrentOwner = $__require('npm:react@15.3.0/lib/ReactCurrentOwner.js');
    var ReactReconciler = $__require('npm:react@15.3.0/lib/ReactReconciler.js');
    var ReactChildReconciler = $__require('npm:react@15.3.0/lib/ReactChildReconciler.js');
    var emptyFunction = $__require('npm:fbjs@0.8.3/lib/emptyFunction.js');
    var flattenChildren = $__require('npm:react@15.3.0/lib/flattenChildren.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    function makeInsertMarkup(markup, afterNode, toIndex) {
      return {
        type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
        content: markup,
        fromIndex: null,
        fromNode: null,
        toIndex: toIndex,
        afterNode: afterNode
      };
    }
    function makeMove(child, afterNode, toIndex) {
      return {
        type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
        content: null,
        fromIndex: child._mountIndex,
        fromNode: ReactReconciler.getHostNode(child),
        toIndex: toIndex,
        afterNode: afterNode
      };
    }
    function makeRemove(child, node) {
      return {
        type: ReactMultiChildUpdateTypes.REMOVE_NODE,
        content: null,
        fromIndex: child._mountIndex,
        fromNode: node,
        toIndex: null,
        afterNode: null
      };
    }
    function makeSetMarkup(markup) {
      return {
        type: ReactMultiChildUpdateTypes.SET_MARKUP,
        content: markup,
        fromIndex: null,
        fromNode: null,
        toIndex: null,
        afterNode: null
      };
    }
    function makeTextContent(textContent) {
      return {
        type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
        content: textContent,
        fromIndex: null,
        fromNode: null,
        toIndex: null,
        afterNode: null
      };
    }
    function enqueue(queue, update) {
      if (update) {
        queue = queue || [];
        queue.push(update);
      }
      return queue;
    }
    function processQueue(inst, updateQueue) {
      ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
    }
    var setParentForInstrumentation = emptyFunction;
    var setChildrenForInstrumentation = emptyFunction;
    if ("production" !== 'production') {
      var getDebugID = function(inst) {
        if (!inst._debugID) {
          var internal;
          if (internal = ReactInstanceMap.get(inst)) {
            inst = internal;
          }
        }
        return inst._debugID;
      };
      setParentForInstrumentation = function(child) {
        if (child._debugID !== 0) {
          ReactInstrumentation.debugTool.onSetParent(child._debugID, getDebugID(this));
        }
      };
      setChildrenForInstrumentation = function(children) {
        var debugID = getDebugID(this);
        if (debugID !== 0) {
          ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function(key) {
            return children[key]._debugID;
          }) : []);
        }
      };
    }
    var ReactMultiChild = {Mixin: {
        _reconcilerInstantiateChildren: function(nestedChildren, transaction, context) {
          if ("production" !== 'production') {
            if (this._currentElement) {
              try {
                ReactCurrentOwner.current = this._currentElement._owner;
                return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, this._debugID);
              } finally {
                ReactCurrentOwner.current = null;
              }
            }
          }
          return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
        },
        _reconcilerUpdateChildren: function(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
          var nextChildren;
          if ("production" !== 'production') {
            if (this._currentElement) {
              try {
                ReactCurrentOwner.current = this._currentElement._owner;
                nextChildren = flattenChildren(nextNestedChildrenElements, this._debugID);
              } finally {
                ReactCurrentOwner.current = null;
              }
              ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context);
              return nextChildren;
            }
          }
          nextChildren = flattenChildren(nextNestedChildrenElements);
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context);
          return nextChildren;
        },
        mountChildren: function(nestedChildren, transaction, context) {
          var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
          this._renderedChildren = children;
          var mountImages = [];
          var index = 0;
          for (var name in children) {
            if (children.hasOwnProperty(name)) {
              var child = children[name];
              if ("production" !== 'production') {
                setParentForInstrumentation.call(this, child);
              }
              var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
              child._mountIndex = index++;
              mountImages.push(mountImage);
            }
          }
          if ("production" !== 'production') {
            setChildrenForInstrumentation.call(this, children);
          }
          return mountImages;
        },
        updateTextContent: function(nextContent) {
          var prevChildren = this._renderedChildren;
          ReactChildReconciler.unmountChildren(prevChildren, false);
          for (var name in prevChildren) {
            if (prevChildren.hasOwnProperty(name)) {
              !false ? "production" !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
            }
          }
          var updates = [makeTextContent(nextContent)];
          processQueue(this, updates);
        },
        updateMarkup: function(nextMarkup) {
          var prevChildren = this._renderedChildren;
          ReactChildReconciler.unmountChildren(prevChildren, false);
          for (var name in prevChildren) {
            if (prevChildren.hasOwnProperty(name)) {
              !false ? "production" !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
            }
          }
          var updates = [makeSetMarkup(nextMarkup)];
          processQueue(this, updates);
        },
        updateChildren: function(nextNestedChildrenElements, transaction, context) {
          this._updateChildren(nextNestedChildrenElements, transaction, context);
        },
        _updateChildren: function(nextNestedChildrenElements, transaction, context) {
          var prevChildren = this._renderedChildren;
          var removedNodes = {};
          var mountImages = [];
          var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
          if (!nextChildren && !prevChildren) {
            return;
          }
          var updates = null;
          var name;
          var nextIndex = 0;
          var lastIndex = 0;
          var nextMountIndex = 0;
          var lastPlacedNode = null;
          for (name in nextChildren) {
            if (!nextChildren.hasOwnProperty(name)) {
              continue;
            }
            var prevChild = prevChildren && prevChildren[name];
            var nextChild = nextChildren[name];
            if (prevChild === nextChild) {
              updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
              lastIndex = Math.max(prevChild._mountIndex, lastIndex);
              prevChild._mountIndex = nextIndex;
            } else {
              if (prevChild) {
                lastIndex = Math.max(prevChild._mountIndex, lastIndex);
              }
              updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
              nextMountIndex++;
            }
            nextIndex++;
            lastPlacedNode = ReactReconciler.getHostNode(nextChild);
          }
          for (name in removedNodes) {
            if (removedNodes.hasOwnProperty(name)) {
              updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
            }
          }
          if (updates) {
            processQueue(this, updates);
          }
          this._renderedChildren = nextChildren;
          if ("production" !== 'production') {
            setChildrenForInstrumentation.call(this, nextChildren);
          }
        },
        unmountChildren: function(safely) {
          var renderedChildren = this._renderedChildren;
          ReactChildReconciler.unmountChildren(renderedChildren, safely);
          this._renderedChildren = null;
        },
        moveChild: function(child, afterNode, toIndex, lastIndex) {
          if (child._mountIndex < lastIndex) {
            return makeMove(child, afterNode, toIndex);
          }
        },
        createChild: function(child, afterNode, mountImage) {
          return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
        },
        removeChild: function(child, node) {
          return makeRemove(child, node);
        },
        _mountChildAtIndex: function(child, mountImage, afterNode, index, transaction, context) {
          child._mountIndex = index;
          return this.createChild(child, afterNode, mountImage);
        },
        _unmountChild: function(child, node) {
          var update = this.removeChild(child, node);
          child._mountIndex = null;
          return update;
        }
      }};
    module.exports = ReactMultiChild;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactServerUpdateQueue.js", ["npm:react@15.3.0/lib/ReactUpdateQueue.js", "npm:react@15.3.0/lib/Transaction.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    var ReactUpdateQueue = $__require('npm:react@15.3.0/lib/ReactUpdateQueue.js');
    var Transaction = $__require('npm:react@15.3.0/lib/Transaction.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    function warnNoop(publicInstance, callerName) {
      if ("production" !== 'production') {
        var constructor = publicInstance.constructor;
        "production" !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
      }
    }
    var ReactServerUpdateQueue = function() {
      function ReactServerUpdateQueue(transaction) {
        _classCallCheck(this, ReactServerUpdateQueue);
        this.transaction = transaction;
      }
      ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
        return false;
      };
      ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
        if (this.transaction.isInTransaction()) {
          ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
        }
      };
      ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
        if (this.transaction.isInTransaction()) {
          ReactUpdateQueue.enqueueForceUpdate(publicInstance);
        } else {
          warnNoop(publicInstance, 'forceUpdate');
        }
      };
      ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
        if (this.transaction.isInTransaction()) {
          ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
        } else {
          warnNoop(publicInstance, 'replaceState');
        }
      };
      ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
        if (this.transaction.isInTransaction()) {
          ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
        } else {
          warnNoop(publicInstance, 'setState');
        }
      };
      return ReactServerUpdateQueue;
    }();
    module.exports = ReactServerUpdateQueue;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactServerRenderingTransaction.js", ["npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/PooledClass.js", "npm:react@15.3.0/lib/Transaction.js", "npm:react@15.3.0/lib/ReactInstrumentation.js", "npm:react@15.3.0/lib/ReactServerUpdateQueue.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _assign = $__require('npm:object-assign@4.1.0.js');
    var PooledClass = $__require('npm:react@15.3.0/lib/PooledClass.js');
    var Transaction = $__require('npm:react@15.3.0/lib/Transaction.js');
    var ReactInstrumentation = $__require('npm:react@15.3.0/lib/ReactInstrumentation.js');
    var ReactServerUpdateQueue = $__require('npm:react@15.3.0/lib/ReactServerUpdateQueue.js');
    var TRANSACTION_WRAPPERS = [];
    if ("production" !== 'production') {
      TRANSACTION_WRAPPERS.push({
        initialize: ReactInstrumentation.debugTool.onBeginFlush,
        close: ReactInstrumentation.debugTool.onEndFlush
      });
    }
    var noopCallbackQueue = {enqueue: function() {}};
    function ReactServerRenderingTransaction(renderToStaticMarkup) {
      this.reinitializeTransaction();
      this.renderToStaticMarkup = renderToStaticMarkup;
      this.useCreateElement = false;
      this.updateQueue = new ReactServerUpdateQueue(this);
    }
    var Mixin = {
      getTransactionWrappers: function() {
        return TRANSACTION_WRAPPERS;
      },
      getReactMountReady: function() {
        return noopCallbackQueue;
      },
      getUpdateQueue: function() {
        return this.updateQueue;
      },
      destructor: function() {},
      checkpoint: function() {},
      rollback: function() {}
    };
    _assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
    PooledClass.addPoolingTo(ReactServerRenderingTransaction);
    module.exports = ReactServerRenderingTransaction;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMComponent.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/AutoFocusUtils.js", "npm:react@15.3.0/lib/CSSPropertyOperations.js", "npm:react@15.3.0/lib/DOMLazyTree.js", "npm:react@15.3.0/lib/DOMNamespaces.js", "npm:react@15.3.0/lib/DOMProperty.js", "npm:react@15.3.0/lib/DOMPropertyOperations.js", "npm:react@15.3.0/lib/EventConstants.js", "npm:react@15.3.0/lib/EventPluginHub.js", "npm:react@15.3.0/lib/EventPluginRegistry.js", "npm:react@15.3.0/lib/ReactBrowserEventEmitter.js", "npm:react@15.3.0/lib/ReactComponentBrowserEnvironment.js", "npm:react@15.3.0/lib/ReactDOMButton.js", "npm:react@15.3.0/lib/ReactDOMComponentFlags.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactDOMInput.js", "npm:react@15.3.0/lib/ReactDOMOption.js", "npm:react@15.3.0/lib/ReactDOMSelect.js", "npm:react@15.3.0/lib/ReactDOMTextarea.js", "npm:react@15.3.0/lib/ReactInstrumentation.js", "npm:react@15.3.0/lib/ReactMultiChild.js", "npm:react@15.3.0/lib/ReactServerRenderingTransaction.js", "npm:fbjs@0.8.3/lib/emptyFunction.js", "npm:react@15.3.0/lib/escapeTextContentForBrowser.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:react@15.3.0/lib/isEventSupported.js", "npm:fbjs@0.8.3/lib/keyOf.js", "npm:fbjs@0.8.3/lib/shallowEqual.js", "npm:react@15.3.0/lib/validateDOMNesting.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.0.js');
    var AutoFocusUtils = $__require('npm:react@15.3.0/lib/AutoFocusUtils.js');
    var CSSPropertyOperations = $__require('npm:react@15.3.0/lib/CSSPropertyOperations.js');
    var DOMLazyTree = $__require('npm:react@15.3.0/lib/DOMLazyTree.js');
    var DOMNamespaces = $__require('npm:react@15.3.0/lib/DOMNamespaces.js');
    var DOMProperty = $__require('npm:react@15.3.0/lib/DOMProperty.js');
    var DOMPropertyOperations = $__require('npm:react@15.3.0/lib/DOMPropertyOperations.js');
    var EventConstants = $__require('npm:react@15.3.0/lib/EventConstants.js');
    var EventPluginHub = $__require('npm:react@15.3.0/lib/EventPluginHub.js');
    var EventPluginRegistry = $__require('npm:react@15.3.0/lib/EventPluginRegistry.js');
    var ReactBrowserEventEmitter = $__require('npm:react@15.3.0/lib/ReactBrowserEventEmitter.js');
    var ReactComponentBrowserEnvironment = $__require('npm:react@15.3.0/lib/ReactComponentBrowserEnvironment.js');
    var ReactDOMButton = $__require('npm:react@15.3.0/lib/ReactDOMButton.js');
    var ReactDOMComponentFlags = $__require('npm:react@15.3.0/lib/ReactDOMComponentFlags.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactDOMInput = $__require('npm:react@15.3.0/lib/ReactDOMInput.js');
    var ReactDOMOption = $__require('npm:react@15.3.0/lib/ReactDOMOption.js');
    var ReactDOMSelect = $__require('npm:react@15.3.0/lib/ReactDOMSelect.js');
    var ReactDOMTextarea = $__require('npm:react@15.3.0/lib/ReactDOMTextarea.js');
    var ReactInstrumentation = $__require('npm:react@15.3.0/lib/ReactInstrumentation.js');
    var ReactMultiChild = $__require('npm:react@15.3.0/lib/ReactMultiChild.js');
    var ReactServerRenderingTransaction = $__require('npm:react@15.3.0/lib/ReactServerRenderingTransaction.js');
    var emptyFunction = $__require('npm:fbjs@0.8.3/lib/emptyFunction.js');
    var escapeTextContentForBrowser = $__require('npm:react@15.3.0/lib/escapeTextContentForBrowser.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var isEventSupported = $__require('npm:react@15.3.0/lib/isEventSupported.js');
    var keyOf = $__require('npm:fbjs@0.8.3/lib/keyOf.js');
    var shallowEqual = $__require('npm:fbjs@0.8.3/lib/shallowEqual.js');
    var validateDOMNesting = $__require('npm:react@15.3.0/lib/validateDOMNesting.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var Flags = ReactDOMComponentFlags;
    var deleteListener = EventPluginHub.deleteListener;
    var getNode = ReactDOMComponentTree.getNodeFromInstance;
    var listenTo = ReactBrowserEventEmitter.listenTo;
    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    var CONTENT_TYPES = {
      'string': true,
      'number': true
    };
    var STYLE = keyOf({style: null});
    var HTML = keyOf({__html: null});
    var RESERVED_PROPS = {
      children: null,
      dangerouslySetInnerHTML: null,
      suppressContentEditableWarning: null
    };
    var DOC_FRAGMENT_TYPE = 11;
    function getDeclarationErrorAddendum(internalInstance) {
      if (internalInstance) {
        var owner = internalInstance._currentElement._owner || null;
        if (owner) {
          var name = owner.getName();
          if (name) {
            return ' This DOM node was rendered by `' + name + '`.';
          }
        }
      }
      return '';
    }
    function friendlyStringify(obj) {
      if (typeof obj === 'object') {
        if (Array.isArray(obj)) {
          return '[' + obj.map(friendlyStringify).join(', ') + ']';
        } else {
          var pairs = [];
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
              pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
            }
          }
          return '{' + pairs.join(', ') + '}';
        }
      } else if (typeof obj === 'string') {
        return JSON.stringify(obj);
      } else if (typeof obj === 'function') {
        return '[function object]';
      }
      return String(obj);
    }
    var styleMutationWarning = {};
    function checkAndWarnForMutatedStyle(style1, style2, component) {
      if (style1 == null || style2 == null) {
        return;
      }
      if (shallowEqual(style1, style2)) {
        return;
      }
      var componentName = component._tag;
      var owner = component._currentElement._owner;
      var ownerName;
      if (owner) {
        ownerName = owner.getName();
      }
      var hash = ownerName + '|' + componentName;
      if (styleMutationWarning.hasOwnProperty(hash)) {
        return;
      }
      styleMutationWarning[hash] = true;
      "production" !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
    }
    function assertValidProps(component, props) {
      if (!props) {
        return;
      }
      if (voidElementTags[component._tag]) {
        !(props.children == null && props.dangerouslySetInnerHTML == null) ? "production" !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
      }
      if (props.dangerouslySetInnerHTML != null) {
        !(props.children == null) ? "production" !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
        !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? "production" !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
      }
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
        "production" !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
        "production" !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
      }
      !(props.style == null || typeof props.style === 'object') ? "production" !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
    }
    function enqueuePutListener(inst, registrationName, listener, transaction) {
      if (transaction instanceof ReactServerRenderingTransaction) {
        return;
      }
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
      }
      var containerInfo = inst._hostContainerInfo;
      var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
      var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
      listenTo(registrationName, doc);
      transaction.getReactMountReady().enqueue(putListener, {
        inst: inst,
        registrationName: registrationName,
        listener: listener
      });
    }
    function putListener() {
      var listenerToPut = this;
      EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
    }
    function inputPostMount() {
      var inst = this;
      ReactDOMInput.postMountWrapper(inst);
    }
    function textareaPostMount() {
      var inst = this;
      ReactDOMTextarea.postMountWrapper(inst);
    }
    function optionPostMount() {
      var inst = this;
      ReactDOMOption.postMountWrapper(inst);
    }
    var setContentChildForInstrumentation = emptyFunction;
    if ("production" !== 'production') {
      setContentChildForInstrumentation = function(content) {
        var hasExistingContent = this._contentDebugID != null;
        var debugID = this._debugID;
        var contentDebugID = debugID + '#text';
        if (content == null) {
          if (hasExistingContent) {
            ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
          }
          this._contentDebugID = null;
          return;
        }
        this._contentDebugID = contentDebugID;
        var text = '' + content;
        ReactInstrumentation.debugTool.onSetDisplayName(contentDebugID, '#text');
        ReactInstrumentation.debugTool.onSetParent(contentDebugID, debugID);
        ReactInstrumentation.debugTool.onSetText(contentDebugID, text);
        if (hasExistingContent) {
          ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
          ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
        } else {
          ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content);
          ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
          ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
        }
      };
    }
    var mediaEvents = {
      topAbort: 'abort',
      topCanPlay: 'canplay',
      topCanPlayThrough: 'canplaythrough',
      topDurationChange: 'durationchange',
      topEmptied: 'emptied',
      topEncrypted: 'encrypted',
      topEnded: 'ended',
      topError: 'error',
      topLoadedData: 'loadeddata',
      topLoadedMetadata: 'loadedmetadata',
      topLoadStart: 'loadstart',
      topPause: 'pause',
      topPlay: 'play',
      topPlaying: 'playing',
      topProgress: 'progress',
      topRateChange: 'ratechange',
      topSeeked: 'seeked',
      topSeeking: 'seeking',
      topStalled: 'stalled',
      topSuspend: 'suspend',
      topTimeUpdate: 'timeupdate',
      topVolumeChange: 'volumechange',
      topWaiting: 'waiting'
    };
    function trapBubbledEventsLocal() {
      var inst = this;
      !inst._rootNodeID ? "production" !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
      var node = getNode(inst);
      !node ? "production" !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
      switch (inst._tag) {
        case 'iframe':
        case 'object':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
          break;
        case 'video':
        case 'audio':
          inst._wrapperState.listeners = [];
          for (var event in mediaEvents) {
            if (mediaEvents.hasOwnProperty(event)) {
              inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
            }
          }
          break;
        case 'source':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
          break;
        case 'img':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
          break;
        case 'form':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
          break;
        case 'input':
        case 'select':
        case 'textarea':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
          break;
      }
    }
    function postUpdateSelectWrapper() {
      ReactDOMSelect.postUpdateWrapper(this);
    }
    var omittedCloseTags = {
      'area': true,
      'base': true,
      'br': true,
      'col': true,
      'embed': true,
      'hr': true,
      'img': true,
      'input': true,
      'keygen': true,
      'link': true,
      'meta': true,
      'param': true,
      'source': true,
      'track': true,
      'wbr': true
    };
    var newlineEatingTags = {
      'listing': true,
      'pre': true,
      'textarea': true
    };
    var voidElementTags = _assign({'menuitem': true}, omittedCloseTags);
    var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
    var validatedTagCache = {};
    var hasOwnProperty = {}.hasOwnProperty;
    function validateDangerousTag(tag) {
      if (!hasOwnProperty.call(validatedTagCache, tag)) {
        !VALID_TAG_REGEX.test(tag) ? "production" !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
        validatedTagCache[tag] = true;
      }
    }
    function isCustomComponent(tagName, props) {
      return tagName.indexOf('-') >= 0 || props.is != null;
    }
    var globalIdCounter = 1;
    function ReactDOMComponent(element) {
      var tag = element.type;
      validateDangerousTag(tag);
      this._currentElement = element;
      this._tag = tag.toLowerCase();
      this._namespaceURI = null;
      this._renderedChildren = null;
      this._previousStyle = null;
      this._previousStyleCopy = null;
      this._hostNode = null;
      this._hostParent = null;
      this._rootNodeID = null;
      this._domID = null;
      this._hostContainerInfo = null;
      this._wrapperState = null;
      this._topLevelWrapper = null;
      this._flags = 0;
      if ("production" !== 'production') {
        this._ancestorInfo = null;
        setContentChildForInstrumentation.call(this, null);
      }
    }
    ReactDOMComponent.displayName = 'ReactDOMComponent';
    ReactDOMComponent.Mixin = {
      mountComponent: function(transaction, hostParent, hostContainerInfo, context) {
        var _this = this;
        this._rootNodeID = globalIdCounter++;
        this._domID = hostContainerInfo._idCounter++;
        this._hostParent = hostParent;
        this._hostContainerInfo = hostContainerInfo;
        var props = this._currentElement.props;
        switch (this._tag) {
          case 'audio':
          case 'form':
          case 'iframe':
          case 'img':
          case 'link':
          case 'object':
          case 'source':
          case 'video':
            this._wrapperState = {listeners: null};
            transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
            break;
          case 'button':
            props = ReactDOMButton.getHostProps(this, props, hostParent);
            break;
          case 'input':
            ReactDOMInput.mountWrapper(this, props, hostParent);
            props = ReactDOMInput.getHostProps(this, props);
            transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
            break;
          case 'option':
            ReactDOMOption.mountWrapper(this, props, hostParent);
            props = ReactDOMOption.getHostProps(this, props);
            break;
          case 'select':
            ReactDOMSelect.mountWrapper(this, props, hostParent);
            props = ReactDOMSelect.getHostProps(this, props);
            transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
            break;
          case 'textarea':
            ReactDOMTextarea.mountWrapper(this, props, hostParent);
            props = ReactDOMTextarea.getHostProps(this, props);
            transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
            break;
        }
        assertValidProps(this, props);
        var namespaceURI;
        var parentTag;
        if (hostParent != null) {
          namespaceURI = hostParent._namespaceURI;
          parentTag = hostParent._tag;
        } else if (hostContainerInfo._tag) {
          namespaceURI = hostContainerInfo._namespaceURI;
          parentTag = hostContainerInfo._tag;
        }
        if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
          namespaceURI = DOMNamespaces.html;
        }
        if (namespaceURI === DOMNamespaces.html) {
          if (this._tag === 'svg') {
            namespaceURI = DOMNamespaces.svg;
          } else if (this._tag === 'math') {
            namespaceURI = DOMNamespaces.mathml;
          }
        }
        this._namespaceURI = namespaceURI;
        if ("production" !== 'production') {
          var parentInfo;
          if (hostParent != null) {
            parentInfo = hostParent._ancestorInfo;
          } else if (hostContainerInfo._tag) {
            parentInfo = hostContainerInfo._ancestorInfo;
          }
          if (parentInfo) {
            validateDOMNesting(this._tag, this, parentInfo);
          }
          this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
        }
        var mountImage;
        if (transaction.useCreateElement) {
          var ownerDocument = hostContainerInfo._ownerDocument;
          var el;
          if (namespaceURI === DOMNamespaces.html) {
            if (this._tag === 'script') {
              var div = ownerDocument.createElement('div');
              var type = this._currentElement.type;
              div.innerHTML = '<' + type + '></' + type + '>';
              el = div.removeChild(div.firstChild);
            } else if (props.is) {
              el = ownerDocument.createElement(this._currentElement.type, props.is);
            } else {
              el = ownerDocument.createElement(this._currentElement.type);
            }
          } else {
            el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
          }
          ReactDOMComponentTree.precacheNode(this, el);
          this._flags |= Flags.hasCachedChildNodes;
          if (!this._hostParent) {
            DOMPropertyOperations.setAttributeForRoot(el);
          }
          this._updateDOMProperties(null, props, transaction);
          var lazyTree = DOMLazyTree(el);
          this._createInitialChildren(transaction, props, context, lazyTree);
          mountImage = lazyTree;
        } else {
          var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
          var tagContent = this._createContentMarkup(transaction, props, context);
          if (!tagContent && omittedCloseTags[this._tag]) {
            mountImage = tagOpen + '/>';
          } else {
            mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
          }
        }
        switch (this._tag) {
          case 'input':
            transaction.getReactMountReady().enqueue(inputPostMount, this);
            if (props.autoFocus) {
              transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
            }
            break;
          case 'textarea':
            transaction.getReactMountReady().enqueue(textareaPostMount, this);
            if (props.autoFocus) {
              transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
            }
            break;
          case 'select':
            if (props.autoFocus) {
              transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
            }
            break;
          case 'button':
            if (props.autoFocus) {
              transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
            }
            break;
          case 'option':
            transaction.getReactMountReady().enqueue(optionPostMount, this);
            break;
        }
        if ("production" !== 'production') {
          if (this._debugID) {
            var callback = function() {
              return ReactInstrumentation.debugTool.onComponentHasMounted(_this._debugID);
            };
            transaction.getReactMountReady().enqueue(callback, this);
          }
        }
        return mountImage;
      },
      _createOpenTagMarkupAndPutListeners: function(transaction, props) {
        var ret = '<' + this._currentElement.type;
        for (var propKey in props) {
          if (!props.hasOwnProperty(propKey)) {
            continue;
          }
          var propValue = props[propKey];
          if (propValue == null) {
            continue;
          }
          if (registrationNameModules.hasOwnProperty(propKey)) {
            if (propValue) {
              enqueuePutListener(this, propKey, propValue, transaction);
            }
          } else {
            if (propKey === STYLE) {
              if (propValue) {
                if ("production" !== 'production') {
                  this._previousStyle = propValue;
                }
                propValue = this._previousStyleCopy = _assign({}, props.style);
              }
              propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
            }
            var markup = null;
            if (this._tag != null && isCustomComponent(this._tag, props)) {
              if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
                markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
              }
            } else {
              markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
            }
            if (markup) {
              ret += ' ' + markup;
            }
          }
        }
        if (transaction.renderToStaticMarkup) {
          return ret;
        }
        if (!this._hostParent) {
          ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
        }
        ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
        return ret;
      },
      _createContentMarkup: function(transaction, props, context) {
        var ret = '';
        var innerHTML = props.dangerouslySetInnerHTML;
        if (innerHTML != null) {
          if (innerHTML.__html != null) {
            ret = innerHTML.__html;
          }
        } else {
          var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
          var childrenToUse = contentToUse != null ? null : props.children;
          if (contentToUse != null) {
            ret = escapeTextContentForBrowser(contentToUse);
            if ("production" !== 'production') {
              setContentChildForInstrumentation.call(this, contentToUse);
            }
          } else if (childrenToUse != null) {
            var mountImages = this.mountChildren(childrenToUse, transaction, context);
            ret = mountImages.join('');
          }
        }
        if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
          return '\n' + ret;
        } else {
          return ret;
        }
      },
      _createInitialChildren: function(transaction, props, context, lazyTree) {
        var innerHTML = props.dangerouslySetInnerHTML;
        if (innerHTML != null) {
          if (innerHTML.__html != null) {
            DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
          }
        } else {
          var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
          var childrenToUse = contentToUse != null ? null : props.children;
          if (contentToUse != null) {
            if ("production" !== 'production') {
              setContentChildForInstrumentation.call(this, contentToUse);
            }
            DOMLazyTree.queueText(lazyTree, contentToUse);
          } else if (childrenToUse != null) {
            var mountImages = this.mountChildren(childrenToUse, transaction, context);
            for (var i = 0; i < mountImages.length; i++) {
              DOMLazyTree.queueChild(lazyTree, mountImages[i]);
            }
          }
        }
      },
      receiveComponent: function(nextElement, transaction, context) {
        var prevElement = this._currentElement;
        this._currentElement = nextElement;
        this.updateComponent(transaction, prevElement, nextElement, context);
      },
      updateComponent: function(transaction, prevElement, nextElement, context) {
        var _this2 = this;
        var lastProps = prevElement.props;
        var nextProps = this._currentElement.props;
        switch (this._tag) {
          case 'button':
            lastProps = ReactDOMButton.getHostProps(this, lastProps);
            nextProps = ReactDOMButton.getHostProps(this, nextProps);
            break;
          case 'input':
            ReactDOMInput.updateWrapper(this);
            lastProps = ReactDOMInput.getHostProps(this, lastProps);
            nextProps = ReactDOMInput.getHostProps(this, nextProps);
            break;
          case 'option':
            lastProps = ReactDOMOption.getHostProps(this, lastProps);
            nextProps = ReactDOMOption.getHostProps(this, nextProps);
            break;
          case 'select':
            lastProps = ReactDOMSelect.getHostProps(this, lastProps);
            nextProps = ReactDOMSelect.getHostProps(this, nextProps);
            break;
          case 'textarea':
            ReactDOMTextarea.updateWrapper(this);
            lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
            nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
            break;
        }
        assertValidProps(this, nextProps);
        this._updateDOMProperties(lastProps, nextProps, transaction);
        this._updateDOMChildren(lastProps, nextProps, transaction, context);
        if (this._tag === 'select') {
          transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
        }
        if ("production" !== 'production') {
          if (this._debugID) {
            var callback = function() {
              return ReactInstrumentation.debugTool.onComponentHasUpdated(_this2._debugID);
            };
            transaction.getReactMountReady().enqueue(callback, this);
          }
        }
      },
      _updateDOMProperties: function(lastProps, nextProps, transaction) {
        var propKey;
        var styleName;
        var styleUpdates;
        for (propKey in lastProps) {
          if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
            continue;
          }
          if (propKey === STYLE) {
            var lastStyle = this._previousStyleCopy;
            for (styleName in lastStyle) {
              if (lastStyle.hasOwnProperty(styleName)) {
                styleUpdates = styleUpdates || {};
                styleUpdates[styleName] = '';
              }
            }
            this._previousStyleCopy = null;
          } else if (registrationNameModules.hasOwnProperty(propKey)) {
            if (lastProps[propKey]) {
              deleteListener(this, propKey);
            }
          } else if (isCustomComponent(this._tag, lastProps)) {
            if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
              DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
            }
          } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
            DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
          }
        }
        for (propKey in nextProps) {
          var nextProp = nextProps[propKey];
          var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
          if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
            continue;
          }
          if (propKey === STYLE) {
            if (nextProp) {
              if ("production" !== 'production') {
                checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
                this._previousStyle = nextProp;
              }
              nextProp = this._previousStyleCopy = _assign({}, nextProp);
            } else {
              this._previousStyleCopy = null;
            }
            if (lastProp) {
              for (styleName in lastProp) {
                if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                  styleUpdates = styleUpdates || {};
                  styleUpdates[styleName] = '';
                }
              }
              for (styleName in nextProp) {
                if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                  styleUpdates = styleUpdates || {};
                  styleUpdates[styleName] = nextProp[styleName];
                }
              }
            } else {
              styleUpdates = nextProp;
            }
          } else if (registrationNameModules.hasOwnProperty(propKey)) {
            if (nextProp) {
              enqueuePutListener(this, propKey, nextProp, transaction);
            } else if (lastProp) {
              deleteListener(this, propKey);
            }
          } else if (isCustomComponent(this._tag, nextProps)) {
            if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
              DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
            }
          } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
            var node = getNode(this);
            if (nextProp != null) {
              DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
            } else {
              DOMPropertyOperations.deleteValueForProperty(node, propKey);
            }
          }
        }
        if (styleUpdates) {
          CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
        }
      },
      _updateDOMChildren: function(lastProps, nextProps, transaction, context) {
        var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
        var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
        var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
        var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
        var lastChildren = lastContent != null ? null : lastProps.children;
        var nextChildren = nextContent != null ? null : nextProps.children;
        var lastHasContentOrHtml = lastContent != null || lastHtml != null;
        var nextHasContentOrHtml = nextContent != null || nextHtml != null;
        if (lastChildren != null && nextChildren == null) {
          this.updateChildren(null, transaction, context);
        } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
          this.updateTextContent('');
          if ("production" !== 'production') {
            ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
          }
        }
        if (nextContent != null) {
          if (lastContent !== nextContent) {
            this.updateTextContent('' + nextContent);
            if ("production" !== 'production') {
              setContentChildForInstrumentation.call(this, nextContent);
            }
          }
        } else if (nextHtml != null) {
          if (lastHtml !== nextHtml) {
            this.updateMarkup('' + nextHtml);
          }
          if ("production" !== 'production') {
            ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
          }
        } else if (nextChildren != null) {
          if ("production" !== 'production') {
            setContentChildForInstrumentation.call(this, null);
          }
          this.updateChildren(nextChildren, transaction, context);
        }
      },
      getHostNode: function() {
        return getNode(this);
      },
      unmountComponent: function(safely) {
        switch (this._tag) {
          case 'audio':
          case 'form':
          case 'iframe':
          case 'img':
          case 'link':
          case 'object':
          case 'source':
          case 'video':
            var listeners = this._wrapperState.listeners;
            if (listeners) {
              for (var i = 0; i < listeners.length; i++) {
                listeners[i].remove();
              }
            }
            break;
          case 'html':
          case 'head':
          case 'body':
            !false ? "production" !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
            break;
        }
        this.unmountChildren(safely);
        ReactDOMComponentTree.uncacheNode(this);
        EventPluginHub.deleteAllListeners(this);
        ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
        this._rootNodeID = null;
        this._domID = null;
        this._wrapperState = null;
        if ("production" !== 'production') {
          setContentChildForInstrumentation.call(this, null);
        }
      },
      getPublicInstance: function() {
        return getNode(this);
      }
    };
    _assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
    module.exports = ReactDOMComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMEmptyComponent.js", ["npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/DOMLazyTree.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var _assign = $__require('npm:object-assign@4.1.0.js');
  var DOMLazyTree = $__require('npm:react@15.3.0/lib/DOMLazyTree.js');
  var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
  var ReactDOMEmptyComponent = function(instantiate) {
    this._currentElement = null;
    this._hostNode = null;
    this._hostParent = null;
    this._hostContainerInfo = null;
    this._domID = null;
  };
  _assign(ReactDOMEmptyComponent.prototype, {
    mountComponent: function(transaction, hostParent, hostContainerInfo, context) {
      var domID = hostContainerInfo._idCounter++;
      this._domID = domID;
      this._hostParent = hostParent;
      this._hostContainerInfo = hostContainerInfo;
      var nodeValue = ' react-empty: ' + this._domID + ' ';
      if (transaction.useCreateElement) {
        var ownerDocument = hostContainerInfo._ownerDocument;
        var node = ownerDocument.createComment(nodeValue);
        ReactDOMComponentTree.precacheNode(this, node);
        return DOMLazyTree(node);
      } else {
        if (transaction.renderToStaticMarkup) {
          return '';
        }
        return '<!--' + nodeValue + '-->';
      }
    },
    receiveComponent: function() {},
    getHostNode: function() {
      return ReactDOMComponentTree.getNodeFromInstance(this);
    },
    unmountComponent: function() {
      ReactDOMComponentTree.uncacheNode(this);
    }
  });
  module.exports = ReactDOMEmptyComponent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMTreeTraversal.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    function getLowestCommonAncestor(instA, instB) {
      !('_hostNode' in instA) ? "production" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
      !('_hostNode' in instB) ? "production" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
      var depthA = 0;
      for (var tempA = instA; tempA; tempA = tempA._hostParent) {
        depthA++;
      }
      var depthB = 0;
      for (var tempB = instB; tempB; tempB = tempB._hostParent) {
        depthB++;
      }
      while (depthA - depthB > 0) {
        instA = instA._hostParent;
        depthA--;
      }
      while (depthB - depthA > 0) {
        instB = instB._hostParent;
        depthB--;
      }
      var depth = depthA;
      while (depth--) {
        if (instA === instB) {
          return instA;
        }
        instA = instA._hostParent;
        instB = instB._hostParent;
      }
      return null;
    }
    function isAncestor(instA, instB) {
      !('_hostNode' in instA) ? "production" !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
      !('_hostNode' in instB) ? "production" !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
      while (instB) {
        if (instB === instA) {
          return true;
        }
        instB = instB._hostParent;
      }
      return false;
    }
    function getParentInstance(inst) {
      !('_hostNode' in inst) ? "production" !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
      return inst._hostParent;
    }
    function traverseTwoPhase(inst, fn, arg) {
      var path = [];
      while (inst) {
        path.push(inst);
        inst = inst._hostParent;
      }
      var i;
      for (i = path.length; i-- > 0; ) {
        fn(path[i], false, arg);
      }
      for (i = 0; i < path.length; i++) {
        fn(path[i], true, arg);
      }
    }
    function traverseEnterLeave(from, to, fn, argFrom, argTo) {
      var common = from && to ? getLowestCommonAncestor(from, to) : null;
      var pathFrom = [];
      while (from && from !== common) {
        pathFrom.push(from);
        from = from._hostParent;
      }
      var pathTo = [];
      while (to && to !== common) {
        pathTo.push(to);
        to = to._hostParent;
      }
      var i;
      for (i = 0; i < pathFrom.length; i++) {
        fn(pathFrom[i], true, argFrom);
      }
      for (i = pathTo.length; i-- > 0; ) {
        fn(pathTo[i], false, argTo);
      }
    }
    module.exports = {
      isAncestor: isAncestor,
      getLowestCommonAncestor: getLowestCommonAncestor,
      getParentInstance: getParentInstance,
      traverseTwoPhase: traverseTwoPhase,
      traverseEnterLeave: traverseEnterLeave
    };
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/createArrayFromMixed.js", ["npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    function toArray(obj) {
      var length = obj.length;
      !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? "production" !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
      !(typeof length === 'number') ? "production" !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
      !(length === 0 || length - 1 in obj) ? "production" !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
      !(typeof obj.callee !== 'function') ? "production" !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
      if (obj.hasOwnProperty) {
        try {
          return Array.prototype.slice.call(obj);
        } catch (e) {}
      }
      var ret = Array(length);
      for (var ii = 0; ii < length; ii++) {
        ret[ii] = obj[ii];
      }
      return ret;
    }
    function hasArrayNature(obj) {
      return (!!obj && (typeof obj == 'object' || typeof obj == 'function') && 'length' in obj && !('setInterval' in obj) && typeof obj.nodeType != 'number' && (Array.isArray(obj) || 'callee' in obj || 'item' in obj));
    }
    function createArrayFromMixed(obj) {
      if (!hasArrayNature(obj)) {
        return [obj];
      } else if (Array.isArray(obj)) {
        return obj.slice();
      } else {
        return toArray(obj);
      }
    }
    module.exports = createArrayFromMixed;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/getMarkupWrap.js", ["npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
    var shouldWrap = {};
    var selectWrap = [1, '<select multiple="true">', '</select>'];
    var tableWrap = [1, '<table>', '</table>'];
    var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
    var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
    var markupWrap = {
      '*': [1, '?<div>', '</div>'],
      'area': [1, '<map>', '</map>'],
      'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
      'legend': [1, '<fieldset>', '</fieldset>'],
      'param': [1, '<object>', '</object>'],
      'tr': [2, '<table><tbody>', '</tbody></table>'],
      'optgroup': selectWrap,
      'option': selectWrap,
      'caption': tableWrap,
      'colgroup': tableWrap,
      'tbody': tableWrap,
      'tfoot': tableWrap,
      'thead': tableWrap,
      'td': trWrap,
      'th': trWrap
    };
    var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
    svgElements.forEach(function(nodeName) {
      markupWrap[nodeName] = svgWrap;
      shouldWrap[nodeName] = true;
    });
    function getMarkupWrap(nodeName) {
      !!!dummyNode ? "production" !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
      if (!markupWrap.hasOwnProperty(nodeName)) {
        nodeName = '*';
      }
      if (!shouldWrap.hasOwnProperty(nodeName)) {
        if (nodeName === '*') {
          dummyNode.innerHTML = '<link />';
        } else {
          dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
        }
        shouldWrap[nodeName] = !dummyNode.firstChild;
      }
      return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
    }
    module.exports = getMarkupWrap;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/createNodesFromMarkup.js", ["npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "npm:fbjs@0.8.3/lib/createArrayFromMixed.js", "npm:fbjs@0.8.3/lib/getMarkupWrap.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
    var createArrayFromMixed = $__require('npm:fbjs@0.8.3/lib/createArrayFromMixed.js');
    var getMarkupWrap = $__require('npm:fbjs@0.8.3/lib/getMarkupWrap.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
    var nodeNamePattern = /^\s*<(\w+)/;
    function getNodeName(markup) {
      var nodeNameMatch = markup.match(nodeNamePattern);
      return nodeNameMatch && nodeNameMatch[1].toLowerCase();
    }
    function createNodesFromMarkup(markup, handleScript) {
      var node = dummyNode;
      !!!dummyNode ? "production" !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
      var nodeName = getNodeName(markup);
      var wrap = nodeName && getMarkupWrap(nodeName);
      if (wrap) {
        node.innerHTML = wrap[1] + markup + wrap[2];
        var wrapDepth = wrap[0];
        while (wrapDepth--) {
          node = node.lastChild;
        }
      } else {
        node.innerHTML = markup;
      }
      var scripts = node.getElementsByTagName('script');
      if (scripts.length) {
        !handleScript ? "production" !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
        createArrayFromMixed(scripts).forEach(handleScript);
      }
      var nodes = Array.from(node.childNodes);
      while (node.lastChild) {
        node.removeChild(node.lastChild);
      }
      return nodes;
    }
    module.exports = createNodesFromMarkup;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/Danger.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/DOMLazyTree.js", "npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "npm:fbjs@0.8.3/lib/createNodesFromMarkup.js", "npm:fbjs@0.8.3/lib/emptyFunction.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var DOMLazyTree = $__require('npm:react@15.3.0/lib/DOMLazyTree.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
    var createNodesFromMarkup = $__require('npm:fbjs@0.8.3/lib/createNodesFromMarkup.js');
    var emptyFunction = $__require('npm:fbjs@0.8.3/lib/emptyFunction.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var Danger = {dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
        !ExecutionEnvironment.canUseDOM ? "production" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
        !markup ? "production" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
        !(oldChild.nodeName !== 'HTML') ? "production" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
        if (typeof markup === 'string') {
          var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
          oldChild.parentNode.replaceChild(newChild, oldChild);
        } else {
          DOMLazyTree.replaceChildWithTree(oldChild, markup);
        }
      }};
    module.exports = Danger;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactMultiChildUpdateTypes.js", ["npm:fbjs@0.8.3/lib/keyMirror.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var keyMirror = $__require('npm:fbjs@0.8.3/lib/keyMirror.js');
  var ReactMultiChildUpdateTypes = keyMirror({
    INSERT_MARKUP: null,
    MOVE_EXISTING: null,
    REMOVE_NODE: null,
    SET_MARKUP: null,
    TEXT_CONTENT: null
  });
  module.exports = ReactMultiChildUpdateTypes;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/DOMChildrenOperations.js", ["npm:react@15.3.0/lib/DOMLazyTree.js", "npm:react@15.3.0/lib/Danger.js", "npm:react@15.3.0/lib/ReactMultiChildUpdateTypes.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactInstrumentation.js", "npm:react@15.3.0/lib/createMicrosoftUnsafeLocalFunction.js", "npm:react@15.3.0/lib/setInnerHTML.js", "npm:react@15.3.0/lib/setTextContent.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var DOMLazyTree = $__require('npm:react@15.3.0/lib/DOMLazyTree.js');
    var Danger = $__require('npm:react@15.3.0/lib/Danger.js');
    var ReactMultiChildUpdateTypes = $__require('npm:react@15.3.0/lib/ReactMultiChildUpdateTypes.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactInstrumentation = $__require('npm:react@15.3.0/lib/ReactInstrumentation.js');
    var createMicrosoftUnsafeLocalFunction = $__require('npm:react@15.3.0/lib/createMicrosoftUnsafeLocalFunction.js');
    var setInnerHTML = $__require('npm:react@15.3.0/lib/setInnerHTML.js');
    var setTextContent = $__require('npm:react@15.3.0/lib/setTextContent.js');
    function getNodeAfter(parentNode, node) {
      if (Array.isArray(node)) {
        node = node[1];
      }
      return node ? node.nextSibling : parentNode.firstChild;
    }
    var insertChildAt = createMicrosoftUnsafeLocalFunction(function(parentNode, childNode, referenceNode) {
      parentNode.insertBefore(childNode, referenceNode);
    });
    function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
      DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
    }
    function moveChild(parentNode, childNode, referenceNode) {
      if (Array.isArray(childNode)) {
        moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
      } else {
        insertChildAt(parentNode, childNode, referenceNode);
      }
    }
    function removeChild(parentNode, childNode) {
      if (Array.isArray(childNode)) {
        var closingComment = childNode[1];
        childNode = childNode[0];
        removeDelimitedText(parentNode, childNode, closingComment);
        parentNode.removeChild(closingComment);
      }
      parentNode.removeChild(childNode);
    }
    function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
      var node = openingComment;
      while (true) {
        var nextNode = node.nextSibling;
        insertChildAt(parentNode, node, referenceNode);
        if (node === closingComment) {
          break;
        }
        node = nextNode;
      }
    }
    function removeDelimitedText(parentNode, startNode, closingComment) {
      while (true) {
        var node = startNode.nextSibling;
        if (node === closingComment) {
          break;
        } else {
          parentNode.removeChild(node);
        }
      }
    }
    function replaceDelimitedText(openingComment, closingComment, stringText) {
      var parentNode = openingComment.parentNode;
      var nodeAfterComment = openingComment.nextSibling;
      if (nodeAfterComment === closingComment) {
        if (stringText) {
          insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
        }
      } else {
        if (stringText) {
          setTextContent(nodeAfterComment, stringText);
          removeDelimitedText(parentNode, nodeAfterComment, closingComment);
        } else {
          removeDelimitedText(parentNode, openingComment, closingComment);
        }
      }
      if ("production" !== 'production') {
        ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
      }
    }
    var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
    if ("production" !== 'production') {
      dangerouslyReplaceNodeWithMarkup = function(oldChild, markup, prevInstance) {
        Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
        if (prevInstance._debugID !== 0) {
          ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
        } else {
          var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
          if (nextInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
          }
        }
      };
    }
    var DOMChildrenOperations = {
      dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
      replaceDelimitedText: replaceDelimitedText,
      processUpdates: function(parentNode, updates) {
        if ("production" !== 'production') {
          var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
        }
        for (var k = 0; k < updates.length; k++) {
          var update = updates[k];
          switch (update.type) {
            case ReactMultiChildUpdateTypes.INSERT_MARKUP:
              insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
              if ("production" !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', {
                  toIndex: update.toIndex,
                  content: update.content.toString()
                });
              }
              break;
            case ReactMultiChildUpdateTypes.MOVE_EXISTING:
              moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
              if ("production" !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', {
                  fromIndex: update.fromIndex,
                  toIndex: update.toIndex
                });
              }
              break;
            case ReactMultiChildUpdateTypes.SET_MARKUP:
              setInnerHTML(parentNode, update.content);
              if ("production" !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
              }
              break;
            case ReactMultiChildUpdateTypes.TEXT_CONTENT:
              setTextContent(parentNode, update.content);
              if ("production" !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
              }
              break;
            case ReactMultiChildUpdateTypes.REMOVE_NODE:
              removeChild(parentNode, update.fromNode);
              if ("production" !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', {fromIndex: update.fromIndex});
              }
              break;
          }
        }
      }
    };
    module.exports = DOMChildrenOperations;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMTextComponent.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/DOMChildrenOperations.js", "npm:react@15.3.0/lib/DOMLazyTree.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactInstrumentation.js", "npm:react@15.3.0/lib/escapeTextContentForBrowser.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:react@15.3.0/lib/validateDOMNesting.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.0.js');
    var DOMChildrenOperations = $__require('npm:react@15.3.0/lib/DOMChildrenOperations.js');
    var DOMLazyTree = $__require('npm:react@15.3.0/lib/DOMLazyTree.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactInstrumentation = $__require('npm:react@15.3.0/lib/ReactInstrumentation.js');
    var escapeTextContentForBrowser = $__require('npm:react@15.3.0/lib/escapeTextContentForBrowser.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var validateDOMNesting = $__require('npm:react@15.3.0/lib/validateDOMNesting.js');
    var ReactDOMTextComponent = function(text) {
      this._currentElement = text;
      this._stringText = '' + text;
      this._hostNode = null;
      this._hostParent = null;
      this._domID = null;
      this._mountIndex = 0;
      this._closingComment = null;
      this._commentNodes = null;
    };
    _assign(ReactDOMTextComponent.prototype, {
      mountComponent: function(transaction, hostParent, hostContainerInfo, context) {
        if ("production" !== 'production') {
          ReactInstrumentation.debugTool.onSetText(this._debugID, this._stringText);
          var parentInfo;
          if (hostParent != null) {
            parentInfo = hostParent._ancestorInfo;
          } else if (hostContainerInfo != null) {
            parentInfo = hostContainerInfo._ancestorInfo;
          }
          if (parentInfo) {
            validateDOMNesting('#text', this, parentInfo);
          }
        }
        var domID = hostContainerInfo._idCounter++;
        var openingValue = ' react-text: ' + domID + ' ';
        var closingValue = ' /react-text ';
        this._domID = domID;
        this._hostParent = hostParent;
        if (transaction.useCreateElement) {
          var ownerDocument = hostContainerInfo._ownerDocument;
          var openingComment = ownerDocument.createComment(openingValue);
          var closingComment = ownerDocument.createComment(closingValue);
          var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
          DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
          if (this._stringText) {
            DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
          }
          DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
          ReactDOMComponentTree.precacheNode(this, openingComment);
          this._closingComment = closingComment;
          return lazyTree;
        } else {
          var escapedText = escapeTextContentForBrowser(this._stringText);
          if (transaction.renderToStaticMarkup) {
            return escapedText;
          }
          return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
        }
      },
      receiveComponent: function(nextText, transaction) {
        if (nextText !== this._currentElement) {
          this._currentElement = nextText;
          var nextStringText = '' + nextText;
          if (nextStringText !== this._stringText) {
            this._stringText = nextStringText;
            var commentNodes = this.getHostNode();
            DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
            if ("production" !== 'production') {
              ReactInstrumentation.debugTool.onSetText(this._debugID, nextStringText);
            }
          }
        }
      },
      getHostNode: function() {
        var hostNode = this._commentNodes;
        if (hostNode) {
          return hostNode;
        }
        if (!this._closingComment) {
          var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
          var node = openingComment.nextSibling;
          while (true) {
            !(node != null) ? "production" !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
            if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
              this._closingComment = node;
              break;
            }
            node = node.nextSibling;
          }
        }
        hostNode = [this._hostNode, this._closingComment];
        this._commentNodes = hostNode;
        return hostNode;
      },
      unmountComponent: function() {
        this._closingComment = null;
        this._commentNodes = null;
        ReactDOMComponentTree.uncacheNode(this);
      }
    });
    module.exports = ReactDOMTextComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDefaultBatchingStrategy.js", ["npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/ReactUpdates.js", "npm:react@15.3.0/lib/Transaction.js", "npm:fbjs@0.8.3/lib/emptyFunction.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var _assign = $__require('npm:object-assign@4.1.0.js');
  var ReactUpdates = $__require('npm:react@15.3.0/lib/ReactUpdates.js');
  var Transaction = $__require('npm:react@15.3.0/lib/Transaction.js');
  var emptyFunction = $__require('npm:fbjs@0.8.3/lib/emptyFunction.js');
  var RESET_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: function() {
      ReactDefaultBatchingStrategy.isBatchingUpdates = false;
    }
  };
  var FLUSH_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
  };
  var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
  function ReactDefaultBatchingStrategyTransaction() {
    this.reinitializeTransaction();
  }
  _assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {getTransactionWrappers: function() {
      return TRANSACTION_WRAPPERS;
    }});
  var transaction = new ReactDefaultBatchingStrategyTransaction();
  var ReactDefaultBatchingStrategy = {
    isBatchingUpdates: false,
    batchedUpdates: function(callback, a, b, c, d, e) {
      var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
      ReactDefaultBatchingStrategy.isBatchingUpdates = true;
      if (alreadyBatchingUpdates) {
        callback(a, b, c, d, e);
      } else {
        transaction.perform(callback, null, a, b, c, d, e);
      }
    }
  };
  module.exports = ReactDefaultBatchingStrategy;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/getUnboundedScrollPosition.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function getUnboundedScrollPosition(scrollable) {
    if (scrollable === window) {
      return {
        x: window.pageXOffset || document.documentElement.scrollLeft,
        y: window.pageYOffset || document.documentElement.scrollTop
      };
    }
    return {
      x: scrollable.scrollLeft,
      y: scrollable.scrollTop
    };
  }
  module.exports = getUnboundedScrollPosition;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactEventListener.js", ["npm:object-assign@4.1.0.js", "npm:fbjs@0.8.3/lib/EventListener.js", "npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "npm:react@15.3.0/lib/PooledClass.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactUpdates.js", "npm:react@15.3.0/lib/getEventTarget.js", "npm:fbjs@0.8.3/lib/getUnboundedScrollPosition.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _assign = $__require('npm:object-assign@4.1.0.js');
    var EventListener = $__require('npm:fbjs@0.8.3/lib/EventListener.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
    var PooledClass = $__require('npm:react@15.3.0/lib/PooledClass.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactUpdates = $__require('npm:react@15.3.0/lib/ReactUpdates.js');
    var getEventTarget = $__require('npm:react@15.3.0/lib/getEventTarget.js');
    var getUnboundedScrollPosition = $__require('npm:fbjs@0.8.3/lib/getUnboundedScrollPosition.js');
    function findParent(inst) {
      while (inst._hostParent) {
        inst = inst._hostParent;
      }
      var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
      var container = rootNode.parentNode;
      return ReactDOMComponentTree.getClosestInstanceFromNode(container);
    }
    function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
      this.topLevelType = topLevelType;
      this.nativeEvent = nativeEvent;
      this.ancestors = [];
    }
    _assign(TopLevelCallbackBookKeeping.prototype, {destructor: function() {
        this.topLevelType = null;
        this.nativeEvent = null;
        this.ancestors.length = 0;
      }});
    PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
    function handleTopLevelImpl(bookKeeping) {
      var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
      var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
      var ancestor = targetInst;
      do {
        bookKeeping.ancestors.push(ancestor);
        ancestor = ancestor && findParent(ancestor);
      } while (ancestor);
      for (var i = 0; i < bookKeeping.ancestors.length; i++) {
        targetInst = bookKeeping.ancestors[i];
        ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
      }
    }
    function scrollValueMonitor(cb) {
      var scrollPosition = getUnboundedScrollPosition(window);
      cb(scrollPosition);
    }
    var ReactEventListener = {
      _enabled: true,
      _handleTopLevel: null,
      WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
      setHandleTopLevel: function(handleTopLevel) {
        ReactEventListener._handleTopLevel = handleTopLevel;
      },
      setEnabled: function(enabled) {
        ReactEventListener._enabled = !!enabled;
      },
      isEnabled: function() {
        return ReactEventListener._enabled;
      },
      trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
        var element = handle;
        if (!element) {
          return null;
        }
        return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
      },
      trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
        var element = handle;
        if (!element) {
          return null;
        }
        return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
      },
      monitorScrollValue: function(refresh) {
        var callback = scrollValueMonitor.bind(null, refresh);
        EventListener.listen(window, 'scroll', callback);
      },
      dispatchEvent: function(topLevelType, nativeEvent) {
        if (!ReactEventListener._enabled) {
          return;
        }
        var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
        try {
          ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
        } finally {
          TopLevelCallbackBookKeeping.release(bookKeeping);
        }
      }
    };
    module.exports = ReactEventListener;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactInjection.js", ["npm:react@15.3.0/lib/DOMProperty.js", "npm:react@15.3.0/lib/EventPluginHub.js", "npm:react@15.3.0/lib/EventPluginUtils.js", "npm:react@15.3.0/lib/ReactComponentEnvironment.js", "npm:react@15.3.0/lib/ReactClass.js", "npm:react@15.3.0/lib/ReactEmptyComponent.js", "npm:react@15.3.0/lib/ReactBrowserEventEmitter.js", "npm:react@15.3.0/lib/ReactHostComponent.js", "npm:react@15.3.0/lib/ReactUpdates.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var DOMProperty = $__require('npm:react@15.3.0/lib/DOMProperty.js');
  var EventPluginHub = $__require('npm:react@15.3.0/lib/EventPluginHub.js');
  var EventPluginUtils = $__require('npm:react@15.3.0/lib/EventPluginUtils.js');
  var ReactComponentEnvironment = $__require('npm:react@15.3.0/lib/ReactComponentEnvironment.js');
  var ReactClass = $__require('npm:react@15.3.0/lib/ReactClass.js');
  var ReactEmptyComponent = $__require('npm:react@15.3.0/lib/ReactEmptyComponent.js');
  var ReactBrowserEventEmitter = $__require('npm:react@15.3.0/lib/ReactBrowserEventEmitter.js');
  var ReactHostComponent = $__require('npm:react@15.3.0/lib/ReactHostComponent.js');
  var ReactUpdates = $__require('npm:react@15.3.0/lib/ReactUpdates.js');
  var ReactInjection = {
    Component: ReactComponentEnvironment.injection,
    Class: ReactClass.injection,
    DOMProperty: DOMProperty.injection,
    EmptyComponent: ReactEmptyComponent.injection,
    EventPluginHub: EventPluginHub.injection,
    EventPluginUtils: EventPluginUtils.injection,
    EventEmitter: ReactBrowserEventEmitter.injection,
    HostComponent: ReactHostComponent.injection,
    Updates: ReactUpdates.injection
  };
  module.exports = ReactInjection;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactReconcileTransaction.js", ["npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/CallbackQueue.js", "npm:react@15.3.0/lib/PooledClass.js", "npm:react@15.3.0/lib/ReactBrowserEventEmitter.js", "npm:react@15.3.0/lib/ReactInputSelection.js", "npm:react@15.3.0/lib/ReactInstrumentation.js", "npm:react@15.3.0/lib/Transaction.js", "npm:react@15.3.0/lib/ReactUpdateQueue.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _assign = $__require('npm:object-assign@4.1.0.js');
    var CallbackQueue = $__require('npm:react@15.3.0/lib/CallbackQueue.js');
    var PooledClass = $__require('npm:react@15.3.0/lib/PooledClass.js');
    var ReactBrowserEventEmitter = $__require('npm:react@15.3.0/lib/ReactBrowserEventEmitter.js');
    var ReactInputSelection = $__require('npm:react@15.3.0/lib/ReactInputSelection.js');
    var ReactInstrumentation = $__require('npm:react@15.3.0/lib/ReactInstrumentation.js');
    var Transaction = $__require('npm:react@15.3.0/lib/Transaction.js');
    var ReactUpdateQueue = $__require('npm:react@15.3.0/lib/ReactUpdateQueue.js');
    var SELECTION_RESTORATION = {
      initialize: ReactInputSelection.getSelectionInformation,
      close: ReactInputSelection.restoreSelection
    };
    var EVENT_SUPPRESSION = {
      initialize: function() {
        var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
        ReactBrowserEventEmitter.setEnabled(false);
        return currentlyEnabled;
      },
      close: function(previouslyEnabled) {
        ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
      }
    };
    var ON_DOM_READY_QUEUEING = {
      initialize: function() {
        this.reactMountReady.reset();
      },
      close: function() {
        this.reactMountReady.notifyAll();
      }
    };
    var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
    if ("production" !== 'production') {
      TRANSACTION_WRAPPERS.push({
        initialize: ReactInstrumentation.debugTool.onBeginFlush,
        close: ReactInstrumentation.debugTool.onEndFlush
      });
    }
    function ReactReconcileTransaction(useCreateElement) {
      this.reinitializeTransaction();
      this.renderToStaticMarkup = false;
      this.reactMountReady = CallbackQueue.getPooled(null);
      this.useCreateElement = useCreateElement;
    }
    var Mixin = {
      getTransactionWrappers: function() {
        return TRANSACTION_WRAPPERS;
      },
      getReactMountReady: function() {
        return this.reactMountReady;
      },
      getUpdateQueue: function() {
        return ReactUpdateQueue;
      },
      checkpoint: function() {
        return this.reactMountReady.checkpoint();
      },
      rollback: function(checkpoint) {
        this.reactMountReady.rollback(checkpoint);
      },
      destructor: function() {
        CallbackQueue.release(this.reactMountReady);
        this.reactMountReady = null;
      }
    };
    _assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
    PooledClass.addPoolingTo(ReactReconcileTransaction);
    module.exports = ReactReconcileTransaction;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SVGDOMPropertyConfig.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var NS = {
    xlink: 'http://www.w3.org/1999/xlink',
    xml: 'http://www.w3.org/XML/1998/namespace'
  };
  var ATTRS = {
    accentHeight: 'accent-height',
    accumulate: 0,
    additive: 0,
    alignmentBaseline: 'alignment-baseline',
    allowReorder: 'allowReorder',
    alphabetic: 0,
    amplitude: 0,
    arabicForm: 'arabic-form',
    ascent: 0,
    attributeName: 'attributeName',
    attributeType: 'attributeType',
    autoReverse: 'autoReverse',
    azimuth: 0,
    baseFrequency: 'baseFrequency',
    baseProfile: 'baseProfile',
    baselineShift: 'baseline-shift',
    bbox: 0,
    begin: 0,
    bias: 0,
    by: 0,
    calcMode: 'calcMode',
    capHeight: 'cap-height',
    clip: 0,
    clipPath: 'clip-path',
    clipRule: 'clip-rule',
    clipPathUnits: 'clipPathUnits',
    colorInterpolation: 'color-interpolation',
    colorInterpolationFilters: 'color-interpolation-filters',
    colorProfile: 'color-profile',
    colorRendering: 'color-rendering',
    contentScriptType: 'contentScriptType',
    contentStyleType: 'contentStyleType',
    cursor: 0,
    cx: 0,
    cy: 0,
    d: 0,
    decelerate: 0,
    descent: 0,
    diffuseConstant: 'diffuseConstant',
    direction: 0,
    display: 0,
    divisor: 0,
    dominantBaseline: 'dominant-baseline',
    dur: 0,
    dx: 0,
    dy: 0,
    edgeMode: 'edgeMode',
    elevation: 0,
    enableBackground: 'enable-background',
    end: 0,
    exponent: 0,
    externalResourcesRequired: 'externalResourcesRequired',
    fill: 0,
    fillOpacity: 'fill-opacity',
    fillRule: 'fill-rule',
    filter: 0,
    filterRes: 'filterRes',
    filterUnits: 'filterUnits',
    floodColor: 'flood-color',
    floodOpacity: 'flood-opacity',
    focusable: 0,
    fontFamily: 'font-family',
    fontSize: 'font-size',
    fontSizeAdjust: 'font-size-adjust',
    fontStretch: 'font-stretch',
    fontStyle: 'font-style',
    fontVariant: 'font-variant',
    fontWeight: 'font-weight',
    format: 0,
    from: 0,
    fx: 0,
    fy: 0,
    g1: 0,
    g2: 0,
    glyphName: 'glyph-name',
    glyphOrientationHorizontal: 'glyph-orientation-horizontal',
    glyphOrientationVertical: 'glyph-orientation-vertical',
    glyphRef: 'glyphRef',
    gradientTransform: 'gradientTransform',
    gradientUnits: 'gradientUnits',
    hanging: 0,
    horizAdvX: 'horiz-adv-x',
    horizOriginX: 'horiz-origin-x',
    ideographic: 0,
    imageRendering: 'image-rendering',
    'in': 0,
    in2: 0,
    intercept: 0,
    k: 0,
    k1: 0,
    k2: 0,
    k3: 0,
    k4: 0,
    kernelMatrix: 'kernelMatrix',
    kernelUnitLength: 'kernelUnitLength',
    kerning: 0,
    keyPoints: 'keyPoints',
    keySplines: 'keySplines',
    keyTimes: 'keyTimes',
    lengthAdjust: 'lengthAdjust',
    letterSpacing: 'letter-spacing',
    lightingColor: 'lighting-color',
    limitingConeAngle: 'limitingConeAngle',
    local: 0,
    markerEnd: 'marker-end',
    markerMid: 'marker-mid',
    markerStart: 'marker-start',
    markerHeight: 'markerHeight',
    markerUnits: 'markerUnits',
    markerWidth: 'markerWidth',
    mask: 0,
    maskContentUnits: 'maskContentUnits',
    maskUnits: 'maskUnits',
    mathematical: 0,
    mode: 0,
    numOctaves: 'numOctaves',
    offset: 0,
    opacity: 0,
    operator: 0,
    order: 0,
    orient: 0,
    orientation: 0,
    origin: 0,
    overflow: 0,
    overlinePosition: 'overline-position',
    overlineThickness: 'overline-thickness',
    paintOrder: 'paint-order',
    panose1: 'panose-1',
    pathLength: 'pathLength',
    patternContentUnits: 'patternContentUnits',
    patternTransform: 'patternTransform',
    patternUnits: 'patternUnits',
    pointerEvents: 'pointer-events',
    points: 0,
    pointsAtX: 'pointsAtX',
    pointsAtY: 'pointsAtY',
    pointsAtZ: 'pointsAtZ',
    preserveAlpha: 'preserveAlpha',
    preserveAspectRatio: 'preserveAspectRatio',
    primitiveUnits: 'primitiveUnits',
    r: 0,
    radius: 0,
    refX: 'refX',
    refY: 'refY',
    renderingIntent: 'rendering-intent',
    repeatCount: 'repeatCount',
    repeatDur: 'repeatDur',
    requiredExtensions: 'requiredExtensions',
    requiredFeatures: 'requiredFeatures',
    restart: 0,
    result: 0,
    rotate: 0,
    rx: 0,
    ry: 0,
    scale: 0,
    seed: 0,
    shapeRendering: 'shape-rendering',
    slope: 0,
    spacing: 0,
    specularConstant: 'specularConstant',
    specularExponent: 'specularExponent',
    speed: 0,
    spreadMethod: 'spreadMethod',
    startOffset: 'startOffset',
    stdDeviation: 'stdDeviation',
    stemh: 0,
    stemv: 0,
    stitchTiles: 'stitchTiles',
    stopColor: 'stop-color',
    stopOpacity: 'stop-opacity',
    strikethroughPosition: 'strikethrough-position',
    strikethroughThickness: 'strikethrough-thickness',
    string: 0,
    stroke: 0,
    strokeDasharray: 'stroke-dasharray',
    strokeDashoffset: 'stroke-dashoffset',
    strokeLinecap: 'stroke-linecap',
    strokeLinejoin: 'stroke-linejoin',
    strokeMiterlimit: 'stroke-miterlimit',
    strokeOpacity: 'stroke-opacity',
    strokeWidth: 'stroke-width',
    surfaceScale: 'surfaceScale',
    systemLanguage: 'systemLanguage',
    tableValues: 'tableValues',
    targetX: 'targetX',
    targetY: 'targetY',
    textAnchor: 'text-anchor',
    textDecoration: 'text-decoration',
    textRendering: 'text-rendering',
    textLength: 'textLength',
    to: 0,
    transform: 0,
    u1: 0,
    u2: 0,
    underlinePosition: 'underline-position',
    underlineThickness: 'underline-thickness',
    unicode: 0,
    unicodeBidi: 'unicode-bidi',
    unicodeRange: 'unicode-range',
    unitsPerEm: 'units-per-em',
    vAlphabetic: 'v-alphabetic',
    vHanging: 'v-hanging',
    vIdeographic: 'v-ideographic',
    vMathematical: 'v-mathematical',
    values: 0,
    vectorEffect: 'vector-effect',
    version: 0,
    vertAdvY: 'vert-adv-y',
    vertOriginX: 'vert-origin-x',
    vertOriginY: 'vert-origin-y',
    viewBox: 'viewBox',
    viewTarget: 'viewTarget',
    visibility: 0,
    widths: 0,
    wordSpacing: 'word-spacing',
    writingMode: 'writing-mode',
    x: 0,
    xHeight: 'x-height',
    x1: 0,
    x2: 0,
    xChannelSelector: 'xChannelSelector',
    xlinkActuate: 'xlink:actuate',
    xlinkArcrole: 'xlink:arcrole',
    xlinkHref: 'xlink:href',
    xlinkRole: 'xlink:role',
    xlinkShow: 'xlink:show',
    xlinkTitle: 'xlink:title',
    xlinkType: 'xlink:type',
    xmlBase: 'xml:base',
    xmlns: 0,
    xmlnsXlink: 'xmlns:xlink',
    xmlLang: 'xml:lang',
    xmlSpace: 'xml:space',
    y: 0,
    y1: 0,
    y2: 0,
    yChannelSelector: 'yChannelSelector',
    z: 0,
    zoomAndPan: 'zoomAndPan'
  };
  var SVGDOMPropertyConfig = {
    Properties: {},
    DOMAttributeNamespaces: {
      xlinkActuate: NS.xlink,
      xlinkArcrole: NS.xlink,
      xlinkHref: NS.xlink,
      xlinkRole: NS.xlink,
      xlinkShow: NS.xlink,
      xlinkTitle: NS.xlink,
      xlinkType: NS.xlink,
      xmlBase: NS.xml,
      xmlLang: NS.xml,
      xmlSpace: NS.xml
    },
    DOMAttributeNames: {}
  };
  Object.keys(ATTRS).forEach(function(key) {
    SVGDOMPropertyConfig.Properties[key] = 0;
    if (ATTRS[key]) {
      SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
    }
  });
  module.exports = SVGDOMPropertyConfig;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/getNodeForCharacterOffset.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function getLeafNode(node) {
    while (node && node.firstChild) {
      node = node.firstChild;
    }
    return node;
  }
  function getSiblingNode(node) {
    while (node) {
      if (node.nextSibling) {
        return node.nextSibling;
      }
      node = node.parentNode;
    }
  }
  function getNodeForCharacterOffset(root, offset) {
    var node = getLeafNode(root);
    var nodeStart = 0;
    var nodeEnd = 0;
    while (node) {
      if (node.nodeType === 3) {
        nodeEnd = nodeStart + node.textContent.length;
        if (nodeStart <= offset && nodeEnd >= offset) {
          return {
            node: node,
            offset: offset - nodeStart
          };
        }
        nodeStart = nodeEnd;
      }
      node = getLeafNode(getSiblingNode(node));
    }
  }
  module.exports = getNodeForCharacterOffset;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/getTextContentAccessor.js", ["npm:fbjs@0.8.3/lib/ExecutionEnvironment.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
  var contentKey = null;
  function getTextContentAccessor() {
    if (!contentKey && ExecutionEnvironment.canUseDOM) {
      contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
    }
    return contentKey;
  }
  module.exports = getTextContentAccessor;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMSelection.js", ["npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "npm:react@15.3.0/lib/getNodeForCharacterOffset.js", "npm:react@15.3.0/lib/getTextContentAccessor.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
  var getNodeForCharacterOffset = $__require('npm:react@15.3.0/lib/getNodeForCharacterOffset.js');
  var getTextContentAccessor = $__require('npm:react@15.3.0/lib/getTextContentAccessor.js');
  function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
    return anchorNode === focusNode && anchorOffset === focusOffset;
  }
  function getIEOffsets(node) {
    var selection = document.selection;
    var selectedRange = selection.createRange();
    var selectedLength = selectedRange.text.length;
    var fromStart = selectedRange.duplicate();
    fromStart.moveToElementText(node);
    fromStart.setEndPoint('EndToStart', selectedRange);
    var startOffset = fromStart.text.length;
    var endOffset = startOffset + selectedLength;
    return {
      start: startOffset,
      end: endOffset
    };
  }
  function getModernOffsets(node) {
    var selection = window.getSelection && window.getSelection();
    if (!selection || selection.rangeCount === 0) {
      return null;
    }
    var anchorNode = selection.anchorNode;
    var anchorOffset = selection.anchorOffset;
    var focusNode = selection.focusNode;
    var focusOffset = selection.focusOffset;
    var currentRange = selection.getRangeAt(0);
    try {
      currentRange.startContainer.nodeType;
      currentRange.endContainer.nodeType;
    } catch (e) {
      return null;
    }
    var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
    var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
    var tempRange = currentRange.cloneRange();
    tempRange.selectNodeContents(node);
    tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
    var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
    var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
    var end = start + rangeLength;
    var detectionRange = document.createRange();
    detectionRange.setStart(anchorNode, anchorOffset);
    detectionRange.setEnd(focusNode, focusOffset);
    var isBackward = detectionRange.collapsed;
    return {
      start: isBackward ? end : start,
      end: isBackward ? start : end
    };
  }
  function setIEOffsets(node, offsets) {
    var range = document.selection.createRange().duplicate();
    var start,
        end;
    if (offsets.end === undefined) {
      start = offsets.start;
      end = start;
    } else if (offsets.start > offsets.end) {
      start = offsets.end;
      end = offsets.start;
    } else {
      start = offsets.start;
      end = offsets.end;
    }
    range.moveToElementText(node);
    range.moveStart('character', start);
    range.setEndPoint('EndToStart', range);
    range.moveEnd('character', end - start);
    range.select();
  }
  function setModernOffsets(node, offsets) {
    if (!window.getSelection) {
      return;
    }
    var selection = window.getSelection();
    var length = node[getTextContentAccessor()].length;
    var start = Math.min(offsets.start, length);
    var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
    if (!selection.extend && start > end) {
      var temp = end;
      end = start;
      start = temp;
    }
    var startMarker = getNodeForCharacterOffset(node, start);
    var endMarker = getNodeForCharacterOffset(node, end);
    if (startMarker && endMarker) {
      var range = document.createRange();
      range.setStart(startMarker.node, startMarker.offset);
      selection.removeAllRanges();
      if (start > end) {
        selection.addRange(range);
        selection.extend(endMarker.node, endMarker.offset);
      } else {
        range.setEnd(endMarker.node, endMarker.offset);
        selection.addRange(range);
      }
    }
  }
  var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
  var ReactDOMSelection = {
    getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
    setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
  };
  module.exports = ReactDOMSelection;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/isNode.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function isNode(object) {
    return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
  }
  module.exports = isNode;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/isTextNode.js", ["npm:fbjs@0.8.3/lib/isNode.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var isNode = $__require('npm:fbjs@0.8.3/lib/isNode.js');
  function isTextNode(object) {
    return isNode(object) && object.nodeType == 3;
  }
  module.exports = isTextNode;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/containsNode.js", ["npm:fbjs@0.8.3/lib/isTextNode.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var isTextNode = $__require('npm:fbjs@0.8.3/lib/isTextNode.js');
  function containsNode(outerNode, innerNode) {
    if (!outerNode || !innerNode) {
      return false;
    } else if (outerNode === innerNode) {
      return true;
    } else if (isTextNode(outerNode)) {
      return false;
    } else if (isTextNode(innerNode)) {
      return containsNode(outerNode, innerNode.parentNode);
    } else if ('contains' in outerNode) {
      return outerNode.contains(innerNode);
    } else if (outerNode.compareDocumentPosition) {
      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
    } else {
      return false;
    }
  }
  module.exports = containsNode;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/focusNode.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function focusNode(node) {
    try {
      node.focus();
    } catch (e) {}
  }
  module.exports = focusNode;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactInputSelection.js", ["npm:react@15.3.0/lib/ReactDOMSelection.js", "npm:fbjs@0.8.3/lib/containsNode.js", "npm:fbjs@0.8.3/lib/focusNode.js", "npm:fbjs@0.8.3/lib/getActiveElement.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ReactDOMSelection = $__require('npm:react@15.3.0/lib/ReactDOMSelection.js');
  var containsNode = $__require('npm:fbjs@0.8.3/lib/containsNode.js');
  var focusNode = $__require('npm:fbjs@0.8.3/lib/focusNode.js');
  var getActiveElement = $__require('npm:fbjs@0.8.3/lib/getActiveElement.js');
  function isInDocument(node) {
    return containsNode(document.documentElement, node);
  }
  var ReactInputSelection = {
    hasSelectionCapabilities: function(elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
    },
    getSelectionInformation: function() {
      var focusedElem = getActiveElement();
      return {
        focusedElem: focusedElem,
        selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
      };
    },
    restoreSelection: function(priorSelectionInformation) {
      var curFocusedElem = getActiveElement();
      var priorFocusedElem = priorSelectionInformation.focusedElem;
      var priorSelectionRange = priorSelectionInformation.selectionRange;
      if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
        if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
          ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
        }
        focusNode(priorFocusedElem);
      }
    },
    getSelection: function(input) {
      var selection;
      if ('selectionStart' in input) {
        selection = {
          start: input.selectionStart,
          end: input.selectionEnd
        };
      } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
        var range = document.selection.createRange();
        if (range.parentElement() === input) {
          selection = {
            start: -range.moveStart('character', -input.value.length),
            end: -range.moveEnd('character', -input.value.length)
          };
        }
      } else {
        selection = ReactDOMSelection.getOffsets(input);
      }
      return selection || {
        start: 0,
        end: 0
      };
    },
    setSelection: function(input, offsets) {
      var start = offsets.start;
      var end = offsets.end;
      if (end === undefined) {
        end = start;
      }
      if ('selectionStart' in input) {
        input.selectionStart = start;
        input.selectionEnd = Math.min(end, input.value.length);
      } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
        var range = input.createTextRange();
        range.collapse(true);
        range.moveStart('character', start);
        range.moveEnd('character', end - start);
        range.select();
      } else {
        ReactDOMSelection.setOffsets(input, offsets);
      }
    }
  };
  module.exports = ReactInputSelection;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/getActiveElement.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function getActiveElement() {
    if (typeof document === 'undefined') {
      return null;
    }
    try {
      return document.activeElement || document.body;
    } catch (e) {
      return document.body;
    }
  }
  module.exports = getActiveElement;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/isTextInputElement.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var supportedInputTypes = {
    'color': true,
    'date': true,
    'datetime': true,
    'datetime-local': true,
    'email': true,
    'month': true,
    'number': true,
    'password': true,
    'range': true,
    'search': true,
    'tel': true,
    'text': true,
    'time': true,
    'url': true,
    'week': true
  };
  function isTextInputElement(elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    if (nodeName === 'input') {
      return !!supportedInputTypes[elem.type];
    }
    if (nodeName === 'textarea') {
      return true;
    }
    return false;
  }
  module.exports = isTextInputElement;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SelectEventPlugin.js", ["npm:react@15.3.0/lib/EventConstants.js", "npm:react@15.3.0/lib/EventPropagators.js", "npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactInputSelection.js", "npm:react@15.3.0/lib/SyntheticEvent.js", "npm:fbjs@0.8.3/lib/getActiveElement.js", "npm:react@15.3.0/lib/isTextInputElement.js", "npm:fbjs@0.8.3/lib/keyOf.js", "npm:fbjs@0.8.3/lib/shallowEqual.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var EventConstants = $__require('npm:react@15.3.0/lib/EventConstants.js');
  var EventPropagators = $__require('npm:react@15.3.0/lib/EventPropagators.js');
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
  var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
  var ReactInputSelection = $__require('npm:react@15.3.0/lib/ReactInputSelection.js');
  var SyntheticEvent = $__require('npm:react@15.3.0/lib/SyntheticEvent.js');
  var getActiveElement = $__require('npm:fbjs@0.8.3/lib/getActiveElement.js');
  var isTextInputElement = $__require('npm:react@15.3.0/lib/isTextInputElement.js');
  var keyOf = $__require('npm:fbjs@0.8.3/lib/keyOf.js');
  var shallowEqual = $__require('npm:fbjs@0.8.3/lib/shallowEqual.js');
  var topLevelTypes = EventConstants.topLevelTypes;
  var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
  var eventTypes = {select: {
      phasedRegistrationNames: {
        bubbled: keyOf({onSelect: null}),
        captured: keyOf({onSelectCapture: null})
      },
      dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
    }};
  var activeElement = null;
  var activeElementInst = null;
  var lastSelection = null;
  var mouseDown = false;
  var hasListener = false;
  var ON_SELECT_KEY = keyOf({onSelect: null});
  function getSelection(node) {
    if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
      return {
        start: node.selectionStart,
        end: node.selectionEnd
      };
    } else if (window.getSelection) {
      var selection = window.getSelection();
      return {
        anchorNode: selection.anchorNode,
        anchorOffset: selection.anchorOffset,
        focusNode: selection.focusNode,
        focusOffset: selection.focusOffset
      };
    } else if (document.selection) {
      var range = document.selection.createRange();
      return {
        parentElement: range.parentElement(),
        text: range.text,
        top: range.boundingTop,
        left: range.boundingLeft
      };
    }
  }
  function constructSelectEvent(nativeEvent, nativeEventTarget) {
    if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
      return null;
    }
    var currentSelection = getSelection(activeElement);
    if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
      lastSelection = currentSelection;
      var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
      syntheticEvent.type = 'select';
      syntheticEvent.target = activeElement;
      EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
      return syntheticEvent;
    }
    return null;
  }
  var SelectEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (!hasListener) {
        return null;
      }
      var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
      switch (topLevelType) {
        case topLevelTypes.topFocus:
          if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
            activeElement = targetNode;
            activeElementInst = targetInst;
            lastSelection = null;
          }
          break;
        case topLevelTypes.topBlur:
          activeElement = null;
          activeElementInst = null;
          lastSelection = null;
          break;
        case topLevelTypes.topMouseDown:
          mouseDown = true;
          break;
        case topLevelTypes.topContextMenu:
        case topLevelTypes.topMouseUp:
          mouseDown = false;
          return constructSelectEvent(nativeEvent, nativeEventTarget);
        case topLevelTypes.topSelectionChange:
          if (skipSelectionChangeEvent) {
            break;
          }
        case topLevelTypes.topKeyDown:
        case topLevelTypes.topKeyUp:
          return constructSelectEvent(nativeEvent, nativeEventTarget);
      }
      return null;
    },
    didPutListener: function(inst, registrationName, listener) {
      if (registrationName === ON_SELECT_KEY) {
        hasListener = true;
      }
    }
  };
  module.exports = SelectEventPlugin;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/EventListener.js", ["npm:fbjs@0.8.3/lib/emptyFunction.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var emptyFunction = $__require('npm:fbjs@0.8.3/lib/emptyFunction.js');
    var EventListener = {
      listen: function listen(target, eventType, callback) {
        if (target.addEventListener) {
          target.addEventListener(eventType, callback, false);
          return {remove: function remove() {
              target.removeEventListener(eventType, callback, false);
            }};
        } else if (target.attachEvent) {
          target.attachEvent('on' + eventType, callback);
          return {remove: function remove() {
              target.detachEvent('on' + eventType, callback);
            }};
        }
      },
      capture: function capture(target, eventType, callback) {
        if (target.addEventListener) {
          target.addEventListener(eventType, callback, true);
          return {remove: function remove() {
              target.removeEventListener(eventType, callback, true);
            }};
        } else {
          if ("production" !== 'production') {
            console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
          }
          return {remove: emptyFunction};
        }
      },
      registerDefault: function registerDefault() {}
    };
    module.exports = EventListener;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/EventPropagators.js", ["npm:react@15.3.0/lib/EventConstants.js", "npm:react@15.3.0/lib/EventPluginHub.js", "npm:react@15.3.0/lib/EventPluginUtils.js", "npm:react@15.3.0/lib/accumulateInto.js", "npm:react@15.3.0/lib/forEachAccumulated.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var EventConstants = $__require('npm:react@15.3.0/lib/EventConstants.js');
    var EventPluginHub = $__require('npm:react@15.3.0/lib/EventPluginHub.js');
    var EventPluginUtils = $__require('npm:react@15.3.0/lib/EventPluginUtils.js');
    var accumulateInto = $__require('npm:react@15.3.0/lib/accumulateInto.js');
    var forEachAccumulated = $__require('npm:react@15.3.0/lib/forEachAccumulated.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var PropagationPhases = EventConstants.PropagationPhases;
    var getListener = EventPluginHub.getListener;
    function listenerAtPhase(inst, event, propagationPhase) {
      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
      return getListener(inst, registrationName);
    }
    function accumulateDirectionalDispatches(inst, upwards, event) {
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
      }
      var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
      var listener = listenerAtPhase(inst, event, phase);
      if (listener) {
        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
        event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
      }
    }
    function accumulateTwoPhaseDispatchesSingle(event) {
      if (event && event.dispatchConfig.phasedRegistrationNames) {
        EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
      }
    }
    function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
      if (event && event.dispatchConfig.phasedRegistrationNames) {
        var targetInst = event._targetInst;
        var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
        EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
      }
    }
    function accumulateDispatches(inst, ignoredDirection, event) {
      if (event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName;
        var listener = getListener(inst, registrationName);
        if (listener) {
          event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
          event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
        }
      }
    }
    function accumulateDirectDispatchesSingle(event) {
      if (event && event.dispatchConfig.registrationName) {
        accumulateDispatches(event._targetInst, null, event);
      }
    }
    function accumulateTwoPhaseDispatches(events) {
      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
    }
    function accumulateTwoPhaseDispatchesSkipTarget(events) {
      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
    }
    function accumulateEnterLeaveDispatches(leave, enter, from, to) {
      EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
    }
    function accumulateDirectDispatches(events) {
      forEachAccumulated(events, accumulateDirectDispatchesSingle);
    }
    var EventPropagators = {
      accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
      accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
      accumulateDirectDispatches: accumulateDirectDispatches,
      accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
    };
    module.exports = EventPropagators;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SyntheticAnimationEvent.js", ["npm:react@15.3.0/lib/SyntheticEvent.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react@15.3.0/lib/SyntheticEvent.js');
  var AnimationEventInterface = {
    animationName: null,
    elapsedTime: null,
    pseudoElement: null
  };
  function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
  module.exports = SyntheticAnimationEvent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SyntheticClipboardEvent.js", ["npm:react@15.3.0/lib/SyntheticEvent.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react@15.3.0/lib/SyntheticEvent.js');
  var ClipboardEventInterface = {clipboardData: function(event) {
      return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
    }};
  function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
  module.exports = SyntheticClipboardEvent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SyntheticFocusEvent.js", ["npm:react@15.3.0/lib/SyntheticUIEvent.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('npm:react@15.3.0/lib/SyntheticUIEvent.js');
  var FocusEventInterface = {relatedTarget: null};
  function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
  module.exports = SyntheticFocusEvent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/getEventKey.js", ["npm:react@15.3.0/lib/getEventCharCode.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var getEventCharCode = $__require('npm:react@15.3.0/lib/getEventCharCode.js');
  var normalizeKey = {
    'Esc': 'Escape',
    'Spacebar': ' ',
    'Left': 'ArrowLeft',
    'Up': 'ArrowUp',
    'Right': 'ArrowRight',
    'Down': 'ArrowDown',
    'Del': 'Delete',
    'Win': 'OS',
    'Menu': 'ContextMenu',
    'Apps': 'ContextMenu',
    'Scroll': 'ScrollLock',
    'MozPrintableKey': 'Unidentified'
  };
  var translateToKey = {
    8: 'Backspace',
    9: 'Tab',
    12: 'Clear',
    13: 'Enter',
    16: 'Shift',
    17: 'Control',
    18: 'Alt',
    19: 'Pause',
    20: 'CapsLock',
    27: 'Escape',
    32: ' ',
    33: 'PageUp',
    34: 'PageDown',
    35: 'End',
    36: 'Home',
    37: 'ArrowLeft',
    38: 'ArrowUp',
    39: 'ArrowRight',
    40: 'ArrowDown',
    45: 'Insert',
    46: 'Delete',
    112: 'F1',
    113: 'F2',
    114: 'F3',
    115: 'F4',
    116: 'F5',
    117: 'F6',
    118: 'F7',
    119: 'F8',
    120: 'F9',
    121: 'F10',
    122: 'F11',
    123: 'F12',
    144: 'NumLock',
    145: 'ScrollLock',
    224: 'Meta'
  };
  function getEventKey(nativeEvent) {
    if (nativeEvent.key) {
      var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
      if (key !== 'Unidentified') {
        return key;
      }
    }
    if (nativeEvent.type === 'keypress') {
      var charCode = getEventCharCode(nativeEvent);
      return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
    }
    if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
      return translateToKey[nativeEvent.keyCode] || 'Unidentified';
    }
    return '';
  }
  module.exports = getEventKey;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SyntheticKeyboardEvent.js", ["npm:react@15.3.0/lib/SyntheticUIEvent.js", "npm:react@15.3.0/lib/getEventCharCode.js", "npm:react@15.3.0/lib/getEventKey.js", "npm:react@15.3.0/lib/getEventModifierState.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('npm:react@15.3.0/lib/SyntheticUIEvent.js');
  var getEventCharCode = $__require('npm:react@15.3.0/lib/getEventCharCode.js');
  var getEventKey = $__require('npm:react@15.3.0/lib/getEventKey.js');
  var getEventModifierState = $__require('npm:react@15.3.0/lib/getEventModifierState.js');
  var KeyboardEventInterface = {
    key: getEventKey,
    location: null,
    ctrlKey: null,
    shiftKey: null,
    altKey: null,
    metaKey: null,
    repeat: null,
    locale: null,
    getModifierState: getEventModifierState,
    charCode: function(event) {
      if (event.type === 'keypress') {
        return getEventCharCode(event);
      }
      return 0;
    },
    keyCode: function(event) {
      if (event.type === 'keydown' || event.type === 'keyup') {
        return event.keyCode;
      }
      return 0;
    },
    which: function(event) {
      if (event.type === 'keypress') {
        return getEventCharCode(event);
      }
      if (event.type === 'keydown' || event.type === 'keyup') {
        return event.keyCode;
      }
      return 0;
    }
  };
  function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
  module.exports = SyntheticKeyboardEvent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SyntheticDragEvent.js", ["npm:react@15.3.0/lib/SyntheticMouseEvent.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var SyntheticMouseEvent = $__require('npm:react@15.3.0/lib/SyntheticMouseEvent.js');
  var DragEventInterface = {dataTransfer: null};
  function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
  module.exports = SyntheticDragEvent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SyntheticTouchEvent.js", ["npm:react@15.3.0/lib/SyntheticUIEvent.js", "npm:react@15.3.0/lib/getEventModifierState.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('npm:react@15.3.0/lib/SyntheticUIEvent.js');
  var getEventModifierState = $__require('npm:react@15.3.0/lib/getEventModifierState.js');
  var TouchEventInterface = {
    touches: null,
    targetTouches: null,
    changedTouches: null,
    altKey: null,
    metaKey: null,
    ctrlKey: null,
    shiftKey: null,
    getModifierState: getEventModifierState
  };
  function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
  module.exports = SyntheticTouchEvent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SyntheticTransitionEvent.js", ["npm:react@15.3.0/lib/SyntheticEvent.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react@15.3.0/lib/SyntheticEvent.js');
  var TransitionEventInterface = {
    propertyName: null,
    elapsedTime: null,
    pseudoElement: null
  };
  function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
  module.exports = SyntheticTransitionEvent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SyntheticEvent.js", ["npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/PooledClass.js", "npm:fbjs@0.8.3/lib/emptyFunction.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _assign = $__require('npm:object-assign@4.1.0.js');
    var PooledClass = $__require('npm:react@15.3.0/lib/PooledClass.js');
    var emptyFunction = $__require('npm:fbjs@0.8.3/lib/emptyFunction.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var didWarnForAddedNewProperty = false;
    var isProxySupported = typeof Proxy === 'function';
    var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
    var EventInterface = {
      type: null,
      target: null,
      currentTarget: emptyFunction.thatReturnsNull,
      eventPhase: null,
      bubbles: null,
      cancelable: null,
      timeStamp: function(event) {
        return event.timeStamp || Date.now();
      },
      defaultPrevented: null,
      isTrusted: null
    };
    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
      if ("production" !== 'production') {
        delete this.nativeEvent;
        delete this.preventDefault;
        delete this.stopPropagation;
      }
      this.dispatchConfig = dispatchConfig;
      this._targetInst = targetInst;
      this.nativeEvent = nativeEvent;
      var Interface = this.constructor.Interface;
      for (var propName in Interface) {
        if (!Interface.hasOwnProperty(propName)) {
          continue;
        }
        if ("production" !== 'production') {
          delete this[propName];
        }
        var normalize = Interface[propName];
        if (normalize) {
          this[propName] = normalize(nativeEvent);
        } else {
          if (propName === 'target') {
            this.target = nativeEventTarget;
          } else {
            this[propName] = nativeEvent[propName];
          }
        }
      }
      var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
      if (defaultPrevented) {
        this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
      } else {
        this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
      }
      this.isPropagationStopped = emptyFunction.thatReturnsFalse;
      return this;
    }
    _assign(SyntheticEvent.prototype, {
      preventDefault: function() {
        this.defaultPrevented = true;
        var event = this.nativeEvent;
        if (!event) {
          return;
        }
        if (event.preventDefault) {
          event.preventDefault();
        } else {
          event.returnValue = false;
        }
        this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
      },
      stopPropagation: function() {
        var event = this.nativeEvent;
        if (!event) {
          return;
        }
        if (event.stopPropagation) {
          event.stopPropagation();
        } else {
          event.cancelBubble = true;
        }
        this.isPropagationStopped = emptyFunction.thatReturnsTrue;
      },
      persist: function() {
        this.isPersistent = emptyFunction.thatReturnsTrue;
      },
      isPersistent: emptyFunction.thatReturnsFalse,
      destructor: function() {
        var Interface = this.constructor.Interface;
        for (var propName in Interface) {
          if ("production" !== 'production') {
            Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
          } else {
            this[propName] = null;
          }
        }
        for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
          this[shouldBeReleasedProperties[i]] = null;
        }
        if ("production" !== 'production') {
          Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
          Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
          Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
        }
      }
    });
    SyntheticEvent.Interface = EventInterface;
    if ("production" !== 'production') {
      if (isProxySupported) {
        SyntheticEvent = new Proxy(SyntheticEvent, {
          construct: function(target, args) {
            return this.apply(target, Object.create(target.prototype), args);
          },
          apply: function(constructor, that, args) {
            return new Proxy(constructor.apply(that, args), {set: function(target, prop, value) {
                if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
                  "production" !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
                  didWarnForAddedNewProperty = true;
                }
                target[prop] = value;
                return true;
              }});
          }
        });
      }
    }
    SyntheticEvent.augmentClass = function(Class, Interface) {
      var Super = this;
      var E = function() {};
      E.prototype = Super.prototype;
      var prototype = new E();
      _assign(prototype, Class.prototype);
      Class.prototype = prototype;
      Class.prototype.constructor = Class;
      Class.Interface = _assign({}, Super.Interface, Interface);
      Class.augmentClass = Super.augmentClass;
      PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
    };
    PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
    module.exports = SyntheticEvent;
    function getPooledWarningPropertyDefinition(propName, getVal) {
      var isFunction = typeof getVal === 'function';
      return {
        configurable: true,
        set: set,
        get: get
      };
      function set(val) {
        var action = isFunction ? 'setting the method' : 'setting the property';
        warn(action, 'This is effectively a no-op');
        return val;
      }
      function get() {
        var action = isFunction ? 'accessing the method' : 'accessing the property';
        var result = isFunction ? 'This is a no-op function' : 'This is set to null';
        warn(action, result);
        return getVal;
      }
      function warn(action, result) {
        var warningCondition = false;
        "production" !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
      }
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/getEventTarget.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function getEventTarget(nativeEvent) {
    var target = nativeEvent.target || nativeEvent.srcElement || window;
    if (target.correspondingUseElement) {
      target = target.correspondingUseElement;
    }
    return target.nodeType === 3 ? target.parentNode : target;
  }
  module.exports = getEventTarget;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SyntheticUIEvent.js", ["npm:react@15.3.0/lib/SyntheticEvent.js", "npm:react@15.3.0/lib/getEventTarget.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react@15.3.0/lib/SyntheticEvent.js');
  var getEventTarget = $__require('npm:react@15.3.0/lib/getEventTarget.js');
  var UIEventInterface = {
    view: function(event) {
      if (event.view) {
        return event.view;
      }
      var target = getEventTarget(event);
      if (target.window === target) {
        return target;
      }
      var doc = target.ownerDocument;
      if (doc) {
        return doc.defaultView || doc.parentWindow;
      } else {
        return window;
      }
    },
    detail: function(event) {
      return event.detail || 0;
    }
  };
  function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
  module.exports = SyntheticUIEvent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/getEventModifierState.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var modifierKeyToProp = {
    'Alt': 'altKey',
    'Control': 'ctrlKey',
    'Meta': 'metaKey',
    'Shift': 'shiftKey'
  };
  function modifierStateGetter(keyArg) {
    var syntheticEvent = this;
    var nativeEvent = syntheticEvent.nativeEvent;
    if (nativeEvent.getModifierState) {
      return nativeEvent.getModifierState(keyArg);
    }
    var keyProp = modifierKeyToProp[keyArg];
    return keyProp ? !!nativeEvent[keyProp] : false;
  }
  function getEventModifierState(nativeEvent) {
    return modifierStateGetter;
  }
  module.exports = getEventModifierState;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SyntheticMouseEvent.js", ["npm:react@15.3.0/lib/SyntheticUIEvent.js", "npm:react@15.3.0/lib/ViewportMetrics.js", "npm:react@15.3.0/lib/getEventModifierState.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('npm:react@15.3.0/lib/SyntheticUIEvent.js');
  var ViewportMetrics = $__require('npm:react@15.3.0/lib/ViewportMetrics.js');
  var getEventModifierState = $__require('npm:react@15.3.0/lib/getEventModifierState.js');
  var MouseEventInterface = {
    screenX: null,
    screenY: null,
    clientX: null,
    clientY: null,
    ctrlKey: null,
    shiftKey: null,
    altKey: null,
    metaKey: null,
    getModifierState: getEventModifierState,
    button: function(event) {
      var button = event.button;
      if ('which' in event) {
        return button;
      }
      return button === 2 ? 2 : button === 4 ? 1 : 0;
    },
    buttons: null,
    relatedTarget: function(event) {
      return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
    },
    pageX: function(event) {
      return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
    },
    pageY: function(event) {
      return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
    }
  };
  function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
  module.exports = SyntheticMouseEvent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SyntheticWheelEvent.js", ["npm:react@15.3.0/lib/SyntheticMouseEvent.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var SyntheticMouseEvent = $__require('npm:react@15.3.0/lib/SyntheticMouseEvent.js');
  var WheelEventInterface = {
    deltaX: function(event) {
      return 'deltaX' in event ? event.deltaX : 'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
    },
    deltaY: function(event) {
      return 'deltaY' in event ? event.deltaY : 'wheelDeltaY' in event ? -event.wheelDeltaY : 'wheelDelta' in event ? -event.wheelDelta : 0;
    },
    deltaZ: null,
    deltaMode: null
  };
  function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
  module.exports = SyntheticWheelEvent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/getEventCharCode.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function getEventCharCode(nativeEvent) {
    var charCode;
    var keyCode = nativeEvent.keyCode;
    if ('charCode' in nativeEvent) {
      charCode = nativeEvent.charCode;
      if (charCode === 0 && keyCode === 13) {
        charCode = 13;
      }
    } else {
      charCode = keyCode;
    }
    if (charCode >= 32 || charCode === 13) {
      return charCode;
    }
    return 0;
  }
  module.exports = getEventCharCode;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/SimpleEventPlugin.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/EventConstants.js", "npm:fbjs@0.8.3/lib/EventListener.js", "npm:react@15.3.0/lib/EventPropagators.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/SyntheticAnimationEvent.js", "npm:react@15.3.0/lib/SyntheticClipboardEvent.js", "npm:react@15.3.0/lib/SyntheticEvent.js", "npm:react@15.3.0/lib/SyntheticFocusEvent.js", "npm:react@15.3.0/lib/SyntheticKeyboardEvent.js", "npm:react@15.3.0/lib/SyntheticMouseEvent.js", "npm:react@15.3.0/lib/SyntheticDragEvent.js", "npm:react@15.3.0/lib/SyntheticTouchEvent.js", "npm:react@15.3.0/lib/SyntheticTransitionEvent.js", "npm:react@15.3.0/lib/SyntheticUIEvent.js", "npm:react@15.3.0/lib/SyntheticWheelEvent.js", "npm:fbjs@0.8.3/lib/emptyFunction.js", "npm:react@15.3.0/lib/getEventCharCode.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:fbjs@0.8.3/lib/keyOf.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var EventConstants = $__require('npm:react@15.3.0/lib/EventConstants.js');
    var EventListener = $__require('npm:fbjs@0.8.3/lib/EventListener.js');
    var EventPropagators = $__require('npm:react@15.3.0/lib/EventPropagators.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var SyntheticAnimationEvent = $__require('npm:react@15.3.0/lib/SyntheticAnimationEvent.js');
    var SyntheticClipboardEvent = $__require('npm:react@15.3.0/lib/SyntheticClipboardEvent.js');
    var SyntheticEvent = $__require('npm:react@15.3.0/lib/SyntheticEvent.js');
    var SyntheticFocusEvent = $__require('npm:react@15.3.0/lib/SyntheticFocusEvent.js');
    var SyntheticKeyboardEvent = $__require('npm:react@15.3.0/lib/SyntheticKeyboardEvent.js');
    var SyntheticMouseEvent = $__require('npm:react@15.3.0/lib/SyntheticMouseEvent.js');
    var SyntheticDragEvent = $__require('npm:react@15.3.0/lib/SyntheticDragEvent.js');
    var SyntheticTouchEvent = $__require('npm:react@15.3.0/lib/SyntheticTouchEvent.js');
    var SyntheticTransitionEvent = $__require('npm:react@15.3.0/lib/SyntheticTransitionEvent.js');
    var SyntheticUIEvent = $__require('npm:react@15.3.0/lib/SyntheticUIEvent.js');
    var SyntheticWheelEvent = $__require('npm:react@15.3.0/lib/SyntheticWheelEvent.js');
    var emptyFunction = $__require('npm:fbjs@0.8.3/lib/emptyFunction.js');
    var getEventCharCode = $__require('npm:react@15.3.0/lib/getEventCharCode.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var keyOf = $__require('npm:fbjs@0.8.3/lib/keyOf.js');
    var topLevelTypes = EventConstants.topLevelTypes;
    var eventTypes = {
      abort: {phasedRegistrationNames: {
          bubbled: keyOf({onAbort: true}),
          captured: keyOf({onAbortCapture: true})
        }},
      animationEnd: {phasedRegistrationNames: {
          bubbled: keyOf({onAnimationEnd: true}),
          captured: keyOf({onAnimationEndCapture: true})
        }},
      animationIteration: {phasedRegistrationNames: {
          bubbled: keyOf({onAnimationIteration: true}),
          captured: keyOf({onAnimationIterationCapture: true})
        }},
      animationStart: {phasedRegistrationNames: {
          bubbled: keyOf({onAnimationStart: true}),
          captured: keyOf({onAnimationStartCapture: true})
        }},
      blur: {phasedRegistrationNames: {
          bubbled: keyOf({onBlur: true}),
          captured: keyOf({onBlurCapture: true})
        }},
      canPlay: {phasedRegistrationNames: {
          bubbled: keyOf({onCanPlay: true}),
          captured: keyOf({onCanPlayCapture: true})
        }},
      canPlayThrough: {phasedRegistrationNames: {
          bubbled: keyOf({onCanPlayThrough: true}),
          captured: keyOf({onCanPlayThroughCapture: true})
        }},
      click: {phasedRegistrationNames: {
          bubbled: keyOf({onClick: true}),
          captured: keyOf({onClickCapture: true})
        }},
      contextMenu: {phasedRegistrationNames: {
          bubbled: keyOf({onContextMenu: true}),
          captured: keyOf({onContextMenuCapture: true})
        }},
      copy: {phasedRegistrationNames: {
          bubbled: keyOf({onCopy: true}),
          captured: keyOf({onCopyCapture: true})
        }},
      cut: {phasedRegistrationNames: {
          bubbled: keyOf({onCut: true}),
          captured: keyOf({onCutCapture: true})
        }},
      doubleClick: {phasedRegistrationNames: {
          bubbled: keyOf({onDoubleClick: true}),
          captured: keyOf({onDoubleClickCapture: true})
        }},
      drag: {phasedRegistrationNames: {
          bubbled: keyOf({onDrag: true}),
          captured: keyOf({onDragCapture: true})
        }},
      dragEnd: {phasedRegistrationNames: {
          bubbled: keyOf({onDragEnd: true}),
          captured: keyOf({onDragEndCapture: true})
        }},
      dragEnter: {phasedRegistrationNames: {
          bubbled: keyOf({onDragEnter: true}),
          captured: keyOf({onDragEnterCapture: true})
        }},
      dragExit: {phasedRegistrationNames: {
          bubbled: keyOf({onDragExit: true}),
          captured: keyOf({onDragExitCapture: true})
        }},
      dragLeave: {phasedRegistrationNames: {
          bubbled: keyOf({onDragLeave: true}),
          captured: keyOf({onDragLeaveCapture: true})
        }},
      dragOver: {phasedRegistrationNames: {
          bubbled: keyOf({onDragOver: true}),
          captured: keyOf({onDragOverCapture: true})
        }},
      dragStart: {phasedRegistrationNames: {
          bubbled: keyOf({onDragStart: true}),
          captured: keyOf({onDragStartCapture: true})
        }},
      drop: {phasedRegistrationNames: {
          bubbled: keyOf({onDrop: true}),
          captured: keyOf({onDropCapture: true})
        }},
      durationChange: {phasedRegistrationNames: {
          bubbled: keyOf({onDurationChange: true}),
          captured: keyOf({onDurationChangeCapture: true})
        }},
      emptied: {phasedRegistrationNames: {
          bubbled: keyOf({onEmptied: true}),
          captured: keyOf({onEmptiedCapture: true})
        }},
      encrypted: {phasedRegistrationNames: {
          bubbled: keyOf({onEncrypted: true}),
          captured: keyOf({onEncryptedCapture: true})
        }},
      ended: {phasedRegistrationNames: {
          bubbled: keyOf({onEnded: true}),
          captured: keyOf({onEndedCapture: true})
        }},
      error: {phasedRegistrationNames: {
          bubbled: keyOf({onError: true}),
          captured: keyOf({onErrorCapture: true})
        }},
      focus: {phasedRegistrationNames: {
          bubbled: keyOf({onFocus: true}),
          captured: keyOf({onFocusCapture: true})
        }},
      input: {phasedRegistrationNames: {
          bubbled: keyOf({onInput: true}),
          captured: keyOf({onInputCapture: true})
        }},
      invalid: {phasedRegistrationNames: {
          bubbled: keyOf({onInvalid: true}),
          captured: keyOf({onInvalidCapture: true})
        }},
      keyDown: {phasedRegistrationNames: {
          bubbled: keyOf({onKeyDown: true}),
          captured: keyOf({onKeyDownCapture: true})
        }},
      keyPress: {phasedRegistrationNames: {
          bubbled: keyOf({onKeyPress: true}),
          captured: keyOf({onKeyPressCapture: true})
        }},
      keyUp: {phasedRegistrationNames: {
          bubbled: keyOf({onKeyUp: true}),
          captured: keyOf({onKeyUpCapture: true})
        }},
      load: {phasedRegistrationNames: {
          bubbled: keyOf({onLoad: true}),
          captured: keyOf({onLoadCapture: true})
        }},
      loadedData: {phasedRegistrationNames: {
          bubbled: keyOf({onLoadedData: true}),
          captured: keyOf({onLoadedDataCapture: true})
        }},
      loadedMetadata: {phasedRegistrationNames: {
          bubbled: keyOf({onLoadedMetadata: true}),
          captured: keyOf({onLoadedMetadataCapture: true})
        }},
      loadStart: {phasedRegistrationNames: {
          bubbled: keyOf({onLoadStart: true}),
          captured: keyOf({onLoadStartCapture: true})
        }},
      mouseDown: {phasedRegistrationNames: {
          bubbled: keyOf({onMouseDown: true}),
          captured: keyOf({onMouseDownCapture: true})
        }},
      mouseMove: {phasedRegistrationNames: {
          bubbled: keyOf({onMouseMove: true}),
          captured: keyOf({onMouseMoveCapture: true})
        }},
      mouseOut: {phasedRegistrationNames: {
          bubbled: keyOf({onMouseOut: true}),
          captured: keyOf({onMouseOutCapture: true})
        }},
      mouseOver: {phasedRegistrationNames: {
          bubbled: keyOf({onMouseOver: true}),
          captured: keyOf({onMouseOverCapture: true})
        }},
      mouseUp: {phasedRegistrationNames: {
          bubbled: keyOf({onMouseUp: true}),
          captured: keyOf({onMouseUpCapture: true})
        }},
      paste: {phasedRegistrationNames: {
          bubbled: keyOf({onPaste: true}),
          captured: keyOf({onPasteCapture: true})
        }},
      pause: {phasedRegistrationNames: {
          bubbled: keyOf({onPause: true}),
          captured: keyOf({onPauseCapture: true})
        }},
      play: {phasedRegistrationNames: {
          bubbled: keyOf({onPlay: true}),
          captured: keyOf({onPlayCapture: true})
        }},
      playing: {phasedRegistrationNames: {
          bubbled: keyOf({onPlaying: true}),
          captured: keyOf({onPlayingCapture: true})
        }},
      progress: {phasedRegistrationNames: {
          bubbled: keyOf({onProgress: true}),
          captured: keyOf({onProgressCapture: true})
        }},
      rateChange: {phasedRegistrationNames: {
          bubbled: keyOf({onRateChange: true}),
          captured: keyOf({onRateChangeCapture: true})
        }},
      reset: {phasedRegistrationNames: {
          bubbled: keyOf({onReset: true}),
          captured: keyOf({onResetCapture: true})
        }},
      scroll: {phasedRegistrationNames: {
          bubbled: keyOf({onScroll: true}),
          captured: keyOf({onScrollCapture: true})
        }},
      seeked: {phasedRegistrationNames: {
          bubbled: keyOf({onSeeked: true}),
          captured: keyOf({onSeekedCapture: true})
        }},
      seeking: {phasedRegistrationNames: {
          bubbled: keyOf({onSeeking: true}),
          captured: keyOf({onSeekingCapture: true})
        }},
      stalled: {phasedRegistrationNames: {
          bubbled: keyOf({onStalled: true}),
          captured: keyOf({onStalledCapture: true})
        }},
      submit: {phasedRegistrationNames: {
          bubbled: keyOf({onSubmit: true}),
          captured: keyOf({onSubmitCapture: true})
        }},
      suspend: {phasedRegistrationNames: {
          bubbled: keyOf({onSuspend: true}),
          captured: keyOf({onSuspendCapture: true})
        }},
      timeUpdate: {phasedRegistrationNames: {
          bubbled: keyOf({onTimeUpdate: true}),
          captured: keyOf({onTimeUpdateCapture: true})
        }},
      touchCancel: {phasedRegistrationNames: {
          bubbled: keyOf({onTouchCancel: true}),
          captured: keyOf({onTouchCancelCapture: true})
        }},
      touchEnd: {phasedRegistrationNames: {
          bubbled: keyOf({onTouchEnd: true}),
          captured: keyOf({onTouchEndCapture: true})
        }},
      touchMove: {phasedRegistrationNames: {
          bubbled: keyOf({onTouchMove: true}),
          captured: keyOf({onTouchMoveCapture: true})
        }},
      touchStart: {phasedRegistrationNames: {
          bubbled: keyOf({onTouchStart: true}),
          captured: keyOf({onTouchStartCapture: true})
        }},
      transitionEnd: {phasedRegistrationNames: {
          bubbled: keyOf({onTransitionEnd: true}),
          captured: keyOf({onTransitionEndCapture: true})
        }},
      volumeChange: {phasedRegistrationNames: {
          bubbled: keyOf({onVolumeChange: true}),
          captured: keyOf({onVolumeChangeCapture: true})
        }},
      waiting: {phasedRegistrationNames: {
          bubbled: keyOf({onWaiting: true}),
          captured: keyOf({onWaitingCapture: true})
        }},
      wheel: {phasedRegistrationNames: {
          bubbled: keyOf({onWheel: true}),
          captured: keyOf({onWheelCapture: true})
        }}
    };
    var topLevelEventsToDispatchConfig = {
      topAbort: eventTypes.abort,
      topAnimationEnd: eventTypes.animationEnd,
      topAnimationIteration: eventTypes.animationIteration,
      topAnimationStart: eventTypes.animationStart,
      topBlur: eventTypes.blur,
      topCanPlay: eventTypes.canPlay,
      topCanPlayThrough: eventTypes.canPlayThrough,
      topClick: eventTypes.click,
      topContextMenu: eventTypes.contextMenu,
      topCopy: eventTypes.copy,
      topCut: eventTypes.cut,
      topDoubleClick: eventTypes.doubleClick,
      topDrag: eventTypes.drag,
      topDragEnd: eventTypes.dragEnd,
      topDragEnter: eventTypes.dragEnter,
      topDragExit: eventTypes.dragExit,
      topDragLeave: eventTypes.dragLeave,
      topDragOver: eventTypes.dragOver,
      topDragStart: eventTypes.dragStart,
      topDrop: eventTypes.drop,
      topDurationChange: eventTypes.durationChange,
      topEmptied: eventTypes.emptied,
      topEncrypted: eventTypes.encrypted,
      topEnded: eventTypes.ended,
      topError: eventTypes.error,
      topFocus: eventTypes.focus,
      topInput: eventTypes.input,
      topInvalid: eventTypes.invalid,
      topKeyDown: eventTypes.keyDown,
      topKeyPress: eventTypes.keyPress,
      topKeyUp: eventTypes.keyUp,
      topLoad: eventTypes.load,
      topLoadedData: eventTypes.loadedData,
      topLoadedMetadata: eventTypes.loadedMetadata,
      topLoadStart: eventTypes.loadStart,
      topMouseDown: eventTypes.mouseDown,
      topMouseMove: eventTypes.mouseMove,
      topMouseOut: eventTypes.mouseOut,
      topMouseOver: eventTypes.mouseOver,
      topMouseUp: eventTypes.mouseUp,
      topPaste: eventTypes.paste,
      topPause: eventTypes.pause,
      topPlay: eventTypes.play,
      topPlaying: eventTypes.playing,
      topProgress: eventTypes.progress,
      topRateChange: eventTypes.rateChange,
      topReset: eventTypes.reset,
      topScroll: eventTypes.scroll,
      topSeeked: eventTypes.seeked,
      topSeeking: eventTypes.seeking,
      topStalled: eventTypes.stalled,
      topSubmit: eventTypes.submit,
      topSuspend: eventTypes.suspend,
      topTimeUpdate: eventTypes.timeUpdate,
      topTouchCancel: eventTypes.touchCancel,
      topTouchEnd: eventTypes.touchEnd,
      topTouchMove: eventTypes.touchMove,
      topTouchStart: eventTypes.touchStart,
      topTransitionEnd: eventTypes.transitionEnd,
      topVolumeChange: eventTypes.volumeChange,
      topWaiting: eventTypes.waiting,
      topWheel: eventTypes.wheel
    };
    for (var type in topLevelEventsToDispatchConfig) {
      topLevelEventsToDispatchConfig[type].dependencies = [type];
    }
    var ON_CLICK_KEY = keyOf({onClick: null});
    var onClickListeners = {};
    function getDictionaryKey(inst) {
      return '.' + inst._rootNodeID;
    }
    var SimpleEventPlugin = {
      eventTypes: eventTypes,
      extractEvents: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
        if (!dispatchConfig) {
          return null;
        }
        var EventConstructor;
        switch (topLevelType) {
          case topLevelTypes.topAbort:
          case topLevelTypes.topCanPlay:
          case topLevelTypes.topCanPlayThrough:
          case topLevelTypes.topDurationChange:
          case topLevelTypes.topEmptied:
          case topLevelTypes.topEncrypted:
          case topLevelTypes.topEnded:
          case topLevelTypes.topError:
          case topLevelTypes.topInput:
          case topLevelTypes.topInvalid:
          case topLevelTypes.topLoad:
          case topLevelTypes.topLoadedData:
          case topLevelTypes.topLoadedMetadata:
          case topLevelTypes.topLoadStart:
          case topLevelTypes.topPause:
          case topLevelTypes.topPlay:
          case topLevelTypes.topPlaying:
          case topLevelTypes.topProgress:
          case topLevelTypes.topRateChange:
          case topLevelTypes.topReset:
          case topLevelTypes.topSeeked:
          case topLevelTypes.topSeeking:
          case topLevelTypes.topStalled:
          case topLevelTypes.topSubmit:
          case topLevelTypes.topSuspend:
          case topLevelTypes.topTimeUpdate:
          case topLevelTypes.topVolumeChange:
          case topLevelTypes.topWaiting:
            EventConstructor = SyntheticEvent;
            break;
          case topLevelTypes.topKeyPress:
            if (getEventCharCode(nativeEvent) === 0) {
              return null;
            }
          case topLevelTypes.topKeyDown:
          case topLevelTypes.topKeyUp:
            EventConstructor = SyntheticKeyboardEvent;
            break;
          case topLevelTypes.topBlur:
          case topLevelTypes.topFocus:
            EventConstructor = SyntheticFocusEvent;
            break;
          case topLevelTypes.topClick:
            if (nativeEvent.button === 2) {
              return null;
            }
          case topLevelTypes.topContextMenu:
          case topLevelTypes.topDoubleClick:
          case topLevelTypes.topMouseDown:
          case topLevelTypes.topMouseMove:
          case topLevelTypes.topMouseOut:
          case topLevelTypes.topMouseOver:
          case topLevelTypes.topMouseUp:
            EventConstructor = SyntheticMouseEvent;
            break;
          case topLevelTypes.topDrag:
          case topLevelTypes.topDragEnd:
          case topLevelTypes.topDragEnter:
          case topLevelTypes.topDragExit:
          case topLevelTypes.topDragLeave:
          case topLevelTypes.topDragOver:
          case topLevelTypes.topDragStart:
          case topLevelTypes.topDrop:
            EventConstructor = SyntheticDragEvent;
            break;
          case topLevelTypes.topTouchCancel:
          case topLevelTypes.topTouchEnd:
          case topLevelTypes.topTouchMove:
          case topLevelTypes.topTouchStart:
            EventConstructor = SyntheticTouchEvent;
            break;
          case topLevelTypes.topAnimationEnd:
          case topLevelTypes.topAnimationIteration:
          case topLevelTypes.topAnimationStart:
            EventConstructor = SyntheticAnimationEvent;
            break;
          case topLevelTypes.topTransitionEnd:
            EventConstructor = SyntheticTransitionEvent;
            break;
          case topLevelTypes.topScroll:
            EventConstructor = SyntheticUIEvent;
            break;
          case topLevelTypes.topWheel:
            EventConstructor = SyntheticWheelEvent;
            break;
          case topLevelTypes.topCopy:
          case topLevelTypes.topCut:
          case topLevelTypes.topPaste:
            EventConstructor = SyntheticClipboardEvent;
            break;
        }
        !EventConstructor ? "production" !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
        var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      },
      didPutListener: function(inst, registrationName, listener) {
        if (registrationName === ON_CLICK_KEY) {
          var key = getDictionaryKey(inst);
          var node = ReactDOMComponentTree.getNodeFromInstance(inst);
          if (!onClickListeners[key]) {
            onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
          }
        }
      },
      willDeleteListener: function(inst, registrationName) {
        if (registrationName === ON_CLICK_KEY) {
          var key = getDictionaryKey(inst);
          onClickListeners[key].remove();
          delete onClickListeners[key];
        }
      }
    };
    module.exports = SimpleEventPlugin;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDefaultInjection.js", ["npm:react@15.3.0/lib/BeforeInputEventPlugin.js", "npm:react@15.3.0/lib/ChangeEventPlugin.js", "npm:react@15.3.0/lib/DefaultEventPluginOrder.js", "npm:react@15.3.0/lib/EnterLeaveEventPlugin.js", "npm:react@15.3.0/lib/HTMLDOMPropertyConfig.js", "npm:react@15.3.0/lib/ReactComponentBrowserEnvironment.js", "npm:react@15.3.0/lib/ReactDOMComponent.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactDOMEmptyComponent.js", "npm:react@15.3.0/lib/ReactDOMTreeTraversal.js", "npm:react@15.3.0/lib/ReactDOMTextComponent.js", "npm:react@15.3.0/lib/ReactDefaultBatchingStrategy.js", "npm:react@15.3.0/lib/ReactEventListener.js", "npm:react@15.3.0/lib/ReactInjection.js", "npm:react@15.3.0/lib/ReactReconcileTransaction.js", "npm:react@15.3.0/lib/SVGDOMPropertyConfig.js", "npm:react@15.3.0/lib/SelectEventPlugin.js", "npm:react@15.3.0/lib/SimpleEventPlugin.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var BeforeInputEventPlugin = $__require('npm:react@15.3.0/lib/BeforeInputEventPlugin.js');
  var ChangeEventPlugin = $__require('npm:react@15.3.0/lib/ChangeEventPlugin.js');
  var DefaultEventPluginOrder = $__require('npm:react@15.3.0/lib/DefaultEventPluginOrder.js');
  var EnterLeaveEventPlugin = $__require('npm:react@15.3.0/lib/EnterLeaveEventPlugin.js');
  var HTMLDOMPropertyConfig = $__require('npm:react@15.3.0/lib/HTMLDOMPropertyConfig.js');
  var ReactComponentBrowserEnvironment = $__require('npm:react@15.3.0/lib/ReactComponentBrowserEnvironment.js');
  var ReactDOMComponent = $__require('npm:react@15.3.0/lib/ReactDOMComponent.js');
  var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
  var ReactDOMEmptyComponent = $__require('npm:react@15.3.0/lib/ReactDOMEmptyComponent.js');
  var ReactDOMTreeTraversal = $__require('npm:react@15.3.0/lib/ReactDOMTreeTraversal.js');
  var ReactDOMTextComponent = $__require('npm:react@15.3.0/lib/ReactDOMTextComponent.js');
  var ReactDefaultBatchingStrategy = $__require('npm:react@15.3.0/lib/ReactDefaultBatchingStrategy.js');
  var ReactEventListener = $__require('npm:react@15.3.0/lib/ReactEventListener.js');
  var ReactInjection = $__require('npm:react@15.3.0/lib/ReactInjection.js');
  var ReactReconcileTransaction = $__require('npm:react@15.3.0/lib/ReactReconcileTransaction.js');
  var SVGDOMPropertyConfig = $__require('npm:react@15.3.0/lib/SVGDOMPropertyConfig.js');
  var SelectEventPlugin = $__require('npm:react@15.3.0/lib/SelectEventPlugin.js');
  var SimpleEventPlugin = $__require('npm:react@15.3.0/lib/SimpleEventPlugin.js');
  var alreadyInjected = false;
  function inject() {
    if (alreadyInjected) {
      return;
    }
    alreadyInjected = true;
    ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
    ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
    ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
    ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
    ReactInjection.EventPluginHub.injectEventPluginsByName({
      SimpleEventPlugin: SimpleEventPlugin,
      EnterLeaveEventPlugin: EnterLeaveEventPlugin,
      ChangeEventPlugin: ChangeEventPlugin,
      SelectEventPlugin: SelectEventPlugin,
      BeforeInputEventPlugin: BeforeInputEventPlugin
    });
    ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
    ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
    ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
    ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
    ReactInjection.EmptyComponent.injectEmptyComponentFactory(function(instantiate) {
      return new ReactDOMEmptyComponent(instantiate);
    });
    ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
    ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
    ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
  }
  module.exports = {inject: inject};
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/findDOMNode.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/ReactCurrentOwner.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactInstanceMap.js", "npm:react@15.3.0/lib/getHostComponentFromComposite.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var ReactCurrentOwner = $__require('npm:react@15.3.0/lib/ReactCurrentOwner.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactInstanceMap = $__require('npm:react@15.3.0/lib/ReactInstanceMap.js');
    var getHostComponentFromComposite = $__require('npm:react@15.3.0/lib/getHostComponentFromComposite.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    function findDOMNode(componentOrElement) {
      if ("production" !== 'production') {
        var owner = ReactCurrentOwner.current;
        if (owner !== null) {
          "production" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
          owner._warnedAboutRefsInRender = true;
        }
      }
      if (componentOrElement == null) {
        return null;
      }
      if (componentOrElement.nodeType === 1) {
        return componentOrElement;
      }
      var inst = ReactInstanceMap.get(componentOrElement);
      if (inst) {
        inst = getHostComponentFromComposite(inst);
        return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
      }
      if (typeof componentOrElement.render === 'function') {
        !false ? "production" !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
      } else {
        !false ? "production" !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
      }
    }
    module.exports = findDOMNode;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/getHostComponentFromComposite.js", ["npm:react@15.3.0/lib/ReactNodeTypes.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ReactNodeTypes = $__require('npm:react@15.3.0/lib/ReactNodeTypes.js');
  function getHostComponentFromComposite(inst) {
    var type;
    while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
      inst = inst._renderedComponent;
    }
    if (type === ReactNodeTypes.HOST) {
      return inst._renderedComponent;
    } else if (type === ReactNodeTypes.EMPTY) {
      return null;
    }
  }
  module.exports = getHostComponentFromComposite;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/escapeTextContentForBrowser.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var matchHtmlRegExp = /["'&<>]/;
  function escapeHtml(string) {
    var str = '' + string;
    var match = matchHtmlRegExp.exec(str);
    if (!match) {
      return str;
    }
    var escape;
    var html = '';
    var index = 0;
    var lastIndex = 0;
    for (index = match.index; index < str.length; index++) {
      switch (str.charCodeAt(index)) {
        case 34:
          escape = '&quot;';
          break;
        case 38:
          escape = '&amp;';
          break;
        case 39:
          escape = '&#x27;';
          break;
        case 60:
          escape = '&lt;';
          break;
        case 62:
          escape = '&gt;';
          break;
        default:
          continue;
      }
      if (lastIndex !== index) {
        html += str.substring(lastIndex, index);
      }
      lastIndex = index + 1;
      html += escape;
    }
    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
  }
  function escapeTextContentForBrowser(text) {
    if (typeof text === 'boolean' || typeof text === 'number') {
      return '' + text;
    }
    return escapeHtml(text);
  }
  module.exports = escapeTextContentForBrowser;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/setTextContent.js", ["npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "npm:react@15.3.0/lib/escapeTextContentForBrowser.js", "npm:react@15.3.0/lib/setInnerHTML.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
  var escapeTextContentForBrowser = $__require('npm:react@15.3.0/lib/escapeTextContentForBrowser.js');
  var setInnerHTML = $__require('npm:react@15.3.0/lib/setInnerHTML.js');
  var setTextContent = function(node, text) {
    if (text) {
      var firstChild = node.firstChild;
      if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
        firstChild.nodeValue = text;
        return;
      }
    }
    node.textContent = text;
  };
  if (ExecutionEnvironment.canUseDOM) {
    if (!('textContent' in document.documentElement)) {
      setTextContent = function(node, text) {
        setInnerHTML(node, escapeTextContentForBrowser(text));
      };
    }
  }
  module.exports = setTextContent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/DOMLazyTree.js", ["npm:react@15.3.0/lib/DOMNamespaces.js", "npm:react@15.3.0/lib/setInnerHTML.js", "npm:react@15.3.0/lib/createMicrosoftUnsafeLocalFunction.js", "npm:react@15.3.0/lib/setTextContent.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var DOMNamespaces = $__require('npm:react@15.3.0/lib/DOMNamespaces.js');
  var setInnerHTML = $__require('npm:react@15.3.0/lib/setInnerHTML.js');
  var createMicrosoftUnsafeLocalFunction = $__require('npm:react@15.3.0/lib/createMicrosoftUnsafeLocalFunction.js');
  var setTextContent = $__require('npm:react@15.3.0/lib/setTextContent.js');
  var ELEMENT_NODE_TYPE = 1;
  var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
  var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
  function insertTreeChildren(tree) {
    if (!enableLazy) {
      return;
    }
    var node = tree.node;
    var children = tree.children;
    if (children.length) {
      for (var i = 0; i < children.length; i++) {
        insertTreeBefore(node, children[i], null);
      }
    } else if (tree.html != null) {
      setInnerHTML(node, tree.html);
    } else if (tree.text != null) {
      setTextContent(node, tree.text);
    }
  }
  var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function(parentNode, tree, referenceNode) {
    if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
      insertTreeChildren(tree);
      parentNode.insertBefore(tree.node, referenceNode);
    } else {
      parentNode.insertBefore(tree.node, referenceNode);
      insertTreeChildren(tree);
    }
  });
  function replaceChildWithTree(oldNode, newTree) {
    oldNode.parentNode.replaceChild(newTree.node, oldNode);
    insertTreeChildren(newTree);
  }
  function queueChild(parentTree, childTree) {
    if (enableLazy) {
      parentTree.children.push(childTree);
    } else {
      parentTree.node.appendChild(childTree.node);
    }
  }
  function queueHTML(tree, html) {
    if (enableLazy) {
      tree.html = html;
    } else {
      setInnerHTML(tree.node, html);
    }
  }
  function queueText(tree, text) {
    if (enableLazy) {
      tree.text = text;
    } else {
      setTextContent(tree.node, text);
    }
  }
  function toString() {
    return this.node.nodeName;
  }
  function DOMLazyTree(node) {
    return {
      node: node,
      children: [],
      html: null,
      text: null,
      toString: toString
    };
  }
  DOMLazyTree.insertTreeBefore = insertTreeBefore;
  DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
  DOMLazyTree.queueChild = queueChild;
  DOMLazyTree.queueHTML = queueHTML;
  DOMLazyTree.queueText = queueText;
  module.exports = DOMLazyTree;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/EventPluginRegistry.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var EventPluginOrder = null;
    var namesToPlugins = {};
    function recomputePluginOrdering() {
      if (!EventPluginOrder) {
        return;
      }
      for (var pluginName in namesToPlugins) {
        var PluginModule = namesToPlugins[pluginName];
        var pluginIndex = EventPluginOrder.indexOf(pluginName);
        !(pluginIndex > -1) ? "production" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
        if (EventPluginRegistry.plugins[pluginIndex]) {
          continue;
        }
        !PluginModule.extractEvents ? "production" !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
        EventPluginRegistry.plugins[pluginIndex] = PluginModule;
        var publishedEvents = PluginModule.eventTypes;
        for (var eventName in publishedEvents) {
          !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? "production" !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
        }
      }
    }
    function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
      !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? "production" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
      EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
      if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
          if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
            var phasedRegistrationName = phasedRegistrationNames[phaseName];
            publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
          }
        }
        return true;
      } else if (dispatchConfig.registrationName) {
        publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
        return true;
      }
      return false;
    }
    function publishRegistrationName(registrationName, PluginModule, eventName) {
      !!EventPluginRegistry.registrationNameModules[registrationName] ? "production" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
      EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
      EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
      if ("production" !== 'production') {
        var lowerCasedName = registrationName.toLowerCase();
        EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
        if (registrationName === 'onDoubleClick') {
          EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
        }
      }
    }
    var EventPluginRegistry = {
      plugins: [],
      eventNameDispatchConfigs: {},
      registrationNameModules: {},
      registrationNameDependencies: {},
      possibleRegistrationNames: "production" !== 'production' ? {} : null,
      injectEventPluginOrder: function(InjectedEventPluginOrder) {
        !!EventPluginOrder ? "production" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
        EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
        recomputePluginOrdering();
      },
      injectEventPluginsByName: function(injectedNamesToPlugins) {
        var isOrderingDirty = false;
        for (var pluginName in injectedNamesToPlugins) {
          if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
            continue;
          }
          var PluginModule = injectedNamesToPlugins[pluginName];
          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
            !!namesToPlugins[pluginName] ? "production" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
            namesToPlugins[pluginName] = PluginModule;
            isOrderingDirty = true;
          }
        }
        if (isOrderingDirty) {
          recomputePluginOrdering();
        }
      },
      getPluginModuleForEvent: function(event) {
        var dispatchConfig = event.dispatchConfig;
        if (dispatchConfig.registrationName) {
          return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
        }
        for (var phase in dispatchConfig.phasedRegistrationNames) {
          if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
            continue;
          }
          var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
          if (PluginModule) {
            return PluginModule;
          }
        }
        return null;
      },
      _resetEventPlugins: function() {
        EventPluginOrder = null;
        for (var pluginName in namesToPlugins) {
          if (namesToPlugins.hasOwnProperty(pluginName)) {
            delete namesToPlugins[pluginName];
          }
        }
        EventPluginRegistry.plugins.length = 0;
        var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
        for (var eventName in eventNameDispatchConfigs) {
          if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
            delete eventNameDispatchConfigs[eventName];
          }
        }
        var registrationNameModules = EventPluginRegistry.registrationNameModules;
        for (var registrationName in registrationNameModules) {
          if (registrationNameModules.hasOwnProperty(registrationName)) {
            delete registrationNameModules[registrationName];
          }
        }
        if ("production" !== 'production') {
          var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
          for (var lowerCasedName in possibleRegistrationNames) {
            if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
              delete possibleRegistrationNames[lowerCasedName];
            }
          }
        }
      }
    };
    module.exports = EventPluginRegistry;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/EventConstants.js", ["npm:fbjs@0.8.3/lib/keyMirror.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var keyMirror = $__require('npm:fbjs@0.8.3/lib/keyMirror.js');
  var PropagationPhases = keyMirror({
    bubbled: null,
    captured: null
  });
  var topLevelTypes = keyMirror({
    topAbort: null,
    topAnimationEnd: null,
    topAnimationIteration: null,
    topAnimationStart: null,
    topBlur: null,
    topCanPlay: null,
    topCanPlayThrough: null,
    topChange: null,
    topClick: null,
    topCompositionEnd: null,
    topCompositionStart: null,
    topCompositionUpdate: null,
    topContextMenu: null,
    topCopy: null,
    topCut: null,
    topDoubleClick: null,
    topDrag: null,
    topDragEnd: null,
    topDragEnter: null,
    topDragExit: null,
    topDragLeave: null,
    topDragOver: null,
    topDragStart: null,
    topDrop: null,
    topDurationChange: null,
    topEmptied: null,
    topEncrypted: null,
    topEnded: null,
    topError: null,
    topFocus: null,
    topInput: null,
    topInvalid: null,
    topKeyDown: null,
    topKeyPress: null,
    topKeyUp: null,
    topLoad: null,
    topLoadedData: null,
    topLoadedMetadata: null,
    topLoadStart: null,
    topMouseDown: null,
    topMouseMove: null,
    topMouseOut: null,
    topMouseOver: null,
    topMouseUp: null,
    topPaste: null,
    topPause: null,
    topPlay: null,
    topPlaying: null,
    topProgress: null,
    topRateChange: null,
    topReset: null,
    topScroll: null,
    topSeeked: null,
    topSeeking: null,
    topSelectionChange: null,
    topStalled: null,
    topSubmit: null,
    topSuspend: null,
    topTextInput: null,
    topTimeUpdate: null,
    topTouchCancel: null,
    topTouchEnd: null,
    topTouchMove: null,
    topTouchStart: null,
    topTransitionEnd: null,
    topVolumeChange: null,
    topWaiting: null,
    topWheel: null
  });
  var EventConstants = {
    topLevelTypes: topLevelTypes,
    PropagationPhases: PropagationPhases
  };
  module.exports = EventConstants;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/EventPluginUtils.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/EventConstants.js", "npm:react@15.3.0/lib/ReactErrorUtils.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var EventConstants = $__require('npm:react@15.3.0/lib/EventConstants.js');
    var ReactErrorUtils = $__require('npm:react@15.3.0/lib/ReactErrorUtils.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var ComponentTree;
    var TreeTraversal;
    var injection = {
      injectComponentTree: function(Injected) {
        ComponentTree = Injected;
        if ("production" !== 'production') {
          "production" !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
        }
      },
      injectTreeTraversal: function(Injected) {
        TreeTraversal = Injected;
        if ("production" !== 'production') {
          "production" !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
        }
      }
    };
    var topLevelTypes = EventConstants.topLevelTypes;
    function isEndish(topLevelType) {
      return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
    }
    function isMoveish(topLevelType) {
      return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
    }
    function isStartish(topLevelType) {
      return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
    }
    var validateEventDispatches;
    if ("production" !== 'production') {
      validateEventDispatches = function(event) {
        var dispatchListeners = event._dispatchListeners;
        var dispatchInstances = event._dispatchInstances;
        var listenersIsArr = Array.isArray(dispatchListeners);
        var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
        var instancesIsArr = Array.isArray(dispatchInstances);
        var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
        "production" !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
      };
    }
    function executeDispatch(event, simulated, listener, inst) {
      var type = event.type || 'unknown-event';
      event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
      if (simulated) {
        ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
      } else {
        ReactErrorUtils.invokeGuardedCallback(type, listener, event);
      }
      event.currentTarget = null;
    }
    function executeDispatchesInOrder(event, simulated) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchInstances = event._dispatchInstances;
      if ("production" !== 'production') {
        validateEventDispatches(event);
      }
      if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length; i++) {
          if (event.isPropagationStopped()) {
            break;
          }
          executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
        }
      } else if (dispatchListeners) {
        executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
      }
      event._dispatchListeners = null;
      event._dispatchInstances = null;
    }
    function executeDispatchesInOrderStopAtTrueImpl(event) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchInstances = event._dispatchInstances;
      if ("production" !== 'production') {
        validateEventDispatches(event);
      }
      if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length; i++) {
          if (event.isPropagationStopped()) {
            break;
          }
          if (dispatchListeners[i](event, dispatchInstances[i])) {
            return dispatchInstances[i];
          }
        }
      } else if (dispatchListeners) {
        if (dispatchListeners(event, dispatchInstances)) {
          return dispatchInstances;
        }
      }
      return null;
    }
    function executeDispatchesInOrderStopAtTrue(event) {
      var ret = executeDispatchesInOrderStopAtTrueImpl(event);
      event._dispatchInstances = null;
      event._dispatchListeners = null;
      return ret;
    }
    function executeDirectDispatch(event) {
      if ("production" !== 'production') {
        validateEventDispatches(event);
      }
      var dispatchListener = event._dispatchListeners;
      var dispatchInstance = event._dispatchInstances;
      !!Array.isArray(dispatchListener) ? "production" !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
      event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
      var res = dispatchListener ? dispatchListener(event) : null;
      event.currentTarget = null;
      event._dispatchListeners = null;
      event._dispatchInstances = null;
      return res;
    }
    function hasDispatches(event) {
      return !!event._dispatchListeners;
    }
    var EventPluginUtils = {
      isEndish: isEndish,
      isMoveish: isMoveish,
      isStartish: isStartish,
      executeDirectDispatch: executeDirectDispatch,
      executeDispatchesInOrder: executeDispatchesInOrder,
      executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
      hasDispatches: hasDispatches,
      getInstanceFromNode: function(node) {
        return ComponentTree.getInstanceFromNode(node);
      },
      getNodeFromInstance: function(node) {
        return ComponentTree.getNodeFromInstance(node);
      },
      isAncestor: function(a, b) {
        return TreeTraversal.isAncestor(a, b);
      },
      getLowestCommonAncestor: function(a, b) {
        return TreeTraversal.getLowestCommonAncestor(a, b);
      },
      getParentInstance: function(inst) {
        return TreeTraversal.getParentInstance(inst);
      },
      traverseTwoPhase: function(target, fn, arg) {
        return TreeTraversal.traverseTwoPhase(target, fn, arg);
      },
      traverseEnterLeave: function(from, to, fn, argFrom, argTo) {
        return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
      },
      injection: injection
    };
    module.exports = EventPluginUtils;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/accumulateInto.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    function accumulateInto(current, next) {
      !(next != null) ? "production" !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
      if (current == null) {
        return next;
      }
      if (Array.isArray(current)) {
        if (Array.isArray(next)) {
          current.push.apply(current, next);
          return current;
        }
        current.push(next);
        return current;
      }
      if (Array.isArray(next)) {
        return [current].concat(next);
      }
      return [current, next];
    }
    module.exports = accumulateInto;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/forEachAccumulated.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function forEachAccumulated(arr, cb, scope) {
    if (Array.isArray(arr)) {
      arr.forEach(cb, scope);
    } else if (arr) {
      cb.call(scope, arr);
    }
  }
  module.exports = forEachAccumulated;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/EventPluginHub.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/EventPluginRegistry.js", "npm:react@15.3.0/lib/EventPluginUtils.js", "npm:react@15.3.0/lib/ReactErrorUtils.js", "npm:react@15.3.0/lib/accumulateInto.js", "npm:react@15.3.0/lib/forEachAccumulated.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var EventPluginRegistry = $__require('npm:react@15.3.0/lib/EventPluginRegistry.js');
    var EventPluginUtils = $__require('npm:react@15.3.0/lib/EventPluginUtils.js');
    var ReactErrorUtils = $__require('npm:react@15.3.0/lib/ReactErrorUtils.js');
    var accumulateInto = $__require('npm:react@15.3.0/lib/accumulateInto.js');
    var forEachAccumulated = $__require('npm:react@15.3.0/lib/forEachAccumulated.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var listenerBank = {};
    var eventQueue = null;
    var executeDispatchesAndRelease = function(event, simulated) {
      if (event) {
        EventPluginUtils.executeDispatchesInOrder(event, simulated);
        if (!event.isPersistent()) {
          event.constructor.release(event);
        }
      }
    };
    var executeDispatchesAndReleaseSimulated = function(e) {
      return executeDispatchesAndRelease(e, true);
    };
    var executeDispatchesAndReleaseTopLevel = function(e) {
      return executeDispatchesAndRelease(e, false);
    };
    var getDictionaryKey = function(inst) {
      return '.' + inst._rootNodeID;
    };
    var EventPluginHub = {
      injection: {
        injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
        injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
      },
      putListener: function(inst, registrationName, listener) {
        !(typeof listener === 'function') ? "production" !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
        var key = getDictionaryKey(inst);
        var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
        bankForRegistrationName[key] = listener;
        var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
        if (PluginModule && PluginModule.didPutListener) {
          PluginModule.didPutListener(inst, registrationName, listener);
        }
      },
      getListener: function(inst, registrationName) {
        var bankForRegistrationName = listenerBank[registrationName];
        var key = getDictionaryKey(inst);
        return bankForRegistrationName && bankForRegistrationName[key];
      },
      deleteListener: function(inst, registrationName) {
        var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
        if (PluginModule && PluginModule.willDeleteListener) {
          PluginModule.willDeleteListener(inst, registrationName);
        }
        var bankForRegistrationName = listenerBank[registrationName];
        if (bankForRegistrationName) {
          var key = getDictionaryKey(inst);
          delete bankForRegistrationName[key];
        }
      },
      deleteAllListeners: function(inst) {
        var key = getDictionaryKey(inst);
        for (var registrationName in listenerBank) {
          if (!listenerBank.hasOwnProperty(registrationName)) {
            continue;
          }
          if (!listenerBank[registrationName][key]) {
            continue;
          }
          var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
          if (PluginModule && PluginModule.willDeleteListener) {
            PluginModule.willDeleteListener(inst, registrationName);
          }
          delete listenerBank[registrationName][key];
        }
      },
      extractEvents: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var events;
        var plugins = EventPluginRegistry.plugins;
        for (var i = 0; i < plugins.length; i++) {
          var possiblePlugin = plugins[i];
          if (possiblePlugin) {
            var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
            if (extractedEvents) {
              events = accumulateInto(events, extractedEvents);
            }
          }
        }
        return events;
      },
      enqueueEvents: function(events) {
        if (events) {
          eventQueue = accumulateInto(eventQueue, events);
        }
      },
      processEventQueue: function(simulated) {
        var processingEventQueue = eventQueue;
        eventQueue = null;
        if (simulated) {
          forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
        } else {
          forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
        }
        !!eventQueue ? "production" !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
        ReactErrorUtils.rethrowCaughtError();
      },
      __purge: function() {
        listenerBank = {};
      },
      __getListenerBank: function() {
        return listenerBank;
      }
    };
    module.exports = EventPluginHub;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactEventEmitterMixin.js", ["npm:react@15.3.0/lib/EventPluginHub.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var EventPluginHub = $__require('npm:react@15.3.0/lib/EventPluginHub.js');
  function runEventQueueInBatch(events) {
    EventPluginHub.enqueueEvents(events);
    EventPluginHub.processEventQueue(false);
  }
  var ReactEventEmitterMixin = {handleTopLevel: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
      runEventQueueInBatch(events);
    }};
  module.exports = ReactEventEmitterMixin;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ViewportMetrics.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ViewportMetrics = {
    currentScrollLeft: 0,
    currentScrollTop: 0,
    refreshScrollValues: function(scrollPosition) {
      ViewportMetrics.currentScrollLeft = scrollPosition.x;
      ViewportMetrics.currentScrollTop = scrollPosition.y;
    }
  };
  module.exports = ViewportMetrics;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/getVendorPrefixedEventName.js", ["npm:fbjs@0.8.3/lib/ExecutionEnvironment.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
  function makePrefixMap(styleProp, eventName) {
    var prefixes = {};
    prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
    prefixes['Webkit' + styleProp] = 'webkit' + eventName;
    prefixes['Moz' + styleProp] = 'moz' + eventName;
    prefixes['ms' + styleProp] = 'MS' + eventName;
    prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
    return prefixes;
  }
  var vendorPrefixes = {
    animationend: makePrefixMap('Animation', 'AnimationEnd'),
    animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
    animationstart: makePrefixMap('Animation', 'AnimationStart'),
    transitionend: makePrefixMap('Transition', 'TransitionEnd')
  };
  var prefixedEventNames = {};
  var style = {};
  if (ExecutionEnvironment.canUseDOM) {
    style = document.createElement('div').style;
    if (!('AnimationEvent' in window)) {
      delete vendorPrefixes.animationend.animation;
      delete vendorPrefixes.animationiteration.animation;
      delete vendorPrefixes.animationstart.animation;
    }
    if (!('TransitionEvent' in window)) {
      delete vendorPrefixes.transitionend.transition;
    }
  }
  function getVendorPrefixedEventName(eventName) {
    if (prefixedEventNames[eventName]) {
      return prefixedEventNames[eventName];
    } else if (!vendorPrefixes[eventName]) {
      return eventName;
    }
    var prefixMap = vendorPrefixes[eventName];
    for (var styleProp in prefixMap) {
      if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
        return prefixedEventNames[eventName] = prefixMap[styleProp];
      }
    }
    return '';
  }
  module.exports = getVendorPrefixedEventName;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/isEventSupported.js", ["npm:fbjs@0.8.3/lib/ExecutionEnvironment.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
  var useHasFeature;
  if (ExecutionEnvironment.canUseDOM) {
    useHasFeature = document.implementation && document.implementation.hasFeature && document.implementation.hasFeature('', '') !== true;
  }
  function isEventSupported(eventNameSuffix, capture) {
    if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
      return false;
    }
    var eventName = 'on' + eventNameSuffix;
    var isSupported = eventName in document;
    if (!isSupported) {
      var element = document.createElement('div');
      element.setAttribute(eventName, 'return;');
      isSupported = typeof element[eventName] === 'function';
    }
    if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
      isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
    }
    return isSupported;
  }
  module.exports = isEventSupported;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactBrowserEventEmitter.js", ["npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/EventConstants.js", "npm:react@15.3.0/lib/EventPluginRegistry.js", "npm:react@15.3.0/lib/ReactEventEmitterMixin.js", "npm:react@15.3.0/lib/ViewportMetrics.js", "npm:react@15.3.0/lib/getVendorPrefixedEventName.js", "npm:react@15.3.0/lib/isEventSupported.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _assign = $__require('npm:object-assign@4.1.0.js');
    var EventConstants = $__require('npm:react@15.3.0/lib/EventConstants.js');
    var EventPluginRegistry = $__require('npm:react@15.3.0/lib/EventPluginRegistry.js');
    var ReactEventEmitterMixin = $__require('npm:react@15.3.0/lib/ReactEventEmitterMixin.js');
    var ViewportMetrics = $__require('npm:react@15.3.0/lib/ViewportMetrics.js');
    var getVendorPrefixedEventName = $__require('npm:react@15.3.0/lib/getVendorPrefixedEventName.js');
    var isEventSupported = $__require('npm:react@15.3.0/lib/isEventSupported.js');
    var hasEventPageXY;
    var alreadyListeningTo = {};
    var isMonitoringScrollValue = false;
    var reactTopListenersCounter = 0;
    var topEventMapping = {
      topAbort: 'abort',
      topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
      topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
      topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
      topBlur: 'blur',
      topCanPlay: 'canplay',
      topCanPlayThrough: 'canplaythrough',
      topChange: 'change',
      topClick: 'click',
      topCompositionEnd: 'compositionend',
      topCompositionStart: 'compositionstart',
      topCompositionUpdate: 'compositionupdate',
      topContextMenu: 'contextmenu',
      topCopy: 'copy',
      topCut: 'cut',
      topDoubleClick: 'dblclick',
      topDrag: 'drag',
      topDragEnd: 'dragend',
      topDragEnter: 'dragenter',
      topDragExit: 'dragexit',
      topDragLeave: 'dragleave',
      topDragOver: 'dragover',
      topDragStart: 'dragstart',
      topDrop: 'drop',
      topDurationChange: 'durationchange',
      topEmptied: 'emptied',
      topEncrypted: 'encrypted',
      topEnded: 'ended',
      topError: 'error',
      topFocus: 'focus',
      topInput: 'input',
      topKeyDown: 'keydown',
      topKeyPress: 'keypress',
      topKeyUp: 'keyup',
      topLoadedData: 'loadeddata',
      topLoadedMetadata: 'loadedmetadata',
      topLoadStart: 'loadstart',
      topMouseDown: 'mousedown',
      topMouseMove: 'mousemove',
      topMouseOut: 'mouseout',
      topMouseOver: 'mouseover',
      topMouseUp: 'mouseup',
      topPaste: 'paste',
      topPause: 'pause',
      topPlay: 'play',
      topPlaying: 'playing',
      topProgress: 'progress',
      topRateChange: 'ratechange',
      topScroll: 'scroll',
      topSeeked: 'seeked',
      topSeeking: 'seeking',
      topSelectionChange: 'selectionchange',
      topStalled: 'stalled',
      topSuspend: 'suspend',
      topTextInput: 'textInput',
      topTimeUpdate: 'timeupdate',
      topTouchCancel: 'touchcancel',
      topTouchEnd: 'touchend',
      topTouchMove: 'touchmove',
      topTouchStart: 'touchstart',
      topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
      topVolumeChange: 'volumechange',
      topWaiting: 'waiting',
      topWheel: 'wheel'
    };
    var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
    function getListeningForDocument(mountAt) {
      if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
        mountAt[topListenersIDKey] = reactTopListenersCounter++;
        alreadyListeningTo[mountAt[topListenersIDKey]] = {};
      }
      return alreadyListeningTo[mountAt[topListenersIDKey]];
    }
    var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
      ReactEventListener: null,
      injection: {injectReactEventListener: function(ReactEventListener) {
          ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
          ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
        }},
      setEnabled: function(enabled) {
        if (ReactBrowserEventEmitter.ReactEventListener) {
          ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
        }
      },
      isEnabled: function() {
        return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
      },
      listenTo: function(registrationName, contentDocumentHandle) {
        var mountAt = contentDocumentHandle;
        var isListening = getListeningForDocument(mountAt);
        var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
        var topLevelTypes = EventConstants.topLevelTypes;
        for (var i = 0; i < dependencies.length; i++) {
          var dependency = dependencies[i];
          if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
            if (dependency === topLevelTypes.topWheel) {
              if (isEventSupported('wheel')) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
              } else if (isEventSupported('mousewheel')) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
              } else {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
              }
            } else if (dependency === topLevelTypes.topScroll) {
              if (isEventSupported('scroll', true)) {
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
              } else {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
              }
            } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
              if (isEventSupported('focus', true)) {
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
              } else if (isEventSupported('focusin')) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
              }
              isListening[topLevelTypes.topBlur] = true;
              isListening[topLevelTypes.topFocus] = true;
            } else if (topEventMapping.hasOwnProperty(dependency)) {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
            }
            isListening[dependency] = true;
          }
        }
      },
      trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
        return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
      },
      trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
        return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
      },
      ensureScrollValueMonitoring: function() {
        if (hasEventPageXY === undefined) {
          hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
        }
        if (!hasEventPageXY && !isMonitoringScrollValue) {
          var refresh = ViewportMetrics.refreshScrollValues;
          ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
          isMonitoringScrollValue = true;
        }
      }
    });
    module.exports = ReactBrowserEventEmitter;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/DOMProperty.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    function checkMask(value, bitmask) {
      return (value & bitmask) === bitmask;
    }
    var DOMPropertyInjection = {
      MUST_USE_PROPERTY: 0x1,
      HAS_BOOLEAN_VALUE: 0x4,
      HAS_NUMERIC_VALUE: 0x8,
      HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
      HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
      injectDOMPropertyConfig: function(domPropertyConfig) {
        var Injection = DOMPropertyInjection;
        var Properties = domPropertyConfig.Properties || {};
        var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
        var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
        var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
        var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
        if (domPropertyConfig.isCustomAttribute) {
          DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
        }
        for (var propName in Properties) {
          !!DOMProperty.properties.hasOwnProperty(propName) ? "production" !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
          var lowerCased = propName.toLowerCase();
          var propConfig = Properties[propName];
          var propertyInfo = {
            attributeName: lowerCased,
            attributeNamespace: null,
            propertyName: propName,
            mutationMethod: null,
            mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
            hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
            hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
            hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
            hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
          };
          !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? "production" !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
          if ("production" !== 'production') {
            DOMProperty.getPossibleStandardName[lowerCased] = propName;
          }
          if (DOMAttributeNames.hasOwnProperty(propName)) {
            var attributeName = DOMAttributeNames[propName];
            propertyInfo.attributeName = attributeName;
            if ("production" !== 'production') {
              DOMProperty.getPossibleStandardName[attributeName] = propName;
            }
          }
          if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
            propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
          }
          if (DOMPropertyNames.hasOwnProperty(propName)) {
            propertyInfo.propertyName = DOMPropertyNames[propName];
          }
          if (DOMMutationMethods.hasOwnProperty(propName)) {
            propertyInfo.mutationMethod = DOMMutationMethods[propName];
          }
          DOMProperty.properties[propName] = propertyInfo;
        }
      }
    };
    var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
    var DOMProperty = {
      ID_ATTRIBUTE_NAME: 'data-reactid',
      ROOT_ATTRIBUTE_NAME: 'data-reactroot',
      ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
      ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
      properties: {},
      getPossibleStandardName: "production" !== 'production' ? {} : null,
      _isCustomAttributeFunctions: [],
      isCustomAttribute: function(attributeName) {
        for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
          var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
          if (isCustomAttributeFn(attributeName)) {
            return true;
          }
        }
        return false;
      },
      injection: DOMPropertyInjection
    };
    module.exports = DOMProperty;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMComponentFlags.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ReactDOMComponentFlags = {hasCachedChildNodes: 1 << 0};
  module.exports = ReactDOMComponentFlags;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMComponentTree.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/DOMProperty.js", "npm:react@15.3.0/lib/ReactDOMComponentFlags.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var DOMProperty = $__require('npm:react@15.3.0/lib/DOMProperty.js');
    var ReactDOMComponentFlags = $__require('npm:react@15.3.0/lib/ReactDOMComponentFlags.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
    var Flags = ReactDOMComponentFlags;
    var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
    function getRenderedHostOrTextFromComponent(component) {
      var rendered;
      while (rendered = component._renderedComponent) {
        component = rendered;
      }
      return component;
    }
    function precacheNode(inst, node) {
      var hostInst = getRenderedHostOrTextFromComponent(inst);
      hostInst._hostNode = node;
      node[internalInstanceKey] = hostInst;
    }
    function uncacheNode(inst) {
      var node = inst._hostNode;
      if (node) {
        delete node[internalInstanceKey];
        inst._hostNode = null;
      }
    }
    function precacheChildNodes(inst, node) {
      if (inst._flags & Flags.hasCachedChildNodes) {
        return;
      }
      var children = inst._renderedChildren;
      var childNode = node.firstChild;
      outer: for (var name in children) {
        if (!children.hasOwnProperty(name)) {
          continue;
        }
        var childInst = children[name];
        var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
        if (childID == null) {
          continue;
        }
        for (; childNode !== null; childNode = childNode.nextSibling) {
          if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
            precacheNode(childInst, childNode);
            continue outer;
          }
        }
        !false ? "production" !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
      }
      inst._flags |= Flags.hasCachedChildNodes;
    }
    function getClosestInstanceFromNode(node) {
      if (node[internalInstanceKey]) {
        return node[internalInstanceKey];
      }
      var parents = [];
      while (!node[internalInstanceKey]) {
        parents.push(node);
        if (node.parentNode) {
          node = node.parentNode;
        } else {
          return null;
        }
      }
      var closest;
      var inst;
      for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
        closest = inst;
        if (parents.length) {
          precacheChildNodes(inst, node);
        }
      }
      return closest;
    }
    function getInstanceFromNode(node) {
      var inst = getClosestInstanceFromNode(node);
      if (inst != null && inst._hostNode === node) {
        return inst;
      } else {
        return null;
      }
    }
    function getNodeFromInstance(inst) {
      !(inst._hostNode !== undefined) ? "production" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
      if (inst._hostNode) {
        return inst._hostNode;
      }
      var parents = [];
      while (!inst._hostNode) {
        parents.push(inst);
        !inst._hostParent ? "production" !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
        inst = inst._hostParent;
      }
      for (; parents.length; inst = parents.pop()) {
        precacheChildNodes(inst, inst._hostNode);
      }
      return inst._hostNode;
    }
    var ReactDOMComponentTree = {
      getClosestInstanceFromNode: getClosestInstanceFromNode,
      getInstanceFromNode: getInstanceFromNode,
      getNodeFromInstance: getNodeFromInstance,
      precacheChildNodes: precacheChildNodes,
      precacheNode: precacheNode,
      uncacheNode: uncacheNode
    };
    module.exports = ReactDOMComponentTree;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/validateDOMNesting.js", ["npm:object-assign@4.1.0.js", "npm:fbjs@0.8.3/lib/emptyFunction.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _assign = $__require('npm:object-assign@4.1.0.js');
    var emptyFunction = $__require('npm:fbjs@0.8.3/lib/emptyFunction.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var validateDOMNesting = emptyFunction;
    if ("production" !== 'production') {
      var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
      var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', 'foreignObject', 'desc', 'title'];
      var buttonScopeTags = inScopeTags.concat(['button']);
      var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
      var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };
      var updatedAncestorInfo = function(oldInfo, tag, instance) {
        var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
        var info = {
          tag: tag,
          instance: instance
        };
        if (inScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.aTagInScope = null;
          ancestorInfo.buttonTagInScope = null;
          ancestorInfo.nobrTagInScope = null;
        }
        if (buttonScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.pTagInButtonScope = null;
        }
        if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
          ancestorInfo.listItemTagAutoclosing = null;
          ancestorInfo.dlItemTagAutoclosing = null;
        }
        ancestorInfo.current = info;
        if (tag === 'form') {
          ancestorInfo.formTag = info;
        }
        if (tag === 'a') {
          ancestorInfo.aTagInScope = info;
        }
        if (tag === 'button') {
          ancestorInfo.buttonTagInScope = info;
        }
        if (tag === 'nobr') {
          ancestorInfo.nobrTagInScope = info;
        }
        if (tag === 'p') {
          ancestorInfo.pTagInButtonScope = info;
        }
        if (tag === 'li') {
          ancestorInfo.listItemTagAutoclosing = info;
        }
        if (tag === 'dd' || tag === 'dt') {
          ancestorInfo.dlItemTagAutoclosing = info;
        }
        return ancestorInfo;
      };
      var isTagValidWithParent = function(tag, parentTag) {
        switch (parentTag) {
          case 'select':
            return tag === 'option' || tag === 'optgroup' || tag === '#text';
          case 'optgroup':
            return tag === 'option' || tag === '#text';
          case 'option':
            return tag === '#text';
          case 'tr':
            return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'tbody':
          case 'thead':
          case 'tfoot':
            return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'colgroup':
            return tag === 'col' || tag === 'template';
          case 'table':
            return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'head':
            return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'html':
            return tag === 'head' || tag === 'body';
          case '#document':
            return tag === 'html';
        }
        switch (tag) {
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
          case 'rp':
          case 'rt':
            return impliedEndTags.indexOf(parentTag) === -1;
          case 'body':
          case 'caption':
          case 'col':
          case 'colgroup':
          case 'frame':
          case 'head':
          case 'html':
          case 'tbody':
          case 'td':
          case 'tfoot':
          case 'th':
          case 'thead':
          case 'tr':
            return parentTag == null;
        }
        return true;
      };
      var findInvalidAncestorForTag = function(tag, ancestorInfo) {
        switch (tag) {
          case 'address':
          case 'article':
          case 'aside':
          case 'blockquote':
          case 'center':
          case 'details':
          case 'dialog':
          case 'dir':
          case 'div':
          case 'dl':
          case 'fieldset':
          case 'figcaption':
          case 'figure':
          case 'footer':
          case 'header':
          case 'hgroup':
          case 'main':
          case 'menu':
          case 'nav':
          case 'ol':
          case 'p':
          case 'section':
          case 'summary':
          case 'ul':
          case 'pre':
          case 'listing':
          case 'table':
          case 'hr':
          case 'xmp':
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return ancestorInfo.pTagInButtonScope;
          case 'form':
            return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
          case 'li':
            return ancestorInfo.listItemTagAutoclosing;
          case 'dd':
          case 'dt':
            return ancestorInfo.dlItemTagAutoclosing;
          case 'button':
            return ancestorInfo.buttonTagInScope;
          case 'a':
            return ancestorInfo.aTagInScope;
          case 'nobr':
            return ancestorInfo.nobrTagInScope;
        }
        return null;
      };
      var findOwnerStack = function(instance) {
        if (!instance) {
          return [];
        }
        var stack = [];
        do {
          stack.push(instance);
        } while (instance = instance._currentElement._owner);
        stack.reverse();
        return stack;
      };
      var didWarn = {};
      validateDOMNesting = function(childTag, childInstance, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var problematic = invalidParent || invalidAncestor;
        if (problematic) {
          var ancestorTag = problematic.tag;
          var ancestorInstance = problematic.instance;
          var childOwner = childInstance && childInstance._currentElement._owner;
          var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
          var childOwners = findOwnerStack(childOwner);
          var ancestorOwners = findOwnerStack(ancestorOwner);
          var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
          var i;
          var deepestCommon = -1;
          for (i = 0; i < minStackLen; i++) {
            if (childOwners[i] === ancestorOwners[i]) {
              deepestCommon = i;
            } else {
              break;
            }
          }
          var UNKNOWN = '(unknown)';
          var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function(inst) {
            return inst.getName() || UNKNOWN;
          });
          var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function(inst) {
            return inst.getName() || UNKNOWN;
          });
          var ownerInfo = [].concat(deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag, invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
          var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
          if (didWarn[warnKey]) {
            return;
          }
          didWarn[warnKey] = true;
          var tagDisplayName = childTag;
          if (childTag !== '#text') {
            tagDisplayName = '<' + childTag + '>';
          }
          if (invalidParent) {
            var info = '';
            if (ancestorTag === 'table' && childTag === 'tr') {
              info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
            }
            "production" !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
          } else {
            "production" !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
          }
        }
      };
      validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
      validateDOMNesting.isTagValidInContext = function(tag, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
      };
    }
    module.exports = validateDOMNesting;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMContainerInfo.js", ["npm:react@15.3.0/lib/validateDOMNesting.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var validateDOMNesting = $__require('npm:react@15.3.0/lib/validateDOMNesting.js');
    var DOC_NODE_TYPE = 9;
    function ReactDOMContainerInfo(topLevelWrapper, node) {
      var info = {
        _topLevelWrapper: topLevelWrapper,
        _idCounter: 1,
        _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
        _node: node,
        _tag: node ? node.nodeName.toLowerCase() : null,
        _namespaceURI: node ? node.namespaceURI : null
      };
      if ("production" !== 'production') {
        info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
      }
      return info;
    }
    module.exports = ReactDOMContainerInfo;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMFeatureFlags.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ReactDOMFeatureFlags = {useCreateElement: true};
  module.exports = ReactDOMFeatureFlags;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/adler32.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var MOD = 65521;
  function adler32(data) {
    var a = 1;
    var b = 0;
    var i = 0;
    var l = data.length;
    var m = l & ~0x3;
    while (i < m) {
      var n = Math.min(i + 4096, m);
      for (; i < n; i += 4) {
        b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
      }
      a %= MOD;
      b %= MOD;
    }
    for (; i < l; i++) {
      b += a += data.charCodeAt(i);
    }
    a %= MOD;
    b %= MOD;
    return a | b << 16;
  }
  module.exports = adler32;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactMarkupChecksum.js", ["npm:react@15.3.0/lib/adler32.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var adler32 = $__require('npm:react@15.3.0/lib/adler32.js');
  var TAG_END = /\/?>/;
  var COMMENT_START = /^<\!\-\-/;
  var ReactMarkupChecksum = {
    CHECKSUM_ATTR_NAME: 'data-react-checksum',
    addChecksumToMarkup: function(markup) {
      var checksum = adler32(markup);
      if (COMMENT_START.test(markup)) {
        return markup;
      } else {
        return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
      }
    },
    canReuseMarkup: function(markup, element) {
      var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
      existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
      var markupChecksum = adler32(markup);
      return markupChecksum === existingChecksum;
    }
  };
  module.exports = ReactMarkupChecksum;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactUpdateQueue.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/ReactCurrentOwner.js", "npm:react@15.3.0/lib/ReactInstanceMap.js", "npm:react@15.3.0/lib/ReactInstrumentation.js", "npm:react@15.3.0/lib/ReactUpdates.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var ReactCurrentOwner = $__require('npm:react@15.3.0/lib/ReactCurrentOwner.js');
    var ReactInstanceMap = $__require('npm:react@15.3.0/lib/ReactInstanceMap.js');
    var ReactInstrumentation = $__require('npm:react@15.3.0/lib/ReactInstrumentation.js');
    var ReactUpdates = $__require('npm:react@15.3.0/lib/ReactUpdates.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    function enqueueUpdate(internalInstance) {
      ReactUpdates.enqueueUpdate(internalInstance);
    }
    function formatUnexpectedArgument(arg) {
      var type = typeof arg;
      if (type !== 'object') {
        return type;
      }
      var displayName = arg.constructor && arg.constructor.name || type;
      var keys = Object.keys(arg);
      if (keys.length > 0 && keys.length < 20) {
        return displayName + ' (keys: ' + keys.join(', ') + ')';
      }
      return displayName;
    }
    function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
      var internalInstance = ReactInstanceMap.get(publicInstance);
      if (!internalInstance) {
        if ("production" !== 'production') {
          var ctor = publicInstance.constructor;
          "production" !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
        }
        return null;
      }
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
      }
      return internalInstance;
    }
    var ReactUpdateQueue = {
      isMounted: function(publicInstance) {
        if ("production" !== 'production') {
          var owner = ReactCurrentOwner.current;
          if (owner !== null) {
            "production" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
            owner._warnedAboutRefsInRender = true;
          }
        }
        var internalInstance = ReactInstanceMap.get(publicInstance);
        if (internalInstance) {
          return !!internalInstance._renderedComponent;
        } else {
          return false;
        }
      },
      enqueueCallback: function(publicInstance, callback, callerName) {
        ReactUpdateQueue.validateCallback(callback, callerName);
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
        if (!internalInstance) {
          return null;
        }
        if (internalInstance._pendingCallbacks) {
          internalInstance._pendingCallbacks.push(callback);
        } else {
          internalInstance._pendingCallbacks = [callback];
        }
        enqueueUpdate(internalInstance);
      },
      enqueueCallbackInternal: function(internalInstance, callback) {
        if (internalInstance._pendingCallbacks) {
          internalInstance._pendingCallbacks.push(callback);
        } else {
          internalInstance._pendingCallbacks = [callback];
        }
        enqueueUpdate(internalInstance);
      },
      enqueueForceUpdate: function(publicInstance) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
        if (!internalInstance) {
          return;
        }
        internalInstance._pendingForceUpdate = true;
        enqueueUpdate(internalInstance);
      },
      enqueueReplaceState: function(publicInstance, completeState) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
        if (!internalInstance) {
          return;
        }
        internalInstance._pendingStateQueue = [completeState];
        internalInstance._pendingReplaceState = true;
        enqueueUpdate(internalInstance);
      },
      enqueueSetState: function(publicInstance, partialState) {
        if ("production" !== 'production') {
          ReactInstrumentation.debugTool.onSetState();
          "production" !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
        }
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
        if (!internalInstance) {
          return;
        }
        var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
        queue.push(partialState);
        enqueueUpdate(internalInstance);
      },
      enqueueElementInternal: function(internalInstance, nextElement, nextContext) {
        internalInstance._pendingElement = nextElement;
        internalInstance._context = nextContext;
        enqueueUpdate(internalInstance);
      },
      validateCallback: function(callback, callerName) {
        !(!callback || typeof callback === 'function') ? "production" !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
      }
    };
    module.exports = ReactUpdateQueue;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/CallbackQueue.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/PooledClass.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.0.js');
    var PooledClass = $__require('npm:react@15.3.0/lib/PooledClass.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    function CallbackQueue() {
      this._callbacks = null;
      this._contexts = null;
    }
    _assign(CallbackQueue.prototype, {
      enqueue: function(callback, context) {
        this._callbacks = this._callbacks || [];
        this._contexts = this._contexts || [];
        this._callbacks.push(callback);
        this._contexts.push(context);
      },
      notifyAll: function() {
        var callbacks = this._callbacks;
        var contexts = this._contexts;
        if (callbacks) {
          !(callbacks.length === contexts.length) ? "production" !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
          this._callbacks = null;
          this._contexts = null;
          for (var i = 0; i < callbacks.length; i++) {
            callbacks[i].call(contexts[i]);
          }
          callbacks.length = 0;
          contexts.length = 0;
        }
      },
      checkpoint: function() {
        return this._callbacks ? this._callbacks.length : 0;
      },
      rollback: function(len) {
        if (this._callbacks) {
          this._callbacks.length = len;
          this._contexts.length = len;
        }
      },
      reset: function() {
        this._callbacks = null;
        this._contexts = null;
      },
      destructor: function() {
        this.reset();
      }
    });
    PooledClass.addPoolingTo(CallbackQueue);
    module.exports = CallbackQueue;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactFeatureFlags.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ReactFeatureFlags = {logTopLevelRenders: false};
  module.exports = ReactFeatureFlags;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/Transaction.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var Mixin = {
      reinitializeTransaction: function() {
        this.transactionWrappers = this.getTransactionWrappers();
        if (this.wrapperInitData) {
          this.wrapperInitData.length = 0;
        } else {
          this.wrapperInitData = [];
        }
        this._isInTransaction = false;
      },
      _isInTransaction: false,
      getTransactionWrappers: null,
      isInTransaction: function() {
        return !!this._isInTransaction;
      },
      perform: function(method, scope, a, b, c, d, e, f) {
        !!this.isInTransaction() ? "production" !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
        var errorThrown;
        var ret;
        try {
          this._isInTransaction = true;
          errorThrown = true;
          this.initializeAll(0);
          ret = method.call(scope, a, b, c, d, e, f);
          errorThrown = false;
        } finally {
          try {
            if (errorThrown) {
              try {
                this.closeAll(0);
              } catch (err) {}
            } else {
              this.closeAll(0);
            }
          } finally {
            this._isInTransaction = false;
          }
        }
        return ret;
      },
      initializeAll: function(startIndex) {
        var transactionWrappers = this.transactionWrappers;
        for (var i = startIndex; i < transactionWrappers.length; i++) {
          var wrapper = transactionWrappers[i];
          try {
            this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
            this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
          } finally {
            if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
              try {
                this.initializeAll(i + 1);
              } catch (err) {}
            }
          }
        }
      },
      closeAll: function(startIndex) {
        !this.isInTransaction() ? "production" !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
        var transactionWrappers = this.transactionWrappers;
        for (var i = startIndex; i < transactionWrappers.length; i++) {
          var wrapper = transactionWrappers[i];
          var initData = this.wrapperInitData[i];
          var errorThrown;
          try {
            errorThrown = true;
            if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
              wrapper.close.call(this, initData);
            }
            errorThrown = false;
          } finally {
            if (errorThrown) {
              try {
                this.closeAll(i + 1);
              } catch (e) {}
            }
          }
        }
        this.wrapperInitData.length = 0;
      }
    };
    var Transaction = {
      Mixin: Mixin,
      OBSERVED_ERROR: {}
    };
    module.exports = Transaction;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactUpdates.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/CallbackQueue.js", "npm:react@15.3.0/lib/PooledClass.js", "npm:react@15.3.0/lib/ReactFeatureFlags.js", "npm:react@15.3.0/lib/ReactReconciler.js", "npm:react@15.3.0/lib/Transaction.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.0.js');
    var CallbackQueue = $__require('npm:react@15.3.0/lib/CallbackQueue.js');
    var PooledClass = $__require('npm:react@15.3.0/lib/PooledClass.js');
    var ReactFeatureFlags = $__require('npm:react@15.3.0/lib/ReactFeatureFlags.js');
    var ReactReconciler = $__require('npm:react@15.3.0/lib/ReactReconciler.js');
    var Transaction = $__require('npm:react@15.3.0/lib/Transaction.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var dirtyComponents = [];
    var updateBatchNumber = 0;
    var asapCallbackQueue = CallbackQueue.getPooled();
    var asapEnqueued = false;
    var batchingStrategy = null;
    function ensureInjected() {
      !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? "production" !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
    }
    var NESTED_UPDATES = {
      initialize: function() {
        this.dirtyComponentsLength = dirtyComponents.length;
      },
      close: function() {
        if (this.dirtyComponentsLength !== dirtyComponents.length) {
          dirtyComponents.splice(0, this.dirtyComponentsLength);
          flushBatchedUpdates();
        } else {
          dirtyComponents.length = 0;
        }
      }
    };
    var UPDATE_QUEUEING = {
      initialize: function() {
        this.callbackQueue.reset();
      },
      close: function() {
        this.callbackQueue.notifyAll();
      }
    };
    var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
    function ReactUpdatesFlushTransaction() {
      this.reinitializeTransaction();
      this.dirtyComponentsLength = null;
      this.callbackQueue = CallbackQueue.getPooled();
      this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(true);
    }
    _assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
      getTransactionWrappers: function() {
        return TRANSACTION_WRAPPERS;
      },
      destructor: function() {
        this.dirtyComponentsLength = null;
        CallbackQueue.release(this.callbackQueue);
        this.callbackQueue = null;
        ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
        this.reconcileTransaction = null;
      },
      perform: function(method, scope, a) {
        return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
      }
    });
    PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
    function batchedUpdates(callback, a, b, c, d, e) {
      ensureInjected();
      batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
    }
    function mountOrderComparator(c1, c2) {
      return c1._mountOrder - c2._mountOrder;
    }
    function runBatchedUpdates(transaction) {
      var len = transaction.dirtyComponentsLength;
      !(len === dirtyComponents.length) ? "production" !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
      dirtyComponents.sort(mountOrderComparator);
      updateBatchNumber++;
      for (var i = 0; i < len; i++) {
        var component = dirtyComponents[i];
        var callbacks = component._pendingCallbacks;
        component._pendingCallbacks = null;
        var markerName;
        if (ReactFeatureFlags.logTopLevelRenders) {
          var namedComponent = component;
          if (component._currentElement.props === component._renderedComponent._currentElement) {
            namedComponent = component._renderedComponent;
          }
          markerName = 'React update: ' + namedComponent.getName();
          console.time(markerName);
        }
        ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
        if (markerName) {
          console.timeEnd(markerName);
        }
        if (callbacks) {
          for (var j = 0; j < callbacks.length; j++) {
            transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
          }
        }
      }
    }
    var flushBatchedUpdates = function() {
      while (dirtyComponents.length || asapEnqueued) {
        if (dirtyComponents.length) {
          var transaction = ReactUpdatesFlushTransaction.getPooled();
          transaction.perform(runBatchedUpdates, null, transaction);
          ReactUpdatesFlushTransaction.release(transaction);
        }
        if (asapEnqueued) {
          asapEnqueued = false;
          var queue = asapCallbackQueue;
          asapCallbackQueue = CallbackQueue.getPooled();
          queue.notifyAll();
          CallbackQueue.release(queue);
        }
      }
    };
    function enqueueUpdate(component) {
      ensureInjected();
      if (!batchingStrategy.isBatchingUpdates) {
        batchingStrategy.batchedUpdates(enqueueUpdate, component);
        return;
      }
      dirtyComponents.push(component);
      if (component._updateBatchNumber == null) {
        component._updateBatchNumber = updateBatchNumber + 1;
      }
    }
    function asap(callback, context) {
      !batchingStrategy.isBatchingUpdates ? "production" !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
      asapCallbackQueue.enqueue(callback, context);
      asapEnqueued = true;
    }
    var ReactUpdatesInjection = {
      injectReconcileTransaction: function(ReconcileTransaction) {
        !ReconcileTransaction ? "production" !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
        ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
      },
      injectBatchingStrategy: function(_batchingStrategy) {
        !_batchingStrategy ? "production" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
        !(typeof _batchingStrategy.batchedUpdates === 'function') ? "production" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
        !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? "production" !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
        batchingStrategy = _batchingStrategy;
      }
    };
    var ReactUpdates = {
      ReactReconcileTransaction: null,
      batchedUpdates: batchedUpdates,
      enqueueUpdate: enqueueUpdate,
      flushBatchedUpdates: flushBatchedUpdates,
      injection: ReactUpdatesInjection,
      asap: asap
    };
    module.exports = ReactUpdates;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactComponentEnvironment.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var injected = false;
    var ReactComponentEnvironment = {
      unmountIDFromEnvironment: null,
      replaceNodeWithMarkup: null,
      processChildrenUpdates: null,
      injection: {injectEnvironment: function(environment) {
          !!injected ? "production" !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
          ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
          ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
          ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
          injected = true;
        }}
    };
    module.exports = ReactComponentEnvironment;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactErrorUtils.js", ["github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var caughtError = null;
    function invokeGuardedCallback(name, func, a, b) {
      try {
        return func(a, b);
      } catch (x) {
        if (caughtError === null) {
          caughtError = x;
        }
        return undefined;
      }
    }
    var ReactErrorUtils = {
      invokeGuardedCallback: invokeGuardedCallback,
      invokeGuardedCallbackWithCatch: invokeGuardedCallback,
      rethrowCaughtError: function() {
        if (caughtError) {
          var error = caughtError;
          caughtError = null;
          throw error;
        }
      }
    };
    if ("production" !== 'production') {
      if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
        var fakeNode = document.createElement('react');
        ReactErrorUtils.invokeGuardedCallback = function(name, func, a, b) {
          var boundFunc = func.bind(null, a, b);
          var evtType = 'react-' + name;
          fakeNode.addEventListener(evtType, boundFunc, false);
          var evt = document.createEvent('Event');
          evt.initEvent(evtType, false, false);
          fakeNode.dispatchEvent(evt);
          fakeNode.removeEventListener(evtType, boundFunc, false);
        };
      }
    }
    module.exports = ReactErrorUtils;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactInstanceMap.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ReactInstanceMap = {
    remove: function(key) {
      key._reactInternalInstance = undefined;
    },
    get: function(key) {
      return key._reactInternalInstance;
    },
    has: function(key) {
      return key._reactInternalInstance !== undefined;
    },
    set: function(key, value) {
      key._reactInternalInstance = value;
    }
  };
  module.exports = ReactInstanceMap;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactNodeTypes.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/ReactElement.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var ReactElement = $__require('npm:react@15.3.0/lib/ReactElement.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var ReactNodeTypes = {
      HOST: 0,
      COMPOSITE: 1,
      EMPTY: 2,
      getType: function(node) {
        if (node === null || node === false) {
          return ReactNodeTypes.EMPTY;
        } else if (ReactElement.isValidElement(node)) {
          if (typeof node.type === 'function') {
            return ReactNodeTypes.COMPOSITE;
          } else {
            return ReactNodeTypes.HOST;
          }
        }
        !false ? "production" !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
      }
    };
    module.exports = ReactNodeTypes;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactOwner.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var ReactOwner = {
      isValidOwner: function(object) {
        return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
      },
      addComponentAsRefTo: function(component, ref, owner) {
        !ReactOwner.isValidOwner(owner) ? "production" !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
        owner.attachRef(ref, component);
      },
      removeComponentAsRefFrom: function(component, ref, owner) {
        !ReactOwner.isValidOwner(owner) ? "production" !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
        var ownerPublicInstance = owner.getPublicInstance();
        if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
          owner.detachRef(ref);
        }
      }
    };
    module.exports = ReactOwner;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactRef.js", ["npm:react@15.3.0/lib/ReactOwner.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ReactOwner = $__require('npm:react@15.3.0/lib/ReactOwner.js');
    var ReactRef = {};
    function attachRef(ref, component, owner) {
      if (typeof ref === 'function') {
        ref(component.getPublicInstance());
      } else {
        ReactOwner.addComponentAsRefTo(component, ref, owner);
      }
    }
    function detachRef(ref, component, owner) {
      if (typeof ref === 'function') {
        ref(null);
      } else {
        ReactOwner.removeComponentAsRefFrom(component, ref, owner);
      }
    }
    ReactRef.attachRefs = function(instance, element) {
      if (element === null || element === false) {
        return;
      }
      var ref = element.ref;
      if (ref != null) {
        attachRef(ref, instance, element._owner);
      }
    };
    ReactRef.shouldUpdateRefs = function(prevElement, nextElement) {
      var prevEmpty = prevElement === null || prevElement === false;
      var nextEmpty = nextElement === null || nextElement === false;
      return (prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref || typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner);
    };
    ReactRef.detachRefs = function(instance, element) {
      if (element === null || element === false) {
        return;
      }
      var ref = element.ref;
      if (ref != null) {
        detachRef(ref, instance, element._owner);
      }
    };
    module.exports = ReactRef;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactReconciler.js", ["npm:react@15.3.0/lib/ReactRef.js", "npm:react@15.3.0/lib/ReactInstrumentation.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ReactRef = $__require('npm:react@15.3.0/lib/ReactRef.js');
    var ReactInstrumentation = $__require('npm:react@15.3.0/lib/ReactInstrumentation.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    function attachRefs() {
      ReactRef.attachRefs(this, this._currentElement);
    }
    var ReactReconciler = {
      mountComponent: function(internalInstance, transaction, hostParent, hostContainerInfo, context) {
        if ("production" !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement);
            ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'mountComponent');
          }
        }
        var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context);
        if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
          transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
        }
        if ("production" !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'mountComponent');
            ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
          }
        }
        return markup;
      },
      getHostNode: function(internalInstance) {
        return internalInstance.getHostNode();
      },
      unmountComponent: function(internalInstance, safely) {
        if ("production" !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'unmountComponent');
          }
        }
        ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
        internalInstance.unmountComponent(safely);
        if ("production" !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'unmountComponent');
            ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
          }
        }
      },
      receiveComponent: function(internalInstance, nextElement, transaction, context) {
        var prevElement = internalInstance._currentElement;
        if (nextElement === prevElement && context === internalInstance._context) {
          return;
        }
        if ("production" !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
            ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'receiveComponent');
          }
        }
        var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
        if (refsChanged) {
          ReactRef.detachRefs(internalInstance, prevElement);
        }
        internalInstance.receiveComponent(nextElement, transaction, context);
        if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
          transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
        }
        if ("production" !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'receiveComponent');
            ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
          }
        }
      },
      performUpdateIfNecessary: function(internalInstance, transaction, updateBatchNumber) {
        if (internalInstance._updateBatchNumber !== updateBatchNumber) {
          "production" !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
          return;
        }
        if ("production" !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
            ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
          }
        }
        internalInstance.performUpdateIfNecessary(transaction);
        if ("production" !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
            ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
          }
        }
      }
    };
    module.exports = ReactReconciler;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/shallowEqual.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }
  function shallowEqual(objA, objB) {
    if (is(objA, objB)) {
      return true;
    }
    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
      return false;
    }
    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) {
      return false;
    }
    for (var i = 0; i < keysA.length; i++) {
      if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
        return false;
      }
    }
    return true;
  }
  module.exports = shallowEqual;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactCompositeComponent.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/ReactComponentEnvironment.js", "npm:react@15.3.0/lib/ReactCurrentOwner.js", "npm:react@15.3.0/lib/ReactElement.js", "npm:react@15.3.0/lib/ReactErrorUtils.js", "npm:react@15.3.0/lib/ReactInstanceMap.js", "npm:react@15.3.0/lib/ReactInstrumentation.js", "npm:react@15.3.0/lib/ReactNodeTypes.js", "npm:react@15.3.0/lib/ReactPropTypeLocations.js", "npm:react@15.3.0/lib/ReactReconciler.js", "npm:react@15.3.0/lib/checkReactTypeSpec.js", "npm:fbjs@0.8.3/lib/emptyObject.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:fbjs@0.8.3/lib/shallowEqual.js", "npm:react@15.3.0/lib/shouldUpdateReactComponent.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.0.js');
    var ReactComponentEnvironment = $__require('npm:react@15.3.0/lib/ReactComponentEnvironment.js');
    var ReactCurrentOwner = $__require('npm:react@15.3.0/lib/ReactCurrentOwner.js');
    var ReactElement = $__require('npm:react@15.3.0/lib/ReactElement.js');
    var ReactErrorUtils = $__require('npm:react@15.3.0/lib/ReactErrorUtils.js');
    var ReactInstanceMap = $__require('npm:react@15.3.0/lib/ReactInstanceMap.js');
    var ReactInstrumentation = $__require('npm:react@15.3.0/lib/ReactInstrumentation.js');
    var ReactNodeTypes = $__require('npm:react@15.3.0/lib/ReactNodeTypes.js');
    var ReactPropTypeLocations = $__require('npm:react@15.3.0/lib/ReactPropTypeLocations.js');
    var ReactReconciler = $__require('npm:react@15.3.0/lib/ReactReconciler.js');
    var checkReactTypeSpec = $__require('npm:react@15.3.0/lib/checkReactTypeSpec.js');
    var emptyObject = $__require('npm:fbjs@0.8.3/lib/emptyObject.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var shallowEqual = $__require('npm:fbjs@0.8.3/lib/shallowEqual.js');
    var shouldUpdateReactComponent = $__require('npm:react@15.3.0/lib/shouldUpdateReactComponent.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var CompositeTypes = {
      ImpureClass: 0,
      PureClass: 1,
      StatelessFunctional: 2
    };
    function StatelessComponent(Component) {}
    StatelessComponent.prototype.render = function() {
      var Component = ReactInstanceMap.get(this)._currentElement.type;
      var element = Component(this.props, this.context, this.updater);
      warnIfInvalidElement(Component, element);
      return element;
    };
    function warnIfInvalidElement(Component, element) {
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
        "production" !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
      }
    }
    function invokeComponentDidMountWithTimer() {
      var publicInstance = this._instance;
      if (this._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
      }
      publicInstance.componentDidMount();
      if (this._debugID !== 0) {
        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
      }
    }
    function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
      var publicInstance = this._instance;
      if (this._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
      }
      publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
      if (this._debugID !== 0) {
        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
      }
    }
    function shouldConstruct(Component) {
      return !!(Component.prototype && Component.prototype.isReactComponent);
    }
    function isPureComponent(Component) {
      return !!(Component.prototype && Component.prototype.isPureReactComponent);
    }
    var nextMountID = 1;
    var ReactCompositeComponentMixin = {
      construct: function(element) {
        this._currentElement = element;
        this._rootNodeID = null;
        this._compositeType = null;
        this._instance = null;
        this._hostParent = null;
        this._hostContainerInfo = null;
        this._updateBatchNumber = null;
        this._pendingElement = null;
        this._pendingStateQueue = null;
        this._pendingReplaceState = false;
        this._pendingForceUpdate = false;
        this._renderedNodeType = null;
        this._renderedComponent = null;
        this._context = null;
        this._mountOrder = 0;
        this._topLevelWrapper = null;
        this._pendingCallbacks = null;
        this._calledComponentWillUnmount = false;
        if ("production" !== 'production') {
          this._warnedAboutRefsInRender = false;
        }
      },
      mountComponent: function(transaction, hostParent, hostContainerInfo, context) {
        var _this = this;
        this._context = context;
        this._mountOrder = nextMountID++;
        this._hostParent = hostParent;
        this._hostContainerInfo = hostContainerInfo;
        var publicProps = this._currentElement.props;
        var publicContext = this._processContext(context);
        var Component = this._currentElement.type;
        var updateQueue = transaction.getUpdateQueue();
        var doConstruct = shouldConstruct(Component);
        var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
        var renderedElement;
        if (!doConstruct && (inst == null || inst.render == null)) {
          renderedElement = inst;
          warnIfInvalidElement(Component, renderedElement);
          !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? "production" !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
          inst = new StatelessComponent(Component);
          this._compositeType = CompositeTypes.StatelessFunctional;
        } else {
          if (isPureComponent(Component)) {
            this._compositeType = CompositeTypes.PureClass;
          } else {
            this._compositeType = CompositeTypes.ImpureClass;
          }
        }
        if ("production" !== 'production') {
          if (inst.render == null) {
            "production" !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
          }
          var propsMutated = inst.props !== publicProps;
          var componentName = Component.displayName || Component.name || 'Component';
          "production" !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
        }
        inst.props = publicProps;
        inst.context = publicContext;
        inst.refs = emptyObject;
        inst.updater = updateQueue;
        this._instance = inst;
        ReactInstanceMap.set(inst, this);
        if ("production" !== 'production') {
          "production" !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
          "production" !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
          "production" !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
          "production" !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
          "production" !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
          "production" !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
          "production" !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
        }
        var initialState = inst.state;
        if (initialState === undefined) {
          inst.state = initialState = null;
        }
        !(typeof initialState === 'object' && !Array.isArray(initialState)) ? "production" !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
        this._pendingStateQueue = null;
        this._pendingReplaceState = false;
        this._pendingForceUpdate = false;
        var markup;
        if (inst.unstable_handleError) {
          markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
        } else {
          markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
        }
        if (inst.componentDidMount) {
          if ("production" !== 'production') {
            transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
          } else {
            transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
          }
        }
        if ("production" !== 'production') {
          if (this._debugID) {
            var callback = function(component) {
              return ReactInstrumentation.debugTool.onComponentHasMounted(_this._debugID);
            };
            transaction.getReactMountReady().enqueue(callback, this);
          }
        }
        return markup;
      },
      _constructComponent: function(doConstruct, publicProps, publicContext, updateQueue) {
        if ("production" !== 'production') {
          ReactCurrentOwner.current = this;
          try {
            return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
          } finally {
            ReactCurrentOwner.current = null;
          }
        } else {
          return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
        }
      },
      _constructComponentWithoutOwner: function(doConstruct, publicProps, publicContext, updateQueue) {
        var Component = this._currentElement.type;
        var instanceOrElement;
        if (doConstruct) {
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
            }
          }
          instanceOrElement = new Component(publicProps, publicContext, updateQueue);
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
            }
          }
        } else {
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
            }
          }
          instanceOrElement = Component(publicProps, publicContext, updateQueue);
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
            }
          }
        }
        return instanceOrElement;
      },
      performInitialMountWithErrorHandling: function(renderedElement, hostParent, hostContainerInfo, transaction, context) {
        var markup;
        var checkpoint = transaction.checkpoint();
        try {
          markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
        } catch (e) {
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onError();
            }
          }
          transaction.rollback(checkpoint);
          this._instance.unstable_handleError(e);
          if (this._pendingStateQueue) {
            this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
          }
          checkpoint = transaction.checkpoint();
          this._renderedComponent.unmountComponent(true);
          transaction.rollback(checkpoint);
          markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
        }
        return markup;
      },
      performInitialMount: function(renderedElement, hostParent, hostContainerInfo, transaction, context) {
        var inst = this._instance;
        if (inst.componentWillMount) {
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
            }
          }
          inst.componentWillMount();
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
            }
          }
          if (this._pendingStateQueue) {
            inst.state = this._processPendingState(inst.props, inst.context);
          }
        }
        if (renderedElement === undefined) {
          renderedElement = this._renderValidatedComponent();
        }
        var nodeType = ReactNodeTypes.getType(renderedElement);
        this._renderedNodeType = nodeType;
        var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY);
        this._renderedComponent = child;
        if ("production" !== 'production') {
          if (child._debugID !== 0 && this._debugID !== 0) {
            ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
          }
        }
        var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context));
        if ("production" !== 'production') {
          if (this._debugID !== 0) {
            ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
          }
        }
        return markup;
      },
      getHostNode: function() {
        return ReactReconciler.getHostNode(this._renderedComponent);
      },
      unmountComponent: function(safely) {
        if (!this._renderedComponent) {
          return;
        }
        var inst = this._instance;
        if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
          inst._calledComponentWillUnmount = true;
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
            }
          }
          if (safely) {
            var name = this.getName() + '.componentWillUnmount()';
            ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
          } else {
            inst.componentWillUnmount();
          }
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
            }
          }
        }
        if (this._renderedComponent) {
          ReactReconciler.unmountComponent(this._renderedComponent, safely);
          this._renderedNodeType = null;
          this._renderedComponent = null;
          this._instance = null;
        }
        this._pendingStateQueue = null;
        this._pendingReplaceState = false;
        this._pendingForceUpdate = false;
        this._pendingCallbacks = null;
        this._pendingElement = null;
        this._context = null;
        this._rootNodeID = null;
        this._topLevelWrapper = null;
        ReactInstanceMap.remove(inst);
      },
      _maskContext: function(context) {
        var Component = this._currentElement.type;
        var contextTypes = Component.contextTypes;
        if (!contextTypes) {
          return emptyObject;
        }
        var maskedContext = {};
        for (var contextName in contextTypes) {
          maskedContext[contextName] = context[contextName];
        }
        return maskedContext;
      },
      _processContext: function(context) {
        var maskedContext = this._maskContext(context);
        if ("production" !== 'production') {
          var Component = this._currentElement.type;
          if (Component.contextTypes) {
            this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
          }
        }
        return maskedContext;
      },
      _processChildContext: function(currentContext) {
        var Component = this._currentElement.type;
        var inst = this._instance;
        if ("production" !== 'production') {
          ReactInstrumentation.debugTool.onBeginProcessingChildContext();
        }
        var childContext = inst.getChildContext && inst.getChildContext();
        if ("production" !== 'production') {
          ReactInstrumentation.debugTool.onEndProcessingChildContext();
        }
        if (childContext) {
          !(typeof Component.childContextTypes === 'object') ? "production" !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
          if ("production" !== 'production') {
            this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
          }
          for (var name in childContext) {
            !(name in Component.childContextTypes) ? "production" !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
          }
          return _assign({}, currentContext, childContext);
        }
        return currentContext;
      },
      _checkContextTypes: function(typeSpecs, values, location) {
        checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
      },
      receiveComponent: function(nextElement, transaction, nextContext) {
        var prevElement = this._currentElement;
        var prevContext = this._context;
        this._pendingElement = null;
        this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
      },
      performUpdateIfNecessary: function(transaction) {
        if (this._pendingElement != null) {
          ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
        } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
          this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
        } else {
          this._updateBatchNumber = null;
        }
      },
      updateComponent: function(transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
        var inst = this._instance;
        !(inst != null) ? "production" !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
        var willReceive = false;
        var nextContext;
        if (this._context === nextUnmaskedContext) {
          nextContext = inst.context;
        } else {
          nextContext = this._processContext(nextUnmaskedContext);
          willReceive = true;
        }
        var prevProps = prevParentElement.props;
        var nextProps = nextParentElement.props;
        if (prevParentElement !== nextParentElement) {
          willReceive = true;
        }
        if (willReceive && inst.componentWillReceiveProps) {
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
            }
          }
          inst.componentWillReceiveProps(nextProps, nextContext);
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
            }
          }
        }
        var nextState = this._processPendingState(nextProps, nextContext);
        var shouldUpdate = true;
        if (!this._pendingForceUpdate) {
          if (inst.shouldComponentUpdate) {
            if ("production" !== 'production') {
              if (this._debugID !== 0) {
                ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
              }
            }
            shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
            if ("production" !== 'production') {
              if (this._debugID !== 0) {
                ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
              }
            }
          } else {
            if (this._compositeType === CompositeTypes.PureClass) {
              shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
            }
          }
        }
        if ("production" !== 'production') {
          "production" !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
        }
        this._updateBatchNumber = null;
        if (shouldUpdate) {
          this._pendingForceUpdate = false;
          this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
        } else {
          this._currentElement = nextParentElement;
          this._context = nextUnmaskedContext;
          inst.props = nextProps;
          inst.state = nextState;
          inst.context = nextContext;
        }
      },
      _processPendingState: function(props, context) {
        var inst = this._instance;
        var queue = this._pendingStateQueue;
        var replace = this._pendingReplaceState;
        this._pendingReplaceState = false;
        this._pendingStateQueue = null;
        if (!queue) {
          return inst.state;
        }
        if (replace && queue.length === 1) {
          return queue[0];
        }
        var nextState = _assign({}, replace ? queue[0] : inst.state);
        for (var i = replace ? 1 : 0; i < queue.length; i++) {
          var partial = queue[i];
          _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
        }
        return nextState;
      },
      _performComponentUpdate: function(nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
        var _this2 = this;
        var inst = this._instance;
        var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
        var prevProps;
        var prevState;
        var prevContext;
        if (hasComponentDidUpdate) {
          prevProps = inst.props;
          prevState = inst.state;
          prevContext = inst.context;
        }
        if (inst.componentWillUpdate) {
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
            }
          }
          inst.componentWillUpdate(nextProps, nextState, nextContext);
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
            }
          }
        }
        this._currentElement = nextElement;
        this._context = unmaskedContext;
        inst.props = nextProps;
        inst.state = nextState;
        inst.context = nextContext;
        this._updateRenderedComponent(transaction, unmaskedContext);
        if (hasComponentDidUpdate) {
          if ("production" !== 'production') {
            transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
          } else {
            transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
          }
        }
        if ("production" !== 'production') {
          if (this._debugID) {
            var callback = function() {
              return ReactInstrumentation.debugTool.onComponentHasUpdated(_this2._debugID);
            };
            transaction.getReactMountReady().enqueue(callback, this);
          }
        }
      },
      _updateRenderedComponent: function(transaction, context) {
        var prevComponentInstance = this._renderedComponent;
        var prevRenderedElement = prevComponentInstance._currentElement;
        var nextRenderedElement = this._renderValidatedComponent();
        if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
          ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
        } else {
          var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
          ReactReconciler.unmountComponent(prevComponentInstance, false);
          var nodeType = ReactNodeTypes.getType(nextRenderedElement);
          this._renderedNodeType = nodeType;
          var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY);
          this._renderedComponent = child;
          if ("production" !== 'production') {
            if (child._debugID !== 0 && this._debugID !== 0) {
              ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
            }
          }
          var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context));
          if ("production" !== 'production') {
            if (this._debugID !== 0) {
              ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
            }
          }
          this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
        }
      },
      _replaceNodeWithMarkup: function(oldHostNode, nextMarkup, prevInstance) {
        ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
      },
      _renderValidatedComponentWithoutOwnerOrContext: function() {
        var inst = this._instance;
        if ("production" !== 'production') {
          if (this._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
          }
        }
        var renderedComponent = inst.render();
        if ("production" !== 'production') {
          if (this._debugID !== 0) {
            ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
          }
        }
        if ("production" !== 'production') {
          if (renderedComponent === undefined && inst.render._isMockFunction) {
            renderedComponent = null;
          }
        }
        return renderedComponent;
      },
      _renderValidatedComponent: function() {
        var renderedComponent;
        if ("production" !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
          ReactCurrentOwner.current = this;
          try {
            renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
          } finally {
            ReactCurrentOwner.current = null;
          }
        } else {
          renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
        }
        !(renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? "production" !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
        return renderedComponent;
      },
      attachRef: function(ref, component) {
        var inst = this.getPublicInstance();
        !(inst != null) ? "production" !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
        var publicComponentInstance = component.getPublicInstance();
        if ("production" !== 'production') {
          var componentName = component && component.getName ? component.getName() : 'a component';
          "production" !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
        }
        var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
        refs[ref] = publicComponentInstance;
      },
      detachRef: function(ref) {
        var refs = this.getPublicInstance().refs;
        delete refs[ref];
      },
      getName: function() {
        var type = this._currentElement.type;
        var constructor = this._instance && this._instance.constructor;
        return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
      },
      getPublicInstance: function() {
        var inst = this._instance;
        if (this._compositeType === CompositeTypes.StatelessFunctional) {
          return null;
        }
        return inst;
      },
      _instantiateReactComponent: null
    };
    var ReactCompositeComponent = {Mixin: ReactCompositeComponentMixin};
    module.exports = ReactCompositeComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactEmptyComponent.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var emptyComponentFactory;
  var ReactEmptyComponentInjection = {injectEmptyComponentFactory: function(factory) {
      emptyComponentFactory = factory;
    }};
  var ReactEmptyComponent = {create: function(instantiate) {
      return emptyComponentFactory(instantiate);
    }};
  ReactEmptyComponent.injection = ReactEmptyComponentInjection;
  module.exports = ReactEmptyComponent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactHostComponent.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:object-assign@4.1.0.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.0.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var genericComponentClass = null;
    var tagToComponentClass = {};
    var textComponentClass = null;
    var ReactHostComponentInjection = {
      injectGenericComponentClass: function(componentClass) {
        genericComponentClass = componentClass;
      },
      injectTextComponentClass: function(componentClass) {
        textComponentClass = componentClass;
      },
      injectComponentClasses: function(componentClasses) {
        _assign(tagToComponentClass, componentClasses);
      }
    };
    function createInternalComponent(element) {
      !genericComponentClass ? "production" !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
      return new genericComponentClass(element);
    }
    function createInstanceForText(text) {
      return new textComponentClass(text);
    }
    function isTextComponent(component) {
      return component instanceof textComponentClass;
    }
    var ReactHostComponent = {
      createInternalComponent: createInternalComponent,
      createInstanceForText: createInstanceForText,
      isTextComponent: isTextComponent,
      injection: ReactHostComponentInjection
    };
    module.exports = ReactHostComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactInvalidSetStateWarningDevTool.js", ["npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    if ("production" !== 'production') {
      var processingChildContext = false;
      var warnInvalidSetState = function() {
        "production" !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
      };
    }
    var ReactInvalidSetStateWarningDevTool = {
      onBeginProcessingChildContext: function() {
        processingChildContext = true;
      },
      onEndProcessingChildContext: function() {
        processingChildContext = false;
      },
      onSetState: function() {
        warnInvalidSetState();
      }
    };
    module.exports = ReactInvalidSetStateWarningDevTool;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactHostOperationHistoryDevtool.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var history = [];
  var ReactHostOperationHistoryDevtool = {
    onHostOperation: function(debugID, type, payload) {
      history.push({
        instanceID: debugID,
        type: type,
        payload: payload
      });
    },
    clearHistory: function() {
      if (ReactHostOperationHistoryDevtool._preventClearing) {
        return;
      }
      history = [];
    },
    getHistory: function() {
      return history;
    }
  };
  module.exports = ReactHostOperationHistoryDevtool;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactChildrenMutationWarningDevtool.js", ["npm:react@15.3.0/lib/ReactComponentTreeDevtool.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ReactComponentTreeDevtool = $__require('npm:react@15.3.0/lib/ReactComponentTreeDevtool.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var elements = {};
    function handleElement(debugID, element) {
      if (element == null) {
        return;
      }
      if (element._shadowChildren === undefined) {
        return;
      }
      if (element._shadowChildren === element.props.children) {
        return;
      }
      var isMutated = false;
      if (Array.isArray(element._shadowChildren)) {
        if (element._shadowChildren.length === element.props.children.length) {
          for (var i = 0; i < element._shadowChildren.length; i++) {
            if (element._shadowChildren[i] !== element.props.children[i]) {
              isMutated = true;
            }
          }
        } else {
          isMutated = true;
        }
      }
      "production" !== 'production' ? warning(Array.isArray(element._shadowChildren) && !isMutated, 'Component\'s children should not be mutated.%s', ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
    }
    var ReactDOMUnknownPropertyDevtool = {
      onBeforeMountComponent: function(debugID, element) {
        elements[debugID] = element;
      },
      onBeforeUpdateComponent: function(debugID, element) {
        elements[debugID] = element;
      },
      onComponentHasMounted: function(debugID) {
        handleElement(debugID, elements[debugID]);
        delete elements[debugID];
      },
      onComponentHasUpdated: function(debugID) {
        handleElement(debugID, elements[debugID]);
        delete elements[debugID];
      }
    };
    module.exports = ReactDOMUnknownPropertyDevtool;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/performance.js", ["npm:fbjs@0.8.3/lib/ExecutionEnvironment.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
  var performance;
  if (ExecutionEnvironment.canUseDOM) {
    performance = window.performance || window.msPerformance || window.webkitPerformance;
  }
  module.exports = performance || {};
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/performanceNow.js", ["npm:fbjs@0.8.3/lib/performance.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var performance = $__require('npm:fbjs@0.8.3/lib/performance.js');
  var performanceNow;
  if (performance.now) {
    performanceNow = function performanceNow() {
      return performance.now();
    };
  } else {
    performanceNow = function performanceNow() {
      return Date.now();
    };
  }
  module.exports = performanceNow;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDebugTool.js", ["npm:react@15.3.0/lib/ReactInvalidSetStateWarningDevTool.js", "npm:react@15.3.0/lib/ReactHostOperationHistoryDevtool.js", "npm:react@15.3.0/lib/ReactComponentTreeDevtool.js", "npm:react@15.3.0/lib/ReactChildrenMutationWarningDevtool.js", "npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "npm:fbjs@0.8.3/lib/performanceNow.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ReactInvalidSetStateWarningDevTool = $__require('npm:react@15.3.0/lib/ReactInvalidSetStateWarningDevTool.js');
    var ReactHostOperationHistoryDevtool = $__require('npm:react@15.3.0/lib/ReactHostOperationHistoryDevtool.js');
    var ReactComponentTreeDevtool = $__require('npm:react@15.3.0/lib/ReactComponentTreeDevtool.js');
    var ReactChildrenMutationWarningDevtool = $__require('npm:react@15.3.0/lib/ReactChildrenMutationWarningDevtool.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
    var performanceNow = $__require('npm:fbjs@0.8.3/lib/performanceNow.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var eventHandlers = [];
    var handlerDoesThrowForEvent = {};
    function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
      eventHandlers.forEach(function(handler) {
        try {
          if (handler[handlerFunctionName]) {
            handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
          }
        } catch (e) {
          "production" !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
          handlerDoesThrowForEvent[handlerFunctionName] = true;
        }
      });
    }
    var isProfiling = false;
    var flushHistory = [];
    var lifeCycleTimerStack = [];
    var currentFlushNesting = 0;
    var currentFlushMeasurements = null;
    var currentFlushStartTime = null;
    var currentTimerDebugID = null;
    var currentTimerStartTime = null;
    var currentTimerNestedFlushDuration = null;
    var currentTimerType = null;
    var lifeCycleTimerHasWarned = false;
    function clearHistory() {
      ReactComponentTreeDevtool.purgeUnmountedComponents();
      ReactHostOperationHistoryDevtool.clearHistory();
    }
    function getTreeSnapshot(registeredIDs) {
      return registeredIDs.reduce(function(tree, id) {
        var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
        var parentID = ReactComponentTreeDevtool.getParentID(id);
        tree[id] = {
          displayName: ReactComponentTreeDevtool.getDisplayName(id),
          text: ReactComponentTreeDevtool.getText(id),
          updateCount: ReactComponentTreeDevtool.getUpdateCount(id),
          childIDs: ReactComponentTreeDevtool.getChildIDs(id),
          ownerID: ownerID || ReactComponentTreeDevtool.getOwnerID(parentID),
          parentID: parentID
        };
        return tree;
      }, {});
    }
    function resetMeasurements() {
      var previousStartTime = currentFlushStartTime;
      var previousMeasurements = currentFlushMeasurements || [];
      var previousOperations = ReactHostOperationHistoryDevtool.getHistory();
      if (currentFlushNesting === 0) {
        currentFlushStartTime = null;
        currentFlushMeasurements = null;
        clearHistory();
        return;
      }
      if (previousMeasurements.length || previousOperations.length) {
        var registeredIDs = ReactComponentTreeDevtool.getRegisteredIDs();
        flushHistory.push({
          duration: performanceNow() - previousStartTime,
          measurements: previousMeasurements || [],
          operations: previousOperations || [],
          treeSnapshot: getTreeSnapshot(registeredIDs)
        });
      }
      clearHistory();
      currentFlushStartTime = performanceNow();
      currentFlushMeasurements = [];
    }
    function checkDebugID(debugID) {
      "production" !== 'production' ? warning(debugID, 'ReactDebugTool: debugID may not be empty.') : void 0;
    }
    function beginLifeCycleTimer(debugID, timerType) {
      if (currentFlushNesting === 0) {
        return;
      }
      if (currentTimerType && !lifeCycleTimerHasWarned) {
        "production" !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
        lifeCycleTimerHasWarned = true;
      }
      currentTimerStartTime = performanceNow();
      currentTimerNestedFlushDuration = 0;
      currentTimerDebugID = debugID;
      currentTimerType = timerType;
    }
    function endLifeCycleTimer(debugID, timerType) {
      if (currentFlushNesting === 0) {
        return;
      }
      if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
        "production" !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
        lifeCycleTimerHasWarned = true;
      }
      if (isProfiling) {
        currentFlushMeasurements.push({
          timerType: timerType,
          instanceID: debugID,
          duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
        });
      }
      currentTimerStartTime = null;
      currentTimerNestedFlushDuration = null;
      currentTimerDebugID = null;
      currentTimerType = null;
    }
    function pauseCurrentLifeCycleTimer() {
      var currentTimer = {
        startTime: currentTimerStartTime,
        nestedFlushStartTime: performanceNow(),
        debugID: currentTimerDebugID,
        timerType: currentTimerType
      };
      lifeCycleTimerStack.push(currentTimer);
      currentTimerStartTime = null;
      currentTimerNestedFlushDuration = null;
      currentTimerDebugID = null;
      currentTimerType = null;
    }
    function resumeCurrentLifeCycleTimer() {
      var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();
      var startTime = _lifeCycleTimerStack$.startTime;
      var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;
      var debugID = _lifeCycleTimerStack$.debugID;
      var timerType = _lifeCycleTimerStack$.timerType;
      var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
      currentTimerStartTime = startTime;
      currentTimerNestedFlushDuration += nestedFlushDuration;
      currentTimerDebugID = debugID;
      currentTimerType = timerType;
    }
    var ReactDebugTool = {
      addDevtool: function(devtool) {
        eventHandlers.push(devtool);
      },
      removeDevtool: function(devtool) {
        for (var i = 0; i < eventHandlers.length; i++) {
          if (eventHandlers[i] === devtool) {
            eventHandlers.splice(i, 1);
            i--;
          }
        }
      },
      isProfiling: function() {
        return isProfiling;
      },
      beginProfiling: function() {
        if (isProfiling) {
          return;
        }
        isProfiling = true;
        flushHistory.length = 0;
        resetMeasurements();
        ReactDebugTool.addDevtool(ReactHostOperationHistoryDevtool);
      },
      endProfiling: function() {
        if (!isProfiling) {
          return;
        }
        isProfiling = false;
        resetMeasurements();
        ReactDebugTool.removeDevtool(ReactHostOperationHistoryDevtool);
      },
      getFlushHistory: function() {
        return flushHistory;
      },
      onBeginFlush: function() {
        currentFlushNesting++;
        resetMeasurements();
        pauseCurrentLifeCycleTimer();
        emitEvent('onBeginFlush');
      },
      onEndFlush: function() {
        resetMeasurements();
        currentFlushNesting--;
        resumeCurrentLifeCycleTimer();
        emitEvent('onEndFlush');
      },
      onBeginLifeCycleTimer: function(debugID, timerType) {
        checkDebugID(debugID);
        emitEvent('onBeginLifeCycleTimer', debugID, timerType);
        beginLifeCycleTimer(debugID, timerType);
      },
      onEndLifeCycleTimer: function(debugID, timerType) {
        checkDebugID(debugID);
        endLifeCycleTimer(debugID, timerType);
        emitEvent('onEndLifeCycleTimer', debugID, timerType);
      },
      onBeginReconcilerTimer: function(debugID, timerType) {
        checkDebugID(debugID);
        emitEvent('onBeginReconcilerTimer', debugID, timerType);
      },
      onEndReconcilerTimer: function(debugID, timerType) {
        checkDebugID(debugID);
        emitEvent('onEndReconcilerTimer', debugID, timerType);
      },
      onError: function(debugID) {
        if (currentTimerDebugID != null) {
          endLifeCycleTimer(currentTimerDebugID, currentTimerType);
        }
        emitEvent('onError', debugID);
      },
      onBeginProcessingChildContext: function() {
        emitEvent('onBeginProcessingChildContext');
      },
      onEndProcessingChildContext: function() {
        emitEvent('onEndProcessingChildContext');
      },
      onHostOperation: function(debugID, type, payload) {
        checkDebugID(debugID);
        emitEvent('onHostOperation', debugID, type, payload);
      },
      onComponentHasMounted: function(debugID) {
        checkDebugID(debugID);
        emitEvent('onComponentHasMounted', debugID);
      },
      onComponentHasUpdated: function(debugID) {
        checkDebugID(debugID);
        emitEvent('onComponentHasUpdated', debugID);
      },
      onSetState: function() {
        emitEvent('onSetState');
      },
      onSetDisplayName: function(debugID, displayName) {
        checkDebugID(debugID);
        emitEvent('onSetDisplayName', debugID, displayName);
      },
      onSetChildren: function(debugID, childDebugIDs) {
        checkDebugID(debugID);
        childDebugIDs.forEach(checkDebugID);
        emitEvent('onSetChildren', debugID, childDebugIDs);
      },
      onSetOwner: function(debugID, ownerDebugID) {
        checkDebugID(debugID);
        emitEvent('onSetOwner', debugID, ownerDebugID);
      },
      onSetParent: function(debugID, parentDebugID) {
        checkDebugID(debugID);
        emitEvent('onSetParent', debugID, parentDebugID);
      },
      onSetText: function(debugID, text) {
        checkDebugID(debugID);
        emitEvent('onSetText', debugID, text);
      },
      onMountRootComponent: function(debugID) {
        checkDebugID(debugID);
        emitEvent('onMountRootComponent', debugID);
      },
      onBeforeMountComponent: function(debugID, element) {
        checkDebugID(debugID);
        emitEvent('onBeforeMountComponent', debugID, element);
      },
      onMountComponent: function(debugID) {
        checkDebugID(debugID);
        emitEvent('onMountComponent', debugID);
      },
      onBeforeUpdateComponent: function(debugID, element) {
        checkDebugID(debugID);
        emitEvent('onBeforeUpdateComponent', debugID, element);
      },
      onUpdateComponent: function(debugID) {
        checkDebugID(debugID);
        emitEvent('onUpdateComponent', debugID);
      },
      onUnmountComponent: function(debugID) {
        checkDebugID(debugID);
        emitEvent('onUnmountComponent', debugID);
      },
      onTestEvent: function() {
        emitEvent('onTestEvent');
      }
    };
    ReactDebugTool.addDevtool(ReactInvalidSetStateWarningDevTool);
    ReactDebugTool.addDevtool(ReactComponentTreeDevtool);
    ReactDebugTool.addDevtool(ReactChildrenMutationWarningDevtool);
    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
    if (/[?&]react_perf\b/.test(url)) {
      ReactDebugTool.beginProfiling();
    }
    module.exports = ReactDebugTool;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactInstrumentation.js", ["npm:react@15.3.0/lib/ReactDebugTool.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var debugTool = null;
    if ("production" !== 'production') {
      var ReactDebugTool = $__require('npm:react@15.3.0/lib/ReactDebugTool.js');
      debugTool = ReactDebugTool;
    }
    module.exports = {debugTool: debugTool};
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/instantiateReactComponent.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/ReactCompositeComponent.js", "npm:react@15.3.0/lib/ReactEmptyComponent.js", "npm:react@15.3.0/lib/ReactHostComponent.js", "npm:react@15.3.0/lib/ReactInstrumentation.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.0.js');
    var ReactCompositeComponent = $__require('npm:react@15.3.0/lib/ReactCompositeComponent.js');
    var ReactEmptyComponent = $__require('npm:react@15.3.0/lib/ReactEmptyComponent.js');
    var ReactHostComponent = $__require('npm:react@15.3.0/lib/ReactHostComponent.js');
    var ReactInstrumentation = $__require('npm:react@15.3.0/lib/ReactInstrumentation.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var ReactCompositeComponentWrapper = function(element) {
      this.construct(element);
    };
    _assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {_instantiateReactComponent: instantiateReactComponent});
    function getDeclarationErrorAddendum(owner) {
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    function getDisplayName(instance) {
      var element = instance._currentElement;
      if (element == null) {
        return '#empty';
      } else if (typeof element === 'string' || typeof element === 'number') {
        return '#text';
      } else if (typeof element.type === 'string') {
        return element.type;
      } else if (instance.getName) {
        return instance.getName() || 'Unknown';
      } else {
        return element.type.displayName || element.type.name || 'Unknown';
      }
    }
    function isInternalComponentType(type) {
      return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
    }
    var nextDebugID = 1;
    function instantiateReactComponent(node, shouldHaveDebugID) {
      var instance;
      if (node === null || node === false) {
        instance = ReactEmptyComponent.create(instantiateReactComponent);
      } else if (typeof node === 'object') {
        var element = node;
        !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? "production" !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;
        if (typeof element.type === 'string') {
          instance = ReactHostComponent.createInternalComponent(element);
        } else if (isInternalComponentType(element.type)) {
          instance = new element.type(element);
          if (!instance.getHostNode) {
            instance.getHostNode = instance.getNativeNode;
          }
        } else {
          instance = new ReactCompositeComponentWrapper(element);
        }
      } else if (typeof node === 'string' || typeof node === 'number') {
        instance = ReactHostComponent.createInstanceForText(node);
      } else {
        !false ? "production" !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
      }
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
      }
      instance._mountIndex = 0;
      instance._mountImage = null;
      if ("production" !== 'production') {
        if (shouldHaveDebugID) {
          var debugID = nextDebugID++;
          instance._debugID = debugID;
          var displayName = getDisplayName(instance);
          ReactInstrumentation.debugTool.onSetDisplayName(debugID, displayName);
          var owner = node && node._owner;
          if (owner) {
            ReactInstrumentation.debugTool.onSetOwner(debugID, owner._debugID);
          }
        } else {
          instance._debugID = 0;
        }
      }
      if ("production" !== 'production') {
        if (Object.preventExtensions) {
          Object.preventExtensions(instance);
        }
      }
      return instance;
    }
    module.exports = instantiateReactComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/DOMNamespaces.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var DOMNamespaces = {
    html: 'http://www.w3.org/1999/xhtml',
    mathml: 'http://www.w3.org/1998/Math/MathML',
    svg: 'http://www.w3.org/2000/svg'
  };
  module.exports = DOMNamespaces;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/createMicrosoftUnsafeLocalFunction.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var createMicrosoftUnsafeLocalFunction = function(func) {
    if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
      return function(arg0, arg1, arg2, arg3) {
        MSApp.execUnsafeLocalFunction(function() {
          return func(arg0, arg1, arg2, arg3);
        });
      };
    } else {
      return func;
    }
  };
  module.exports = createMicrosoftUnsafeLocalFunction;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/setInnerHTML.js", ["npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "npm:react@15.3.0/lib/DOMNamespaces.js", "npm:react@15.3.0/lib/createMicrosoftUnsafeLocalFunction.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
    var DOMNamespaces = $__require('npm:react@15.3.0/lib/DOMNamespaces.js');
    var WHITESPACE_TEST = /^[ \r\n\t\f]/;
    var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
    var createMicrosoftUnsafeLocalFunction = $__require('npm:react@15.3.0/lib/createMicrosoftUnsafeLocalFunction.js');
    var reusableSVGContainer;
    var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
      if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
        reusableSVGContainer = reusableSVGContainer || document.createElement('div');
        reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
        var newNodes = reusableSVGContainer.firstChild.childNodes;
        for (var i = 0; i < newNodes.length; i++) {
          node.appendChild(newNodes[i]);
        }
      } else {
        node.innerHTML = html;
      }
    });
    if (ExecutionEnvironment.canUseDOM) {
      var testElement = document.createElement('div');
      testElement.innerHTML = ' ';
      if (testElement.innerHTML === '') {
        setInnerHTML = function(node, html) {
          if (node.parentNode) {
            node.parentNode.replaceChild(node, node);
          }
          if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
            node.innerHTML = String.fromCharCode(0xFEFF) + html;
            var textNode = node.firstChild;
            if (textNode.data.length === 1) {
              node.removeChild(textNode);
            } else {
              textNode.deleteData(0, 1);
            }
          } else {
            node.innerHTML = html;
          }
        };
      }
      testElement = null;
    }
    module.exports = setInnerHTML;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/shouldUpdateReactComponent.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function shouldUpdateReactComponent(prevElement, nextElement) {
    var prevEmpty = prevElement === null || prevElement === false;
    var nextEmpty = nextElement === null || nextElement === false;
    if (prevEmpty || nextEmpty) {
      return prevEmpty === nextEmpty;
    }
    var prevType = typeof prevElement;
    var nextType = typeof nextElement;
    if (prevType === 'string' || prevType === 'number') {
      return nextType === 'string' || nextType === 'number';
    } else {
      return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
    }
  }
  module.exports = shouldUpdateReactComponent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactMount.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/DOMLazyTree.js", "npm:react@15.3.0/lib/DOMProperty.js", "npm:react@15.3.0/lib/ReactBrowserEventEmitter.js", "npm:react@15.3.0/lib/ReactCurrentOwner.js", "npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactDOMContainerInfo.js", "npm:react@15.3.0/lib/ReactDOMFeatureFlags.js", "npm:react@15.3.0/lib/ReactElement.js", "npm:react@15.3.0/lib/ReactFeatureFlags.js", "npm:react@15.3.0/lib/ReactInstanceMap.js", "npm:react@15.3.0/lib/ReactInstrumentation.js", "npm:react@15.3.0/lib/ReactMarkupChecksum.js", "npm:react@15.3.0/lib/ReactReconciler.js", "npm:react@15.3.0/lib/ReactUpdateQueue.js", "npm:react@15.3.0/lib/ReactUpdates.js", "npm:fbjs@0.8.3/lib/emptyObject.js", "npm:react@15.3.0/lib/instantiateReactComponent.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:react@15.3.0/lib/setInnerHTML.js", "npm:react@15.3.0/lib/shouldUpdateReactComponent.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var DOMLazyTree = $__require('npm:react@15.3.0/lib/DOMLazyTree.js');
    var DOMProperty = $__require('npm:react@15.3.0/lib/DOMProperty.js');
    var ReactBrowserEventEmitter = $__require('npm:react@15.3.0/lib/ReactBrowserEventEmitter.js');
    var ReactCurrentOwner = $__require('npm:react@15.3.0/lib/ReactCurrentOwner.js');
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactDOMContainerInfo = $__require('npm:react@15.3.0/lib/ReactDOMContainerInfo.js');
    var ReactDOMFeatureFlags = $__require('npm:react@15.3.0/lib/ReactDOMFeatureFlags.js');
    var ReactElement = $__require('npm:react@15.3.0/lib/ReactElement.js');
    var ReactFeatureFlags = $__require('npm:react@15.3.0/lib/ReactFeatureFlags.js');
    var ReactInstanceMap = $__require('npm:react@15.3.0/lib/ReactInstanceMap.js');
    var ReactInstrumentation = $__require('npm:react@15.3.0/lib/ReactInstrumentation.js');
    var ReactMarkupChecksum = $__require('npm:react@15.3.0/lib/ReactMarkupChecksum.js');
    var ReactReconciler = $__require('npm:react@15.3.0/lib/ReactReconciler.js');
    var ReactUpdateQueue = $__require('npm:react@15.3.0/lib/ReactUpdateQueue.js');
    var ReactUpdates = $__require('npm:react@15.3.0/lib/ReactUpdates.js');
    var emptyObject = $__require('npm:fbjs@0.8.3/lib/emptyObject.js');
    var instantiateReactComponent = $__require('npm:react@15.3.0/lib/instantiateReactComponent.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var setInnerHTML = $__require('npm:react@15.3.0/lib/setInnerHTML.js');
    var shouldUpdateReactComponent = $__require('npm:react@15.3.0/lib/shouldUpdateReactComponent.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
    var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
    var ELEMENT_NODE_TYPE = 1;
    var DOC_NODE_TYPE = 9;
    var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
    var instancesByReactRootID = {};
    function firstDifferenceIndex(string1, string2) {
      var minLen = Math.min(string1.length, string2.length);
      for (var i = 0; i < minLen; i++) {
        if (string1.charAt(i) !== string2.charAt(i)) {
          return i;
        }
      }
      return string1.length === string2.length ? -1 : minLen;
    }
    function getReactRootElementInContainer(container) {
      if (!container) {
        return null;
      }
      if (container.nodeType === DOC_NODE_TYPE) {
        return container.documentElement;
      } else {
        return container.firstChild;
      }
    }
    function internalGetID(node) {
      return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
    }
    function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
      var markerName;
      if (ReactFeatureFlags.logTopLevelRenders) {
        var wrappedElement = wrapperInstance._currentElement.props;
        var type = wrappedElement.type;
        markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
        console.time(markerName);
      }
      var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context);
      if (markerName) {
        console.timeEnd(markerName);
      }
      wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
      ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
    }
    function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
      var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(!shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
      transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
      ReactUpdates.ReactReconcileTransaction.release(transaction);
    }
    function unmountComponentFromNode(instance, container, safely) {
      if ("production" !== 'production') {
        ReactInstrumentation.debugTool.onBeginFlush();
      }
      ReactReconciler.unmountComponent(instance, safely);
      if ("production" !== 'production') {
        ReactInstrumentation.debugTool.onEndFlush();
      }
      if (container.nodeType === DOC_NODE_TYPE) {
        container = container.documentElement;
      }
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
    }
    function hasNonRootReactChild(container) {
      var rootEl = getReactRootElementInContainer(container);
      if (rootEl) {
        var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
        return !!(inst && inst._hostParent);
      }
    }
    function getHostRootInstanceInContainer(container) {
      var rootEl = getReactRootElementInContainer(container);
      var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
      return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
    }
    function getTopLevelWrapperInContainer(container) {
      var root = getHostRootInstanceInContainer(container);
      return root ? root._hostContainerInfo._topLevelWrapper : null;
    }
    var topLevelRootCounter = 1;
    var TopLevelWrapper = function() {
      this.rootID = topLevelRootCounter++;
    };
    TopLevelWrapper.prototype.isReactComponent = {};
    if ("production" !== 'production') {
      TopLevelWrapper.displayName = 'TopLevelWrapper';
    }
    TopLevelWrapper.prototype.render = function() {
      return this.props;
    };
    var ReactMount = {
      TopLevelWrapper: TopLevelWrapper,
      _instancesByReactRootID: instancesByReactRootID,
      scrollMonitor: function(container, renderCallback) {
        renderCallback();
      },
      _updateRootComponent: function(prevComponent, nextElement, nextContext, container, callback) {
        ReactMount.scrollMonitor(container, function() {
          ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
          if (callback) {
            ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
          }
        });
        return prevComponent;
      },
      _renderNewRootComponent: function(nextElement, container, shouldReuseMarkup, context) {
        "production" !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
        !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? "production" !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
        ReactBrowserEventEmitter.ensureScrollValueMonitoring();
        var componentInstance = instantiateReactComponent(nextElement, false);
        ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
        var wrapperID = componentInstance._instance.rootID;
        instancesByReactRootID[wrapperID] = componentInstance;
        if ("production" !== 'production') {
          ReactInstrumentation.debugTool.onMountRootComponent(componentInstance._renderedComponent._debugID);
        }
        return componentInstance;
      },
      renderSubtreeIntoContainer: function(parentComponent, nextElement, container, callback) {
        !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? "production" !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
        return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
      },
      _renderSubtreeIntoContainer: function(parentComponent, nextElement, container, callback) {
        ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
        !ReactElement.isValidElement(nextElement) ? "production" !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
        "production" !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
        var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);
        var nextContext;
        if (parentComponent) {
          var parentInst = ReactInstanceMap.get(parentComponent);
          nextContext = parentInst._processChildContext(parentInst._context);
        } else {
          nextContext = emptyObject;
        }
        var prevComponent = getTopLevelWrapperInContainer(container);
        if (prevComponent) {
          var prevWrappedElement = prevComponent._currentElement;
          var prevElement = prevWrappedElement.props;
          if (shouldUpdateReactComponent(prevElement, nextElement)) {
            var publicInst = prevComponent._renderedComponent.getPublicInstance();
            var updatedCallback = callback && function() {
              callback.call(publicInst);
            };
            ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
            return publicInst;
          } else {
            ReactMount.unmountComponentAtNode(container);
          }
        }
        var reactRootElement = getReactRootElementInContainer(container);
        var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
        var containerHasNonRootReactChild = hasNonRootReactChild(container);
        if ("production" !== 'production') {
          "production" !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
          if (!containerHasReactMarkup || reactRootElement.nextSibling) {
            var rootElementSibling = reactRootElement;
            while (rootElementSibling) {
              if (internalGetID(rootElementSibling)) {
                "production" !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
                break;
              }
              rootElementSibling = rootElementSibling.nextSibling;
            }
          }
        }
        var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
        var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
        if (callback) {
          callback.call(component);
        }
        return component;
      },
      render: function(nextElement, container, callback) {
        return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
      },
      unmountComponentAtNode: function(container) {
        "production" !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
        !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? "production" !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
        var prevComponent = getTopLevelWrapperInContainer(container);
        if (!prevComponent) {
          var containerHasNonRootReactChild = hasNonRootReactChild(container);
          var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
          if ("production" !== 'production') {
            "production" !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
          }
          return false;
        }
        delete instancesByReactRootID[prevComponent._instance.rootID];
        ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
        return true;
      },
      _mountImageIntoNode: function(markup, container, instance, shouldReuseMarkup, transaction) {
        !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? "production" !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
        if (shouldReuseMarkup) {
          var rootElement = getReactRootElementInContainer(container);
          if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
            ReactDOMComponentTree.precacheNode(instance, rootElement);
            return;
          } else {
            var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
            rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
            var rootMarkup = rootElement.outerHTML;
            rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
            var normalizedMarkup = markup;
            if ("production" !== 'production') {
              var normalizer;
              if (container.nodeType === ELEMENT_NODE_TYPE) {
                normalizer = document.createElement('div');
                normalizer.innerHTML = markup;
                normalizedMarkup = normalizer.innerHTML;
              } else {
                normalizer = document.createElement('iframe');
                document.body.appendChild(normalizer);
                normalizer.contentDocument.write(markup);
                normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
                document.body.removeChild(normalizer);
              }
            }
            var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
            var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
            !(container.nodeType !== DOC_NODE_TYPE) ? "production" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
            if ("production" !== 'production') {
              "production" !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
            }
          }
        }
        !(container.nodeType !== DOC_NODE_TYPE) ? "production" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
        if (transaction.useCreateElement) {
          while (container.lastChild) {
            container.removeChild(container.lastChild);
          }
          DOMLazyTree.insertTreeBefore(container, markup, null);
        } else {
          setInnerHTML(container, markup);
          ReactDOMComponentTree.precacheNode(instance, container.firstChild);
        }
        if ("production" !== 'production') {
          var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
          if (hostNode._debugID !== 0) {
            ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
          }
        }
      }
    };
    module.exports = ReactMount;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/renderSubtreeIntoContainer.js", ["npm:react@15.3.0/lib/ReactMount.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ReactMount = $__require('npm:react@15.3.0/lib/ReactMount.js');
  module.exports = ReactMount.renderSubtreeIntoContainer;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
  var ExecutionEnvironment = {
    canUseDOM: canUseDOM,
    canUseWorkers: typeof Worker !== 'undefined',
    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
    canUseViewport: canUseDOM && !!window.screen,
    isInWorker: !canUseDOM
  };
  module.exports = ExecutionEnvironment;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOM.js", ["npm:react@15.3.0/lib/ReactDOMComponentTree.js", "npm:react@15.3.0/lib/ReactDefaultInjection.js", "npm:react@15.3.0/lib/ReactMount.js", "npm:react@15.3.0/lib/ReactReconciler.js", "npm:react@15.3.0/lib/ReactUpdates.js", "npm:react@15.3.0/lib/ReactVersion.js", "npm:react@15.3.0/lib/findDOMNode.js", "npm:react@15.3.0/lib/getHostComponentFromComposite.js", "npm:react@15.3.0/lib/renderSubtreeIntoContainer.js", "npm:fbjs@0.8.3/lib/warning.js", "npm:fbjs@0.8.3/lib/ExecutionEnvironment.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ReactDOMComponentTree = $__require('npm:react@15.3.0/lib/ReactDOMComponentTree.js');
    var ReactDefaultInjection = $__require('npm:react@15.3.0/lib/ReactDefaultInjection.js');
    var ReactMount = $__require('npm:react@15.3.0/lib/ReactMount.js');
    var ReactReconciler = $__require('npm:react@15.3.0/lib/ReactReconciler.js');
    var ReactUpdates = $__require('npm:react@15.3.0/lib/ReactUpdates.js');
    var ReactVersion = $__require('npm:react@15.3.0/lib/ReactVersion.js');
    var findDOMNode = $__require('npm:react@15.3.0/lib/findDOMNode.js');
    var getHostComponentFromComposite = $__require('npm:react@15.3.0/lib/getHostComponentFromComposite.js');
    var renderSubtreeIntoContainer = $__require('npm:react@15.3.0/lib/renderSubtreeIntoContainer.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    ReactDefaultInjection.inject();
    var ReactDOM = {
      findDOMNode: findDOMNode,
      render: ReactMount.render,
      unmountComponentAtNode: ReactMount.unmountComponentAtNode,
      version: ReactVersion,
      unstable_batchedUpdates: ReactUpdates.batchedUpdates,
      unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
    };
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
        ComponentTree: {
          getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
          getNodeFromInstance: function(inst) {
            if (inst._renderedComponent) {
              inst = getHostComponentFromComposite(inst);
            }
            if (inst) {
              return ReactDOMComponentTree.getNodeFromInstance(inst);
            } else {
              return null;
            }
          }
        },
        Mount: ReactMount,
        Reconciler: ReactReconciler
      });
    }
    if ("production" !== 'production') {
      var ExecutionEnvironment = $__require('npm:fbjs@0.8.3/lib/ExecutionEnvironment.js');
      if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
          if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
            var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
            console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
          }
        }
        var testFunc = function testFn() {};
        "production" !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
        var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
        "production" !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
        var expectedFeatures = [Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];
        for (var i = 0; i < expectedFeatures.length; i++) {
          if (!expectedFeatures[i]) {
            "production" !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
            break;
          }
        }
      }
    }
    module.exports = ReactDOM;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-dom@15.3.0/index.js", ["npm:react@15.3.0/lib/ReactDOM.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react@15.3.0/lib/ReactDOM.js');
  return module.exports;
});

System.registerDynamic("npm:react-dom@15.3.0.js", ["npm:react-dom@15.3.0/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react-dom@15.3.0/index.js');
  return module.exports;
});

System.registerDynamic("npm:react-toastr@2.8.0/lib/ToastMessage/jQueryMixin.js", ["npm:react-dom@15.3.0.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _reactDom = $__require('npm:react-dom@15.3.0.js');
  var _reactDom2 = _interopRequireDefault(_reactDom);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function call_show_method($node, props) {
    $node[props.showMethod]({
      duration: props.showDuration,
      easing: props.showEasing
    });
  }
  exports.default = {
    getDefaultProps: function getDefaultProps() {
      return {
        style: {display: "none"},
        showMethod: "fadeIn",
        showDuration: 300,
        showEasing: "swing",
        hideMethod: "fadeOut",
        hideDuration: 1000,
        hideEasing: "swing",
        timeOut: 5000,
        extendedTimeOut: 1000
      };
    },
    getInitialState: function getInitialState() {
      return {
        intervalId: null,
        isHiding: false
      };
    },
    componentDidMount: function componentDidMount() {
      call_show_method(this._get_$_node(), this.props);
      if (this.props.timeOut > 0) {
        this._set_interval_id(setTimeout(this.hideToast, this.props.timeOut));
      }
    },
    handleMouseEnter: function handleMouseEnter() {
      clearTimeout(this.state.intervalId);
      this._set_interval_id(null);
      this._set_is_hiding(false);
      call_show_method(this._get_$_node().stop(true, true), this.props);
    },
    handleMouseLeave: function handleMouseLeave() {
      if (!this.state.isHiding && (this.props.timeOut > 0 || this.props.extendedTimeOut > 0)) {
        this._set_interval_id(setTimeout(this.hideToast, this.props.extendedTimeOut));
      }
    },
    hideToast: function hideToast(override) {
      if (this.state.isHiding || this.state.intervalId === null && !override) {
        return;
      }
      this.setState({isHiding: true});
      this._get_$_node()[this.props.hideMethod]({
        duration: this.props.hideDuration,
        easing: this.props.hideEasing,
        complete: this._handle_remove
      });
    },
    _get_$_node: function _get_$_node() {
      return jQuery(_reactDom2.default.findDOMNode(this));
    },
    _set_interval_id: function _set_interval_id(intervalId) {
      this.setState({intervalId: intervalId});
    },
    _set_is_hiding: function _set_is_hiding(isHiding) {
      this.setState({isHiding: isHiding});
    }
  };
  return module.exports;
});

System.registerDynamic("npm:react-toastr@2.8.0/lib/ToastMessage/index.js", ["npm:react@15.3.0.js", "npm:react-addons-update@15.3.0.js", "npm:classnames@2.2.5.js", "npm:react-toastr@2.8.0/lib/ToastMessage/animationMixin.js", "npm:react-toastr@2.8.0/lib/ToastMessage/jQueryMixin.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.jQuery = exports.animation = undefined;
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _reactAddonsUpdate = $__require('npm:react-addons-update@15.3.0.js');
  var _reactAddonsUpdate2 = _interopRequireDefault(_reactAddonsUpdate);
  var _classnames = $__require('npm:classnames@2.2.5.js');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _animationMixin = $__require('npm:react-toastr@2.8.0/lib/ToastMessage/animationMixin.js');
  var _animationMixin2 = _interopRequireDefault(_animationMixin);
  var _jQueryMixin = $__require('npm:react-toastr@2.8.0/lib/ToastMessage/jQueryMixin.js');
  var _jQueryMixin2 = _interopRequireDefault(_jQueryMixin);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function noop() {}
  var ToastMessageSpec = {
    displayName: "ToastMessage",
    getDefaultProps: function getDefaultProps() {
      var iconClassNames = {
        error: "toast-error",
        info: "toast-info",
        success: "toast-success",
        warning: "toast-warning"
      };
      return {
        className: "toast",
        iconClassNames: iconClassNames,
        titleClassName: "toast-title",
        messageClassName: "toast-message",
        tapToDismiss: true,
        closeButton: false
      };
    },
    handleOnClick: function handleOnClick(event) {
      this.props.handleOnClick(event);
      if (this.props.tapToDismiss) {
        this.hideToast(true);
      }
    },
    _handle_close_button_click: function _handle_close_button_click(event) {
      event.stopPropagation();
      this.hideToast(true);
    },
    _handle_remove: function _handle_remove() {
      this.props.handleRemove(this.props.toastId);
    },
    _render_close_button: function _render_close_button() {
      return this.props.closeButton ? _react2.default.createElement("button", {
        className: "toast-close-button",
        role: "button",
        onClick: this._handle_close_button_click,
        dangerouslySetInnerHTML: {__html: "&times;"}
      }) : false;
    },
    _render_title_element: function _render_title_element() {
      return this.props.title ? _react2.default.createElement("div", {className: this.props.titleClassName}, this.props.title) : false;
    },
    _render_message_element: function _render_message_element() {
      return this.props.message ? _react2.default.createElement("div", {className: this.props.messageClassName}, this.props.message) : false;
    },
    render: function render() {
      var iconClassName = this.props.iconClassName || this.props.iconClassNames[this.props.type];
      return _react2.default.createElement("div", {
        className: (0, _classnames2.default)(this.props.className, iconClassName),
        style: this.props.style,
        onClick: this.handleOnClick,
        onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave
      }, this._render_close_button(), this._render_title_element(), this._render_message_element());
    }
  };
  var animation = exports.animation = _react2.default.createClass((0, _reactAddonsUpdate2.default)(ToastMessageSpec, {
    displayName: {$set: "ToastMessage.animation"},
    mixins: {$set: [_animationMixin2.default]}
  }));
  var jQuery = exports.jQuery = _react2.default.createClass((0, _reactAddonsUpdate2.default)(ToastMessageSpec, {
    displayName: {$set: "ToastMessage.jQuery"},
    mixins: {$set: [_jQueryMixin2.default]}
  }));
  ToastMessageSpec.handleMouseEnter = noop;
  ToastMessageSpec.handleMouseLeave = noop;
  ToastMessageSpec.hideToast = noop;
  var ToastMessage = _react2.default.createClass(ToastMessageSpec);
  ToastMessage.animation = animation;
  ToastMessage.jQuery = jQuery;
  exports.default = ToastMessage;
  return module.exports;
});

System.registerDynamic("npm:react-toastr@2.8.0/lib/index.js", ["npm:react-toastr@2.8.0/lib/ToastContainer.js", "npm:react-toastr@2.8.0/lib/ToastMessage/index.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.ToastMessage = exports.ToastContainer = undefined;
  var _ToastContainer = $__require('npm:react-toastr@2.8.0/lib/ToastContainer.js');
  var _ToastContainer2 = _interopRequireDefault(_ToastContainer);
  var _ToastMessage = $__require('npm:react-toastr@2.8.0/lib/ToastMessage/index.js');
  var _ToastMessage2 = _interopRequireDefault(_ToastMessage);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  exports.ToastContainer = _ToastContainer2.default;
  exports.ToastMessage = _ToastMessage2.default;
  return module.exports;
});

System.registerDynamic("npm:react-toastr@2.8.0.js", ["npm:react-toastr@2.8.0/lib/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react-toastr@2.8.0/lib/index.js');
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/Notification.js", ["npm:react@15.3.0.js", "npm:react-toastr@2.8.0.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _reactToastr = $__require('npm:react-toastr@2.8.0.js');
  var ToastrMessageFactory = _react2['default'].createFactory(_reactToastr.ToastMessage.animation);
  var Notification = (function(_Component) {
    _inherits(Notification, _Component);
    function Notification() {
      _classCallCheck(this, Notification);
      _get(Object.getPrototypeOf(Notification.prototype), 'constructor', this).apply(this, arguments);
    }
    _createClass(Notification, [{
      key: 'notice',
      value: function notice(type, msg, title) {
        this.refs.toastr[type](msg, title, {
          mode: 'single',
          timeOut: 5000,
          extendedTimeOut: 1000,
          showAnimation: 'animated  bounceIn',
          hideAnimation: 'animated bounceOut'
        });
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2['default'].createElement(_reactToastr.ToastContainer, {
          ref: 'toastr',
          toastMessageFactory: ToastrMessageFactory,
          id: 'toast-container',
          className: 'toast-top-right'
        });
      }
    }]);
    return Notification;
  })(_react.Component);
  exports['default'] = Notification;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/toolbar/ToolBar.js", ["npm:react@15.3.0.js", "npm:classnames@2.2.5.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js", "npm:react-bootstrap-table@2.4.2/lib/Editor.js", "npm:react-bootstrap-table@2.4.2/lib/Notification.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    Object.defineProperty(exports, '__esModule', {value: true});
    var _createClass = (function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ('value' in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    })();
    var _get = function get(_x, _x2, _x3) {
      var _again = true;
      _function: while (_again) {
        var object = _x,
            property = _x2,
            receiver = _x3;
        _again = false;
        if (object === null)
          object = Function.prototype;
        var desc = Object.getOwnPropertyDescriptor(object, property);
        if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);
          if (parent === null) {
            return undefined;
          } else {
            _x = parent;
            _x2 = property;
            _x3 = receiver;
            _again = true;
            desc = parent = undefined;
            continue _function;
          }
        } else if ('value' in desc) {
          return desc.value;
        } else {
          var getter = desc.get;
          if (getter === undefined) {
            return undefined;
          }
          return getter.call(receiver);
        }
      }
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
      }
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        }});
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var _react = $__require('npm:react@15.3.0.js');
    var _react2 = _interopRequireDefault(_react);
    var _classnames = $__require('npm:classnames@2.2.5.js');
    var _classnames2 = _interopRequireDefault(_classnames);
    var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
    var _Const2 = _interopRequireDefault(_Const);
    var _Editor = $__require('npm:react-bootstrap-table@2.4.2/lib/Editor.js');
    var _Editor2 = _interopRequireDefault(_Editor);
    var _NotificationJs = $__require('npm:react-bootstrap-table@2.4.2/lib/Notification.js');
    var _NotificationJs2 = _interopRequireDefault(_NotificationJs);
    var ToolBar = (function(_Component) {
      _inherits(ToolBar, _Component);
      _createClass(ToolBar, null, [{
        key: 'modalSeq',
        value: 0,
        enumerable: true
      }]);
      function ToolBar(props) {
        var _this = this,
            _arguments2 = arguments;
        _classCallCheck(this, ToolBar);
        _get(Object.getPrototypeOf(ToolBar.prototype), 'constructor', this).call(this, props);
        this.handleSaveBtnClick = function() {
          var newObj = _this.checkAndParseForm();
          if (!newObj) {
            return;
          }
          var msg = _this.props.onAddRow(newObj);
          if (msg) {
            _this.refs.notifier.notice('error', msg, 'Pressed ESC can cancel');
            _this.clearTimeout();
            _this.setState({
              shakeEditor: true,
              validateState: 'this is hack for prevent bootstrap modal hide'
            });
            _this.timeouteClear = setTimeout(function() {
              _this.setState({shakeEditor: false});
            }, 300);
          } else {
            _this.setState({
              validateState: null,
              shakeEditor: false
            }, function() {
              document.querySelector('.modal-backdrop').click();
              document.querySelector('.' + _this.modalClassName).click();
            });
            _this.refs.form.reset();
          }
        };
        this.handleShowOnlyToggle = function() {
          _this.setState({showSelected: !_this.state.showSelected});
          _this.props.onShowOnlySelected();
        };
        this.handleDropRowBtnClick = function() {
          _this.props.onDropRow();
        };
        this.handleDebounce = function(func, wait, immediate) {
          var timeout = undefined;
          return function() {
            var later = function later() {
              timeout = null;
              if (!immediate) {
                func.apply(_this, _arguments2);
              }
            };
            var callNow = immediate && !timeout;
            clearTimeout(timeout);
            timeout = setTimeout(later, wait || 0);
            if (callNow) {
              func.appy(_this, _arguments2);
            }
          };
        };
        this.handleKeyUp = function(event) {
          event.persist();
          _this.debounceCallback(event);
        };
        this.handleExportCSV = function() {
          _this.props.onExportCSV();
        };
        this.handleClearBtnClick = function() {
          _this.refs.seachInput.value = '';
          _this.props.onSearch('');
        };
        this.timeouteClear = 0;
        this.modalClassName;
        this.state = {
          isInsertRowTrigger: true,
          validateState: null,
          shakeEditor: false,
          showSelected: false
        };
      }
      _createClass(ToolBar, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
          var _this2 = this;
          var delay = this.props.searchDelayTime ? this.props.searchDelayTime : 0;
          this.debounceCallback = this.handleDebounce(function() {
            _this2.props.onSearch(_this2.refs.seachInput.value);
          }, delay);
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          this.clearTimeout();
        }
      }, {
        key: 'clearTimeout',
        value: (function(_clearTimeout) {
          function clearTimeout() {
            return _clearTimeout.apply(this, arguments);
          }
          clearTimeout.toString = function() {
            return _clearTimeout.toString();
          };
          return clearTimeout;
        })(function() {
          if (this.timeouteClear) {
            clearTimeout(this.timeouteClear);
            this.timeouteClear = 0;
          }
        })
      }, {
        key: 'checkAndParseForm',
        value: function checkAndParseForm() {
          var _this3 = this;
          var newObj = {};
          var validateState = {};
          var isValid = true;
          var tempValue = undefined;
          var tempMsg = undefined;
          this.props.columns.forEach(function(column, i) {
            if (column.autoValue) {
              var time = new Date().getTime();
              tempValue = typeof column.autoValue === 'function' ? column.autoValue() : 'autovalue-' + time;
            } else if (column.hiddenOnInsert) {
              tempValue = '';
            } else {
              var dom = this.refs[column.field + i];
              tempValue = dom.value;
              if (column.editable && column.editable.type === 'checkbox') {
                var values = tempValue.split(':');
                tempValue = dom.checked ? values[0] : values[1];
              }
              if (column.editable && column.editable.validator) {
                tempMsg = column.editable.validator(tempValue);
                if (tempMsg !== true) {
                  isValid = false;
                  validateState[column.field] = tempMsg;
                }
              }
            }
            newObj[column.field] = tempValue;
          }, this);
          if (isValid) {
            return newObj;
          } else {
            this.clearTimeout();
            this.setState({
              validateState: validateState,
              shakeEditor: true
            });
            this.refs.notifier.notice('error', 'Form validate errors, please checking!', 'Pressed ESC can cancel');
            this.timeouteClear = setTimeout(function() {
              _this3.setState({shakeEditor: false});
            }, 300);
            return null;
          }
        }
      }, {
        key: 'handleCloseBtn',
        value: function handleCloseBtn() {
          this.refs.warning.style.display = 'none';
        }
      }, {
        key: 'render',
        value: function render() {
          this.modalClassName = 'bs-table-modal-sm' + ToolBar.modalSeq++;
          var insertBtn = null;
          var deleteBtn = null;
          var exportCSV = null;
          var showSelectedOnlyBtn = null;
          if (this.props.enableInsert) {
            insertBtn = _react2['default'].createElement('button', {
              type: 'button',
              className: 'btn btn-info react-bs-table-add-btn',
              'data-toggle': 'modal',
              'data-target': '.' + this.modalClassName
            }, _react2['default'].createElement('i', {className: 'glyphicon glyphicon-plus'}), ' ', this.props.insertText);
          }
          if (this.props.enableDelete) {
            deleteBtn = _react2['default'].createElement('button', {
              type: 'button',
              className: 'btn btn-warning react-bs-table-del-btn',
              'data-toggle': 'tooltip',
              'data-placement': 'right',
              title: 'Drop selected row',
              onClick: this.handleDropRowBtnClick
            }, _react2['default'].createElement('i', {className: 'glyphicon glyphicon-trash'}), ' ', this.props.deleteText);
          }
          if (this.props.enableShowOnlySelected) {
            showSelectedOnlyBtn = _react2['default'].createElement('button', {
              type: 'button',
              onClick: this.handleShowOnlyToggle,
              className: 'btn btn-primary',
              'data-toggle': 'button',
              'aria-pressed': 'false'
            }, this.state.showSelected ? _Const2['default'].SHOW_ALL : _Const2['default'].SHOW_ONLY_SELECT);
          }
          if (this.props.enableExportCSV) {
            exportCSV = _react2['default'].createElement('button', {
              type: 'button',
              className: 'btn btn-success',
              onClick: this.handleExportCSV
            }, _react2['default'].createElement('i', {className: 'glyphicon glyphicon-export'}), this.props.exportCSVText);
          }
          var searchTextInput = this.renderSearchPanel();
          var modal = this.props.enableInsert ? this.renderInsertRowModal() : null;
          return _react2['default'].createElement('div', {className: 'row'}, _react2['default'].createElement('div', {className: 'col-xs-12 col-sm-6 col-md-6 col-lg-8'}, _react2['default'].createElement('div', {
            className: 'btn-group btn-group-sm',
            role: 'group'
          }, exportCSV, insertBtn, deleteBtn, showSelectedOnlyBtn)), _react2['default'].createElement('div', {className: 'col-xs-12 col-sm-6 col-md-6 col-lg-4'}, searchTextInput), _react2['default'].createElement(_NotificationJs2['default'], {ref: 'notifier'}), modal);
        }
      }, {
        key: 'renderSearchPanel',
        value: function renderSearchPanel() {
          if (this.props.enableSearch) {
            var classNames = 'form-group form-group-sm react-bs-table-search-form';
            var clearBtn = null;
            if (this.props.clearSearch) {
              clearBtn = _react2['default'].createElement('span', {className: 'input-group-btn'}, _react2['default'].createElement('button', {
                className: 'btn btn-default',
                type: 'button',
                onClick: this.handleClearBtnClick
              }, 'Clear'));
              classNames += ' input-group input-group-sm';
            }
            return _react2['default'].createElement('div', {className: classNames}, _react2['default'].createElement('input', {
              ref: 'seachInput',
              className: 'form-control',
              type: 'text',
              defaultValue: this.props.defaultSearch,
              placeholder: this.props.searchPlaceholder ? this.props.searchPlaceholder : 'Search',
              onKeyUp: this.handleKeyUp
            }), clearBtn);
          } else {
            return null;
          }
        }
      }, {
        key: 'renderInsertRowModal',
        value: function renderInsertRowModal() {
          var _this4 = this;
          var validateState = this.state.validateState || {};
          var shakeEditor = this.state.shakeEditor;
          var inputField = this.props.columns.map(function(column, i) {
            var editable = column.editable;
            var format = column.format;
            var field = column.field;
            var name = column.name;
            var autoValue = column.autoValue;
            var hiddenOnInsert = column.hiddenOnInsert;
            var attr = {
              ref: field + i,
              placeholder: editable.placeholder ? editable.placeholder : name
            };
            if (autoValue || hiddenOnInsert) {
              return null;
            }
            var error = validateState[field] ? _react2['default'].createElement('span', {className: 'help-block bg-danger'}, validateState[field]) : null;
            return _react2['default'].createElement('div', {
              className: 'form-group',
              key: field
            }, _react2['default'].createElement('label', null, name), (0, _Editor2['default'])(editable, attr, format, '', undefined, _this4.props.ignoreEditable), error);
          });
          var modalClass = (0, _classnames2['default'])('modal', 'fade', this.modalClassName, {'in': shakeEditor || this.state.validateState});
          var dialogClass = (0, _classnames2['default'])('modal-dialog', 'modal-sm', {
            'animated': shakeEditor,
            'shake': shakeEditor
          });
          return _react2['default'].createElement('div', {
            ref: 'modal',
            className: modalClass,
            tabIndex: '-1',
            role: 'dialog'
          }, _react2['default'].createElement('div', {className: dialogClass}, _react2['default'].createElement('div', {className: 'modal-content'}, _react2['default'].createElement('div', {className: 'modal-header'}, _react2['default'].createElement('button', {
            type: 'button',
            className: 'close',
            'data-dismiss': 'modal',
            'aria-label': 'Close'
          }, _react2['default'].createElement('span', {'aria-hidden': 'true'}, '×')), _react2['default'].createElement('h4', {className: 'modal-title'}, 'New Record')), _react2['default'].createElement('div', {className: 'modal-body'}, _react2['default'].createElement('form', {ref: 'form'}, inputField)), _react2['default'].createElement('div', {className: 'modal-footer'}, _react2['default'].createElement('button', {
            type: 'button',
            className: 'btn btn-default',
            'data-dismiss': 'modal'
          }, this.props.closeText), _react2['default'].createElement('button', {
            type: 'button',
            className: 'btn btn-primary',
            onClick: this.handleSaveBtnClick
          }, this.props.saveText)))));
        }
      }]);
      return ToolBar;
    })(_react.Component);
    ToolBar.propTypes = {
      onAddRow: _react.PropTypes.func,
      onDropRow: _react.PropTypes.func,
      onShowOnlySelected: _react.PropTypes.func,
      enableInsert: _react.PropTypes.bool,
      enableDelete: _react.PropTypes.bool,
      enableSearch: _react.PropTypes.bool,
      enableShowOnlySelected: _react.PropTypes.bool,
      columns: _react.PropTypes.array,
      searchPlaceholder: _react.PropTypes.string,
      exportCSVText: _react.PropTypes.string,
      insertText: _react.PropTypes.string,
      deleteText: _react.PropTypes.string,
      saveText: _react.PropTypes.string,
      closeText: _react.PropTypes.string,
      clearSearch: _react.PropTypes.bool,
      ignoreEditable: _react.PropTypes.bool,
      defaultSearch: _react.PropTypes.string
    };
    ToolBar.defaultProps = {
      enableInsert: false,
      enableDelete: false,
      enableSearch: false,
      enableShowOnlySelected: false,
      clearSearch: false,
      ignoreEditable: false,
      exportCSVText: _Const2['default'].EXPORT_CSV_TEXT,
      insertText: _Const2['default'].INSERT_BTN_TEXT,
      deleteText: _Const2['default'].DELETE_BTN_TEXT,
      saveText: _Const2['default'].SAVE_BTN_TEXT,
      closeText: _Const2['default'].CLOSE_BTN_TEXT
    };
    exports['default'] = ToolBar;
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/TableFilter.js", ["npm:react@15.3.0.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js", "npm:classnames@2.2.5.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var _classnames = $__require('npm:classnames@2.2.5.js');
  var _classnames2 = _interopRequireDefault(_classnames);
  var TableFilter = (function(_Component) {
    _inherits(TableFilter, _Component);
    function TableFilter(props) {
      var _this = this;
      _classCallCheck(this, TableFilter);
      _get(Object.getPrototypeOf(TableFilter.prototype), 'constructor', this).call(this, props);
      this.handleKeyUp = function(e) {
        var _e$currentTarget = e.currentTarget;
        var value = _e$currentTarget.value;
        var name = _e$currentTarget.name;
        if (value.trim() === '') {
          delete _this.filterObj[name];
        } else {
          _this.filterObj[name] = value;
        }
        _this.props.onFilter(_this.filterObj);
      };
      this.filterObj = {};
    }
    _createClass(TableFilter, [{
      key: 'render',
      value: function render() {
        var _props = this.props;
        var striped = _props.striped;
        var condensed = _props.condensed;
        var rowSelectType = _props.rowSelectType;
        var columns = _props.columns;
        var tableClasses = (0, _classnames2['default'])('table', {
          'table-striped': striped,
          'table-condensed': condensed
        });
        var selectRowHeader = null;
        if (rowSelectType === _Const2['default'].ROW_SELECT_SINGLE || rowSelectType === _Const2['default'].ROW_SELECT_MULTI) {
          var style = {
            width: 35,
            paddingLeft: 0,
            paddingRight: 0
          };
          selectRowHeader = _react2['default'].createElement('th', {
            style: style,
            key: -1
          }, 'Filter');
        }
        var filterField = columns.map(function(column) {
          var hidden = column.hidden;
          var width = column.width;
          var name = column.name;
          var thStyle = {
            display: hidden ? 'none' : null,
            width: width
          };
          return _react2['default'].createElement('th', {
            key: name,
            style: thStyle
          }, _react2['default'].createElement('div', {className: 'th-inner table-header-column'}, _react2['default'].createElement('input', {
            size: '10',
            type: 'text',
            placeholder: name,
            name: name,
            onKeyUp: this.handleKeyUp
          })));
        }, this);
        return _react2['default'].createElement('table', {
          className: tableClasses,
          style: {marginTop: 5}
        }, _react2['default'].createElement('thead', null, _react2['default'].createElement('tr', {style: {borderBottomStyle: 'hidden'}}, selectRowHeader, filterField)));
      }
    }]);
    return TableFilter;
  })(_react.Component);
  TableFilter.propTypes = {
    columns: _react.PropTypes.array,
    rowSelectType: _react.PropTypes.string,
    onFilter: _react.PropTypes.func
  };
  exports['default'] = TableFilter;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/store/TableDataStore.js", ["npm:react-bootstrap-table@2.4.2/lib/Const.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  function _sort(arr, sortField, order, sortFunc, sortFuncExtraData) {
    order = order.toLowerCase();
    var isDesc = order === _Const2['default'].SORT_DESC;
    arr.sort(function(a, b) {
      if (sortFunc) {
        return sortFunc(a, b, order, sortField, sortFuncExtraData);
      } else {
        var valueA = a[sortField] === null ? '' : a[sortField];
        var valueB = b[sortField] === null ? '' : b[sortField];
        if (isDesc) {
          if (typeof valueB === 'string') {
            return valueB.localeCompare(valueA);
          } else {
            return valueA > valueB ? -1 : valueA < valueB ? 1 : 0;
          }
        } else {
          if (typeof valueA === 'string') {
            return valueA.localeCompare(valueB);
          } else {
            return valueA < valueB ? -1 : valueA > valueB ? 1 : 0;
          }
        }
      }
    });
    return arr;
  }
  var TableDataStore = (function() {
    function TableDataStore(data) {
      _classCallCheck(this, TableDataStore);
      this.data = data;
      this.colInfos = null;
      this.filteredData = null;
      this.isOnFilter = false;
      this.filterObj = null;
      this.searchText = null;
      this.sortObj = null;
      this.pageObj = {};
      this.selected = [];
      this.multiColumnSearch = false;
      this.showOnlySelected = false;
      this.remote = false;
    }
    _createClass(TableDataStore, [{
      key: 'setProps',
      value: function setProps(props) {
        this.keyField = props.keyField;
        this.enablePagination = props.isPagination;
        this.colInfos = props.colInfos;
        this.remote = props.remote;
        this.multiColumnSearch = props.multiColumnSearch;
      }
    }, {
      key: 'setData',
      value: function setData(data) {
        this.data = data;
        if (this.remote) {
          return;
        }
        this._refresh(true);
      }
    }, {
      key: 'getColInfos',
      value: function getColInfos() {
        return this.colInfos;
      }
    }, {
      key: 'getSortInfo',
      value: function getSortInfo() {
        return this.sortObj;
      }
    }, {
      key: 'setSortInfo',
      value: function setSortInfo(order, sortField) {
        this.sortObj = {
          order: order,
          sortField: sortField
        };
      }
    }, {
      key: 'setSelectedRowKey',
      value: function setSelectedRowKey(selectedRowKeys) {
        this.selected = selectedRowKeys;
      }
    }, {
      key: 'getRowByKey',
      value: function getRowByKey(keys) {
        var _this = this;
        return keys.map(function(key) {
          var result = _this.data.filter(function(d) {
            return d[_this.keyField] === key;
          });
          if (result.length !== 0)
            return result[0];
        });
      }
    }, {
      key: 'getSelectedRowKeys',
      value: function getSelectedRowKeys() {
        return this.selected;
      }
    }, {
      key: 'getCurrentDisplayData',
      value: function getCurrentDisplayData() {
        if (this.isOnFilter)
          return this.filteredData;
        else
          return this.data;
      }
    }, {
      key: '_refresh',
      value: function _refresh(skipSorting) {
        if (this.isOnFilter) {
          if (this.filterObj !== null)
            this.filter(this.filterObj);
          if (this.searchText !== null)
            this.search(this.searchText);
        }
        if (!skipSorting && this.sortObj) {
          this.sort(this.sortObj.order, this.sortObj.sortField);
        }
      }
    }, {
      key: 'ignoreNonSelected',
      value: function ignoreNonSelected() {
        var _this2 = this;
        this.showOnlySelected = !this.showOnlySelected;
        if (this.showOnlySelected) {
          this.isOnFilter = true;
          this.filteredData = this.data.filter(function(row) {
            var result = _this2.selected.find(function(x) {
              return row[_this2.keyField] === x;
            });
            return typeof result !== 'undefined' ? true : false;
          });
        } else {
          this.isOnFilter = false;
        }
      }
    }, {
      key: 'sort',
      value: function sort(order, sortField) {
        this.setSortInfo(order, sortField);
        var currentDisplayData = this.getCurrentDisplayData();
        if (!this.colInfos[sortField])
          return this;
        var _colInfos$sortField = this.colInfos[sortField];
        var sortFunc = _colInfos$sortField.sortFunc;
        var sortFuncExtraData = _colInfos$sortField.sortFuncExtraData;
        currentDisplayData = _sort(currentDisplayData, sortField, order, sortFunc, sortFuncExtraData);
        return this;
      }
    }, {
      key: 'page',
      value: function page(_page, sizePerPage) {
        this.pageObj.end = _page * sizePerPage - 1;
        this.pageObj.start = this.pageObj.end - (sizePerPage - 1);
        return this;
      }
    }, {
      key: 'edit',
      value: function edit(newVal, rowIndex, fieldName) {
        var currentDisplayData = this.getCurrentDisplayData();
        var rowKeyCache = undefined;
        if (!this.enablePagination) {
          currentDisplayData[rowIndex][fieldName] = newVal;
          rowKeyCache = currentDisplayData[rowIndex][this.keyField];
        } else {
          currentDisplayData[this.pageObj.start + rowIndex][fieldName] = newVal;
          rowKeyCache = currentDisplayData[this.pageObj.start + rowIndex][this.keyField];
        }
        if (this.isOnFilter) {
          this.data.forEach(function(row) {
            if (row[this.keyField] === rowKeyCache) {
              row[fieldName] = newVal;
            }
          }, this);
          if (this.filterObj !== null)
            this.filter(this.filterObj);
          if (this.searchText !== null)
            this.search(this.searchText);
        }
        return this;
      }
    }, {
      key: 'addAtBegin',
      value: function addAtBegin(newObj) {
        if (!newObj[this.keyField] || newObj[this.keyField].toString() === '') {
          throw this.keyField + ' can\'t be empty value.';
        }
        var currentDisplayData = this.getCurrentDisplayData();
        currentDisplayData.forEach(function(row) {
          if (row[this.keyField].toString() === newObj[this.keyField].toString()) {
            throw this.keyField + ' ' + newObj[this.keyField] + ' already exists';
          }
        }, this);
        currentDisplayData.unshift(newObj);
        if (this.isOnFilter) {
          this.data.unshift(newObj);
        }
        this._refresh(false);
      }
    }, {
      key: 'add',
      value: function add(newObj) {
        if (!newObj[this.keyField] || newObj[this.keyField].toString() === '') {
          throw this.keyField + ' can\'t be empty value.';
        }
        var currentDisplayData = this.getCurrentDisplayData();
        currentDisplayData.forEach(function(row) {
          if (row[this.keyField].toString() === newObj[this.keyField].toString()) {
            throw this.keyField + ' ' + newObj[this.keyField] + ' already exists';
          }
        }, this);
        currentDisplayData.push(newObj);
        if (this.isOnFilter) {
          this.data.push(newObj);
        }
        this._refresh(false);
      }
    }, {
      key: 'remove',
      value: function remove(rowKey) {
        var _this3 = this;
        var currentDisplayData = this.getCurrentDisplayData();
        var result = currentDisplayData.filter(function(row) {
          return rowKey.indexOf(row[_this3.keyField]) === -1;
        });
        if (this.isOnFilter) {
          this.data = this.data.filter(function(row) {
            return rowKey.indexOf(row[_this3.keyField]) === -1;
          });
          this.filteredData = result;
        } else {
          this.data = result;
        }
      }
    }, {
      key: 'filter',
      value: function filter(filterObj) {
        if (Object.keys(filterObj).length === 0) {
          this.filteredData = null;
          this.isOnFilter = false;
          this.filterObj = null;
          if (this.searchText)
            this._search(this.data);
        } else {
          var source = this.data;
          this.filterObj = filterObj;
          if (this.searchText) {
            this._search(source);
            source = this.filteredData;
          }
          this._filter(source);
        }
      }
    }, {
      key: 'filterNumber',
      value: function filterNumber(targetVal, filterVal, comparator) {
        var valid = true;
        switch (comparator) {
          case '=':
            {
              if (targetVal != filterVal) {
                valid = false;
              }
              break;
            }
          case '>':
            {
              if (targetVal <= filterVal) {
                valid = false;
              }
              break;
            }
          case '>=':
            {
              if (targetVal < filterVal) {
                valid = false;
              }
              break;
            }
          case '<':
            {
              if (targetVal >= filterVal) {
                valid = false;
              }
              break;
            }
          case '<=':
            {
              if (targetVal > filterVal) {
                valid = false;
              }
              break;
            }
          case '!=':
            {
              if (targetVal == filterVal) {
                valid = false;
              }
              break;
            }
          default:
            {
              console.error('Number comparator provided is not supported');
              break;
            }
        }
        return valid;
      }
    }, {
      key: 'filterDate',
      value: function filterDate(targetVal, filterVal, comparator) {
        var valid = true;
        switch (comparator) {
          case '=':
            {
              if (targetVal != filterVal) {
                valid = false;
              }
              break;
            }
          case '>':
            {
              if (targetVal <= filterVal) {
                valid = false;
              }
              break;
            }
          case '>=':
            {
              if (targetVal < filterVal) {
                valid = false;
              }
              break;
            }
          case '<':
            {
              if (targetVal >= filterVal) {
                valid = false;
              }
              break;
            }
          case '<=':
            {
              if (targetVal > filterVal) {
                valid = false;
              }
              break;
            }
          case '!=':
            {
              if (targetVal == filterVal) {
                valid = false;
              }
              break;
            }
          default:
            {
              console.error('Date comparator provided is not supported');
              break;
            }
        }
        return valid;
      }
    }, {
      key: 'filterRegex',
      value: function filterRegex(targetVal, filterVal) {
        try {
          return new RegExp(filterVal, 'i').test(targetVal);
        } catch (e) {
          console.error('Invalid regular expression');
          return true;
        }
      }
    }, {
      key: 'filterCustom',
      value: function filterCustom(targetVal, filterVal, callbackInfo) {
        if (callbackInfo !== null && typeof callbackInfo === 'object') {
          return callbackInfo.callback(targetVal, callbackInfo.callbackParameters);
        }
        return this.filterText(targetVal, filterVal);
      }
    }, {
      key: 'filterText',
      value: function filterText(targetVal, filterVal) {
        if (targetVal.toString().toLowerCase().indexOf(filterVal) === -1) {
          return false;
        }
        return true;
      }
    }, {
      key: 'search',
      value: function search(searchText) {
        if (searchText.trim() === '') {
          this.filteredData = null;
          this.isOnFilter = false;
          this.searchText = null;
          if (this.filterObj)
            this._filter(this.data);
        } else {
          var source = this.data;
          this.searchText = searchText;
          if (this.filterObj) {
            this._filter(source);
            source = this.filteredData;
          }
          this._search(source);
        }
      }
    }, {
      key: '_filter',
      value: function _filter(source) {
        var _this4 = this;
        var filterObj = this.filterObj;
        this.filteredData = source.filter(function(row, r) {
          var valid = true;
          var filterVal = undefined;
          for (var key in filterObj) {
            var targetVal = row[key];
            if (targetVal === null || targetVal === undefined) {
              targetVal = '';
            }
            switch (filterObj[key].type) {
              case _Const2['default'].FILTER_TYPE.NUMBER:
                {
                  filterVal = filterObj[key].value.number;
                  break;
                }
              case _Const2['default'].FILTER_TYPE.CUSTOM:
                {
                  filterVal = typeof filterObj[key].value === 'object' ? undefined : typeof filterObj[key].value === 'string' ? filterObj[key].value.toLowerCase() : filterObj[key].value;
                  break;
                }
              case _Const2['default'].FILTER_TYPE.DATE:
                {
                  filterVal = filterObj[key].value.date;
                  break;
                }
              case _Const2['default'].FILTER_TYPE.REGEX:
                {
                  filterVal = filterObj[key].value;
                  break;
                }
              default:
                {
                  filterVal = typeof filterObj[key].value === 'string' ? filterObj[key].value.toLowerCase() : filterObj[key].value;
                  if (filterVal === undefined) {
                    filterVal = filterObj[key].toLowerCase();
                  }
                  break;
                }
            }
            var format = undefined,
                filterFormatted = undefined,
                formatExtraData = undefined,
                filterValue = undefined;
            if (_this4.colInfos[key]) {
              format = _this4.colInfos[key].format;
              filterFormatted = _this4.colInfos[key].filterFormatted;
              formatExtraData = _this4.colInfos[key].formatExtraData;
              filterValue = _this4.colInfos[key].filterValue;
              if (filterFormatted && format) {
                targetVal = format(row[key], row, formatExtraData, r);
              } else if (filterValue) {
                targetVal = filterValue(row[key], row);
              }
            }
            switch (filterObj[key].type) {
              case _Const2['default'].FILTER_TYPE.NUMBER:
                {
                  valid = _this4.filterNumber(targetVal, filterVal, filterObj[key].value.comparator);
                  break;
                }
              case _Const2['default'].FILTER_TYPE.DATE:
                {
                  valid = _this4.filterDate(targetVal, filterVal, filterObj[key].value.comparator);
                  break;
                }
              case _Const2['default'].FILTER_TYPE.REGEX:
                {
                  valid = _this4.filterRegex(targetVal, filterVal);
                  break;
                }
              case _Const2['default'].FILTER_TYPE.CUSTOM:
                {
                  valid = _this4.filterCustom(targetVal, filterVal, filterObj[key].value);
                  break;
                }
              default:
                {
                  if (filterObj[key].type === _Const2['default'].FILTER_TYPE.SELECT && filterFormatted && filterFormatted && format) {
                    filterVal = format(filterVal, row, formatExtraData, r);
                  }
                  valid = _this4.filterText(targetVal, filterVal);
                  break;
                }
            }
            if (!valid) {
              break;
            }
          }
          return valid;
        });
        this.isOnFilter = true;
      }
    }, {
      key: '_search',
      value: function _search(source) {
        var _this5 = this;
        var searchTextArray = [];
        if (this.multiColumnSearch) {
          searchTextArray = this.searchText.split(' ');
        } else {
          searchTextArray.push(this.searchText);
        }
        this.filteredData = source.filter(function(row, r) {
          var keys = Object.keys(row);
          var valid = false;
          for (var i = 0,
              keysLength = keys.length; i < keysLength; i++) {
            var key = keys[i];
            if (_this5.colInfos[key] && row[key]) {
              var _colInfos$key = _this5.colInfos[key];
              var format = _colInfos$key.format;
              var filterFormatted = _colInfos$key.filterFormatted;
              var filterValue = _colInfos$key.filterValue;
              var formatExtraData = _colInfos$key.formatExtraData;
              var searchable = _colInfos$key.searchable;
              var targetVal = row[key];
              if (searchable) {
                if (filterFormatted && format) {
                  targetVal = format(targetVal, row, formatExtraData, r);
                } else if (filterValue) {
                  targetVal = filterValue(targetVal, row);
                }
                for (var j = 0,
                    textLength = searchTextArray.length; j < textLength; j++) {
                  var filterVal = searchTextArray[j].toLowerCase();
                  if (targetVal.toString().toLowerCase().indexOf(filterVal) !== -1) {
                    valid = true;
                    break;
                  }
                }
              }
            }
          }
          return valid;
        });
        this.isOnFilter = true;
      }
    }, {
      key: 'getDataIgnoringPagination',
      value: function getDataIgnoringPagination() {
        return this.getCurrentDisplayData();
      }
    }, {
      key: 'get',
      value: function get() {
        var _data = this.getCurrentDisplayData();
        if (_data.length === 0)
          return _data;
        if (this.remote || !this.enablePagination) {
          return _data;
        } else {
          var result = [];
          for (var i = this.pageObj.start; i <= this.pageObj.end; i++) {
            result.push(_data[i]);
            if (i + 1 === _data.length)
              break;
          }
          return result;
        }
      }
    }, {
      key: 'getKeyField',
      value: function getKeyField() {
        return this.keyField;
      }
    }, {
      key: 'getDataNum',
      value: function getDataNum() {
        return this.getCurrentDisplayData().length;
      }
    }, {
      key: 'isChangedPage',
      value: function isChangedPage() {
        return this.pageObj.start && this.pageObj.end ? true : false;
      }
    }, {
      key: 'isEmpty',
      value: function isEmpty() {
        return this.data.length === 0 || this.data === null || this.data === undefined;
      }
    }, {
      key: 'getAllRowkey',
      value: function getAllRowkey() {
        var _this6 = this;
        return this.data.map(function(row) {
          return row[_this6.keyField];
        });
      }
    }]);
    return TableDataStore;
  })();
  exports.TableDataStore = TableDataStore;
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/filesaver.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  var saveAs = saveAs || (function(view) {
    "use strict";
    if (typeof navigator !== "undefined" && /MSIE [1-9]\./.test(navigator.userAgent)) {
      return;
    }
    var doc = view.document,
        get_URL = function get_URL() {
          return view.URL || view.webkitURL || view;
        },
        save_link = doc.createElementNS("http://www.w3.org/1999/xhtml", "a"),
        can_use_save_link = ("download" in save_link),
        click = function click(node) {
          var event = new MouseEvent("click");
          node.dispatchEvent(event);
        },
        is_safari = /Version\/[\d\.]+.*Safari/.test(navigator.userAgent),
        webkit_req_fs = view.webkitRequestFileSystem,
        req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem,
        throw_outside = function throw_outside(ex) {
          (view.setImmediate || view.setTimeout)(function() {
            throw ex;
          }, 0);
        },
        force_saveable_type = "application/octet-stream",
        fs_min_size = 0,
        arbitrary_revoke_timeout = 500,
        revoke = function revoke(file) {
          var revoker = function revoker() {
            if (typeof file === "string") {
              get_URL().revokeObjectURL(file);
            } else {
              file.remove();
            }
          };
          if (view.chrome) {
            revoker();
          } else {
            setTimeout(revoker, arbitrary_revoke_timeout);
          }
        },
        dispatch = function dispatch(filesaver, event_types, event) {
          event_types = [].concat(event_types);
          var i = event_types.length;
          while (i--) {
            var listener = filesaver["on" + event_types[i]];
            if (typeof listener === "function") {
              try {
                listener.call(filesaver, event || filesaver);
              } catch (ex) {
                throw_outside(ex);
              }
            }
          }
        },
        auto_bom = function auto_bom(blob) {
          if (/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(blob.type)) {
            return new Blob(["﻿", blob], {type: blob.type});
          }
          return blob;
        },
        FileSaver = function FileSaver(blob, name, no_auto_bom) {
          if (!no_auto_bom) {
            blob = auto_bom(blob);
          }
          var filesaver = this,
              type = blob.type,
              blob_changed = false,
              object_url,
              target_view,
              dispatch_all = function dispatch_all() {
                dispatch(filesaver, "writestart progress write writeend".split(" "));
              },
              fs_error = function fs_error() {
                if (target_view && is_safari && typeof FileReader !== "undefined") {
                  var reader = new FileReader();
                  reader.onloadend = function() {
                    var base64Data = reader.result;
                    target_view.location.href = "data:attachment/file" + base64Data.slice(base64Data.search(/[,;]/));
                    filesaver.readyState = filesaver.DONE;
                    dispatch_all();
                  };
                  reader.readAsDataURL(blob);
                  filesaver.readyState = filesaver.INIT;
                  return;
                }
                if (blob_changed || !object_url) {
                  object_url = get_URL().createObjectURL(blob);
                }
                if (target_view) {
                  target_view.location.href = object_url;
                } else {
                  var new_tab = view.open(object_url, "_blank");
                  if (new_tab == undefined && is_safari) {
                    view.location.href = object_url;
                  }
                }
                filesaver.readyState = filesaver.DONE;
                dispatch_all();
                revoke(object_url);
              },
              abortable = function abortable(func) {
                return function() {
                  if (filesaver.readyState !== filesaver.DONE) {
                    return func.apply(this, arguments);
                  }
                };
              },
              create_if_not_found = {
                create: true,
                exclusive: false
              },
              slice;
          filesaver.readyState = filesaver.INIT;
          if (!name) {
            name = "download";
          }
          if (can_use_save_link) {
            object_url = get_URL().createObjectURL(blob);
            save_link.href = object_url;
            save_link.download = name;
            setTimeout(function() {
              click(save_link);
              dispatch_all();
              revoke(object_url);
              filesaver.readyState = filesaver.DONE;
            });
            return;
          }
          if (view.chrome && type && type !== force_saveable_type) {
            slice = blob.slice || blob.webkitSlice;
            blob = slice.call(blob, 0, blob.size, force_saveable_type);
            blob_changed = true;
          }
          if (webkit_req_fs && name !== "download") {
            name += ".download";
          }
          if (type === force_saveable_type || webkit_req_fs) {
            target_view = view;
          }
          if (!req_fs) {
            fs_error();
            return;
          }
          fs_min_size += blob.size;
          req_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {
            fs.root.getDirectory("saved", create_if_not_found, abortable(function(dir) {
              var save = function save() {
                dir.getFile(name, create_if_not_found, abortable(function(file) {
                  file.createWriter(abortable(function(writer) {
                    writer.onwriteend = function(event) {
                      target_view.location.href = file.toURL();
                      filesaver.readyState = filesaver.DONE;
                      dispatch(filesaver, "writeend", event);
                      revoke(file);
                    };
                    writer.onerror = function() {
                      var error = writer.error;
                      if (error.code !== error.ABORT_ERR) {
                        fs_error();
                      }
                    };
                    "writestart progress write abort".split(" ").forEach(function(event) {
                      writer["on" + event] = filesaver["on" + event];
                    });
                    writer.write(blob);
                    filesaver.abort = function() {
                      writer.abort();
                      filesaver.readyState = filesaver.DONE;
                    };
                    filesaver.readyState = filesaver.WRITING;
                  }), fs_error);
                }), fs_error);
              };
              dir.getFile(name, {create: false}, abortable(function(file) {
                file.remove();
                save();
              }), abortable(function(ex) {
                if (ex.code === ex.NOT_FOUND_ERR) {
                  save();
                } else {
                  fs_error();
                }
              }));
            }), fs_error);
          }), fs_error);
        },
        FS_proto = FileSaver.prototype,
        saveAs = function saveAs(blob, name, no_auto_bom) {
          return new FileSaver(blob, name, no_auto_bom);
        };
    if (typeof navigator !== "undefined" && navigator.msSaveOrOpenBlob) {
      return function(blob, name, no_auto_bom) {
        if (!no_auto_bom) {
          blob = auto_bom(blob);
        }
        return navigator.msSaveOrOpenBlob(blob, name || "download");
      };
    }
    FS_proto.abort = function() {
      var filesaver = this;
      filesaver.readyState = filesaver.DONE;
      dispatch(filesaver, "abort");
    };
    FS_proto.readyState = FS_proto.INIT = 0;
    FS_proto.WRITING = 1;
    FS_proto.DONE = 2;
    FS_proto.error = FS_proto.onwritestart = FS_proto.onprogress = FS_proto.onwrite = FS_proto.onabort = FS_proto.onerror = FS_proto.onwriteend = null;
    return saveAs;
  })(typeof self !== "undefined" && self || typeof window !== "undefined" && window || undefined.content);
  if (typeof module !== "undefined" && module.exports) {
    module.exports.saveAs = saveAs;
  } else if (typeof define !== "undefined" && define !== null && define.amd != null) {
    define([], function() {
      return saveAs;
    });
  }
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/csv_export_util.js", ["npm:react-bootstrap-table@2.4.2/lib/util.js", "npm:react-bootstrap-table@2.4.2/lib/filesaver.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _util = $__require('npm:react-bootstrap-table@2.4.2/lib/util.js');
  var _util2 = _interopRequireDefault(_util);
  if (_util2['default'].canUseDOM()) {
    var filesaver = $__require('npm:react-bootstrap-table@2.4.2/lib/filesaver.js');
    var saveAs = filesaver.saveAs;
  }
  function toString(data, keys) {
    var dataString = '';
    if (data.length === 0)
      return dataString;
    dataString += keys.map(function(x) {
      return x.header;
    }).join(',') + '\n';
    data.map(function(row) {
      keys.map(function(col, i) {
        var field = col.field;
        var format = col.format;
        var value = typeof format !== 'undefined' ? format(row[field], row) : row[field];
        var cell = typeof value !== 'undefined' ? '"' + value + '"' : '';
        dataString += cell;
        if (i + 1 < keys.length)
          dataString += ',';
      });
      dataString += '\n';
    });
    return dataString;
  }
  var exportCSV = function exportCSV(data, keys, filename) {
    var dataString = toString(data, keys);
    if (typeof window !== 'undefined') {
      saveAs(new Blob([dataString], {type: 'text/plain;charset=utf-8'}), filename);
    }
  };
  exports['default'] = exportCSV;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:events@1.0.2/events.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function EventEmitter() {
    this._events = this._events || {};
    this._maxListeners = this._maxListeners || undefined;
  }
  module.exports = EventEmitter;
  EventEmitter.EventEmitter = EventEmitter;
  EventEmitter.prototype._events = undefined;
  EventEmitter.prototype._maxListeners = undefined;
  EventEmitter.defaultMaxListeners = 10;
  EventEmitter.prototype.setMaxListeners = function(n) {
    if (!isNumber(n) || n < 0 || isNaN(n))
      throw TypeError('n must be a positive number');
    this._maxListeners = n;
    return this;
  };
  EventEmitter.prototype.emit = function(type) {
    var er,
        handler,
        len,
        args,
        i,
        listeners;
    if (!this._events)
      this._events = {};
    if (type === 'error') {
      if (!this._events.error || (isObject(this._events.error) && !this._events.error.length)) {
        er = arguments[1];
        if (er instanceof Error) {
          throw er;
        }
        throw TypeError('Uncaught, unspecified "error" event.');
      }
    }
    handler = this._events[type];
    if (isUndefined(handler))
      return false;
    if (isFunction(handler)) {
      switch (arguments.length) {
        case 1:
          handler.call(this);
          break;
        case 2:
          handler.call(this, arguments[1]);
          break;
        case 3:
          handler.call(this, arguments[1], arguments[2]);
          break;
        default:
          len = arguments.length;
          args = new Array(len - 1);
          for (i = 1; i < len; i++)
            args[i - 1] = arguments[i];
          handler.apply(this, args);
      }
    } else if (isObject(handler)) {
      len = arguments.length;
      args = new Array(len - 1);
      for (i = 1; i < len; i++)
        args[i - 1] = arguments[i];
      listeners = handler.slice();
      len = listeners.length;
      for (i = 0; i < len; i++)
        listeners[i].apply(this, args);
    }
    return true;
  };
  EventEmitter.prototype.addListener = function(type, listener) {
    var m;
    if (!isFunction(listener))
      throw TypeError('listener must be a function');
    if (!this._events)
      this._events = {};
    if (this._events.newListener)
      this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);
    if (!this._events[type])
      this._events[type] = listener;
    else if (isObject(this._events[type]))
      this._events[type].push(listener);
    else
      this._events[type] = [this._events[type], listener];
    if (isObject(this._events[type]) && !this._events[type].warned) {
      var m;
      if (!isUndefined(this._maxListeners)) {
        m = this._maxListeners;
      } else {
        m = EventEmitter.defaultMaxListeners;
      }
      if (m && m > 0 && this._events[type].length > m) {
        this._events[type].warned = true;
        console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);
        if (typeof console.trace === 'function') {
          console.trace();
        }
      }
    }
    return this;
  };
  EventEmitter.prototype.on = EventEmitter.prototype.addListener;
  EventEmitter.prototype.once = function(type, listener) {
    if (!isFunction(listener))
      throw TypeError('listener must be a function');
    var fired = false;
    function g() {
      this.removeListener(type, g);
      if (!fired) {
        fired = true;
        listener.apply(this, arguments);
      }
    }
    g.listener = listener;
    this.on(type, g);
    return this;
  };
  EventEmitter.prototype.removeListener = function(type, listener) {
    var list,
        position,
        length,
        i;
    if (!isFunction(listener))
      throw TypeError('listener must be a function');
    if (!this._events || !this._events[type])
      return this;
    list = this._events[type];
    length = list.length;
    position = -1;
    if (list === listener || (isFunction(list.listener) && list.listener === listener)) {
      delete this._events[type];
      if (this._events.removeListener)
        this.emit('removeListener', type, listener);
    } else if (isObject(list)) {
      for (i = length; i-- > 0; ) {
        if (list[i] === listener || (list[i].listener && list[i].listener === listener)) {
          position = i;
          break;
        }
      }
      if (position < 0)
        return this;
      if (list.length === 1) {
        list.length = 0;
        delete this._events[type];
      } else {
        list.splice(position, 1);
      }
      if (this._events.removeListener)
        this.emit('removeListener', type, listener);
    }
    return this;
  };
  EventEmitter.prototype.removeAllListeners = function(type) {
    var key,
        listeners;
    if (!this._events)
      return this;
    if (!this._events.removeListener) {
      if (arguments.length === 0)
        this._events = {};
      else if (this._events[type])
        delete this._events[type];
      return this;
    }
    if (arguments.length === 0) {
      for (key in this._events) {
        if (key === 'removeListener')
          continue;
        this.removeAllListeners(key);
      }
      this.removeAllListeners('removeListener');
      this._events = {};
      return this;
    }
    listeners = this._events[type];
    if (isFunction(listeners)) {
      this.removeListener(type, listeners);
    } else {
      while (listeners.length)
        this.removeListener(type, listeners[listeners.length - 1]);
    }
    delete this._events[type];
    return this;
  };
  EventEmitter.prototype.listeners = function(type) {
    var ret;
    if (!this._events || !this._events[type])
      ret = [];
    else if (isFunction(this._events[type]))
      ret = [this._events[type]];
    else
      ret = this._events[type].slice();
    return ret;
  };
  EventEmitter.listenerCount = function(emitter, type) {
    var ret;
    if (!emitter._events || !emitter._events[type])
      ret = 0;
    else if (isFunction(emitter._events[type]))
      ret = 1;
    else
      ret = emitter._events[type].length;
    return ret;
  };
  function isFunction(arg) {
    return typeof arg === 'function';
  }
  function isNumber(arg) {
    return typeof arg === 'number';
  }
  function isObject(arg) {
    return typeof arg === 'object' && arg !== null;
  }
  function isUndefined(arg) {
    return arg === void 0;
  }
  return module.exports;
});

System.registerDynamic("npm:events@1.0.2.js", ["npm:events@1.0.2/events.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:events@1.0.2/events.js');
  return module.exports;
});

System.registerDynamic("github:jspm/nodelibs-events@0.1.1/index.js", ["npm:events@1.0.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = System._nodeRequire ? System._nodeRequire('events') : $__require('npm:events@1.0.2.js');
  return module.exports;
});

System.registerDynamic("github:jspm/nodelibs-events@0.1.1.js", ["github:jspm/nodelibs-events@0.1.1/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('github:jspm/nodelibs-events@0.1.1/index.js');
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/Filter.js", ["npm:react-bootstrap-table@2.4.2/lib/Const.js", "github:jspm/nodelibs-events@0.1.1.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var _events = $__require('github:jspm/nodelibs-events@0.1.1.js');
  var Filter = (function(_EventEmitter) {
    _inherits(Filter, _EventEmitter);
    function Filter(data) {
      _classCallCheck(this, Filter);
      _get(Object.getPrototypeOf(Filter.prototype), 'constructor', this).call(this, data);
      this.currentFilter = {};
    }
    _createClass(Filter, [{
      key: 'handleFilter',
      value: function handleFilter(dataField, value, type) {
        var filterType = type || _Const2['default'].FILTER_TYPE.CUSTOM;
        if (value !== null && typeof value === 'object') {
          var hasValue = true;
          for (var prop in value) {
            if (!value[prop] || value[prop] === '') {
              hasValue = false;
              break;
            }
          }
          if (hasValue) {
            this.currentFilter[dataField] = {
              value: value,
              type: filterType
            };
          } else {
            delete this.currentFilter[dataField];
          }
        } else if (!value || value.trim() === '') {
          delete this.currentFilter[dataField];
        } else {
          this.currentFilter[dataField] = {
            value: value.trim(),
            type: filterType
          };
        }
        this.emit('onFilterChange', this.currentFilter);
      }
    }]);
    return Filter;
  })(_events.EventEmitter);
  exports.Filter = Filter;
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/BootstrapTable.js", ["npm:react@15.3.0.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js", "npm:react-bootstrap-table@2.4.2/lib/TableHeader.js", "npm:react-bootstrap-table@2.4.2/lib/TableBody.js", "npm:react-bootstrap-table@2.4.2/lib/pagination/PaginationList.js", "npm:react-bootstrap-table@2.4.2/lib/toolbar/ToolBar.js", "npm:react-bootstrap-table@2.4.2/lib/TableFilter.js", "npm:react-bootstrap-table@2.4.2/lib/store/TableDataStore.js", "npm:react-bootstrap-table@2.4.2/lib/util.js", "npm:react-bootstrap-table@2.4.2/lib/csv_export_util.js", "npm:react-bootstrap-table@2.4.2/lib/Filter.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var _TableHeader = $__require('npm:react-bootstrap-table@2.4.2/lib/TableHeader.js');
  var _TableHeader2 = _interopRequireDefault(_TableHeader);
  var _TableBody = $__require('npm:react-bootstrap-table@2.4.2/lib/TableBody.js');
  var _TableBody2 = _interopRequireDefault(_TableBody);
  var _paginationPaginationList = $__require('npm:react-bootstrap-table@2.4.2/lib/pagination/PaginationList.js');
  var _paginationPaginationList2 = _interopRequireDefault(_paginationPaginationList);
  var _toolbarToolBar = $__require('npm:react-bootstrap-table@2.4.2/lib/toolbar/ToolBar.js');
  var _toolbarToolBar2 = _interopRequireDefault(_toolbarToolBar);
  var _TableFilter = $__require('npm:react-bootstrap-table@2.4.2/lib/TableFilter.js');
  var _TableFilter2 = _interopRequireDefault(_TableFilter);
  var _storeTableDataStore = $__require('npm:react-bootstrap-table@2.4.2/lib/store/TableDataStore.js');
  var _util = $__require('npm:react-bootstrap-table@2.4.2/lib/util.js');
  var _util2 = _interopRequireDefault(_util);
  var _csv_export_util = $__require('npm:react-bootstrap-table@2.4.2/lib/csv_export_util.js');
  var _csv_export_util2 = _interopRequireDefault(_csv_export_util);
  var _Filter = $__require('npm:react-bootstrap-table@2.4.2/lib/Filter.js');
  var BootstrapTable = (function(_Component) {
    _inherits(BootstrapTable, _Component);
    function BootstrapTable(props) {
      var _this = this;
      _classCallCheck(this, BootstrapTable);
      _get(Object.getPrototypeOf(BootstrapTable.prototype), 'constructor', this).call(this, props);
      this.handleSort = function(order, sortField) {
        if (_this.props.options.onSortChange) {
          _this.props.options.onSortChange(sortField, order, _this.props);
        }
        if (_this.isRemoteDataSource()) {
          _this.store.setSortInfo(order, sortField);
          return;
        }
        var result = _this.store.sort(order, sortField).get();
        _this.setState({data: result});
      };
      this.handlePaginationData = function(page, sizePerPage) {
        var _props$options = _this.props.options;
        var onPageChange = _props$options.onPageChange;
        var pageStartIndex = _props$options.pageStartIndex;
        if (onPageChange) {
          onPageChange(page, sizePerPage);
        }
        _this.setState({
          currPage: page,
          sizePerPage: sizePerPage
        });
        if (_this.isRemoteDataSource()) {
          return;
        }
        var normalizedPage = undefined;
        if (pageStartIndex !== undefined) {
          var offset = Math.abs(_Const2['default'].PAGE_START_INDEX - pageStartIndex);
          normalizedPage = page + offset;
        } else {
          normalizedPage = page;
        }
        var result = _this.store.page(normalizedPage, sizePerPage).get();
        _this.setState({data: result});
      };
      this.handleMouseLeave = function() {
        if (_this.props.options.onMouseLeave) {
          _this.props.options.onMouseLeave();
        }
      };
      this.handleMouseEnter = function() {
        if (_this.props.options.onMouseEnter) {
          _this.props.options.onMouseEnter();
        }
      };
      this.handleRowMouseOut = function(row, event) {
        if (_this.props.options.onRowMouseOut) {
          _this.props.options.onRowMouseOut(row, event);
        }
      };
      this.handleRowMouseOver = function(row, event) {
        if (_this.props.options.onRowMouseOver) {
          _this.props.options.onRowMouseOver(row, event);
        }
      };
      this.handleRowClick = function(row) {
        if (_this.props.options.onRowClick) {
          _this.props.options.onRowClick(row);
        }
      };
      this.handleSelectAllRow = function(e) {
        var isSelected = e.currentTarget.checked;
        var keyField = _this.store.getKeyField();
        var _props$selectRow = _this.props.selectRow;
        var onSelectAll = _props$selectRow.onSelectAll;
        var unselectable = _props$selectRow.unselectable;
        var selectedRowKeys = [];
        var result = true;
        var rows = _this.store.get();
        if (isSelected && unselectable && unselectable.length > 0) {
          rows = rows.filter(function(r) {
            return unselectable.indexOf(r[keyField]) === -1;
          });
        }
        if (onSelectAll) {
          result = _this.props.selectRow.onSelectAll(isSelected, isSelected ? rows : _this.store.getRowByKey(_this.state.selectedRowKeys));
        }
        if (typeof result == 'undefined' || result !== false) {
          if (isSelected) {
            selectedRowKeys = Array.isArray(result) ? result : rows.map(function(r) {
              return r[keyField];
            });
          }
          _this.store.setSelectedRowKey(selectedRowKeys);
          _this.setState({selectedRowKeys: selectedRowKeys});
        }
      };
      this.handleShowOnlySelected = function() {
        _this.store.ignoreNonSelected();
        var result = undefined;
        if (_this.props.pagination) {
          result = _this.store.page(1, _this.state.sizePerPage).get();
        } else {
          result = _this.store.get();
        }
        _this.setState({
          data: result,
          currPage: _this.props.options.pageStartIndex || _Const2['default'].PAGE_START_INDEX
        });
      };
      this.handleSelectRow = function(row, isSelected, e) {
        var result = true;
        var currSelected = _this.store.getSelectedRowKeys();
        var rowKey = row[_this.store.getKeyField()];
        var selectRow = _this.props.selectRow;
        if (selectRow.onSelect) {
          result = selectRow.onSelect(row, isSelected, e);
        }
        if (typeof result === 'undefined' || result !== false) {
          if (selectRow.mode === _Const2['default'].ROW_SELECT_SINGLE) {
            currSelected = isSelected ? [rowKey] : [];
          } else {
            if (isSelected) {
              currSelected.push(rowKey);
            } else {
              currSelected = currSelected.filter(function(key) {
                return rowKey !== key;
              });
            }
          }
          _this.store.setSelectedRowKey(currSelected);
          _this.setState({selectedRowKeys: currSelected});
        }
      };
      this.handleAddRow = function(newObj) {
        var onAddRow = _this.props.options.onAddRow;
        if (onAddRow) {
          var colInfos = _this.store.getColInfos();
          onAddRow(newObj, colInfos);
        }
        if (_this.isRemoteDataSource()) {
          if (_this.props.options.afterInsertRow) {
            _this.props.options.afterInsertRow(newObj);
          }
          return null;
        }
        try {
          _this.store.add(newObj);
        } catch (e) {
          return e;
        }
        _this._handleAfterAddingRow(newObj);
      };
      this.getPageByRowKey = function(rowKey) {
        var sizePerPage = _this.state.sizePerPage;
        var currentData = _this.store.getCurrentDisplayData();
        var keyField = _this.store.getKeyField();
        var result = currentData.findIndex(function(x) {
          return x[keyField] === rowKey;
        });
        if (result > -1) {
          return parseInt(result / sizePerPage, 10) + 1;
        } else {
          return result;
        }
      };
      this.handleDropRow = function(rowKeys) {
        var dropRowKeys = rowKeys ? rowKeys : _this.store.getSelectedRowKeys();
        if (dropRowKeys && dropRowKeys.length > 0) {
          if (_this.props.options.handleConfirmDeleteRow) {
            _this.props.options.handleConfirmDeleteRow(function() {
              _this.deleteRow(dropRowKeys);
            }, dropRowKeys);
          } else if (confirm('Are you sure you want to delete?')) {
            _this.deleteRow(dropRowKeys);
          }
        }
      };
      this.handleFilterData = function(filterObj) {
        var onFilterChange = _this.props.options.onFilterChange;
        if (onFilterChange) {
          var colInfos = _this.store.getColInfos();
          onFilterChange(filterObj, colInfos);
        }
        _this.setState({currPage: _this.props.options.pageStartIndex || _Const2['default'].PAGE_START_INDEX});
        if (_this.isRemoteDataSource()) {
          if (_this.props.options.afterColumnFilter) {
            _this.props.options.afterColumnFilter(filterObj, _this.store.getDataIgnoringPagination());
          }
          return;
        }
        _this.store.filter(filterObj);
        var sortObj = _this.store.getSortInfo();
        if (sortObj) {
          _this.store.sort(sortObj.order, sortObj.sortField);
        }
        var result = undefined;
        if (_this.props.pagination) {
          var sizePerPage = _this.state.sizePerPage;
          result = _this.store.page(1, sizePerPage).get();
        } else {
          result = _this.store.get();
        }
        if (_this.props.options.afterColumnFilter) {
          _this.props.options.afterColumnFilter(filterObj, _this.store.getDataIgnoringPagination());
        }
        _this.setState({data: result});
      };
      this.handleExportCSV = function() {
        var result = {};
        var csvFileName = _this.props.csvFileName;
        var onExportToCSV = _this.props.options.onExportToCSV;
        if (onExportToCSV) {
          result = onExportToCSV();
        } else {
          result = _this.store.getDataIgnoringPagination();
        }
        var keys = [];
        _this.props.children.map(function(column) {
          if (column.props['export'] === true || typeof column.props['export'] === 'undefined' && column.props.hidden === false) {
            keys.push({
              field: column.props.dataField,
              format: column.props.csvFormat,
              header: column.props.csvHeader || column.props.dataField
            });
          }
        });
        if (typeof csvFileName === 'function') {
          csvFileName = csvFileName();
        }
        (0, _csv_export_util2['default'])(result, keys, csvFileName);
      };
      this.handleSearch = function(searchText) {
        var onSearchChange = _this.props.options.onSearchChange;
        if (onSearchChange) {
          var colInfos = _this.store.getColInfos();
          onSearchChange(searchText, colInfos, _this.props.multiColumnSearch);
        }
        _this.setState({currPage: _this.props.options.pageStartIndex || _Const2['default'].PAGE_START_INDEX});
        if (_this.isRemoteDataSource()) {
          if (_this.props.options.afterSearch) {
            _this.props.options.afterSearch(searchText, _this.store.getDataIgnoringPagination());
          }
          return;
        }
        _this.store.search(searchText);
        var result = undefined;
        if (_this.props.pagination) {
          var sizePerPage = _this.state.sizePerPage;
          result = _this.store.page(1, sizePerPage).get();
        } else {
          result = _this.store.get();
        }
        if (_this.props.options.afterSearch) {
          _this.props.options.afterSearch(searchText, _this.store.getDataIgnoringPagination());
        }
        _this.setState({data: result});
      };
      this._scrollHeader = function(e) {
        _this.refs.header.refs.container.scrollLeft = e.currentTarget.scrollLeft;
      };
      this._adjustTable = function() {
        _this._adjustHeaderWidth();
        _this._adjustHeight();
      };
      this._adjustHeaderWidth = function() {
        var header = _this.refs.header.refs.header;
        var headerContainer = _this.refs.header.refs.container;
        var tbody = _this.refs.body.refs.tbody;
        var firstRow = tbody.childNodes[0];
        var isScroll = headerContainer.offsetWidth !== tbody.parentNode.offsetWidth;
        var scrollBarWidth = isScroll ? _util2['default'].getScrollBarWidth() : 0;
        if (firstRow && _this.store.getDataNum()) {
          var cells = firstRow.childNodes;
          for (var i = 0; i < cells.length; i++) {
            var cell = cells[i];
            var computedStyle = getComputedStyle(cell);
            var width = parseFloat(computedStyle.width.replace('px', ''));
            if (_this.isIE) {
              var paddingLeftWidth = parseFloat(computedStyle.paddingLeft.replace('px', ''));
              var paddingRightWidth = parseFloat(computedStyle.paddingRight.replace('px', ''));
              var borderRightWidth = parseFloat(computedStyle.borderRightWidth.replace('px', ''));
              var borderLeftWidth = parseFloat(computedStyle.borderLeftWidth.replace('px', ''));
              width = width + paddingLeftWidth + paddingRightWidth + borderRightWidth + borderLeftWidth;
            }
            var lastPadding = cells.length - 1 === i ? scrollBarWidth : 0;
            if (width <= 0) {
              width = 120;
              cell.width = width + lastPadding + 'px';
            }
            var result = width + lastPadding + 'px';
            header.childNodes[i].style.width = result;
            header.childNodes[i].style.minWidth = result;
          }
        } else {
          _react2['default'].Children.forEach(_this.props.children, function(child, i) {
            if (child.props.width) {
              header.childNodes[i].style.width = child.props.width + 'px';
              header.childNodes[i].style.minWidth = child.props.width + 'px';
            }
          });
        }
      };
      this._adjustHeight = function() {
        if (typeof _this.props.height === 'number' && !isNaN(_this.props.height) || _this.props.height.indexOf('%') === -1) {
          _this.refs.body.refs.container.style.height = parseFloat(_this.props.height, 10) - _this.refs.header.refs.container.offsetHeight + 'px';
        }
      };
      this.isIE = false;
      this._attachCellEditFunc();
      if (_util2['default'].canUseDOM()) {
        this.isIE = document.documentMode;
      }
      this.store = new _storeTableDataStore.TableDataStore(this.props.data.slice());
      this.initTable(this.props);
      if (this.filter) {
        this.filter.on('onFilterChange', function(currentFilter) {
          _this.handleFilterData(currentFilter);
        });
      }
      if (this.props.selectRow && this.props.selectRow.selected) {
        var copy = this.props.selectRow.selected.slice();
        this.store.setSelectedRowKey(copy);
      }
      var currPage = _Const2['default'].PAGE_START_INDEX;
      if (typeof this.props.options.page !== 'undefined') {
        currPage = this.props.options.page;
      } else if (typeof this.props.options.pageStartIndex !== 'undefined') {
        currPage = this.props.options.pageStartIndex;
      }
      this.state = {
        data: this.getTableData(),
        currPage: currPage,
        sizePerPage: this.props.options.sizePerPage || _Const2['default'].SIZE_PER_PAGE_LIST[0],
        selectedRowKeys: this.store.getSelectedRowKeys()
      };
    }
    _createClass(BootstrapTable, [{
      key: 'initTable',
      value: function initTable(props) {
        var _this2 = this;
        var keyField = props.keyField;
        var isKeyFieldDefined = typeof keyField === 'string' && keyField.length;
        _react2['default'].Children.forEach(props.children, function(column) {
          if (column.props.isKey) {
            if (keyField) {
              throw 'Error. Multiple key column be detected in TableHeaderColumn.';
            }
            keyField = column.props.dataField;
          }
          if (column.props.filter) {
            if (!_this2.filter) {
              _this2.filter = new _Filter.Filter();
            }
            column.props.filter.emitter = _this2.filter;
          }
        });
        this.colInfos = this.getColumnsDescription(props).reduce(function(prev, curr) {
          prev[curr.name] = curr;
          return prev;
        }, {});
        if (!isKeyFieldDefined && !keyField) {
          throw 'Error. No any key column defined in TableHeaderColumn.\n            Use \'isKey={true}\' to specify a unique column after version 0.5.4.';
        }
        this.store.setProps({
          isPagination: props.pagination,
          keyField: keyField,
          colInfos: this.colInfos,
          multiColumnSearch: props.multiColumnSearch,
          remote: this.isRemoteDataSource()
        });
      }
    }, {
      key: 'getTableData',
      value: function getTableData() {
        var result = [];
        var _props = this.props;
        var options = _props.options;
        var pagination = _props.pagination;
        var sortName = options.defaultSortName || options.sortName;
        var sortOrder = options.defaultSortOrder || options.sortOrder;
        var searchText = options.defaultSearch;
        if (sortName && sortOrder) {
          this.store.sort(sortOrder, sortName);
        }
        if (searchText) {
          this.store.search(searchText);
        }
        if (pagination) {
          var page = undefined;
          var sizePerPage = undefined;
          if (this.store.isChangedPage()) {
            sizePerPage = this.state.sizePerPage;
            page = this.state.currPage;
          } else {
            sizePerPage = options.sizePerPage || _Const2['default'].SIZE_PER_PAGE_LIST[0];
            page = options.page || 1;
          }
          result = this.store.page(page, sizePerPage).get();
        } else {
          result = this.store.get();
        }
        return result;
      }
    }, {
      key: 'getColumnsDescription',
      value: function getColumnsDescription(_ref) {
        var children = _ref.children;
        return _react2['default'].Children.map(children, function(column, i) {
          return {
            name: column.props.dataField,
            align: column.props.dataAlign,
            sort: column.props.dataSort,
            format: column.props.dataFormat,
            formatExtraData: column.props.formatExtraData,
            filterFormatted: column.props.filterFormatted,
            filterValue: column.props.filterValue,
            editable: column.props.editable,
            customEditor: column.props.customEditor,
            hidden: column.props.hidden,
            hiddenOnInsert: column.props.hiddenOnInsert,
            searchable: column.props.searchable,
            className: column.props.columnClassName,
            columnTitle: column.props.columnTitle,
            width: column.props.width,
            text: column.props.children,
            sortFunc: column.props.sortFunc,
            sortFuncExtraData: column.props.sortFuncExtraData,
            'export': column.props['export'],
            index: i
          };
        });
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this.initTable(nextProps);
        var options = nextProps.options;
        var selectRow = nextProps.selectRow;
        this.store.setData(nextProps.data.slice());
        var page = this.state.currPage;
        if (this.props.options.page !== options.page) {
          page = options.page;
        }
        var sizePerPage = this.state.sizePerPage;
        if (this.props.options.sizePerPage !== options.sizePerPage) {
          sizePerPage = options.sizePerPage;
        }
        if (this.isRemoteDataSource()) {
          this.setState({
            data: nextProps.data.slice(),
            currPage: page
          });
        } else {
          if (!options.page && page > Math.ceil(nextProps.data.length / sizePerPage)) {
            page = 1;
          }
          var sortInfo = this.store.getSortInfo();
          var sortField = options.sortName || (sortInfo ? sortInfo.sortField : undefined);
          var sortOrder = options.sortOrder || (sortInfo ? sortInfo.order : undefined);
          if (sortField && sortOrder)
            this.store.sort(sortOrder, sortField);
          var data = this.store.page(page, sizePerPage).get();
          this.setState({
            data: data,
            currPage: page,
            sizePerPage: sizePerPage
          });
        }
        if (selectRow && selectRow.selected) {
          var copy = selectRow.selected.slice();
          this.store.setSelectedRowKey(copy);
          this.setState({selectedRowKeys: copy});
        }
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._adjustTable();
        window.addEventListener('resize', this._adjustTable);
        this.refs.body.refs.container.addEventListener('scroll', this._scrollHeader);
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        window.removeEventListener('resize', this._adjustTable);
        this.refs.body.refs.container.removeEventListener('scroll', this._scrollHeader);
        if (this.filter) {
          this.filter.removeAllListeners('onFilterChange');
        }
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this._adjustTable();
        this._attachCellEditFunc();
        if (this.props.options.afterTableComplete) {
          this.props.options.afterTableComplete();
        }
      }
    }, {
      key: '_attachCellEditFunc',
      value: function _attachCellEditFunc() {
        var cellEdit = this.props.cellEdit;
        if (cellEdit) {
          this.props.cellEdit.__onCompleteEdit__ = this.handleEditCell.bind(this);
          if (cellEdit.mode !== _Const2['default'].CELL_EDIT_NONE) {
            this.props.selectRow.clickToSelect = false;
          }
        }
      }
    }, {
      key: 'isRemoteDataSource',
      value: function isRemoteDataSource(props) {
        return (props || this.props).remote;
      }
    }, {
      key: 'render',
      value: function render() {
        var style = {
          height: this.props.height,
          maxHeight: this.props.maxHeight
        };
        var columns = this.getColumnsDescription(this.props);
        var sortInfo = this.store.getSortInfo();
        var pagination = this.renderPagination();
        var toolBar = this.renderToolBar();
        var tableFilter = this.renderTableFilter(columns);
        var isSelectAll = this.isSelectAll();
        var sortIndicator = this.props.options.sortIndicator;
        if (typeof this.props.options.sortIndicator === 'undefined')
          sortIndicator = true;
        return _react2['default'].createElement('div', {
          className: 'react-bs-table-container',
          style: this.props.containerStyle
        }, toolBar, _react2['default'].createElement('div', {
          className: 'react-bs-table',
          ref: 'table',
          style: _extends({}, style, this.props.tableStyle),
          onMouseEnter: this.handleMouseEnter,
          onMouseLeave: this.handleMouseLeave
        }, _react2['default'].createElement(_TableHeader2['default'], {
          ref: 'header',
          tableHeaderClass: this.props.tableHeaderClass,
          style: this.props.headerStyle,
          rowSelectType: this.props.selectRow.mode,
          customComponent: this.props.selectRow.customComponent,
          hideSelectColumn: this.props.selectRow.hideSelectColumn,
          sortName: sortInfo ? sortInfo.sortField : undefined,
          sortOrder: sortInfo ? sortInfo.order : undefined,
          sortIndicator: sortIndicator,
          onSort: this.handleSort,
          onSelectAllRow: this.handleSelectAllRow,
          bordered: this.props.bordered,
          condensed: this.props.condensed,
          isFiltered: this.filter ? true : false,
          isSelectAll: isSelectAll
        }, this.props.children), _react2['default'].createElement(_TableBody2['default'], {
          ref: 'body',
          tableBodyClass: this.props.tableBodyClass,
          style: _extends({}, style, this.props.bodyStyle),
          data: this.state.data,
          columns: columns,
          trClassName: this.props.trClassName,
          striped: this.props.striped,
          bordered: this.props.bordered,
          hover: this.props.hover,
          keyField: this.store.getKeyField(),
          condensed: this.props.condensed,
          selectRow: this.props.selectRow,
          cellEdit: this.props.cellEdit,
          selectedRowKeys: this.state.selectedRowKeys,
          onRowClick: this.handleRowClick,
          onRowMouseOver: this.handleRowMouseOver,
          onRowMouseOut: this.handleRowMouseOut,
          onSelectRow: this.handleSelectRow,
          noDataText: this.props.options.noDataText
        })), tableFilter, pagination);
      }
    }, {
      key: 'isSelectAll',
      value: function isSelectAll() {
        if (this.store.isEmpty())
          return false;
        var defaultSelectRowKeys = this.store.getSelectedRowKeys();
        var allRowKeys = this.store.getAllRowkey();
        if (defaultSelectRowKeys.length === 0)
          return false;
        var match = 0;
        var noFound = 0;
        defaultSelectRowKeys.forEach(function(selected) {
          if (allRowKeys.indexOf(selected) !== -1)
            match++;
          else
            noFound++;
        });
        if (noFound === defaultSelectRowKeys.length)
          return false;
        return match === allRowKeys.length ? true : 'indeterminate';
      }
    }, {
      key: 'cleanSelected',
      value: function cleanSelected() {
        this.store.setSelectedRowKey([]);
        this.setState({selectedRowKeys: []});
      }
    }, {
      key: 'handleEditCell',
      value: function handleEditCell(newVal, rowIndex, colIndex) {
        var onCellEdit = this.props.options.onCellEdit;
        var _props$cellEdit = this.props.cellEdit;
        var beforeSaveCell = _props$cellEdit.beforeSaveCell;
        var afterSaveCell = _props$cellEdit.afterSaveCell;
        var fieldName = undefined;
        _react2['default'].Children.forEach(this.props.children, function(column, i) {
          if (i === colIndex) {
            fieldName = column.props.dataField;
            return false;
          }
        });
        if (beforeSaveCell) {
          var isValid = beforeSaveCell(this.state.data[rowIndex], fieldName, newVal);
          if (!isValid && typeof isValid !== 'undefined') {
            this.setState({data: this.store.get()});
            return;
          }
        }
        if (onCellEdit) {
          onCellEdit(this.state.data[rowIndex], fieldName, newVal);
        }
        if (this.isRemoteDataSource()) {
          if (afterSaveCell) {
            afterSaveCell(this.state.data[rowIndex], fieldName, newVal);
          }
          return;
        }
        var result = this.store.edit(newVal, rowIndex, fieldName).get();
        this.setState({data: result});
        if (afterSaveCell) {
          afterSaveCell(this.state.data[rowIndex], fieldName, newVal);
        }
      }
    }, {
      key: 'handleAddRowAtBegin',
      value: function handleAddRowAtBegin(newObj) {
        try {
          this.store.addAtBegin(newObj);
        } catch (e) {
          return e;
        }
        this._handleAfterAddingRow(newObj);
      }
    }, {
      key: 'getSizePerPage',
      value: function getSizePerPage() {
        return this.state.sizePerPage;
      }
    }, {
      key: 'getCurrentPage',
      value: function getCurrentPage() {
        return this.state.currPage;
      }
    }, {
      key: 'getTableDataIgnorePaging',
      value: function getTableDataIgnorePaging() {
        return this.store.getCurrentDisplayData();
      }
    }, {
      key: 'deleteRow',
      value: function deleteRow(dropRowKeys) {
        var onDeleteRow = this.props.options.onDeleteRow;
        if (onDeleteRow) {
          onDeleteRow(dropRowKeys);
        }
        this.store.setSelectedRowKey([]);
        if (this.isRemoteDataSource()) {
          if (this.props.options.afterDeleteRow) {
            this.props.options.afterDeleteRow(dropRowKeys);
          }
          return;
        }
        this.store.remove(dropRowKeys);
        var result = undefined;
        if (this.props.pagination) {
          var sizePerPage = this.state.sizePerPage;
          var currLastPage = Math.ceil(this.store.getDataNum() / sizePerPage);
          var currPage = this.state.currPage;
          if (currPage > currLastPage)
            currPage = currLastPage;
          result = this.store.page(currPage, sizePerPage).get();
          this.setState({
            data: result,
            selectedRowKeys: this.store.getSelectedRowKeys(),
            currPage: currPage
          });
        } else {
          result = this.store.get();
          this.setState({
            data: result,
            selectedRowKeys: this.store.getSelectedRowKeys()
          });
        }
        if (this.props.options.afterDeleteRow) {
          this.props.options.afterDeleteRow(dropRowKeys);
        }
      }
    }, {
      key: 'renderPagination',
      value: function renderPagination() {
        if (this.props.pagination) {
          var dataSize = undefined;
          if (this.isRemoteDataSource()) {
            dataSize = this.props.fetchInfo.dataTotalSize;
          } else {
            dataSize = this.store.getDataNum();
          }
          var options = this.props.options;
          if (Math.ceil(dataSize / this.state.sizePerPage) <= 1 && this.props.ignoreSinglePage)
            return null;
          return _react2['default'].createElement('div', {className: 'react-bs-table-pagination'}, _react2['default'].createElement(_paginationPaginationList2['default'], {
            ref: 'pagination',
            currPage: this.state.currPage,
            changePage: this.handlePaginationData,
            sizePerPage: this.state.sizePerPage,
            sizePerPageList: options.sizePerPageList || _Const2['default'].SIZE_PER_PAGE_LIST,
            pageStartIndex: options.pageStartIndex,
            paginationShowsTotal: options.paginationShowsTotal,
            paginationSize: options.paginationSize || _Const2['default'].PAGINATION_SIZE,
            remote: this.isRemoteDataSource(),
            dataSize: dataSize,
            onSizePerPageList: options.onSizePerPageList,
            prePage: options.prePage || _Const2['default'].PRE_PAGE,
            nextPage: options.nextPage || _Const2['default'].NEXT_PAGE,
            firstPage: options.firstPage || _Const2['default'].FIRST_PAGE,
            lastPage: options.lastPage || _Const2['default'].LAST_PAGE,
            hideSizePerPage: options.hideSizePerPage
          }));
        }
        return null;
      }
    }, {
      key: 'renderToolBar',
      value: function renderToolBar() {
        var _props2 = this.props;
        var selectRow = _props2.selectRow;
        var insertRow = _props2.insertRow;
        var deleteRow = _props2.deleteRow;
        var search = _props2.search;
        var children = _props2.children;
        var enableShowOnlySelected = selectRow && selectRow.showOnlySelected;
        if (enableShowOnlySelected || insertRow || deleteRow || search || this.props.exportCSV) {
          var columns = undefined;
          if (Array.isArray(children)) {
            columns = children.map(function(column, r) {
              var props = column.props;
              return {
                name: props.children,
                field: props.dataField,
                hiddenOnInsert: props.hiddenOnInsert,
                autoValue: props.autoValue || false,
                editable: props.editable && typeof props.editable === 'function' ? props.editable() : props.editable,
                format: props.dataFormat ? function(value) {
                  return props.dataFormat(value, null, props.formatExtraData, r).replace(/<.*?>/g, '');
                } : false
              };
            });
          } else {
            columns = [{
              name: children.props.children,
              field: children.props.dataField,
              editable: children.props.editable,
              hiddenOnInsert: children.props.hiddenOnInsert
            }];
          }
          return _react2['default'].createElement('div', {className: 'react-bs-table-tool-bar'}, _react2['default'].createElement(_toolbarToolBar2['default'], {
            defaultSearch: this.props.options.defaultSearch,
            clearSearch: this.props.options.clearSearch,
            searchDelayTime: this.props.options.searchDelayTime,
            enableInsert: insertRow,
            enableDelete: deleteRow,
            enableSearch: search,
            enableExportCSV: this.props.exportCSV,
            enableShowOnlySelected: enableShowOnlySelected,
            columns: columns,
            searchPlaceholder: this.props.searchPlaceholder,
            exportCSVText: this.props.options.exportCSVText,
            insertText: this.props.options.insertText,
            deleteText: this.props.options.deleteText,
            saveText: this.props.options.saveText,
            closeText: this.props.options.closeText,
            ignoreEditable: this.props.options.ignoreEditable,
            onAddRow: this.handleAddRow,
            onDropRow: this.handleDropRow,
            onSearch: this.handleSearch,
            onExportCSV: this.handleExportCSV,
            onShowOnlySelected: this.handleShowOnlySelected
          }));
        } else {
          return null;
        }
      }
    }, {
      key: 'renderTableFilter',
      value: function renderTableFilter(columns) {
        if (this.props.columnFilter) {
          return _react2['default'].createElement(_TableFilter2['default'], {
            columns: columns,
            rowSelectType: this.props.selectRow.mode,
            onFilter: this.handleFilterData
          });
        } else {
          return null;
        }
      }
    }, {
      key: '_handleAfterAddingRow',
      value: function _handleAfterAddingRow(newObj) {
        var result = undefined;
        if (this.props.pagination) {
          var sizePerPage = this.state.sizePerPage;
          var currLastPage = Math.ceil(this.store.getDataNum() / sizePerPage);
          result = this.store.page(currLastPage, sizePerPage).get();
          this.setState({
            data: result,
            currPage: currLastPage
          });
        } else {
          result = this.store.get();
          this.setState({data: result});
        }
        if (this.props.options.afterInsertRow) {
          this.props.options.afterInsertRow(newObj);
        }
      }
    }]);
    return BootstrapTable;
  })(_react.Component);
  BootstrapTable.propTypes = {
    keyField: _react.PropTypes.string,
    height: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
    maxHeight: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
    data: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.object]),
    remote: _react.PropTypes.bool,
    striped: _react.PropTypes.bool,
    bordered: _react.PropTypes.bool,
    hover: _react.PropTypes.bool,
    condensed: _react.PropTypes.bool,
    pagination: _react.PropTypes.bool,
    searchPlaceholder: _react.PropTypes.string,
    selectRow: _react.PropTypes.shape({
      mode: _react.PropTypes.oneOf([_Const2['default'].ROW_SELECT_NONE, _Const2['default'].ROW_SELECT_SINGLE, _Const2['default'].ROW_SELECT_MULTI]),
      customComponent: _react.PropTypes.func,
      bgColor: _react.PropTypes.string,
      selected: _react.PropTypes.array,
      onSelect: _react.PropTypes.func,
      onSelectAll: _react.PropTypes.func,
      clickToSelect: _react.PropTypes.bool,
      hideSelectColumn: _react.PropTypes.bool,
      clickToSelectAndEditCell: _react.PropTypes.bool,
      showOnlySelected: _react.PropTypes.bool,
      unselectable: _react.PropTypes.array
    }),
    cellEdit: _react.PropTypes.shape({
      mode: _react.PropTypes.string,
      blurToSave: _react.PropTypes.bool,
      beforeSaveCell: _react.PropTypes.func,
      afterSaveCell: _react.PropTypes.func
    }),
    insertRow: _react.PropTypes.bool,
    deleteRow: _react.PropTypes.bool,
    search: _react.PropTypes.bool,
    columnFilter: _react.PropTypes.bool,
    trClassName: _react.PropTypes.any,
    tableStyle: _react.PropTypes.object,
    containerStyle: _react.PropTypes.object,
    headerStyle: _react.PropTypes.object,
    bodyStyle: _react.PropTypes.object,
    tableHeaderClass: _react.PropTypes.string,
    tableBodyClass: _react.PropTypes.string,
    options: _react.PropTypes.shape({
      clearSearch: _react.PropTypes.bool,
      sortName: _react.PropTypes.string,
      sortOrder: _react.PropTypes.string,
      defaultSortName: _react.PropTypes.string,
      defaultSortOrder: _react.PropTypes.string,
      sortIndicator: _react.PropTypes.bool,
      afterTableComplete: _react.PropTypes.func,
      afterDeleteRow: _react.PropTypes.func,
      afterInsertRow: _react.PropTypes.func,
      afterSearch: _react.PropTypes.func,
      afterColumnFilter: _react.PropTypes.func,
      onRowClick: _react.PropTypes.func,
      page: _react.PropTypes.number,
      pageStartIndex: _react.PropTypes.number,
      paginationShowsTotal: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.func]),
      sizePerPageList: _react.PropTypes.array,
      sizePerPage: _react.PropTypes.number,
      paginationSize: _react.PropTypes.number,
      hideSizePerPage: _react.PropTypes.bool,
      onSortChange: _react.PropTypes.func,
      onPageChange: _react.PropTypes.func,
      onSizePerPageList: _react.PropTypes.func,
      onFilterChange: _react2['default'].PropTypes.func,
      onSearchChange: _react2['default'].PropTypes.func,
      onAddRow: _react2['default'].PropTypes.func,
      onExportToCSV: _react2['default'].PropTypes.func,
      onCellEdit: _react2['default'].PropTypes.func,
      noDataText: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.object]),
      handleConfirmDeleteRow: _react.PropTypes.func,
      prePage: _react.PropTypes.string,
      nextPage: _react.PropTypes.string,
      firstPage: _react.PropTypes.string,
      lastPage: _react.PropTypes.string,
      searchDelayTime: _react.PropTypes.number,
      exportCSVText: _react.PropTypes.string,
      insertText: _react.PropTypes.string,
      deleteText: _react.PropTypes.string,
      saveText: _react.PropTypes.string,
      closeText: _react.PropTypes.string,
      ignoreEditable: _react.PropTypes.bool,
      defaultSearch: _react.PropTypes.string
    }),
    fetchInfo: _react.PropTypes.shape({dataTotalSize: _react.PropTypes.number}),
    exportCSV: _react.PropTypes.bool,
    csvFileName: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.func]),
    ignoreSinglePage: _react.PropTypes.bool
  };
  BootstrapTable.defaultProps = {
    height: '100%',
    maxHeight: undefined,
    striped: false,
    bordered: true,
    hover: false,
    condensed: false,
    pagination: false,
    searchPlaceholder: undefined,
    selectRow: {
      mode: _Const2['default'].ROW_SELECT_NONE,
      bgColor: _Const2['default'].ROW_SELECT_BG_COLOR,
      selected: [],
      onSelect: undefined,
      onSelectAll: undefined,
      clickToSelect: false,
      hideSelectColumn: false,
      clickToSelectAndEditCell: false,
      showOnlySelected: false,
      unselectable: [],
      customComponent: undefined
    },
    cellEdit: {
      mode: _Const2['default'].CELL_EDIT_NONE,
      blurToSave: false,
      beforeSaveCell: undefined,
      afterSaveCell: undefined
    },
    insertRow: false,
    deleteRow: false,
    search: false,
    multiColumnSearch: false,
    columnFilter: false,
    trClassName: '',
    tableStyle: undefined,
    containerStyle: undefined,
    headerStyle: undefined,
    bodyStyle: undefined,
    tableHeaderClass: null,
    tableBodyClass: null,
    options: {
      clearSearch: false,
      sortName: undefined,
      sortOrder: undefined,
      defaultSortName: undefined,
      defaultSortOrder: undefined,
      sortIndicator: true,
      afterTableComplete: undefined,
      afterDeleteRow: undefined,
      afterInsertRow: undefined,
      afterSearch: undefined,
      afterColumnFilter: undefined,
      onRowClick: undefined,
      onMouseLeave: undefined,
      onMouseEnter: undefined,
      onRowMouseOut: undefined,
      onRowMouseOver: undefined,
      page: undefined,
      paginationShowsTotal: false,
      sizePerPageList: _Const2['default'].SIZE_PER_PAGE_LIST,
      sizePerPage: undefined,
      paginationSize: _Const2['default'].PAGINATION_SIZE,
      hideSizePerPage: false,
      onSizePerPageList: undefined,
      noDataText: undefined,
      handleConfirmDeleteRow: undefined,
      prePage: _Const2['default'].PRE_PAGE,
      nextPage: _Const2['default'].NEXT_PAGE,
      firstPage: _Const2['default'].FIRST_PAGE,
      lastPage: _Const2['default'].LAST_PAGE,
      pageStartIndex: undefined,
      searchDelayTime: undefined,
      exportCSVText: _Const2['default'].EXPORT_CSV_TEXT,
      insertText: _Const2['default'].INSERT_BTN_TEXT,
      deleteText: _Const2['default'].DELETE_BTN_TEXT,
      saveText: _Const2['default'].SAVE_BTN_TEXT,
      closeText: _Const2['default'].CLOSE_BTN_TEXT,
      ignoreEditable: false,
      defaultSearch: ''
    },
    fetchInfo: {dataTotalSize: 0},
    exportCSV: false,
    csvFileName: 'spreadsheet.csv',
    ignoreSinglePage: false
  };
  exports['default'] = BootstrapTable;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/util.js", ["npm:react@15.3.0.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js", "npm:classnames@2.2.5.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var _classnames = $__require('npm:classnames@2.2.5.js');
  var _classnames2 = _interopRequireDefault(_classnames);
  exports['default'] = {
    renderReactSortCaret: function renderReactSortCaret(order) {
      var orderClass = (0, _classnames2['default'])('order', {'dropup': order === _Const2['default'].SORT_ASC});
      return _react2['default'].createElement('span', {className: orderClass}, _react2['default'].createElement('span', {
        className: 'caret',
        style: {margin: '10px 5px'}
      }));
    },
    getScrollBarWidth: function getScrollBarWidth() {
      var inner = document.createElement('p');
      inner.style.width = '100%';
      inner.style.height = '200px';
      var outer = document.createElement('div');
      outer.style.position = 'absolute';
      outer.style.top = '0px';
      outer.style.left = '0px';
      outer.style.visibility = 'hidden';
      outer.style.width = '200px';
      outer.style.height = '150px';
      outer.style.overflow = 'hidden';
      outer.appendChild(inner);
      document.body.appendChild(outer);
      var w1 = inner.offsetWidth;
      outer.style.overflow = 'scroll';
      var w2 = inner.offsetWidth;
      if (w1 === w2)
        w2 = outer.clientWidth;
      document.body.removeChild(outer);
      return w1 - w2;
    },
    canUseDOM: function canUseDOM() {
      return typeof window !== 'undefined' && typeof window.document !== 'undefined';
    }
  };
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/filters/Date.js", ["npm:react@15.3.0.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var legalComparators = ['=', '>', '>=', '<', '<=', '!='];
  function dateParser(d) {
    return d.getFullYear() + '-' + ("0" + (d.getMonth() + 1)).slice(-2) + '-' + ("0" + d.getDate()).slice(-2);
  }
  var DateFilter = (function(_Component) {
    _inherits(DateFilter, _Component);
    function DateFilter(props) {
      _classCallCheck(this, DateFilter);
      _get(Object.getPrototypeOf(DateFilter.prototype), 'constructor', this).call(this, props);
      this.dateComparators = this.props.dateComparators || legalComparators;
      this.filter = this.filter.bind(this);
      this.onChangeComparator = this.onChangeComparator.bind(this);
    }
    _createClass(DateFilter, [{
      key: 'setDefaultDate',
      value: function setDefaultDate() {
        var defaultDate = '';
        var defaultValue = this.props.defaultValue;
        if (defaultValue && defaultValue.date) {
          defaultDate = dateParser(new Date(defaultValue.date));
        }
        return defaultDate;
      }
    }, {
      key: 'onChangeComparator',
      value: function onChangeComparator(event) {
        var date = this.refs.inputDate.value;
        var comparator = event.target.value;
        if (date === '') {
          return;
        }
        date = new Date(date);
        this.props.filterHandler({
          date: date,
          comparator: comparator
        }, _Const2['default'].FILTER_TYPE.DATE);
      }
    }, {
      key: 'getComparatorOptions',
      value: function getComparatorOptions() {
        var optionTags = [];
        optionTags.push(_react2['default'].createElement('option', {key: '-1'}));
        for (var i = 0; i < this.dateComparators.length; i++) {
          optionTags.push(_react2['default'].createElement('option', {
            key: i,
            value: this.dateComparators[i]
          }, this.dateComparators[i]));
        }
        return optionTags;
      }
    }, {
      key: 'filter',
      value: function filter(event) {
        var comparator = this.refs.dateFilterComparator.value;
        var dateValue = event.target.value;
        if (dateValue) {
          this.props.filterHandler({
            date: new Date(dateValue),
            comparator: comparator
          }, _Const2['default'].FILTER_TYPE.DATE);
        } else {
          this.props.filterHandler(null, _Const2['default'].FILTER_TYPE.DATE);
        }
      }
    }, {
      key: 'cleanFiltered',
      value: function cleanFiltered() {
        var value = this.setDefaultDate();
        var comparator = this.props.defaultValue ? this.props.defaultValue.comparator : '';
        this.setState({isPlaceholderSelected: value === ''});
        this.refs.dateFilterComparator.value = comparator;
        this.refs.inputDate.value = value;
        this.props.filterHandler({
          date: new Date(value),
          comparator: comparator
        }, _Const2['default'].FILTER_TYPE.DATE);
      }
    }, {
      key: 'applyFilter',
      value: function applyFilter(filterDateObj) {
        var date = filterDateObj.date;
        var comparator = filterDateObj.comparator;
        this.setState({isPlaceholderSelected: date === ''});
        this.refs.dateFilterComparator.value = comparator;
        this.refs.inputDate.value = dateParser(date);
        this.props.filterHandler({
          date: date,
          comparator: comparator
        }, _Const2['default'].FILTER_TYPE.DATE);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        var comparator = this.refs.dateFilterComparator.value;
        var dateValue = this.refs.inputDate.value;
        if (comparator && dateValue) {
          this.props.filterHandler({
            date: new Date(dateValue),
            comparator: comparator
          }, _Const2['default'].FILTER_TYPE.DATE);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var defaultValue = this.props.defaultValue;
        return _react2['default'].createElement('div', {className: 'filter date-filter'}, _react2['default'].createElement('select', {
          ref: 'dateFilterComparator',
          className: 'date-filter-comparator form-control',
          onChange: this.onChangeComparator,
          defaultValue: defaultValue ? defaultValue.comparator : ''
        }, this.getComparatorOptions()), _react2['default'].createElement('input', {
          ref: 'inputDate',
          className: 'filter date-filter-input form-control',
          type: 'date',
          onChange: this.filter,
          defaultValue: this.setDefaultDate()
        }));
      }
    }]);
    return DateFilter;
  })(_react.Component);
  DateFilter.propTypes = {
    filterHandler: _react.PropTypes.func.isRequired,
    defaultValue: _react.PropTypes.shape({
      date: _react.PropTypes.object,
      comparator: _react.PropTypes.oneOf(legalComparators)
    }),
    dateComparators: function dateComparators(props, propName) {
      if (!props[propName]) {
        return;
      }
      for (var i = 0; i < props[propName].length; i++) {
        var comparatorIsValid = false;
        for (var j = 0; j < legalComparators.length; j++) {
          if (legalComparators[j] === props[propName][i]) {
            comparatorIsValid = true;
            break;
          }
        }
        if (!comparatorIsValid) {
          return new Error('Date comparator provided is not supported.\n          Use only ' + legalComparators);
        }
      }
    },
    columnName: _react.PropTypes.string
  };
  exports['default'] = DateFilter;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/filters/Text.js", ["npm:react@15.3.0.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var TextFilter = (function(_Component) {
    _inherits(TextFilter, _Component);
    function TextFilter(props) {
      _classCallCheck(this, TextFilter);
      _get(Object.getPrototypeOf(TextFilter.prototype), 'constructor', this).call(this, props);
      this.filter = this.filter.bind(this);
      this.timeout = null;
    }
    _createClass(TextFilter, [{
      key: 'filter',
      value: function filter(event) {
        var _this = this;
        if (this.timeout) {
          clearTimeout(this.timeout);
        }
        var filterValue = event.target.value;
        this.timeout = setTimeout(function() {
          _this.props.filterHandler(filterValue, _Const2['default'].FILTER_TYPE.TEXT);
        }, this.props.delay);
      }
    }, {
      key: 'cleanFiltered',
      value: function cleanFiltered() {
        var value = this.props.defaultValue ? this.props.defaultValue : '';
        this.refs.inputText.value = value;
        this.props.filterHandler(value, _Const2['default'].FILTER_TYPE.TEXT);
      }
    }, {
      key: 'applyFilter',
      value: function applyFilter(filterText) {
        this.refs.inputText.value = filterText;
        this.props.filterHandler(filterText, _Const2['default'].FILTER_TYPE.TEXT);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        var defaultValue = this.refs.inputText.value;
        if (defaultValue) {
          this.props.filterHandler(defaultValue, _Const2['default'].FILTER_TYPE.TEXT);
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        clearTimeout(this.timeout);
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props;
        var placeholder = _props.placeholder;
        var columnName = _props.columnName;
        var defaultValue = _props.defaultValue;
        return _react2['default'].createElement('input', {
          ref: 'inputText',
          className: 'filter text-filter form-control',
          type: 'text',
          onChange: this.filter,
          placeholder: placeholder || 'Enter ' + columnName + '...',
          defaultValue: defaultValue ? defaultValue : ''
        });
      }
    }]);
    return TextFilter;
  })(_react.Component);
  TextFilter.propTypes = {
    filterHandler: _react.PropTypes.func.isRequired,
    defaultValue: _react.PropTypes.string,
    delay: _react.PropTypes.number,
    placeholder: _react.PropTypes.string,
    columnName: _react.PropTypes.string
  };
  TextFilter.defaultProps = {delay: _Const2['default'].FILTER_DELAY};
  exports['default'] = TextFilter;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/filters/Regex.js", ["npm:react@15.3.0.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var RegexFilter = (function(_Component) {
    _inherits(RegexFilter, _Component);
    function RegexFilter(props) {
      _classCallCheck(this, RegexFilter);
      _get(Object.getPrototypeOf(RegexFilter.prototype), 'constructor', this).call(this, props);
      this.filter = this.filter.bind(this);
      this.timeout = null;
    }
    _createClass(RegexFilter, [{
      key: 'filter',
      value: function filter(event) {
        var _this = this;
        if (this.timeout) {
          clearTimeout(this.timeout);
        }
        var filterValue = event.target.value;
        this.timeout = setTimeout(function() {
          _this.props.filterHandler(filterValue, _Const2['default'].FILTER_TYPE.REGEX);
        }, this.props.delay);
      }
    }, {
      key: 'cleanFiltered',
      value: function cleanFiltered() {
        var value = this.props.defaultValue ? this.props.defaultValue : '';
        this.refs.inputText.value = value;
        this.props.filterHandler(value, _Const2['default'].FILTER_TYPE.TEXT);
      }
    }, {
      key: 'applyFilter',
      value: function applyFilter(filterRegx) {
        this.refs.inputText.value = filterRegx;
        this.props.filterHandler(filterRegx, _Const2['default'].FILTER_TYPE.REGEX);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        var value = this.refs.inputText.value;
        if (value) {
          this.props.filterHandler(value, _Const2['default'].FILTER_TYPE.REGEX);
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        clearTimeout(this.timeout);
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props;
        var defaultValue = _props.defaultValue;
        var placeholder = _props.placeholder;
        var columnName = _props.columnName;
        return _react2['default'].createElement('input', {
          ref: 'inputText',
          className: 'filter text-filter form-control',
          type: 'text',
          onChange: this.filter,
          placeholder: placeholder || 'Enter Regex for ' + columnName + '...',
          defaultValue: defaultValue ? defaultValue : ''
        });
      }
    }]);
    return RegexFilter;
  })(_react.Component);
  RegexFilter.propTypes = {
    filterHandler: _react.PropTypes.func.isRequired,
    defaultValue: _react.PropTypes.string,
    delay: _react.PropTypes.number,
    placeholder: _react.PropTypes.string,
    columnName: _react.PropTypes.string
  };
  RegexFilter.defaultProps = {delay: _Const2['default'].FILTER_DELAY};
  exports['default'] = RegexFilter;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/filters/Select.js", ["npm:react@15.3.0.js", "npm:classnames@2.2.5.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _classnames = $__require('npm:classnames@2.2.5.js');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var SelectFilter = (function(_Component) {
    _inherits(SelectFilter, _Component);
    function SelectFilter(props) {
      _classCallCheck(this, SelectFilter);
      _get(Object.getPrototypeOf(SelectFilter.prototype), 'constructor', this).call(this, props);
      this.filter = this.filter.bind(this);
      this.state = {isPlaceholderSelected: this.props.defaultValue === undefined || !this.props.options.hasOwnProperty(this.props.defaultValue)};
    }
    _createClass(SelectFilter, [{
      key: 'filter',
      value: function filter(event) {
        var value = event.target.value;
        this.setState({isPlaceholderSelected: value === ''});
        this.props.filterHandler(value, _Const2['default'].FILTER_TYPE.SELECT);
      }
    }, {
      key: 'cleanFiltered',
      value: function cleanFiltered() {
        var value = this.props.defaultValue !== undefined ? this.props.defaultValue : '';
        this.setState({isPlaceholderSelected: value === ''});
        this.refs.selectInput.value = value;
        this.props.filterHandler(value, _Const2['default'].FILTER_TYPE.SELECT);
      }
    }, {
      key: 'applyFilter',
      value: function applyFilter(filterOption) {
        filterOption = filterOption + '';
        this.setState({isPlaceholderSelected: filterOption === ''});
        this.refs.selectInput.value = filterOption;
        this.props.filterHandler(filterOption, _Const2['default'].FILTER_TYPE.SELECT);
      }
    }, {
      key: 'getOptions',
      value: function getOptions() {
        var optionTags = [];
        var _props = this.props;
        var options = _props.options;
        var placeholder = _props.placeholder;
        var columnName = _props.columnName;
        optionTags.push(_react2['default'].createElement('option', {
          key: '-1',
          value: ''
        }, placeholder || 'Select ' + columnName + '...'));
        Object.keys(options).map(function(key) {
          optionTags.push(_react2['default'].createElement('option', {
            key: key,
            value: key
          }, options[key]));
        });
        return optionTags;
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        var value = this.refs.selectInput.value;
        if (value) {
          this.props.filterHandler(value, _Const2['default'].FILTER_TYPE.SELECT);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var selectClass = (0, _classnames2['default'])('filter', 'select-filter', 'form-control', {'placeholder-selected': this.state.isPlaceholderSelected});
        return _react2['default'].createElement('select', {
          ref: 'selectInput',
          className: selectClass,
          onChange: this.filter,
          defaultValue: this.props.defaultValue !== undefined ? this.props.defaultValue : ''
        }, this.getOptions());
      }
    }]);
    return SelectFilter;
  })(_react.Component);
  SelectFilter.propTypes = {
    filterHandler: _react.PropTypes.func.isRequired,
    options: _react.PropTypes.object.isRequired,
    placeholder: _react.PropTypes.string,
    columnName: _react.PropTypes.string
  };
  exports['default'] = SelectFilter;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/PooledClass.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var oneArgumentPooler = function(copyFieldsFrom) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, copyFieldsFrom);
        return instance;
      } else {
        return new Klass(copyFieldsFrom);
      }
    };
    var twoArgumentPooler = function(a1, a2) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2);
        return instance;
      } else {
        return new Klass(a1, a2);
      }
    };
    var threeArgumentPooler = function(a1, a2, a3) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3);
        return instance;
      } else {
        return new Klass(a1, a2, a3);
      }
    };
    var fourArgumentPooler = function(a1, a2, a3, a4) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3, a4);
        return instance;
      } else {
        return new Klass(a1, a2, a3, a4);
      }
    };
    var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3, a4, a5);
        return instance;
      } else {
        return new Klass(a1, a2, a3, a4, a5);
      }
    };
    var standardReleaser = function(instance) {
      var Klass = this;
      !(instance instanceof Klass) ? "production" !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
      instance.destructor();
      if (Klass.instancePool.length < Klass.poolSize) {
        Klass.instancePool.push(instance);
      }
    };
    var DEFAULT_POOL_SIZE = 10;
    var DEFAULT_POOLER = oneArgumentPooler;
    var addPoolingTo = function(CopyConstructor, pooler) {
      var NewKlass = CopyConstructor;
      NewKlass.instancePool = [];
      NewKlass.getPooled = pooler || DEFAULT_POOLER;
      if (!NewKlass.poolSize) {
        NewKlass.poolSize = DEFAULT_POOL_SIZE;
      }
      NewKlass.release = standardReleaser;
      return NewKlass;
    };
    var PooledClass = {
      addPoolingTo: addPoolingTo,
      oneArgumentPooler: oneArgumentPooler,
      twoArgumentPooler: twoArgumentPooler,
      threeArgumentPooler: threeArgumentPooler,
      fourArgumentPooler: fourArgumentPooler,
      fiveArgumentPooler: fiveArgumentPooler
    };
    module.exports = PooledClass;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/KeyEscapeUtils.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function escape(key) {
    var escapeRegex = /[=:]/g;
    var escaperLookup = {
      '=': '=0',
      ':': '=2'
    };
    var escapedString = ('' + key).replace(escapeRegex, function(match) {
      return escaperLookup[match];
    });
    return '$' + escapedString;
  }
  function unescape(key) {
    var unescapeRegex = /(=0|=2)/g;
    var unescaperLookup = {
      '=0': '=',
      '=2': ':'
    };
    var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
    return ('' + keySubstring).replace(unescapeRegex, function(match) {
      return unescaperLookup[match];
    });
  }
  var KeyEscapeUtils = {
    escape: escape,
    unescape: unescape
  };
  module.exports = KeyEscapeUtils;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/traverseAllChildren.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/ReactCurrentOwner.js", "npm:react@15.3.0/lib/ReactElement.js", "npm:react@15.3.0/lib/getIteratorFn.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:react@15.3.0/lib/KeyEscapeUtils.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var ReactCurrentOwner = $__require('npm:react@15.3.0/lib/ReactCurrentOwner.js');
    var ReactElement = $__require('npm:react@15.3.0/lib/ReactElement.js');
    var getIteratorFn = $__require('npm:react@15.3.0/lib/getIteratorFn.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var KeyEscapeUtils = $__require('npm:react@15.3.0/lib/KeyEscapeUtils.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    var didWarnAboutMaps = false;
    function getComponentKey(component, index) {
      if (component && typeof component === 'object' && component.key != null) {
        return KeyEscapeUtils.escape(component.key);
      }
      return index.toString(36);
    }
    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
      var type = typeof children;
      if (type === 'undefined' || type === 'boolean') {
        children = null;
      }
      if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
        callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
        return 1;
      }
      var child;
      var nextName;
      var subtreeCount = 0;
      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          child = children[i];
          nextName = nextNamePrefix + getComponentKey(child, i);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        var iteratorFn = getIteratorFn(children);
        if (iteratorFn) {
          var iterator = iteratorFn.call(children);
          var step;
          if (iteratorFn !== children.entries) {
            var ii = 0;
            while (!(step = iterator.next()).done) {
              child = step.value;
              nextName = nextNamePrefix + getComponentKey(child, ii++);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          } else {
            if ("production" !== 'production') {
              var mapsAsChildrenAddendum = '';
              if (ReactCurrentOwner.current) {
                var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
                if (mapsAsChildrenOwnerName) {
                  mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
                }
              }
              "production" !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
              didWarnAboutMaps = true;
            }
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                child = entry[1];
                nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
                subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
              }
            }
          }
        } else if (type === 'object') {
          var addendum = '';
          if ("production" !== 'production') {
            addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
            if (children._isReactElement) {
              addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
            }
            if (ReactCurrentOwner.current) {
              var name = ReactCurrentOwner.current.getName();
              if (name) {
                addendum += ' Check the render method of `' + name + '`.';
              }
            }
          }
          var childrenString = String(children);
          !false ? "production" !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
        }
      }
      return subtreeCount;
    }
    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }
      return traverseAllChildrenImpl(children, '', callback, traverseContext);
    }
    module.exports = traverseAllChildren;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactChildren.js", ["npm:react@15.3.0/lib/PooledClass.js", "npm:react@15.3.0/lib/ReactElement.js", "npm:fbjs@0.8.3/lib/emptyFunction.js", "npm:react@15.3.0/lib/traverseAllChildren.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var PooledClass = $__require('npm:react@15.3.0/lib/PooledClass.js');
  var ReactElement = $__require('npm:react@15.3.0/lib/ReactElement.js');
  var emptyFunction = $__require('npm:fbjs@0.8.3/lib/emptyFunction.js');
  var traverseAllChildren = $__require('npm:react@15.3.0/lib/traverseAllChildren.js');
  var twoArgumentPooler = PooledClass.twoArgumentPooler;
  var fourArgumentPooler = PooledClass.fourArgumentPooler;
  var userProvidedKeyEscapeRegex = /\/+/g;
  function escapeUserProvidedKey(text) {
    return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
  }
  function ForEachBookKeeping(forEachFunction, forEachContext) {
    this.func = forEachFunction;
    this.context = forEachContext;
    this.count = 0;
  }
  ForEachBookKeeping.prototype.destructor = function() {
    this.func = null;
    this.context = null;
    this.count = 0;
  };
  PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
  function forEachSingleChild(bookKeeping, child, name) {
    var func = bookKeeping.func;
    var context = bookKeeping.context;
    func.call(context, child, bookKeeping.count++);
  }
  function forEachChildren(children, forEachFunc, forEachContext) {
    if (children == null) {
      return children;
    }
    var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
    traverseAllChildren(children, forEachSingleChild, traverseContext);
    ForEachBookKeeping.release(traverseContext);
  }
  function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
    this.result = mapResult;
    this.keyPrefix = keyPrefix;
    this.func = mapFunction;
    this.context = mapContext;
    this.count = 0;
  }
  MapBookKeeping.prototype.destructor = function() {
    this.result = null;
    this.keyPrefix = null;
    this.func = null;
    this.context = null;
    this.count = 0;
  };
  PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
  function mapSingleChildIntoContext(bookKeeping, child, childKey) {
    var result = bookKeeping.result;
    var keyPrefix = bookKeeping.keyPrefix;
    var func = bookKeeping.func;
    var context = bookKeeping.context;
    var mappedChild = func.call(context, child, bookKeeping.count++);
    if (Array.isArray(mappedChild)) {
      mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
    } else if (mappedChild != null) {
      if (ReactElement.isValidElement(mappedChild)) {
        mappedChild = ReactElement.cloneAndReplaceKey(mappedChild, keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
      }
      result.push(mappedChild);
    }
  }
  function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
    var escapedPrefix = '';
    if (prefix != null) {
      escapedPrefix = escapeUserProvidedKey(prefix) + '/';
    }
    var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
    traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
    MapBookKeeping.release(traverseContext);
  }
  function mapChildren(children, func, context) {
    if (children == null) {
      return children;
    }
    var result = [];
    mapIntoWithKeyPrefixInternal(children, result, null, func, context);
    return result;
  }
  function forEachSingleChildDummy(traverseContext, child, name) {
    return null;
  }
  function countChildren(children, context) {
    return traverseAllChildren(children, forEachSingleChildDummy, null);
  }
  function toArray(children) {
    var result = [];
    mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
    return result;
  }
  var ReactChildren = {
    forEach: forEachChildren,
    map: mapChildren,
    mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
    count: countChildren,
    toArray: toArray
  };
  module.exports = ReactChildren;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactPureComponent.js", ["npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/ReactComponent.js", "npm:react@15.3.0/lib/ReactNoopUpdateQueue.js", "npm:fbjs@0.8.3/lib/emptyObject.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var _assign = $__require('npm:object-assign@4.1.0.js');
  var ReactComponent = $__require('npm:react@15.3.0/lib/ReactComponent.js');
  var ReactNoopUpdateQueue = $__require('npm:react@15.3.0/lib/ReactNoopUpdateQueue.js');
  var emptyObject = $__require('npm:fbjs@0.8.3/lib/emptyObject.js');
  function ReactPureComponent(props, context, updater) {
    this.props = props;
    this.context = context;
    this.refs = emptyObject;
    this.updater = updater || ReactNoopUpdateQueue;
  }
  function ComponentDummy() {}
  ComponentDummy.prototype = ReactComponent.prototype;
  ReactPureComponent.prototype = new ComponentDummy();
  ReactPureComponent.prototype.constructor = ReactPureComponent;
  _assign(ReactPureComponent.prototype, ReactComponent.prototype);
  ReactPureComponent.prototype.isPureReactComponent = true;
  module.exports = ReactPureComponent;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactComponent.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/ReactNoopUpdateQueue.js", "npm:react@15.3.0/lib/canDefineProperty.js", "npm:fbjs@0.8.3/lib/emptyObject.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var ReactNoopUpdateQueue = $__require('npm:react@15.3.0/lib/ReactNoopUpdateQueue.js');
    var canDefineProperty = $__require('npm:react@15.3.0/lib/canDefineProperty.js');
    var emptyObject = $__require('npm:fbjs@0.8.3/lib/emptyObject.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    function ReactComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }
    ReactComponent.prototype.isReactComponent = {};
    ReactComponent.prototype.setState = function(partialState, callback) {
      !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? "production" !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
      this.updater.enqueueSetState(this, partialState);
      if (callback) {
        this.updater.enqueueCallback(this, callback, 'setState');
      }
    };
    ReactComponent.prototype.forceUpdate = function(callback) {
      this.updater.enqueueForceUpdate(this);
      if (callback) {
        this.updater.enqueueCallback(this, callback, 'forceUpdate');
      }
    };
    if ("production" !== 'production') {
      var deprecatedAPIs = {
        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
      };
      var defineDeprecationWarning = function(methodName, info) {
        if (canDefineProperty) {
          Object.defineProperty(ReactComponent.prototype, methodName, {get: function() {
              "production" !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
              return undefined;
            }});
        }
      };
      for (var fnName in deprecatedAPIs) {
        if (deprecatedAPIs.hasOwnProperty(fnName)) {
          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
        }
      }
    }
    module.exports = ReactComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactNoopUpdateQueue.js", ["npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    function warnNoop(publicInstance, callerName) {
      if ("production" !== 'production') {
        var constructor = publicInstance.constructor;
        "production" !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
      }
    }
    var ReactNoopUpdateQueue = {
      isMounted: function(publicInstance) {
        return false;
      },
      enqueueCallback: function(publicInstance, callback) {},
      enqueueForceUpdate: function(publicInstance) {
        warnNoop(publicInstance, 'forceUpdate');
      },
      enqueueReplaceState: function(publicInstance, completeState) {
        warnNoop(publicInstance, 'replaceState');
      },
      enqueueSetState: function(publicInstance, partialState) {
        warnNoop(publicInstance, 'setState');
      }
    };
    module.exports = ReactNoopUpdateQueue;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/emptyObject.js", ["github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var emptyObject = {};
    if ("production" !== 'production') {
      Object.freeze(emptyObject);
    }
    module.exports = emptyObject;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/keyOf.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var keyOf = function keyOf(oneKeyObj) {
    var key;
    for (key in oneKeyObj) {
      if (!oneKeyObj.hasOwnProperty(key)) {
        continue;
      }
      return key;
    }
    return null;
  };
  module.exports = keyOf;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactClass.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/ReactComponent.js", "npm:react@15.3.0/lib/ReactElement.js", "npm:react@15.3.0/lib/ReactPropTypeLocations.js", "npm:react@15.3.0/lib/ReactPropTypeLocationNames.js", "npm:react@15.3.0/lib/ReactNoopUpdateQueue.js", "npm:fbjs@0.8.3/lib/emptyObject.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:fbjs@0.8.3/lib/keyMirror.js", "npm:fbjs@0.8.3/lib/keyOf.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.0.js');
    var ReactComponent = $__require('npm:react@15.3.0/lib/ReactComponent.js');
    var ReactElement = $__require('npm:react@15.3.0/lib/ReactElement.js');
    var ReactPropTypeLocations = $__require('npm:react@15.3.0/lib/ReactPropTypeLocations.js');
    var ReactPropTypeLocationNames = $__require('npm:react@15.3.0/lib/ReactPropTypeLocationNames.js');
    var ReactNoopUpdateQueue = $__require('npm:react@15.3.0/lib/ReactNoopUpdateQueue.js');
    var emptyObject = $__require('npm:fbjs@0.8.3/lib/emptyObject.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var keyMirror = $__require('npm:fbjs@0.8.3/lib/keyMirror.js');
    var keyOf = $__require('npm:fbjs@0.8.3/lib/keyOf.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var MIXINS_KEY = keyOf({mixins: null});
    var SpecPolicy = keyMirror({
      DEFINE_ONCE: null,
      DEFINE_MANY: null,
      OVERRIDE_BASE: null,
      DEFINE_MANY_MERGED: null
    });
    var injectedMixins = [];
    var ReactClassInterface = {
      mixins: SpecPolicy.DEFINE_MANY,
      statics: SpecPolicy.DEFINE_MANY,
      propTypes: SpecPolicy.DEFINE_MANY,
      contextTypes: SpecPolicy.DEFINE_MANY,
      childContextTypes: SpecPolicy.DEFINE_MANY,
      getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
      getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
      getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
      render: SpecPolicy.DEFINE_ONCE,
      componentWillMount: SpecPolicy.DEFINE_MANY,
      componentDidMount: SpecPolicy.DEFINE_MANY,
      componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
      shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
      componentWillUpdate: SpecPolicy.DEFINE_MANY,
      componentDidUpdate: SpecPolicy.DEFINE_MANY,
      componentWillUnmount: SpecPolicy.DEFINE_MANY,
      updateComponent: SpecPolicy.OVERRIDE_BASE
    };
    var RESERVED_SPEC_KEYS = {
      displayName: function(Constructor, displayName) {
        Constructor.displayName = displayName;
      },
      mixins: function(Constructor, mixins) {
        if (mixins) {
          for (var i = 0; i < mixins.length; i++) {
            mixSpecIntoComponent(Constructor, mixins[i]);
          }
        }
      },
      childContextTypes: function(Constructor, childContextTypes) {
        if ("production" !== 'production') {
          validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
        }
        Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
      },
      contextTypes: function(Constructor, contextTypes) {
        if ("production" !== 'production') {
          validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
        }
        Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
      },
      getDefaultProps: function(Constructor, getDefaultProps) {
        if (Constructor.getDefaultProps) {
          Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
        } else {
          Constructor.getDefaultProps = getDefaultProps;
        }
      },
      propTypes: function(Constructor, propTypes) {
        if ("production" !== 'production') {
          validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
        }
        Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
      },
      statics: function(Constructor, statics) {
        mixStaticSpecIntoComponent(Constructor, statics);
      },
      autobind: function() {}
    };
    function validateTypeDef(Constructor, typeDef, location) {
      for (var propName in typeDef) {
        if (typeDef.hasOwnProperty(propName)) {
          "production" !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
        }
      }
    }
    function validateMethodOverride(isAlreadyDefined, name) {
      var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
      if (ReactClassMixin.hasOwnProperty(name)) {
        !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? "production" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
      }
      if (isAlreadyDefined) {
        !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? "production" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
      }
    }
    function mixSpecIntoComponent(Constructor, spec) {
      if (!spec) {
        if ("production" !== 'production') {
          var typeofSpec = typeof spec;
          var isMixinValid = typeofSpec === 'object' && spec !== null;
          "production" !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
        }
        return;
      }
      !(typeof spec !== 'function') ? "production" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
      !!ReactElement.isValidElement(spec) ? "production" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;
      var proto = Constructor.prototype;
      var autoBindPairs = proto.__reactAutoBindPairs;
      if (spec.hasOwnProperty(MIXINS_KEY)) {
        RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
      }
      for (var name in spec) {
        if (!spec.hasOwnProperty(name)) {
          continue;
        }
        if (name === MIXINS_KEY) {
          continue;
        }
        var property = spec[name];
        var isAlreadyDefined = proto.hasOwnProperty(name);
        validateMethodOverride(isAlreadyDefined, name);
        if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
          RESERVED_SPEC_KEYS[name](Constructor, property);
        } else {
          var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
          var isFunction = typeof property === 'function';
          var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
          if (shouldAutoBind) {
            autoBindPairs.push(name, property);
            proto[name] = property;
          } else {
            if (isAlreadyDefined) {
              var specPolicy = ReactClassInterface[name];
              !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? "production" !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;
              if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
                proto[name] = createMergedResultFunction(proto[name], property);
              } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
                proto[name] = createChainedFunction(proto[name], property);
              }
            } else {
              proto[name] = property;
              if ("production" !== 'production') {
                if (typeof property === 'function' && spec.displayName) {
                  proto[name].displayName = spec.displayName + '_' + name;
                }
              }
            }
          }
        }
      }
    }
    function mixStaticSpecIntoComponent(Constructor, statics) {
      if (!statics) {
        return;
      }
      for (var name in statics) {
        var property = statics[name];
        if (!statics.hasOwnProperty(name)) {
          continue;
        }
        var isReserved = name in RESERVED_SPEC_KEYS;
        !!isReserved ? "production" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;
        var isInherited = name in Constructor;
        !!isInherited ? "production" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
        Constructor[name] = property;
      }
    }
    function mergeIntoWithNoDuplicateKeys(one, two) {
      !(one && two && typeof one === 'object' && typeof two === 'object') ? "production" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;
      for (var key in two) {
        if (two.hasOwnProperty(key)) {
          !(one[key] === undefined) ? "production" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
          one[key] = two[key];
        }
      }
      return one;
    }
    function createMergedResultFunction(one, two) {
      return function mergedResult() {
        var a = one.apply(this, arguments);
        var b = two.apply(this, arguments);
        if (a == null) {
          return b;
        } else if (b == null) {
          return a;
        }
        var c = {};
        mergeIntoWithNoDuplicateKeys(c, a);
        mergeIntoWithNoDuplicateKeys(c, b);
        return c;
      };
    }
    function createChainedFunction(one, two) {
      return function chainedFunction() {
        one.apply(this, arguments);
        two.apply(this, arguments);
      };
    }
    function bindAutoBindMethod(component, method) {
      var boundMethod = method.bind(component);
      if ("production" !== 'production') {
        boundMethod.__reactBoundContext = component;
        boundMethod.__reactBoundMethod = method;
        boundMethod.__reactBoundArguments = null;
        var componentName = component.constructor.displayName;
        var _bind = boundMethod.bind;
        boundMethod.bind = function(newThis) {
          for (var _len = arguments.length,
              args = Array(_len > 1 ? _len - 1 : 0),
              _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }
          if (newThis !== component && newThis !== null) {
            "production" !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
          } else if (!args.length) {
            "production" !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
            return boundMethod;
          }
          var reboundMethod = _bind.apply(boundMethod, arguments);
          reboundMethod.__reactBoundContext = component;
          reboundMethod.__reactBoundMethod = method;
          reboundMethod.__reactBoundArguments = args;
          return reboundMethod;
        };
      }
      return boundMethod;
    }
    function bindAutoBindMethods(component) {
      var pairs = component.__reactAutoBindPairs;
      for (var i = 0; i < pairs.length; i += 2) {
        var autoBindKey = pairs[i];
        var method = pairs[i + 1];
        component[autoBindKey] = bindAutoBindMethod(component, method);
      }
    }
    var ReactClassMixin = {
      replaceState: function(newState, callback) {
        this.updater.enqueueReplaceState(this, newState);
        if (callback) {
          this.updater.enqueueCallback(this, callback, 'replaceState');
        }
      },
      isMounted: function() {
        return this.updater.isMounted(this);
      }
    };
    var ReactClassComponent = function() {};
    _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
    var ReactClass = {
      createClass: function(spec) {
        var Constructor = function(props, context, updater) {
          if ("production" !== 'production') {
            "production" !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
          }
          if (this.__reactAutoBindPairs.length) {
            bindAutoBindMethods(this);
          }
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
          this.state = null;
          var initialState = this.getInitialState ? this.getInitialState() : null;
          if ("production" !== 'production') {
            if (initialState === undefined && this.getInitialState._isMockFunction) {
              initialState = null;
            }
          }
          !(typeof initialState === 'object' && !Array.isArray(initialState)) ? "production" !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;
          this.state = initialState;
        };
        Constructor.prototype = new ReactClassComponent();
        Constructor.prototype.constructor = Constructor;
        Constructor.prototype.__reactAutoBindPairs = [];
        injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
        mixSpecIntoComponent(Constructor, spec);
        if (Constructor.getDefaultProps) {
          Constructor.defaultProps = Constructor.getDefaultProps();
        }
        if ("production" !== 'production') {
          if (Constructor.getDefaultProps) {
            Constructor.getDefaultProps.isReactClassApproved = {};
          }
          if (Constructor.prototype.getInitialState) {
            Constructor.prototype.getInitialState.isReactClassApproved = {};
          }
        }
        !Constructor.prototype.render ? "production" !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;
        if ("production" !== 'production') {
          "production" !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
          "production" !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
        }
        for (var methodName in ReactClassInterface) {
          if (!Constructor.prototype[methodName]) {
            Constructor.prototype[methodName] = null;
          }
        }
        return Constructor;
      },
      injection: {injectMixin: function(mixin) {
          injectedMixins.push(mixin);
        }}
    };
    module.exports = ReactClass;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/mapObject.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  function mapObject(object, callback, context) {
    if (!object) {
      return null;
    }
    var result = {};
    for (var name in object) {
      if (hasOwnProperty.call(object, name)) {
        result[name] = callback.call(context, object[name], name, object);
      }
    }
    return result;
  }
  module.exports = mapObject;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactDOMFactories.js", ["npm:react@15.3.0/lib/ReactElement.js", "npm:fbjs@0.8.3/lib/mapObject.js", "npm:react@15.3.0/lib/ReactElementValidator.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ReactElement = $__require('npm:react@15.3.0/lib/ReactElement.js');
    var mapObject = $__require('npm:fbjs@0.8.3/lib/mapObject.js');
    function createDOMFactory(tag) {
      if ("production" !== 'production') {
        var ReactElementValidator = $__require('npm:react@15.3.0/lib/ReactElementValidator.js');
        return ReactElementValidator.createFactory(tag);
      }
      return ReactElement.createFactory(tag);
    }
    var ReactDOMFactories = mapObject({
      a: 'a',
      abbr: 'abbr',
      address: 'address',
      area: 'area',
      article: 'article',
      aside: 'aside',
      audio: 'audio',
      b: 'b',
      base: 'base',
      bdi: 'bdi',
      bdo: 'bdo',
      big: 'big',
      blockquote: 'blockquote',
      body: 'body',
      br: 'br',
      button: 'button',
      canvas: 'canvas',
      caption: 'caption',
      cite: 'cite',
      code: 'code',
      col: 'col',
      colgroup: 'colgroup',
      data: 'data',
      datalist: 'datalist',
      dd: 'dd',
      del: 'del',
      details: 'details',
      dfn: 'dfn',
      dialog: 'dialog',
      div: 'div',
      dl: 'dl',
      dt: 'dt',
      em: 'em',
      embed: 'embed',
      fieldset: 'fieldset',
      figcaption: 'figcaption',
      figure: 'figure',
      footer: 'footer',
      form: 'form',
      h1: 'h1',
      h2: 'h2',
      h3: 'h3',
      h4: 'h4',
      h5: 'h5',
      h6: 'h6',
      head: 'head',
      header: 'header',
      hgroup: 'hgroup',
      hr: 'hr',
      html: 'html',
      i: 'i',
      iframe: 'iframe',
      img: 'img',
      input: 'input',
      ins: 'ins',
      kbd: 'kbd',
      keygen: 'keygen',
      label: 'label',
      legend: 'legend',
      li: 'li',
      link: 'link',
      main: 'main',
      map: 'map',
      mark: 'mark',
      menu: 'menu',
      menuitem: 'menuitem',
      meta: 'meta',
      meter: 'meter',
      nav: 'nav',
      noscript: 'noscript',
      object: 'object',
      ol: 'ol',
      optgroup: 'optgroup',
      option: 'option',
      output: 'output',
      p: 'p',
      param: 'param',
      picture: 'picture',
      pre: 'pre',
      progress: 'progress',
      q: 'q',
      rp: 'rp',
      rt: 'rt',
      ruby: 'ruby',
      s: 's',
      samp: 'samp',
      script: 'script',
      section: 'section',
      select: 'select',
      small: 'small',
      source: 'source',
      span: 'span',
      strong: 'strong',
      style: 'style',
      sub: 'sub',
      summary: 'summary',
      sup: 'sup',
      table: 'table',
      tbody: 'tbody',
      td: 'td',
      textarea: 'textarea',
      tfoot: 'tfoot',
      th: 'th',
      thead: 'thead',
      time: 'time',
      title: 'title',
      tr: 'tr',
      track: 'track',
      u: 'u',
      ul: 'ul',
      'var': 'var',
      video: 'video',
      wbr: 'wbr',
      circle: 'circle',
      clipPath: 'clipPath',
      defs: 'defs',
      ellipse: 'ellipse',
      g: 'g',
      image: 'image',
      line: 'line',
      linearGradient: 'linearGradient',
      mask: 'mask',
      path: 'path',
      pattern: 'pattern',
      polygon: 'polygon',
      polyline: 'polyline',
      radialGradient: 'radialGradient',
      rect: 'rect',
      stop: 'stop',
      svg: 'svg',
      text: 'text',
      tspan: 'tspan'
    }, createDOMFactory);
    module.exports = ReactDOMFactories;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactPropTypes.js", ["npm:react@15.3.0/lib/ReactElement.js", "npm:react@15.3.0/lib/ReactPropTypeLocationNames.js", "npm:react@15.3.0/lib/ReactPropTypesSecret.js", "npm:fbjs@0.8.3/lib/emptyFunction.js", "npm:react@15.3.0/lib/getIteratorFn.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ReactElement = $__require('npm:react@15.3.0/lib/ReactElement.js');
    var ReactPropTypeLocationNames = $__require('npm:react@15.3.0/lib/ReactPropTypeLocationNames.js');
    var ReactPropTypesSecret = $__require('npm:react@15.3.0/lib/ReactPropTypesSecret.js');
    var emptyFunction = $__require('npm:fbjs@0.8.3/lib/emptyFunction.js');
    var getIteratorFn = $__require('npm:react@15.3.0/lib/getIteratorFn.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var ANONYMOUS = '<<anonymous>>';
    var ReactPropTypes = {
      array: createPrimitiveTypeChecker('array'),
      bool: createPrimitiveTypeChecker('boolean'),
      func: createPrimitiveTypeChecker('function'),
      number: createPrimitiveTypeChecker('number'),
      object: createPrimitiveTypeChecker('object'),
      string: createPrimitiveTypeChecker('string'),
      symbol: createPrimitiveTypeChecker('symbol'),
      any: createAnyTypeChecker(),
      arrayOf: createArrayOfTypeChecker,
      element: createElementTypeChecker(),
      instanceOf: createInstanceTypeChecker,
      node: createNodeChecker(),
      objectOf: createObjectOfTypeChecker,
      oneOf: createEnumTypeChecker,
      oneOfType: createUnionTypeChecker,
      shape: createShapeTypeChecker
    };
    function is(x, y) {
      if (x === y) {
        return x !== 0 || 1 / x === 1 / y;
      } else {
        return x !== x && y !== y;
      }
    }
    function createChainableTypeChecker(validate) {
      if ("production" !== 'production') {
        var manualPropTypeCallCache = {};
      }
      function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
        componentName = componentName || ANONYMOUS;
        propFullName = propFullName || propName;
        if ("production" !== 'production') {
          if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
            var cacheKey = componentName + ':' + propName;
            if (!manualPropTypeCallCache[cacheKey]) {
              "production" !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;
              manualPropTypeCallCache[cacheKey] = true;
            }
          }
        }
        if (props[propName] == null) {
          var locationName = ReactPropTypeLocationNames[location];
          if (isRequired) {
            return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
          }
          return null;
        } else {
          return validate(props, propName, componentName, location, propFullName);
        }
      }
      var chainedCheckType = checkType.bind(null, false);
      chainedCheckType.isRequired = checkType.bind(null, true);
      return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
      function validate(props, propName, componentName, location, propFullName, secret) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== expectedType) {
          var locationName = ReactPropTypeLocationNames[location];
          var preciseType = getPreciseType(propValue);
          return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
      return createChainableTypeChecker(emptyFunction.thatReturns(null));
    }
    function createArrayOfTypeChecker(typeChecker) {
      function validate(props, propName, componentName, location, propFullName) {
        if (typeof typeChecker !== 'function') {
          return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
        }
        var propValue = props[propName];
        if (!Array.isArray(propValue)) {
          var locationName = ReactPropTypeLocationNames[location];
          var propType = getPropType(propValue);
          return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
        }
        for (var i = 0; i < propValue.length; i++) {
          var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        if (!ReactElement.isValidElement(propValue)) {
          var locationName = ReactPropTypeLocationNames[location];
          var propType = getPropType(propValue);
          return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
      function validate(props, propName, componentName, location, propFullName) {
        if (!(props[propName] instanceof expectedClass)) {
          var locationName = ReactPropTypeLocationNames[location];
          var expectedClassName = expectedClass.name || ANONYMOUS;
          var actualClassName = getClassName(props[propName]);
          return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
      if (!Array.isArray(expectedValues)) {
        "production" !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
        return emptyFunction.thatReturnsNull;
      }
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        for (var i = 0; i < expectedValues.length; i++) {
          if (is(propValue, expectedValues[i])) {
            return null;
          }
        }
        var locationName = ReactPropTypeLocationNames[location];
        var valuesString = JSON.stringify(expectedValues);
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
      }
      return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
      function validate(props, propName, componentName, location, propFullName) {
        if (typeof typeChecker !== 'function') {
          return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
        }
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== 'object') {
          var locationName = ReactPropTypeLocationNames[location];
          return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
        }
        for (var key in propValue) {
          if (propValue.hasOwnProperty(key)) {
            var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
      if (!Array.isArray(arrayOfTypeCheckers)) {
        "production" !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
        return emptyFunction.thatReturnsNull;
      }
      function validate(props, propName, componentName, location, propFullName) {
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
            return null;
          }
        }
        var locationName = ReactPropTypeLocationNames[location];
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
      }
      return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
      function validate(props, propName, componentName, location, propFullName) {
        if (!isNode(props[propName])) {
          var locationName = ReactPropTypeLocationNames[location];
          return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function createShapeTypeChecker(shapeTypes) {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== 'object') {
          var locationName = ReactPropTypeLocationNames[location];
          return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
        }
        for (var key in shapeTypes) {
          var checker = shapeTypes[key];
          if (!checker) {
            continue;
          }
          var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error) {
            return error;
          }
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
      switch (typeof propValue) {
        case 'number':
        case 'string':
        case 'undefined':
          return true;
        case 'boolean':
          return !propValue;
        case 'object':
          if (Array.isArray(propValue)) {
            return propValue.every(isNode);
          }
          if (propValue === null || ReactElement.isValidElement(propValue)) {
            return true;
          }
          var iteratorFn = getIteratorFn(propValue);
          if (iteratorFn) {
            var iterator = iteratorFn.call(propValue);
            var step;
            if (iteratorFn !== propValue.entries) {
              while (!(step = iterator.next()).done) {
                if (!isNode(step.value)) {
                  return false;
                }
              }
            } else {
              while (!(step = iterator.next()).done) {
                var entry = step.value;
                if (entry) {
                  if (!isNode(entry[1])) {
                    return false;
                  }
                }
              }
            }
          } else {
            return false;
          }
          return true;
        default:
          return false;
      }
    }
    function isSymbol(propType, propValue) {
      if (propType === 'symbol') {
        return true;
      }
      if (propValue['@@toStringTag'] === 'Symbol') {
        return true;
      }
      if (typeof Symbol === 'function' && propValue instanceof Symbol) {
        return true;
      }
      return false;
    }
    function getPropType(propValue) {
      var propType = typeof propValue;
      if (Array.isArray(propValue)) {
        return 'array';
      }
      if (propValue instanceof RegExp) {
        return 'object';
      }
      if (isSymbol(propType, propValue)) {
        return 'symbol';
      }
      return propType;
    }
    function getPreciseType(propValue) {
      var propType = getPropType(propValue);
      if (propType === 'object') {
        if (propValue instanceof Date) {
          return 'date';
        } else if (propValue instanceof RegExp) {
          return 'regexp';
        }
      }
      return propType;
    }
    function getClassName(propValue) {
      if (!propValue.constructor || !propValue.constructor.name) {
        return ANONYMOUS;
      }
      return propValue.constructor.name;
    }
    module.exports = ReactPropTypes;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactVersion.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = '15.3.0';
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/onlyChild.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/ReactElement.js", "npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var ReactElement = $__require('npm:react@15.3.0/lib/ReactElement.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    function onlyChild(children) {
      !ReactElement.isValidElement(children) ? "production" !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : _prodInvariant('23') : void 0;
      return children;
    }
    module.exports = onlyChild;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:object-assign@4.1.0/index.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var propIsEnumerable = Object.prototype.propertyIsEnumerable;
  function toObject(val) {
    if (val === null || val === undefined) {
      throw new TypeError('Object.assign cannot be called with null or undefined');
    }
    return Object(val);
  }
  function shouldUseNative() {
    try {
      if (!Object.assign) {
        return false;
      }
      var test1 = new String('abc');
      test1[5] = 'de';
      if (Object.getOwnPropertyNames(test1)[0] === '5') {
        return false;
      }
      var test2 = {};
      for (var i = 0; i < 10; i++) {
        test2['_' + String.fromCharCode(i)] = i;
      }
      var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
        return test2[n];
      });
      if (order2.join('') !== '0123456789') {
        return false;
      }
      var test3 = {};
      'abcdefghijklmnopqrst'.split('').forEach(function(letter) {
        test3[letter] = letter;
      });
      if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
        return false;
      }
      return true;
    } catch (e) {
      return false;
    }
  }
  module.exports = shouldUseNative() ? Object.assign : function(target, source) {
    var from;
    var to = toObject(target);
    var symbols;
    for (var s = 1; s < arguments.length; s++) {
      from = Object(arguments[s]);
      for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
          to[key] = from[key];
        }
      }
      if (Object.getOwnPropertySymbols) {
        symbols = Object.getOwnPropertySymbols(from);
        for (var i = 0; i < symbols.length; i++) {
          if (propIsEnumerable.call(from, symbols[i])) {
            to[symbols[i]] = from[symbols[i]];
          }
        }
      }
    }
    return to;
  };
  return module.exports;
});

System.registerDynamic("npm:object-assign@4.1.0.js", ["npm:object-assign@4.1.0/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:object-assign@4.1.0/index.js');
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactElement.js", ["npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/ReactCurrentOwner.js", "npm:fbjs@0.8.3/lib/warning.js", "npm:react@15.3.0/lib/canDefineProperty.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _assign = $__require('npm:object-assign@4.1.0.js');
    var ReactCurrentOwner = $__require('npm:react@15.3.0/lib/ReactCurrentOwner.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var canDefineProperty = $__require('npm:react@15.3.0/lib/canDefineProperty.js');
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
    var RESERVED_PROPS = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    };
    var specialPropKeyWarningShown,
        specialPropRefWarningShown;
    function hasValidRef(config) {
      if ("production" !== 'production') {
        if (hasOwnProperty.call(config, 'ref')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.ref !== undefined;
    }
    function hasValidKey(config) {
      if ("production" !== 'production') {
        if (hasOwnProperty.call(config, 'key')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.key !== undefined;
    }
    var ReactElement = function(type, key, ref, self, source, owner, props) {
      var element = {
        $$typeof: REACT_ELEMENT_TYPE,
        type: type,
        key: key,
        ref: ref,
        props: props,
        _owner: owner
      };
      if ("production" !== 'production') {
        element._store = {};
        var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;
        if (canDefineProperty) {
          Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
          });
          Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
          });
          Object.defineProperty(element, '_shadowChildren', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: shadowChildren
          });
          Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
          });
        } else {
          element._store.validated = false;
          element._self = self;
          element._shadowChildren = shadowChildren;
          element._source = source;
        }
        if (Object.freeze) {
          Object.freeze(element.props);
          Object.freeze(element);
        }
      }
      return element;
    };
    ReactElement.createElement = function(type, config, children) {
      var propName;
      var props = {};
      var key = null;
      var ref = null;
      var self = null;
      var source = null;
      if (config != null) {
        if ("production" !== 'production') {
          "production" !== 'production' ? warning(config.__proto__ == null || config.__proto__ === Object.prototype, 'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
        }
        if (hasValidRef(config)) {
          ref = config.ref;
        }
        if (hasValidKey(config)) {
          key = '' + config.key;
        }
        self = config.__self === undefined ? null : config.__self;
        source = config.__source === undefined ? null : config.__source;
        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        }
      }
      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }
        props.children = childArray;
      }
      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;
        for (propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }
      }
      if ("production" !== 'production') {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        var warnAboutAccessingKey = function() {
          if (!specialPropKeyWarningShown) {
            specialPropKeyWarningShown = true;
            "production" !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
          }
          return undefined;
        };
        warnAboutAccessingKey.isReactWarning = true;
        var warnAboutAccessingRef = function() {
          if (!specialPropRefWarningShown) {
            specialPropRefWarningShown = true;
            "production" !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
          }
          return undefined;
        };
        warnAboutAccessingRef.isReactWarning = true;
        if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
          if (!props.hasOwnProperty('key')) {
            Object.defineProperty(props, 'key', {
              get: warnAboutAccessingKey,
              configurable: true
            });
          }
          if (!props.hasOwnProperty('ref')) {
            Object.defineProperty(props, 'ref', {
              get: warnAboutAccessingRef,
              configurable: true
            });
          }
        }
      }
      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    };
    ReactElement.createFactory = function(type) {
      var factory = ReactElement.createElement.bind(null, type);
      factory.type = type;
      return factory;
    };
    ReactElement.cloneAndReplaceKey = function(oldElement, newKey) {
      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
      return newElement;
    };
    ReactElement.cloneElement = function(element, config, children) {
      var propName;
      var props = _assign({}, element.props);
      var key = element.key;
      var ref = element.ref;
      var self = element._self;
      var source = element._source;
      var owner = element._owner;
      if (config != null) {
        if ("production" !== 'production') {
          "production" !== 'production' ? warning(config.__proto__ == null || config.__proto__ === Object.prototype, 'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
        }
        if (hasValidRef(config)) {
          ref = config.ref;
          owner = ReactCurrentOwner.current;
        }
        if (hasValidKey(config)) {
          key = '' + config.key;
        }
        var defaultProps;
        if (element.type && element.type.defaultProps) {
          defaultProps = element.type.defaultProps;
        }
        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            if (config[propName] === undefined && defaultProps !== undefined) {
              props[propName] = defaultProps[propName];
            } else {
              props[propName] = config[propName];
            }
          }
        }
      }
      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }
        props.children = childArray;
      }
      return ReactElement(element.type, key, ref, self, source, owner, props);
    };
    ReactElement.isValidElement = function(object) {
      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    };
    ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;
    module.exports = ReactElement;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/keyMirror.js", ["npm:fbjs@0.8.3/lib/invariant.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var keyMirror = function keyMirror(obj) {
      var ret = {};
      var key;
      !(obj instanceof Object && !Array.isArray(obj)) ? "production" !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
      for (key in obj) {
        if (!obj.hasOwnProperty(key)) {
          continue;
        }
        ret[key] = key;
      }
      return ret;
    };
    module.exports = keyMirror;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactPropTypeLocations.js", ["npm:fbjs@0.8.3/lib/keyMirror.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var keyMirror = $__require('npm:fbjs@0.8.3/lib/keyMirror.js');
  var ReactPropTypeLocations = keyMirror({
    prop: null,
    context: null,
    childContext: null
  });
  module.exports = ReactPropTypeLocations;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactPropTypeLocationNames.js", ["github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ReactPropTypeLocationNames = {};
    if ("production" !== 'production') {
      ReactPropTypeLocationNames = {
        prop: 'prop',
        context: 'context',
        childContext: 'child context'
      };
    }
    module.exports = ReactPropTypeLocationNames;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactPropTypesSecret.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
  module.exports = ReactPropTypesSecret;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/reactProdInvariant.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function reactProdInvariant(code) {
    var argCount = arguments.length - 1;
    var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
    for (var argIdx = 0; argIdx < argCount; argIdx++) {
      message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
    }
    message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
    var error = new Error(message);
    error.name = 'Invariant Violation';
    error.framesToPop = 1;
    throw error;
  }
  module.exports = reactProdInvariant;
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactCurrentOwner.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ReactCurrentOwner = {current: null};
  module.exports = ReactCurrentOwner;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/invariant.js", ["github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    function invariant(condition, format, a, b, c, d, e, f) {
      if ("production" !== 'production') {
        if (format === undefined) {
          throw new Error('invariant requires an error message argument');
        }
      }
      if (!condition) {
        var error;
        if (format === undefined) {
          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format.replace(/%s/g, function() {
            return args[argIndex++];
          }));
          error.name = 'Invariant Violation';
        }
        error.framesToPop = 1;
        throw error;
      }
    }
    module.exports = invariant;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactComponentTreeDevtool.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/ReactCurrentOwner.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var ReactCurrentOwner = $__require('npm:react@15.3.0/lib/ReactCurrentOwner.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var tree = {};
    var unmountedIDs = {};
    var rootIDs = {};
    function updateTree(id, update) {
      if (!tree[id]) {
        tree[id] = {
          element: null,
          parentID: null,
          ownerID: null,
          text: null,
          childIDs: [],
          displayName: 'Unknown',
          isMounted: false,
          updateCount: 0
        };
      }
      update(tree[id]);
    }
    function purgeDeep(id) {
      var item = tree[id];
      if (item) {
        var childIDs = item.childIDs;
        delete tree[id];
        childIDs.forEach(purgeDeep);
      }
    }
    function describeComponentFrame(name, source, ownerName) {
      return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
    }
    function describeID(id) {
      var name = ReactComponentTreeDevtool.getDisplayName(id);
      var element = ReactComponentTreeDevtool.getElement(id);
      var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
      var ownerName;
      if (ownerID) {
        ownerName = ReactComponentTreeDevtool.getDisplayName(ownerID);
      }
      "production" !== 'production' ? warning(element, 'ReactComponentTreeDevtool: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
      return describeComponentFrame(name, element && element._source, ownerName);
    }
    var ReactComponentTreeDevtool = {
      onSetDisplayName: function(id, displayName) {
        updateTree(id, function(item) {
          return item.displayName = displayName;
        });
      },
      onSetChildren: function(id, nextChildIDs) {
        updateTree(id, function(item) {
          item.childIDs = nextChildIDs;
          nextChildIDs.forEach(function(nextChildID) {
            var nextChild = tree[nextChildID];
            !nextChild ? "production" !== 'production' ? invariant(false, 'Expected devtool events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('68') : void 0;
            !(nextChild.displayName != null) ? "production" !== 'production' ? invariant(false, 'Expected onSetDisplayName() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('69') : void 0;
            !(nextChild.childIDs != null || nextChild.text != null) ? "production" !== 'production' ? invariant(false, 'Expected onSetChildren() or onSetText() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('70') : void 0;
            !nextChild.isMounted ? "production" !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
            if (nextChild.parentID == null) {
              nextChild.parentID = id;
            }
            !(nextChild.parentID === id) ? "production" !== 'production' ? invariant(false, 'Expected onSetParent() and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('72', nextChildID, nextChild.parentID, id) : void 0;
          });
        });
      },
      onSetOwner: function(id, ownerID) {
        updateTree(id, function(item) {
          return item.ownerID = ownerID;
        });
      },
      onSetParent: function(id, parentID) {
        updateTree(id, function(item) {
          return item.parentID = parentID;
        });
      },
      onSetText: function(id, text) {
        updateTree(id, function(item) {
          return item.text = text;
        });
      },
      onBeforeMountComponent: function(id, element) {
        updateTree(id, function(item) {
          return item.element = element;
        });
      },
      onBeforeUpdateComponent: function(id, element) {
        updateTree(id, function(item) {
          return item.element = element;
        });
      },
      onMountComponent: function(id) {
        updateTree(id, function(item) {
          return item.isMounted = true;
        });
      },
      onMountRootComponent: function(id) {
        rootIDs[id] = true;
      },
      onUpdateComponent: function(id) {
        updateTree(id, function(item) {
          return item.updateCount++;
        });
      },
      onUnmountComponent: function(id) {
        updateTree(id, function(item) {
          return item.isMounted = false;
        });
        unmountedIDs[id] = true;
        delete rootIDs[id];
      },
      purgeUnmountedComponents: function() {
        if (ReactComponentTreeDevtool._preventPurging) {
          return;
        }
        for (var id in unmountedIDs) {
          purgeDeep(id);
        }
        unmountedIDs = {};
      },
      isMounted: function(id) {
        var item = tree[id];
        return item ? item.isMounted : false;
      },
      getCurrentStackAddendum: function(topElement) {
        var info = '';
        if (topElement) {
          var type = topElement.type;
          var name = typeof type === 'function' ? type.displayName || type.name : type;
          var owner = topElement._owner;
          info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
        }
        var currentOwner = ReactCurrentOwner.current;
        var id = currentOwner && currentOwner._debugID;
        info += ReactComponentTreeDevtool.getStackAddendumByID(id);
        return info;
      },
      getStackAddendumByID: function(id) {
        var info = '';
        while (id) {
          info += describeID(id);
          id = ReactComponentTreeDevtool.getParentID(id);
        }
        return info;
      },
      getChildIDs: function(id) {
        var item = tree[id];
        return item ? item.childIDs : [];
      },
      getDisplayName: function(id) {
        var item = tree[id];
        return item ? item.displayName : 'Unknown';
      },
      getElement: function(id) {
        var item = tree[id];
        return item ? item.element : null;
      },
      getOwnerID: function(id) {
        var item = tree[id];
        return item ? item.ownerID : null;
      },
      getParentID: function(id) {
        var item = tree[id];
        return item ? item.parentID : null;
      },
      getSource: function(id) {
        var item = tree[id];
        var element = item ? item.element : null;
        var source = element != null ? element._source : null;
        return source;
      },
      getText: function(id) {
        var item = tree[id];
        return item ? item.text : null;
      },
      getUpdateCount: function(id) {
        var item = tree[id];
        return item ? item.updateCount : 0;
      },
      getRootIDs: function() {
        return Object.keys(rootIDs);
      },
      getRegisteredIDs: function() {
        return Object.keys(tree);
      }
    };
    module.exports = ReactComponentTreeDevtool;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/checkReactTypeSpec.js", ["npm:react@15.3.0/lib/reactProdInvariant.js", "npm:react@15.3.0/lib/ReactPropTypeLocationNames.js", "npm:react@15.3.0/lib/ReactPropTypesSecret.js", "npm:fbjs@0.8.3/lib/invariant.js", "npm:fbjs@0.8.3/lib/warning.js", "npm:react@15.3.0/lib/ReactComponentTreeDevtool.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _prodInvariant = $__require('npm:react@15.3.0/lib/reactProdInvariant.js');
    var ReactPropTypeLocationNames = $__require('npm:react@15.3.0/lib/ReactPropTypeLocationNames.js');
    var ReactPropTypesSecret = $__require('npm:react@15.3.0/lib/ReactPropTypesSecret.js');
    var invariant = $__require('npm:fbjs@0.8.3/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var ReactComponentTreeDevtool;
    if (typeof process !== 'undefined' && process.env && "production" === 'test') {
      ReactComponentTreeDevtool = $__require('npm:react@15.3.0/lib/ReactComponentTreeDevtool.js');
    }
    var loggedTypeFailures = {};
    function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
      for (var typeSpecName in typeSpecs) {
        if (typeSpecs.hasOwnProperty(typeSpecName)) {
          var error;
          try {
            !(typeof typeSpecs[typeSpecName] === 'function') ? "production" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
          } catch (ex) {
            error = ex;
          }
          "production" !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = true;
            var componentStackInfo = '';
            if ("production" !== 'production') {
              if (!ReactComponentTreeDevtool) {
                ReactComponentTreeDevtool = $__require('npm:react@15.3.0/lib/ReactComponentTreeDevtool.js');
              }
              if (debugID !== null) {
                componentStackInfo = ReactComponentTreeDevtool.getStackAddendumByID(debugID);
              } else if (element !== null) {
                componentStackInfo = ReactComponentTreeDevtool.getCurrentStackAddendum(element);
              }
            }
            "production" !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
          }
        }
      }
    }
    module.exports = checkReactTypeSpec;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/canDefineProperty.js", ["github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var canDefineProperty = false;
    if ("production" !== 'production') {
      try {
        Object.defineProperty({}, 'x', {get: function() {}});
        canDefineProperty = true;
      } catch (x) {}
    }
    module.exports = canDefineProperty;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/getIteratorFn.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }
  module.exports = getIteratorFn;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/emptyFunction.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  function makeEmptyFunction(arg) {
    return function() {
      return arg;
    };
  }
  var emptyFunction = function emptyFunction() {};
  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);
  emptyFunction.thatReturnsThis = function() {
    return this;
  };
  emptyFunction.thatReturnsArgument = function(arg) {
    return arg;
  };
  module.exports = emptyFunction;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.8.3/lib/warning.js", ["npm:fbjs@0.8.3/lib/emptyFunction.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var emptyFunction = $__require('npm:fbjs@0.8.3/lib/emptyFunction.js');
    var warning = emptyFunction;
    if ("production" !== 'production') {
      warning = function warning(condition, format) {
        for (var _len = arguments.length,
            args = Array(_len > 2 ? _len - 2 : 0),
            _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (format.indexOf('Failed Composite propType: ') === 0) {
          return;
        }
        if (!condition) {
          var argIndex = 0;
          var message = 'Warning: ' + format.replace(/%s/g, function() {
            return args[argIndex++];
          });
          if (typeof console !== 'undefined') {
            console.error(message);
          }
          try {
            throw new Error(message);
          } catch (x) {}
        }
      };
    }
    module.exports = warning;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/ReactElementValidator.js", ["npm:react@15.3.0/lib/ReactCurrentOwner.js", "npm:react@15.3.0/lib/ReactComponentTreeDevtool.js", "npm:react@15.3.0/lib/ReactElement.js", "npm:react@15.3.0/lib/ReactPropTypeLocations.js", "npm:react@15.3.0/lib/checkReactTypeSpec.js", "npm:react@15.3.0/lib/canDefineProperty.js", "npm:react@15.3.0/lib/getIteratorFn.js", "npm:fbjs@0.8.3/lib/warning.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var ReactCurrentOwner = $__require('npm:react@15.3.0/lib/ReactCurrentOwner.js');
    var ReactComponentTreeDevtool = $__require('npm:react@15.3.0/lib/ReactComponentTreeDevtool.js');
    var ReactElement = $__require('npm:react@15.3.0/lib/ReactElement.js');
    var ReactPropTypeLocations = $__require('npm:react@15.3.0/lib/ReactPropTypeLocations.js');
    var checkReactTypeSpec = $__require('npm:react@15.3.0/lib/checkReactTypeSpec.js');
    var canDefineProperty = $__require('npm:react@15.3.0/lib/canDefineProperty.js');
    var getIteratorFn = $__require('npm:react@15.3.0/lib/getIteratorFn.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    function getDeclarationErrorAddendum() {
      if (ReactCurrentOwner.current) {
        var name = ReactCurrentOwner.current.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
      var info = getDeclarationErrorAddendum();
      if (!info) {
        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
        if (parentName) {
          info = ' Check the top-level render call using <' + parentName + '>.';
        }
      }
      return info;
    }
    function validateExplicitKey(element, parentType) {
      if (!element._store || element._store.validated || element.key != null) {
        return;
      }
      element._store.validated = true;
      var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
      if (memoizer[currentComponentErrorInfo]) {
        return;
      }
      memoizer[currentComponentErrorInfo] = true;
      var childOwner = '';
      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
        childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
      }
      "production" !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeDevtool.getCurrentStackAddendum(element)) : void 0;
    }
    function validateChildKeys(node, parentType) {
      if (typeof node !== 'object') {
        return;
      }
      if (Array.isArray(node)) {
        for (var i = 0; i < node.length; i++) {
          var child = node[i];
          if (ReactElement.isValidElement(child)) {
            validateExplicitKey(child, parentType);
          }
        }
      } else if (ReactElement.isValidElement(node)) {
        if (node._store) {
          node._store.validated = true;
        }
      } else if (node) {
        var iteratorFn = getIteratorFn(node);
        if (iteratorFn) {
          if (iteratorFn !== node.entries) {
            var iterator = iteratorFn.call(node);
            var step;
            while (!(step = iterator.next()).done) {
              if (ReactElement.isValidElement(step.value)) {
                validateExplicitKey(step.value, parentType);
              }
            }
          }
        }
      }
    }
    function validatePropTypes(element) {
      var componentClass = element.type;
      if (typeof componentClass !== 'function') {
        return;
      }
      var name = componentClass.displayName || componentClass.name;
      if (componentClass.propTypes) {
        checkReactTypeSpec(componentClass.propTypes, element.props, ReactPropTypeLocations.prop, name, element, null);
      }
      if (typeof componentClass.getDefaultProps === 'function') {
        "production" !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
      }
    }
    var ReactElementValidator = {
      createElement: function(type, props, children) {
        var validType = typeof type === 'string' || typeof type === 'function';
        "production" !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;
        var element = ReactElement.createElement.apply(this, arguments);
        if (element == null) {
          return element;
        }
        if (validType) {
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], type);
          }
        }
        validatePropTypes(element);
        return element;
      },
      createFactory: function(type) {
        var validatedFactory = ReactElementValidator.createElement.bind(null, type);
        validatedFactory.type = type;
        if ("production" !== 'production') {
          if (canDefineProperty) {
            Object.defineProperty(validatedFactory, 'type', {
              enumerable: false,
              get: function() {
                "production" !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
                Object.defineProperty(this, 'type', {value: type});
                return type;
              }
            });
          }
        }
        return validatedFactory;
      },
      cloneElement: function(element, props, children) {
        var newElement = ReactElement.cloneElement.apply(this, arguments);
        for (var i = 2; i < arguments.length; i++) {
          validateChildKeys(arguments[i], newElement.type);
        }
        validatePropTypes(newElement);
        return newElement;
      }
    };
    module.exports = ReactElementValidator;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:process@0.11.8/browser.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  var process = module.exports = {};
  var cachedSetTimeout;
  var cachedClearTimeout;
  (function() {
    try {
      cachedSetTimeout = setTimeout;
    } catch (e) {
      cachedSetTimeout = function() {
        throw new Error('setTimeout is not defined');
      };
    }
    try {
      cachedClearTimeout = clearTimeout;
    } catch (e) {
      cachedClearTimeout = function() {
        throw new Error('clearTimeout is not defined');
      };
    }
  }());
  function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
      return setTimeout(fun, 0);
    }
    try {
      return cachedSetTimeout(fun, 0);
    } catch (e) {
      try {
        return cachedSetTimeout.call(null, fun, 0);
      } catch (e) {
        return cachedSetTimeout.call(this, fun, 0);
      }
    }
  }
  function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
      return clearTimeout(marker);
    }
    try {
      return cachedClearTimeout(marker);
    } catch (e) {
      try {
        return cachedClearTimeout.call(null, marker);
      } catch (e) {
        return cachedClearTimeout.call(this, marker);
      }
    }
  }
  var queue = [];
  var draining = false;
  var currentQueue;
  var queueIndex = -1;
  function cleanUpNextTick() {
    if (!draining || !currentQueue) {
      return;
    }
    draining = false;
    if (currentQueue.length) {
      queue = currentQueue.concat(queue);
    } else {
      queueIndex = -1;
    }
    if (queue.length) {
      drainQueue();
    }
  }
  function drainQueue() {
    if (draining) {
      return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;
    var len = queue.length;
    while (len) {
      currentQueue = queue;
      queue = [];
      while (++queueIndex < len) {
        if (currentQueue) {
          currentQueue[queueIndex].run();
        }
      }
      queueIndex = -1;
      len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
  }
  process.nextTick = function(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
      for (var i = 1; i < arguments.length; i++) {
        args[i - 1] = arguments[i];
      }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
      runTimeout(drainQueue);
    }
  };
  function Item(fun, array) {
    this.fun = fun;
    this.array = array;
  }
  Item.prototype.run = function() {
    this.fun.apply(null, this.array);
  };
  process.title = 'browser';
  process.browser = true;
  process.env = {};
  process.argv = [];
  process.version = '';
  process.versions = {};
  function noop() {}
  process.on = noop;
  process.addListener = noop;
  process.once = noop;
  process.off = noop;
  process.removeListener = noop;
  process.removeAllListeners = noop;
  process.emit = noop;
  process.binding = function(name) {
    throw new Error('process.binding is not supported');
  };
  process.cwd = function() {
    return '/';
  };
  process.chdir = function(dir) {
    throw new Error('process.chdir is not supported');
  };
  process.umask = function() {
    return 0;
  };
  return module.exports;
});

System.registerDynamic("npm:process@0.11.8.js", ["npm:process@0.11.8/browser.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:process@0.11.8/browser.js');
  return module.exports;
});

System.registerDynamic("github:jspm/nodelibs-process@0.1.2/index.js", ["npm:process@0.11.8.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = System._nodeRequire ? process : $__require('npm:process@0.11.8.js');
  return module.exports;
});

System.registerDynamic("github:jspm/nodelibs-process@0.1.2.js", ["github:jspm/nodelibs-process@0.1.2/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('github:jspm/nodelibs-process@0.1.2/index.js');
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/lib/React.js", ["npm:object-assign@4.1.0.js", "npm:react@15.3.0/lib/ReactChildren.js", "npm:react@15.3.0/lib/ReactComponent.js", "npm:react@15.3.0/lib/ReactPureComponent.js", "npm:react@15.3.0/lib/ReactClass.js", "npm:react@15.3.0/lib/ReactDOMFactories.js", "npm:react@15.3.0/lib/ReactElement.js", "npm:react@15.3.0/lib/ReactPropTypes.js", "npm:react@15.3.0/lib/ReactVersion.js", "npm:react@15.3.0/lib/onlyChild.js", "npm:fbjs@0.8.3/lib/warning.js", "npm:react@15.3.0/lib/ReactElementValidator.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  (function(process) {
    'use strict';
    var _assign = $__require('npm:object-assign@4.1.0.js');
    var ReactChildren = $__require('npm:react@15.3.0/lib/ReactChildren.js');
    var ReactComponent = $__require('npm:react@15.3.0/lib/ReactComponent.js');
    var ReactPureComponent = $__require('npm:react@15.3.0/lib/ReactPureComponent.js');
    var ReactClass = $__require('npm:react@15.3.0/lib/ReactClass.js');
    var ReactDOMFactories = $__require('npm:react@15.3.0/lib/ReactDOMFactories.js');
    var ReactElement = $__require('npm:react@15.3.0/lib/ReactElement.js');
    var ReactPropTypes = $__require('npm:react@15.3.0/lib/ReactPropTypes.js');
    var ReactVersion = $__require('npm:react@15.3.0/lib/ReactVersion.js');
    var onlyChild = $__require('npm:react@15.3.0/lib/onlyChild.js');
    var warning = $__require('npm:fbjs@0.8.3/lib/warning.js');
    var createElement = ReactElement.createElement;
    var createFactory = ReactElement.createFactory;
    var cloneElement = ReactElement.cloneElement;
    if ("production" !== 'production') {
      var ReactElementValidator = $__require('npm:react@15.3.0/lib/ReactElementValidator.js');
      createElement = ReactElementValidator.createElement;
      createFactory = ReactElementValidator.createFactory;
      cloneElement = ReactElementValidator.cloneElement;
    }
    var __spread = _assign;
    if ("production" !== 'production') {
      var warned = false;
      __spread = function() {
        "production" !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
        warned = true;
        return _assign.apply(null, arguments);
      };
    }
    var React = {
      Children: {
        map: ReactChildren.map,
        forEach: ReactChildren.forEach,
        count: ReactChildren.count,
        toArray: ReactChildren.toArray,
        only: onlyChild
      },
      Component: ReactComponent,
      PureComponent: ReactPureComponent,
      createElement: createElement,
      cloneElement: cloneElement,
      isValidElement: ReactElement.isValidElement,
      PropTypes: ReactPropTypes,
      createClass: ReactClass.createClass,
      createFactory: createFactory,
      createMixin: function(mixin) {
        return mixin;
      },
      DOM: ReactDOMFactories,
      version: ReactVersion,
      __spread: __spread
    };
    module.exports = React;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0/react.js", ["npm:react@15.3.0/lib/React.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react@15.3.0/lib/React.js');
  return module.exports;
});

System.registerDynamic("npm:react@15.3.0.js", ["npm:react@15.3.0/react.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react@15.3.0/react.js');
  return module.exports;
});

System.registerDynamic("npm:classnames@2.2.5/index.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  "format cjs";
  (function() {
    'use strict';
    var hasOwn = {}.hasOwnProperty;
    function classNames() {
      var classes = [];
      for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        if (!arg)
          continue;
        var argType = typeof arg;
        if (argType === 'string' || argType === 'number') {
          classes.push(arg);
        } else if (Array.isArray(arg)) {
          classes.push(classNames.apply(null, arg));
        } else if (argType === 'object') {
          for (var key in arg) {
            if (hasOwn.call(arg, key) && arg[key]) {
              classes.push(key);
            }
          }
        }
      }
      return classes.join(' ');
    }
    if (typeof module !== 'undefined' && module.exports) {
      module.exports = classNames;
    } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
      define('classnames', [], function() {
        return classNames;
      });
    } else {
      window.classNames = classNames;
    }
  }());
  return module.exports;
});

System.registerDynamic("npm:classnames@2.2.5.js", ["npm:classnames@2.2.5/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:classnames@2.2.5/index.js');
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/Const.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  exports['default'] = {
    SORT_DESC: 'desc',
    SORT_ASC: 'asc',
    SIZE_PER_PAGE: 10,
    NEXT_PAGE: '>',
    LAST_PAGE: '>>',
    PRE_PAGE: '<',
    FIRST_PAGE: '<<',
    PAGE_START_INDEX: 1,
    ROW_SELECT_BG_COLOR: '',
    ROW_SELECT_NONE: 'none',
    ROW_SELECT_SINGLE: 'radio',
    ROW_SELECT_MULTI: 'checkbox',
    CELL_EDIT_NONE: 'none',
    CELL_EDIT_CLICK: 'click',
    CELL_EDIT_DBCLICK: 'dbclick',
    SIZE_PER_PAGE_LIST: [10, 25, 30, 50],
    PAGINATION_SIZE: 5,
    NO_DATA_TEXT: 'There is no data to display',
    SHOW_ONLY_SELECT: 'Show Selected Only',
    SHOW_ALL: 'Show All',
    EXPORT_CSV_TEXT: 'Export to CSV',
    INSERT_BTN_TEXT: 'New',
    DELETE_BTN_TEXT: 'Delete',
    SAVE_BTN_TEXT: 'Save',
    CLOSE_BTN_TEXT: 'Close',
    FILTER_DELAY: 500,
    FILTER_TYPE: {
      TEXT: 'TextFilter',
      REGEX: 'RegexFilter',
      SELECT: 'SelectFilter',
      NUMBER: 'NumberFilter',
      DATE: 'DateFilter',
      CUSTOM: 'CustomFilter'
    }
  };
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/filters/Number.js", ["npm:react@15.3.0.js", "npm:classnames@2.2.5.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _classnames = $__require('npm:classnames@2.2.5.js');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var legalComparators = ['=', '>', '>=', '<', '<=', '!='];
  var NumberFilter = (function(_Component) {
    _inherits(NumberFilter, _Component);
    function NumberFilter(props) {
      _classCallCheck(this, NumberFilter);
      _get(Object.getPrototypeOf(NumberFilter.prototype), 'constructor', this).call(this, props);
      this.numberComparators = this.props.numberComparators || legalComparators;
      this.timeout = null;
      this.state = {isPlaceholderSelected: this.props.defaultValue === undefined || this.props.defaultValue.number === undefined || this.props.options && this.props.options.indexOf(this.props.defaultValue.number) === -1};
      this.onChangeNumber = this.onChangeNumber.bind(this);
      this.onChangeNumberSet = this.onChangeNumberSet.bind(this);
      this.onChangeComparator = this.onChangeComparator.bind(this);
    }
    _createClass(NumberFilter, [{
      key: 'onChangeNumber',
      value: function onChangeNumber(event) {
        var _this = this;
        var comparator = this.refs.numberFilterComparator.value;
        if (comparator === '') {
          return;
        }
        if (this.timeout) {
          clearTimeout(this.timeout);
        }
        var filterValue = event.target.value;
        this.timeout = setTimeout(function() {
          _this.props.filterHandler({
            number: filterValue,
            comparator: comparator
          }, _Const2['default'].FILTER_TYPE.NUMBER);
        }, this.props.delay);
      }
    }, {
      key: 'onChangeNumberSet',
      value: function onChangeNumberSet(event) {
        var comparator = this.refs.numberFilterComparator.value;
        var value = event.target.value;
        this.setState({isPlaceholderSelected: value === ''});
        if (comparator === '') {
          return;
        }
        this.props.filterHandler({
          number: value,
          comparator: comparator
        }, _Const2['default'].FILTER_TYPE.NUMBER);
      }
    }, {
      key: 'onChangeComparator',
      value: function onChangeComparator(event) {
        var value = this.refs.numberFilter.value;
        var comparator = event.target.value;
        if (value === '') {
          return;
        }
        this.props.filterHandler({
          number: value,
          comparator: comparator
        }, _Const2['default'].FILTER_TYPE.NUMBER);
      }
    }, {
      key: 'cleanFiltered',
      value: function cleanFiltered() {
        var value = this.props.defaultValue ? this.props.defaultValue.number : '';
        var comparator = this.props.defaultValue ? this.props.defaultValue.comparator : '';
        this.setState({isPlaceholderSelected: value === ''});
        this.refs.numberFilterComparator.value = comparator;
        this.refs.numberFilter.value = value;
        this.props.filterHandler({
          number: value,
          comparator: comparator
        }, _Const2['default'].FILTER_TYPE.NUMBER);
      }
    }, {
      key: 'applyFilter',
      value: function applyFilter(filterObj) {
        var number = filterObj.number;
        var comparator = filterObj.comparator;
        this.setState({isPlaceholderSelected: number === ''});
        this.refs.numberFilterComparator.value = comparator;
        this.refs.numberFilter.value = number;
        this.props.filterHandler({
          number: number,
          comparator: comparator
        }, _Const2['default'].FILTER_TYPE.NUMBER);
      }
    }, {
      key: 'getComparatorOptions',
      value: function getComparatorOptions() {
        var optionTags = [];
        optionTags.push(_react2['default'].createElement('option', {key: '-1'}));
        for (var i = 0; i < this.numberComparators.length; i++) {
          optionTags.push(_react2['default'].createElement('option', {
            key: i,
            value: this.numberComparators[i]
          }, this.numberComparators[i]));
        }
        return optionTags;
      }
    }, {
      key: 'getNumberOptions',
      value: function getNumberOptions() {
        var optionTags = [];
        var options = this.props.options;
        optionTags.push(_react2['default'].createElement('option', {
          key: '-1',
          value: ''
        }, this.props.placeholder || 'Select ' + this.props.columnName + '...'));
        for (var i = 0; i < options.length; i++) {
          optionTags.push(_react2['default'].createElement('option', {
            key: i,
            value: options[i]
          }, options[i]));
        }
        return optionTags;
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        var comparator = this.refs.numberFilterComparator.value;
        var number = this.refs.numberFilter.value;
        if (comparator && number) {
          this.props.filterHandler({
            number: number,
            comparator: comparator
          }, _Const2['default'].FILTER_TYPE.NUMBER);
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        clearTimeout(this.timeout);
      }
    }, {
      key: 'render',
      value: function render() {
        var selectClass = (0, _classnames2['default'])('select-filter', 'number-filter-input', 'form-control', {'placeholder-selected': this.state.isPlaceholderSelected});
        return _react2['default'].createElement('div', {className: 'filter number-filter'}, _react2['default'].createElement('select', {
          ref: 'numberFilterComparator',
          className: 'number-filter-comparator form-control',
          onChange: this.onChangeComparator,
          defaultValue: this.props.defaultValue ? this.props.defaultValue.comparator : ''
        }, this.getComparatorOptions()), this.props.options ? _react2['default'].createElement('select', {
          ref: 'numberFilter',
          className: selectClass,
          onChange: this.onChangeNumberSet,
          defaultValue: this.props.defaultValue ? this.props.defaultValue.number : ''
        }, this.getNumberOptions()) : _react2['default'].createElement('input', {
          ref: 'numberFilter',
          type: 'number',
          className: 'number-filter-input form-control',
          placeholder: this.props.placeholder || 'Enter ' + this.props.columnName + '...',
          onChange: this.onChangeNumber,
          defaultValue: this.props.defaultValue ? this.props.defaultValue.number : ''
        }));
      }
    }]);
    return NumberFilter;
  })(_react.Component);
  NumberFilter.propTypes = {
    filterHandler: _react.PropTypes.func.isRequired,
    options: _react.PropTypes.arrayOf(_react.PropTypes.number),
    defaultValue: _react.PropTypes.shape({
      number: _react.PropTypes.number,
      comparator: _react.PropTypes.oneOf(legalComparators)
    }),
    delay: _react.PropTypes.number,
    numberComparators: function numberComparators(props, propName) {
      if (!props[propName]) {
        return;
      }
      for (var i = 0; i < props[propName].length; i++) {
        var comparatorIsValid = false;
        for (var j = 0; j < legalComparators.length; j++) {
          if (legalComparators[j] === props[propName][i]) {
            comparatorIsValid = true;
            break;
          }
        }
        if (!comparatorIsValid) {
          return new Error('Number comparator provided is not supported.\n          Use only ' + legalComparators);
        }
      }
    },
    placeholder: _react.PropTypes.string,
    columnName: _react.PropTypes.string
  };
  NumberFilter.defaultProps = {delay: _Const2['default'].FILTER_DELAY};
  exports['default'] = NumberFilter;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/TableHeaderColumn.js", ["npm:react@15.3.0.js", "npm:react-bootstrap-table@2.4.2/lib/Const.js", "npm:react-bootstrap-table@2.4.2/lib/util.js", "npm:react-bootstrap-table@2.4.2/lib/filters/Date.js", "npm:react-bootstrap-table@2.4.2/lib/filters/Text.js", "npm:react-bootstrap-table@2.4.2/lib/filters/Regex.js", "npm:react-bootstrap-table@2.4.2/lib/filters/Select.js", "npm:react-bootstrap-table@2.4.2/lib/filters/Number.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _react = $__require('npm:react@15.3.0.js');
  var _react2 = _interopRequireDefault(_react);
  var _Const = $__require('npm:react-bootstrap-table@2.4.2/lib/Const.js');
  var _Const2 = _interopRequireDefault(_Const);
  var _util = $__require('npm:react-bootstrap-table@2.4.2/lib/util.js');
  var _util2 = _interopRequireDefault(_util);
  var _filtersDate = $__require('npm:react-bootstrap-table@2.4.2/lib/filters/Date.js');
  var _filtersDate2 = _interopRequireDefault(_filtersDate);
  var _filtersText = $__require('npm:react-bootstrap-table@2.4.2/lib/filters/Text.js');
  var _filtersText2 = _interopRequireDefault(_filtersText);
  var _filtersRegex = $__require('npm:react-bootstrap-table@2.4.2/lib/filters/Regex.js');
  var _filtersRegex2 = _interopRequireDefault(_filtersRegex);
  var _filtersSelect = $__require('npm:react-bootstrap-table@2.4.2/lib/filters/Select.js');
  var _filtersSelect2 = _interopRequireDefault(_filtersSelect);
  var _filtersNumber = $__require('npm:react-bootstrap-table@2.4.2/lib/filters/Number.js');
  var _filtersNumber2 = _interopRequireDefault(_filtersNumber);
  var TableHeaderColumn = (function(_Component) {
    _inherits(TableHeaderColumn, _Component);
    function TableHeaderColumn(props) {
      var _this = this;
      _classCallCheck(this, TableHeaderColumn);
      _get(Object.getPrototypeOf(TableHeaderColumn.prototype), 'constructor', this).call(this, props);
      this.handleColumnClick = function() {
        if (!_this.props.dataSort)
          return;
        var order = _this.props.sort === _Const2['default'].SORT_DESC ? _Const2['default'].SORT_ASC : _Const2['default'].SORT_DESC;
        _this.props.onSort(order, _this.props.dataField);
      };
      this.handleFilter = this.handleFilter.bind(this);
    }
    _createClass(TableHeaderColumn, [{
      key: 'handleFilter',
      value: function handleFilter(value, type) {
        this.props.filter.emitter.handleFilter(this.props.dataField, value, type);
      }
    }, {
      key: 'getFilters',
      value: function getFilters() {
        switch (this.props.filter.type) {
          case _Const2['default'].FILTER_TYPE.TEXT:
            {
              return _react2['default'].createElement(_filtersText2['default'], _extends({ref: 'textFilter'}, this.props.filter, {
                columnName: this.props.children,
                filterHandler: this.handleFilter
              }));
            }
          case _Const2['default'].FILTER_TYPE.REGEX:
            {
              return _react2['default'].createElement(_filtersRegex2['default'], _extends({ref: 'regexFilter'}, this.props.filter, {
                columnName: this.props.children,
                filterHandler: this.handleFilter
              }));
            }
          case _Const2['default'].FILTER_TYPE.SELECT:
            {
              return _react2['default'].createElement(_filtersSelect2['default'], _extends({ref: 'selectFilter'}, this.props.filter, {
                columnName: this.props.children,
                filterHandler: this.handleFilter
              }));
            }
          case _Const2['default'].FILTER_TYPE.NUMBER:
            {
              return _react2['default'].createElement(_filtersNumber2['default'], _extends({ref: 'numberFilter'}, this.props.filter, {
                columnName: this.props.children,
                filterHandler: this.handleFilter
              }));
            }
          case _Const2['default'].FILTER_TYPE.DATE:
            {
              return _react2['default'].createElement(_filtersDate2['default'], _extends({ref: 'dateFilter'}, this.props.filter, {
                columnName: this.props.children,
                filterHandler: this.handleFilter
              }));
            }
          case _Const2['default'].FILTER_TYPE.CUSTOM:
            {
              return this.props.filter.getElement(this.handleFilter, this.props.filter.customFilterParameters);
            }
        }
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.refs['header-col'].setAttribute('data-field', this.props.dataField);
      }
    }, {
      key: 'render',
      value: function render() {
        var defaultCaret = undefined;
        var _props = this.props;
        var dataAlign = _props.dataAlign;
        var headerAlign = _props.headerAlign;
        var hidden = _props.hidden;
        var sort = _props.sort;
        var dataSort = _props.dataSort;
        var sortIndicator = _props.sortIndicator;
        var children = _props.children;
        var caretRender = _props.caretRender;
        var thStyle = {
          textAlign: headerAlign || dataAlign,
          display: hidden ? 'none' : null
        };
        if (sortIndicator) {
          defaultCaret = !dataSort ? null : _react2['default'].createElement('span', {className: 'order'}, _react2['default'].createElement('span', {className: 'dropdown'}, _react2['default'].createElement('span', {
            className: 'caret',
            style: {
              margin: '10px 0 10px 5px',
              color: '#ccc'
            }
          })), _react2['default'].createElement('span', {className: 'dropup'}, _react2['default'].createElement('span', {
            className: 'caret',
            style: {
              margin: '10px 0',
              color: '#ccc'
            }
          })));
        }
        var sortCaret = sort ? _util2['default'].renderReactSortCaret(sort) : defaultCaret;
        if (caretRender) {
          sortCaret = caretRender(sort);
        }
        var classes = this.props.className + ' ' + (dataSort ? 'sort-column' : '');
        var title = typeof children === 'string' ? {title: children} : null;
        return _react2['default'].createElement('th', _extends({
          ref: 'header-col',
          className: classes,
          style: thStyle,
          onClick: this.handleColumnClick
        }, title), children, sortCaret, _react2['default'].createElement('div', {onClick: function(e) {
            return e.stopPropagation();
          }}, this.props.filter ? this.getFilters() : null));
      }
    }, {
      key: 'cleanFiltered',
      value: function cleanFiltered() {
        if (this.props.filter === undefined) {
          return;
        }
        switch (this.props.filter.type) {
          case _Const2['default'].FILTER_TYPE.TEXT:
            {
              this.refs.textFilter.cleanFiltered();
              break;
            }
          case _Const2['default'].FILTER_TYPE.REGEX:
            {
              this.refs.regexFilter.cleanFiltered();
              break;
            }
          case _Const2['default'].FILTER_TYPE.SELECT:
            {
              this.refs.selectFilter.cleanFiltered();
              break;
            }
          case _Const2['default'].FILTER_TYPE.NUMBER:
            {
              this.refs.numberFilter.cleanFiltered();
              break;
            }
          case _Const2['default'].FILTER_TYPE.DATE:
            {
              this.refs.dateFilter.cleanFiltered();
              break;
            }
        }
      }
    }, {
      key: 'applyFilter',
      value: function applyFilter(val) {
        if (this.props.filter === undefined)
          return;
        switch (this.props.filter.type) {
          case _Const2['default'].FILTER_TYPE.TEXT:
            {
              this.refs.textFilter.applyFilter(val);
              break;
            }
          case _Const2['default'].FILTER_TYPE.REGEX:
            {
              this.refs.regexFilter.applyFilter(val);
              break;
            }
          case _Const2['default'].FILTER_TYPE.SELECT:
            {
              this.refs.selectFilter.applyFilter(val);
              break;
            }
          case _Const2['default'].FILTER_TYPE.NUMBER:
            {
              this.refs.numberFilter.applyFilter(val);
              break;
            }
          case _Const2['default'].FILTER_TYPE.DATE:
            {
              this.refs.dateFilter.applyFilter(val);
              break;
            }
        }
      }
    }]);
    return TableHeaderColumn;
  })(_react.Component);
  var filterTypeArray = [];
  for (var key in _Const2['default'].FILTER_TYPE) {
    filterTypeArray.push(_Const2['default'].FILTER_TYPE[key]);
  }
  TableHeaderColumn.propTypes = {
    dataField: _react.PropTypes.string,
    dataAlign: _react.PropTypes.string,
    headerAlign: _react.PropTypes.string,
    dataSort: _react.PropTypes.bool,
    onSort: _react.PropTypes.func,
    dataFormat: _react.PropTypes.func,
    csvFormat: _react.PropTypes.func,
    csvHeader: _react.PropTypes.string,
    isKey: _react.PropTypes.bool,
    editable: _react.PropTypes.any,
    hidden: _react.PropTypes.bool,
    hiddenOnInsert: _react.PropTypes.bool,
    searchable: _react.PropTypes.bool,
    className: _react.PropTypes.string,
    width: _react.PropTypes.string,
    sortFunc: _react.PropTypes.func,
    sortFuncExtraData: _react.PropTypes.any,
    columnClassName: _react.PropTypes.any,
    columnTitle: _react.PropTypes.bool,
    filterFormatted: _react.PropTypes.bool,
    filterValue: _react.PropTypes.func,
    sort: _react.PropTypes.string,
    caretRender: _react.PropTypes.func,
    formatExtraData: _react.PropTypes.any,
    filter: _react.PropTypes.shape({
      type: _react.PropTypes.oneOf(filterTypeArray),
      delay: _react.PropTypes.number,
      options: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.arrayOf(_react.PropTypes.number)]),
      numberComparators: _react.PropTypes.arrayOf(_react.PropTypes.string),
      emitter: _react.PropTypes.object,
      placeholder: _react.PropTypes.string,
      getElement: _react.PropTypes.func,
      customFilterParameters: _react.PropTypes.object
    }),
    sortIndicator: _react.PropTypes.bool,
    'export': _react.PropTypes.bool
  };
  TableHeaderColumn.defaultProps = {
    dataAlign: 'left',
    headerAlign: undefined,
    dataSort: false,
    dataFormat: undefined,
    csvFormat: undefined,
    csvHeader: undefined,
    isKey: false,
    editable: true,
    onSort: undefined,
    hidden: false,
    hiddenOnInsert: false,
    searchable: true,
    className: '',
    columnTitle: false,
    width: null,
    sortFunc: undefined,
    columnClassName: '',
    filterFormatted: false,
    filterValue: undefined,
    sort: undefined,
    formatExtraData: undefined,
    sortFuncExtraData: undefined,
    filter: undefined,
    sortIndicator: true
  };
  exports['default'] = TableHeaderColumn;
  module.exports = exports['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2/lib/index.js", ["npm:react-bootstrap-table@2.4.2/lib/BootstrapTable.js", "npm:react-bootstrap-table@2.4.2/lib/TableHeaderColumn.js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', {value: true});
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _BootstrapTable = $__require('npm:react-bootstrap-table@2.4.2/lib/BootstrapTable.js');
  var _BootstrapTable2 = _interopRequireDefault(_BootstrapTable);
  var _TableHeaderColumn = $__require('npm:react-bootstrap-table@2.4.2/lib/TableHeaderColumn.js');
  var _TableHeaderColumn2 = _interopRequireDefault(_TableHeaderColumn);
  if (typeof window !== 'undefined') {
    window.BootstrapTable = _BootstrapTable2['default'];
    window.TableHeaderColumn = _TableHeaderColumn2['default'];
  }
  exports.BootstrapTable = _BootstrapTable2['default'];
  exports.TableHeaderColumn = _TableHeaderColumn2['default'];
  return module.exports;
});

System.registerDynamic("npm:react-bootstrap-table@2.4.2.js", ["npm:react-bootstrap-table@2.4.2/lib/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react-bootstrap-table@2.4.2/lib/index.js');
  return module.exports;
});

System.register('app/players.js', ['npm:babel-runtime@5.8.38/helpers/get.js', 'npm:babel-runtime@5.8.38/helpers/inherits.js', 'npm:babel-runtime@5.8.38/helpers/create-class.js', 'npm:babel-runtime@5.8.38/helpers/class-call-check.js', 'npm:react@15.3.0.js', 'npm:react-vis@0.4.2.js', 'app/api.js', 'npm:react-bootstrap-table@2.4.2.js'], function (_export) {
  var _get, _inherits, _createClass, _classCallCheck, React, Treemap, get, BootstrapTable, TableHeaderColumn, Players;

  return {
    setters: [function (_npmBabelRuntime5838HelpersGetJs) {
      _get = _npmBabelRuntime5838HelpersGetJs['default'];
    }, function (_npmBabelRuntime5838HelpersInheritsJs) {
      _inherits = _npmBabelRuntime5838HelpersInheritsJs['default'];
    }, function (_npmBabelRuntime5838HelpersCreateClassJs) {
      _createClass = _npmBabelRuntime5838HelpersCreateClassJs['default'];
    }, function (_npmBabelRuntime5838HelpersClassCallCheckJs) {
      _classCallCheck = _npmBabelRuntime5838HelpersClassCallCheckJs['default'];
    }, function (_npmReact1530Js) {
      React = _npmReact1530Js['default'];
    }, function (_npmReactVis042Js) {
      Treemap = _npmReactVis042Js.Treemap;
    }, function (_appApiJs) {
      get = _appApiJs.get;
    }, function (_npmReactBootstrapTable242Js) {
      BootstrapTable = _npmReactBootstrapTable242Js.BootstrapTable;
      TableHeaderColumn = _npmReactBootstrapTable242Js.TableHeaderColumn;
    }],
    execute: function () {
      'use strict';

      Players = (function (_React$Component) {
        _inherits(Players, _React$Component);

        function Players(props) {
          _classCallCheck(this, Players);

          _get(Object.getPrototypeOf(Players.prototype), 'constructor', this).call(this, props);
          this.state = { players: [], items: [] };
        }

        _createClass(Players, [{
          key: 'transform',
          value: function transform(data) {
            return data.map(function (player) {
              return {
                title: player.name,
                size: player.total,
                color: Math.random()
              };
            });
          }
        }, {
          key: 'componentDidMount',
          value: function componentDidMount() {
            var _this = this;

            get(this.props.metric).then(function (data) {
              var sorted = data.sort(function (a, b) {
                return b.total - a.total;
              });
              _this.setState({
                players: sorted,
                items: _this.transform(sorted.filter(function (player) {
                  return player.total != 0;
                }))
              });
            });
          }
        }, {
          key: 'renderHeader',
          value: function renderHeader() {
            return React.createElement(
              'div',
              { className: 'row' },
              React.createElement(
                'div',
                { className: 'col-md-6' },
                React.createElement(
                  'h2',
                  null,
                  this.props.metric
                )
              ),
              React.createElement('div', { className: 'col-md-6' })
            );
          }
        }, {
          key: 'renderTreeMap',
          value: function renderTreeMap() {
            return React.createElement(Treemap, {
              data: { title: '', children: this.state.items },
              height: 435,
              width: 435,
              colorDomain: this.props.colorDomain || [0, 1],
              colorRange: this.props.colorRange || ['white', 'green'],
              colorType: this.props.colorType || 'linear'
            });
          }
        }, {
          key: 'renderTable',
          value: function renderTable() {
            return React.createElement(
              BootstrapTable,
              { data: this.state.players, striped: true },
              React.createElement(
                TableHeaderColumn,
                { isKey: true, dataField: 'id', hidden: true },
                'Id'
              ),
              React.createElement(
                TableHeaderColumn,
                { dataField: 'name', dataSort: true, width: '100' },
                'Player'
              ),
              React.createElement(
                TableHeaderColumn,
                { dataField: 'total', dataSort: true, width: '100',
                  dataAlign: 'end' },
                'Total'
              ),
              React.createElement(
                TableHeaderColumn,
                { dataField: 'matches', dataSort: true, width: '100',
                  dataAlign: 'end' },
                'Matches'
              ),
              React.createElement(
                TableHeaderColumn,
                { dataField: 'average', dataSort: true, width: '100',
                  dataAlign: 'end' },
                'Average'
              )
            );
          }
        }, {
          key: 'render',
          value: function render() {
            return React.createElement(
              'div',
              { className: 'container' },
              this.renderHeader(),
              React.createElement(
                'div',
                { className: 'row' },
                React.createElement(
                  'div',
                  { className: 'col-md-6' },
                  this.renderTreeMap()
                ),
                React.createElement(
                  'div',
                  { className: 'col-md-6' },
                  this.renderTable()
                )
              )
            );
          }
        }]);

        return Players;
      })(React.Component);

      _export('default', Players);
    }
  };
});
System.register('app/assists.js', ['npm:babel-runtime@5.8.38/helpers/get.js', 'npm:babel-runtime@5.8.38/helpers/inherits.js', 'npm:babel-runtime@5.8.38/helpers/create-class.js', 'npm:babel-runtime@5.8.38/helpers/class-call-check.js', 'npm:react@15.3.0.js', 'app/players.js'], function (_export) {
  var _get, _inherits, _createClass, _classCallCheck, React, Players, Assists;

  return {
    setters: [function (_npmBabelRuntime5838HelpersGetJs) {
      _get = _npmBabelRuntime5838HelpersGetJs['default'];
    }, function (_npmBabelRuntime5838HelpersInheritsJs) {
      _inherits = _npmBabelRuntime5838HelpersInheritsJs['default'];
    }, function (_npmBabelRuntime5838HelpersCreateClassJs) {
      _createClass = _npmBabelRuntime5838HelpersCreateClassJs['default'];
    }, function (_npmBabelRuntime5838HelpersClassCallCheckJs) {
      _classCallCheck = _npmBabelRuntime5838HelpersClassCallCheckJs['default'];
    }, function (_npmReact1530Js) {
      React = _npmReact1530Js['default'];
    }, function (_appPlayersJs) {
      Players = _appPlayersJs['default'];
    }],
    execute: function () {
      'use strict';

      Assists = (function (_React$Component) {
        _inherits(Assists, _React$Component);

        function Assists() {
          _classCallCheck(this, Assists);

          _get(Object.getPrototypeOf(Assists.prototype), 'constructor', this).apply(this, arguments);
        }

        _createClass(Assists, [{
          key: 'render',
          value: function render() {
            return React.createElement(Players, {
              metric: 'assists',
              colorRange: ['white', 'blue']
            });
          }
        }]);

        return Assists;
      })(React.Component);

      _export('default', Assists);
    }
  };
});
System.register('app/main.js', ['npm:babel-runtime@5.8.38/helpers/get.js', 'npm:babel-runtime@5.8.38/helpers/inherits.js', 'npm:babel-runtime@5.8.38/helpers/create-class.js', 'npm:babel-runtime@5.8.38/helpers/class-call-check.js', 'npm:react@15.3.0.js', 'npm:react-dom@15.3.0.js', 'npm:react-router@2.6.1.js', 'app/team.js', 'app/home.js', 'app/goals.js', 'app/assists.js'], function (_export) {
  var _get, _inherits, _createClass, _classCallCheck, React, ReactDOM, Router, Route, IndexRoute, Link, browserHistory, Team, Home, Goals, Assists, baseUri, childRoutes, Main, routes;

  return {
    setters: [function (_npmBabelRuntime5838HelpersGetJs) {
      _get = _npmBabelRuntime5838HelpersGetJs['default'];
    }, function (_npmBabelRuntime5838HelpersInheritsJs) {
      _inherits = _npmBabelRuntime5838HelpersInheritsJs['default'];
    }, function (_npmBabelRuntime5838HelpersCreateClassJs) {
      _createClass = _npmBabelRuntime5838HelpersCreateClassJs['default'];
    }, function (_npmBabelRuntime5838HelpersClassCallCheckJs) {
      _classCallCheck = _npmBabelRuntime5838HelpersClassCallCheckJs['default'];
    }, function (_npmReact1530Js) {
      React = _npmReact1530Js['default'];
    }, function (_npmReactDom1530Js) {
      ReactDOM = _npmReactDom1530Js['default'];
    }, function (_npmReactRouter261Js) {
      Router = _npmReactRouter261Js.Router;
      Route = _npmReactRouter261Js.Route;
      IndexRoute = _npmReactRouter261Js.IndexRoute;
      Link = _npmReactRouter261Js.Link;
      browserHistory = _npmReactRouter261Js.browserHistory;
    }, function (_appTeamJs) {
      Team = _appTeamJs['default'];
    }, function (_appHomeJs) {
      Home = _appHomeJs['default'];
    }, function (_appGoalsJs) {
      Goals = _appGoalsJs['default'];
    }, function (_appAssistsJs) {
      Assists = _appAssistsJs['default'];
    }],
    execute: function () {
      'use strict';

      baseUri = '/blijdorp';
      childRoutes = [{
        id: 1,
        path: 'home',
        component: Home
      }, {
        id: 2,
        path: 'team',
        component: Team
      }, {
        id: 3,
        path: 'goals',
        component: Goals
      }, {
        id: 4,
        path: 'assists',
        component: Assists
      }];

      Main = (function (_React$Component) {
        _inherits(Main, _React$Component);

        function Main() {
          _classCallCheck(this, Main);

          _get(Object.getPrototypeOf(Main.prototype), 'constructor', this).apply(this, arguments);
        }

        _createClass(Main, [{
          key: 'renderItems',
          value: function renderItems() {
            var _this = this;

            return childRoutes.map(function (item) {
              var uri = baseUri + '/' + item.path;
              return React.createElement(
                'li',
                { key: 'item-' + item.id,
                  role: 'presentation',
                  className: _this.props.location.pathname == uri ? 'active' : '' },
                React.createElement(
                  Link,
                  { to: uri },
                  item.path
                )
              );
            });
          }
        }, {
          key: 'render',
          value: function render() {
            return React.createElement(
              'div',
              null,
              React.createElement(
                'ul',
                { className: 'nav nav-tabs' },
                this.renderItems()
              ),
              this.props.children
            );
          }
        }]);

        return Main;
      })(React.Component);

      routes = {
        path: baseUri,
        component: Main,
        indexRoute: { component: Home },
        childRoutes: childRoutes
      };

      ReactDOM.render(React.createElement(Router, { history: browserHistory, routes: routes }), document.getElementById('app'));
    }
  };
});
//# sourceMappingURL=build.js.map